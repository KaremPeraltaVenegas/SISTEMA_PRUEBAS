USE [GTManpowerLocalAntamina]
GO
/****** Object:  User [WEBAPP]    Script Date: 30/08/2025 13:43:49 ******/
CREATE USER [WEBAPP] FOR LOGIN [webapp] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [RICARDO.SANCHEZ]    Script Date: 30/08/2025 13:43:49 ******/
CREATE USER [RICARDO.SANCHEZ] FOR LOGIN [RICARDO.SANCHEZ] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [LENNIN.CHAVEZ]    Script Date: 30/08/2025 13:43:49 ******/
CREATE USER [LENNIN.CHAVEZ] FOR LOGIN [LENNIN.CHAVEZ] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [karem.peralta]    Script Date: 30/08/2025 13:43:49 ******/
CREATE USER [karem.peralta] FOR LOGIN [karem.peralta] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [gelbert.totora]    Script Date: 30/08/2025 13:43:49 ******/
CREATE USER [gelbert.totora] FOR LOGIN [gelbert.totora] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [APPQUELLAVECO]    Script Date: 30/08/2025 13:43:49 ******/
CREATE USER [APPQUELLAVECO] FOR LOGIN [APPQUELLAVECO] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [APPGTMLocal]    Script Date: 30/08/2025 13:43:49 ******/
CREATE USER [APPGTMLocal] FOR LOGIN [APPGTMLocal] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [APPEMPLEOANTAMINA]    Script Date: 30/08/2025 13:43:49 ******/
CREATE USER [APPEMPLEOANTAMINA] FOR LOGIN [APPEMPLEOANTAMINA] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  DatabaseRole [db_executor]    Script Date: 30/08/2025 13:43:49 ******/
CREATE ROLE [db_executor]
GO
ALTER ROLE [db_executor] ADD MEMBER [WEBAPP]
GO
ALTER ROLE [db_datareader] ADD MEMBER [WEBAPP]
GO
ALTER ROLE [db_datawriter] ADD MEMBER [WEBAPP]
GO
ALTER ROLE [db_owner] ADD MEMBER [LENNIN.CHAVEZ]
GO
ALTER ROLE [db_owner] ADD MEMBER [karem.peralta]
GO
ALTER ROLE [db_owner] ADD MEMBER [gelbert.totora]
GO
ALTER ROLE [db_owner] ADD MEMBER [APPQUELLAVECO]
GO
ALTER ROLE [db_datareader] ADD MEMBER [APPQUELLAVECO]
GO
ALTER ROLE [db_datawriter] ADD MEMBER [APPQUELLAVECO]
GO
ALTER ROLE [db_owner] ADD MEMBER [APPGTMLocal]
GO
ALTER ROLE [db_datareader] ADD MEMBER [APPGTMLocal]
GO
ALTER ROLE [db_datawriter] ADD MEMBER [APPGTMLocal]
GO
ALTER ROLE [db_owner] ADD MEMBER [APPEMPLEOANTAMINA]
GO
ALTER ROLE [db_datareader] ADD MEMBER [APPEMPLEOANTAMINA]
GO
ALTER ROLE [db_datawriter] ADD MEMBER [APPEMPLEOANTAMINA]
GO
/****** Object:  Schema [DataSync]    Script Date: 30/08/2025 13:43:51 ******/
CREATE SCHEMA [DataSync]
GO
/****** Object:  Schema [dts]    Script Date: 30/08/2025 13:43:51 ******/
CREATE SCHEMA [dts]
GO
/****** Object:  Schema [jobs]    Script Date: 30/08/2025 13:43:51 ******/
CREATE SCHEMA [jobs]
GO
/****** Object:  Schema [lib]    Script Date: 30/08/2025 13:43:51 ******/
CREATE SCHEMA [lib]
GO
/****** Object:  Schema [prov]    Script Date: 30/08/2025 13:43:51 ******/
CREATE SCHEMA [prov]
GO
/****** Object:  Schema [rpt]    Script Date: 30/08/2025 13:43:51 ******/
CREATE SCHEMA [rpt]
GO
/****** Object:  UserDefinedFunction [dbo].[FN_AptitutTestPsico]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[FN_AptitutTestPsico] (
	@iCodArbolPos INT,
	@iCodArbolNeg INT
)
RETURNS VARCHAR(20)
AS
BEGIN
	Declare @resultado VARCHAR(20)
	IF EXISTS (SELECT TOP 1 1 FROM EvaluacionArbolCombinacion WHERE iCodArbolPos = @iCodArbolPos and iCodArbolNeg = @iCodArbolNeg)
	    BEGIN
	       SET @resultado = (SELECT ca.cAptitud as cAptitud
							FROM dbo.EvaluacionArbolCombinacion AS ca 	
 							where ca.iCodArbolPos = @iCodArbolPos and ca.iCodArbolNeg = @iCodArbolNeg);
	    END
	ELSE
	    BEGIN
	        SET @resultado = 'No Definido';
	    END
	RETURN (UPPER(@resultado));
END
GO
/****** Object:  UserDefinedFunction [dbo].[FN_EvaluacionArbolCombinacion]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[FN_EvaluacionArbolCombinacion] (
	@iCodArbolPos INT,
	@iCodArbolNeg INT
)
RETURNS VARCHAR(20)
AS
BEGIN
	Declare @resultado VARCHAR(20)
	IF EXISTS (SELECT TOP 1 1 FROM EvaluacionArbolCombinacion WHERE iCodArbolPos = @iCodArbolPos and iCodArbolNeg = @iCodArbolNeg)
	    BEGIN
	       SET @resultado = (SELECT cast(ca.iCodEvaluacionArbolCombinacion as varchar) as iCodEvaluacionArbolCombinacion
							FROM dbo.EvaluacionArbolCombinacion AS ca 	
 							where ca.iCodArbolPos = @iCodArbolPos and ca.iCodArbolNeg = @iCodArbolNeg);
	    END
	ELSE
	    BEGIN
	        SET @resultado = '0';
	    END
	RETURN (@resultado);
END
GO
/****** Object:  UserDefinedFunction [dbo].[fn_RemoveHTML]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[fn_RemoveHTML] (@Html NVARCHAR(MAX))
RETURNS NVARCHAR(MAX)
AS
BEGIN
    -- Añadir formato para listas y títulos
    SET @Html = REPLACE(@Html, '<li>', CHAR(13) + CHAR(10) + '- ')
    SET @Html = REPLACE(@Html, '</li>', '')
    SET @Html = REPLACE(@Html, '<ul>', '')
    SET @Html = REPLACE(@Html, '</ul>', '')
    SET @Html = REPLACE(@Html, '<strong>', CHAR(13) + CHAR(10))
    SET @Html = REPLACE(@Html, '</strong>', CHAR(13) + CHAR(10)) -- sin los dos puntos extra

    -- Eliminar cualquier otra etiqueta HTML
    DECLARE @Start INT
    DECLARE @End INT
    DECLARE @Length INT

    SET @Start = CHARINDEX('<', @Html)
    SET @End = CHARINDEX('>', @Html, @Start)

    WHILE @Start > 0 AND @End > 0
    BEGIN
        SET @Length = @End - @Start + 1
        SET @Html = STUFF(@Html, @Start, @Length, '')
        SET @Start = CHARINDEX('<', @Html)
        SET @End = CHARINDEX('>', @Html, @Start)
    END

    -- Reemplazar entidades HTML comunes
    SET @Html = REPLACE(@Html, '&nbsp;', ' ')
    SET @Html = REPLACE(@Html, '&amp;', '&')
    SET @Html = REPLACE(@Html, '&quot;', '"')
    SET @Html = REPLACE(@Html, '&lt;', '<')
    SET @Html = REPLACE(@Html, '&gt;', '>')
    SET @Html = REPLACE(@Html, '&#39;', '''')

    RETURN LTRIM(RTRIM(@Html))
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnCapitalizarTexto]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[fnCapitalizarTexto](@cadena VARCHAR(150))
	RETURNS VARCHAR(150)
AS
BEGIN
	DECLARE @resultado VARCHAR(20);
	SET @resultado = UPPER(LEFT(@cadena,1))+LOWER(SUBSTRING(@cadena,2,LEN(@cadena)))
    RETURN @resultado;
END;
GO
/****** Object:  UserDefinedFunction [dbo].[fnColocaClave]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnColocaClave] 
(
    @clave VARCHAR(50)
)
RETURNS VarBinary(8000)
AS
BEGIN
    
    
    DECLARE @pass AS VarBinary(8000)
    ------------------------------------
    ------------------------------------
    SET @pass = ENCRYPTBYPASSPHRASE('gtsoft',@clave)--dbCurso09 es la llave para cifrar el campo.
    ------------------------------------
    ------------------------------------    
    RETURN @pass

END


GO
/****** Object:  UserDefinedFunction [dbo].[fnFormatoFecha]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[fnFormatoFecha](@fechaEntrada VARCHAR(20))
RETURNS VARCHAR(20)
AS
BEGIN
	DECLARE @fecha VARCHAR(20);
	SET @fecha = CONVERT(VARCHAR,@fechaEntrada,103)
    DECLARE @respuesta VARCHAR(20);
    SELECT @respuesta = CASE MONTH(@fecha)
							WHEN '01' THEN CONCAT(DAY(@fecha),' Ene ',YEAR(@fecha))
							WHEN '02' THEN CONCAT(DAY(@fecha),' Feb ',YEAR(@fecha))
							WHEN '03' THEN CONCAT(DAY(@fecha),' Mar ',YEAR(@fecha))
							WHEN '04' THEN CONCAT(DAY(@fecha),' Abr ',YEAR(@fecha))
							WHEN '05' THEN CONCAT(DAY(@fecha),' May ',YEAR(@fecha))
							WHEN '06' THEN CONCAT(DAY(@fecha),' Jun ',YEAR(@fecha))
							WHEN '07' THEN CONCAT(DAY(@fecha),' Jul ',YEAR(@fecha))
							WHEN '08' THEN CONCAT(DAY(@fecha),' Ago ',YEAR(@fecha))
							WHEN '09' THEN CONCAT(DAY(@fecha),' Set ',YEAR(@fecha))
							WHEN '10' THEN CONCAT(DAY(@fecha),' Oct ',YEAR(@fecha))
							WHEN '11' THEN CONCAT(DAY(@fecha),' Nov ',YEAR(@fecha))
							WHEN '12' THEN CONCAT(DAY(@fecha),' Dic ',YEAR(@fecha))
						END    
    RETURN @respuesta;
END;
GO
/****** Object:  UserDefinedFunction [dbo].[fnFormatoFechaUX]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[fnFormatoFechaUX](@fechaEntrada VARCHAR(20))
	RETURNS VARCHAR(20)
AS
BEGIN
	DECLARE @fecha VARCHAR(20);
	SET @fecha = CONVERT(VARCHAR,@fechaEntrada,103)
    DECLARE @respuesta VARCHAR(20);
	--CONVERT(char(10), @fechaEntrada, 103)
	IF FORMAT(cast(@fechaEntrada as date),'dd/MM/yyyy') != '01/01/1900'
		SELECT @respuesta = CASE MONTH(@fecha)
			WHEN '01' THEN CONCAT(RIGHT('00' + CAST(DAY(@fecha) AS VARCHAR), 2),' Ene, ',YEAR(@fecha))
			WHEN '02' THEN CONCAT(RIGHT('00' + CAST(DAY(@fecha) AS VARCHAR), 2),' Feb, ',YEAR(@fecha))
			WHEN '03' THEN CONCAT(RIGHT('00' + CAST(DAY(@fecha) AS VARCHAR), 2),' Mar, ',YEAR(@fecha))
			WHEN '04' THEN CONCAT(RIGHT('00' + CAST(DAY(@fecha) AS VARCHAR), 2),' Abr, ',YEAR(@fecha))
			WHEN '05' THEN CONCAT(RIGHT('00' + CAST(DAY(@fecha) AS VARCHAR), 2),' May, ',YEAR(@fecha))
			WHEN '06' THEN CONCAT(RIGHT('00' + CAST(DAY(@fecha) AS VARCHAR), 2),' Jun, ',YEAR(@fecha))
			WHEN '07' THEN CONCAT(RIGHT('00' + CAST(DAY(@fecha) AS VARCHAR), 2),' Jul, ',YEAR(@fecha))
			WHEN '08' THEN CONCAT(RIGHT('00' + CAST(DAY(@fecha) AS VARCHAR), 2),' Ago, ',YEAR(@fecha))
			WHEN '09' THEN CONCAT(RIGHT('00' + CAST(DAY(@fecha) AS VARCHAR), 2),' Set, ',YEAR(@fecha))
			WHEN '10' THEN CONCAT(RIGHT('00' + CAST(DAY(@fecha) AS VARCHAR), 2),' Oct, ',YEAR(@fecha))
			WHEN '11' THEN CONCAT(RIGHT('00' + CAST(DAY(@fecha) AS VARCHAR), 2),' Nov, ',YEAR(@fecha))
			WHEN '12' THEN CONCAT(RIGHT('00' + CAST(DAY(@fecha) AS VARCHAR), 2),' Dic, ',YEAR(@fecha))
		END 
	ELSE  
		SET  @respuesta = ''--FORMAT(cast(@fechaEntrada as date),'dd/MM/yyyy')
    RETURN @respuesta
END;
GO
/****** Object:  UserDefinedFunction [dbo].[fnLeeClave]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnLeeClave] 
(
    @clave VARBINARY(8000)
)
RETURNS VARCHAR(50)
AS
BEGIN
    
    
    DECLARE @pass AS VARCHAR(50)
    ------------------------------------
    ------------------------------------
    --Se descifra el campo aplicandole la misma llave con la que se cifro dbCurso09
    SET @pass = DECRYPTBYPASSPHRASE('gtsoft',@clave)
    ------------------------------------
    ------------------------------------    
    RETURN @pass

END


GO
/****** Object:  UserDefinedFunction [dbo].[fnNombreDelMesPorNroMes]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[fnNombreDelMesPorNroMes](
    @data   int
)
RETURNS NVARCHAR(MAX) 
AS
BEGIN
        DECLARE @NombreMes AS NVARCHAR(MAX)
		SET @NombreMes = (CASE @data
								WHEN 1 THEN 'Enero'
								WHEN 2 THEN 'Febrero'
								WHEN 3 THEN 'Marzo'
								WHEN 4 THEN 'Abril'
								WHEN 5 THEN 'Mayo'
								WHEN 6 THEN 'Junio'
								WHEN 7 THEN 'Julio'
								WHEN 8 THEN 'Agosto'
								WHEN 9 THEN 'Setiembre'
								WHEN 10 THEN 'Octubre'
								WHEN 11 THEN 'Noviembre'
								WHEN 12 THEN 'Diciembre'
								ELSE ''
						  END)
		RETURN @NombreMes
END		
GO
/****** Object:  UserDefinedFunction [dbo].[fnObtenerCondicionDetalle]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[fnObtenerCondicionDetalle] (
    @cTipoAreaInfluencia VARCHAR(10),
    @cUbigeo VARCHAR(10)
)
RETURNS VARCHAR(20)
AS
BEGIN
    DECLARE @Resultado VARCHAR(20)

    IF ISNULL(@cTipoAreaInfluencia, '') = 'AID'
        SET @Resultado = 'AID'
    ELSE IF ISNULL(@cTipoAreaInfluencia, '') = 'AIO'
        SET @Resultado = 'AIO'
    ELSE IF @cUbigeo IS NOT NULL AND (
        LTRIM(RTRIM(@cUbigeo)) IN (
            '020805', '020813', '021901', '020814'
        )
    )
        SET @Resultado = 'AID'
    ELSE IF @cUbigeo IS NOT NULL AND (
        LTRIM(RTRIM(@cUbigeo)) IN (
            '021901', '020301', '020304', '020305', '020310', 
            '020321', '020323', '020325', '020803', '021204', 
            '021205', '021206', '021209', '021210', '090401', '090409', '140902'
        )
    )
        SET @Resultado = 'AIO'
    ELSE IF @cUbigeo IS NOT NULL AND LEFT(LTRIM(RTRIM(@cUbigeo)), 2) = '02'
        SET @Resultado = 'REGIONAL'
    ELSE
        SET @Resultado = 'FORANEO'

    RETURN @Resultado
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnRemplazarTexto]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[fnRemplazarTexto](@cadena VARCHAR(MAX))
	RETURNS VARCHAR(MAX)
AS
BEGIN
	--::: DECLARANDO VARIABLES
	DECLARE @index INT,@longitud INT,@simbolo VARCHAR(3),@resultado VARCHAR(MAX),@temp VARCHAR(3);		
	--::: BUSCANDO CARACTER SIMBOLO
	SET @index = 1;
	SET @longitud = LEN(@cadena);
	WHILE @index <= @longitud
	BEGIN	  
	    SET @temp = SUBSTRING(@cadena,@index, 1);
		IF @temp = '+'		  
			SET @simbolo = @temp;				
		ELSE	 
			IF @temp = '-'		      
		  		SET @simbolo = @temp;				
			ELSE
				IF @temp = '*'
					SET @simbolo = @temp;
		SET @index = @index  + 1;
		--::: REMPLAZANDO	
		IF @simbolo != ''
			BEGIN			
				SET @resultado = REPLACE(@cadena,@simbolo,'<br \><i class="bi bi-brightness-high-fill" style="margin-right: 5px;"></i>');
				BREAK;
			END			
		ELSE
			BEGIN
			SET @resultado = @cadena;
			END	
	END;		
    RETURN @resultado;
END;
GO
/****** Object:  UserDefinedFunction [dbo].[fnSplitString]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[fnSplitString]
(
    @String NVARCHAR(MAX),
    @Delimiter CHAR(1)
)
RETURNS @Output TABLE (ID INT) 
AS
BEGIN
    DECLARE @Start INT, @End INT
    SET @Start = 1

    WHILE CHARINDEX(@Delimiter, @String, @Start) > 0
    BEGIN
        SET @End = CHARINDEX(@Delimiter, @String, @Start)
        INSERT INTO @Output (ID) VALUES (CAST(SUBSTRING(@String, @Start, @End - @Start) AS INT))
        SET @Start = @End + 1
    END

    INSERT INTO @Output (ID) VALUES (CAST(SUBSTRING(@String, @Start, LEN(@String) - @Start + 1) AS INT))
    RETURN
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnTiempoExperiencia]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[fnTiempoExperiencia](@meses INT)
	RETURNS VARCHAR(100)
AS
BEGIN
	--DECLARE @fecha VARCHAR(100);
	--SET @fecha = CONVERT(VARCHAR,@fechaEntrada,103)
    DECLARE @respuesta VARCHAR(100);
	DECLARE @anio VARCHAR(100), @mes VARCHAR(100)	
	IF @meses <= 12
		BEGIN			
			IF @meses = 1
				SET @mes = CONCAT(@meses,' Mes')
			ELSE
				IF @meses > 1
					SET @mes = CONCAT(@meses,' Meses')
				ELSE
					SET @mes = ''
			SET @respuesta = @mes
		END		
	ELSE
		BEGIN
			--CALCULANDO LOS AÑOS
			IF (@meses / 12) <= 1
				SET @anio = CONCAT((@meses / 12),' Año con')
			ELSE
				SET @anio = CONCAT((@meses / 12),' Años con')
			--CALCULANDO LOS MESES
			IF (@meses % 12) <= 1
				SET @mes = CONCAT((@meses % 12),' Mes')
			ELSE
				SET @mes = CONCAT((@meses % 12),' Meses')
			SET @respuesta = CONCAT(@anio,' ',@mes)
		END		
	--PRINT(@respuesta)    
    RETURN @respuesta;
END;
GO
/****** Object:  UserDefinedFunction [dbo].[GetEliminarEspacios]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GetEliminarEspacios]
(
	@StringToClean as varchar(100)
)
RETURNS varchar(100)
AS
BEGIN	
	--Replace all non printing whitespace characers with Characer 32 whitespace
	--NULL	
	Set @StringToClean = Replace(@StringToClean,CHAR(0),'');
	--Horizontal Tab
	Set @StringToClean = Replace(@StringToClean,CHAR(9),'');
	--Line Feed
	Set @StringToClean = Replace(@StringToClean,CHAR(10),'');
	--Vertical Tab
	Set @StringToClean = Replace(@StringToClean,CHAR(11),'');
	--Form Feed
	Set @StringToClean = Replace(@StringToClean,CHAR(12),'');
	--Carriage Return
	Set @StringToClean = Replace(@StringToClean,CHAR(13),'');
	--Column Break
	Set @StringToClean = Replace(@StringToClean,CHAR(14),'');
	--Non-breaking space
	Set @StringToClean = Replace(@StringToClean,CHAR(160),'');
 
	Set @StringToClean = LTRIM(RTRIM(@StringToClean));
	Return @StringToClean
END
GO
/****** Object:  UserDefinedFunction [dbo].[udfTrim]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[udfTrim] 
(
	@StringToClean as varchar(800)
)
RETURNS varchar(800)
AS
BEGIN	
	--Replace all non printing whitespace characers with Characer 32 whitespace
	--NULL
	Set @StringToClean = Replace(@StringToClean,CHAR(0),CHAR(32));
	--Horizontal Tab
	Set @StringToClean = Replace(@StringToClean,CHAR(9),CHAR(32));
	--Line Feed
	Set @StringToClean = Replace(@StringToClean,CHAR(10),CHAR(32));
	--Vertical Tab
	Set @StringToClean = Replace(@StringToClean,CHAR(11),CHAR(32));
	--Form Feed
	Set @StringToClean = Replace(@StringToClean,CHAR(12),CHAR(32));
	--Carriage Return
	Set @StringToClean = Replace(@StringToClean,CHAR(13),CHAR(32));
	--Column Break
	Set @StringToClean = Replace(@StringToClean,CHAR(14),CHAR(32));
	--Non-breaking space
	Set @StringToClean = Replace(@StringToClean,CHAR(160),CHAR(32));
 
	Set @StringToClean = LTRIM(RTRIM(@StringToClean));
	Return @StringToClean
END
GO
/****** Object:  Table [dbo].[PersonaNatural]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PersonaNatural](
	[iCodPersonaNatural] [int] IDENTITY(10,1) NOT NULL,
	[iCodPersona] [int] NULL,
	[cApelP] [varchar](100) NULL,
	[cApelM] [varchar](100) NULL,
	[cNombres] [varchar](100) NULL,
	[cSexo] [char](1) NULL,
	[cFuncion] [char](2) NULL,
	[iCodTipoEstadoCivil] [int] NULL,
	[dFechaNac] [date] NULL,
	[cLugarNac] [varchar](100) NULL,
	[cFono] [varchar](50) NULL,
	[cCorreo] [varchar](100) NULL,
	[cCusp] [varchar](20) NULL,
	[cLicenciaConducir] [varchar](20) NULL,
	[cCargo] [varchar](150) NULL,
	[cGrupoSanguineo] [varchar](5) NULL,
	[iCodTipoGradoInstruccion] [int] NULL,
	[iCodDepartamentoRes] [int] NULL,
	[iCodProvinciaRes] [int] NULL,
	[iCodDistritoRes] [int] NULL,
	[iCodDepartamentoNac] [int] NULL,
	[iNroDependientes] [int] NULL,
	[iSituacion] [int] NULL,
	[cCodigoPlanilla] [varchar](6) NULL,
	[iCodPersonaCargo] [int] NULL,
 CONSTRAINT [PK_PersonaNatural] PRIMARY KEY CLUSTERED 
(
	[iCodPersonaNatural] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_iCodPersona] UNIQUE NONCLUSTERED 
(
	[iCodPersonaNatural] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Usuario]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Usuario](
	[iCodUsuario] [int] IDENTITY(1,1) NOT NULL,
	[iCodPersona] [int] NOT NULL,
	[cNick] [varchar](40) NOT NULL,
	[cClave] [varbinary](800) NULL,
	[cTipo] [varchar](4) NULL,
	[bEliminado] [bit] NULL,
	[bBloqueado] [bit] NULL,
	[dFechaUltimoBloqueo] [datetime] NULL,
	[dFechaSis] [datetime] NULL,
	[iCodUsuarioSis] [int] NULL,
 CONSTRAINT [PK_usuario_iCodUsuario] PRIMARY KEY CLUSTERED 
(
	[iCodUsuario] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [usuario$cNick_UNIQUE] UNIQUE NONCLUSTERED 
(
	[cNick] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [usuario$iCodPersona_UNIQUE] UNIQUE NONCLUSTERED 
(
	[iCodPersona] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[v_UserActivo]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_UserActivo]
AS
SELECT        u.iCodUsuario, u.iCodPersona, u.cNick, p.cApelP + ' ' + p.cApelM + ' ' + p.cNombres AS cNomTrabajador, u.bEliminado
FROM            dbo.Usuario AS u INNER JOIN
                         dbo.PersonaNatural AS p ON u.iCodPersona = p.iCodPersona
GO
/****** Object:  Table [dbo].[Contrata]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Contrata](
	[iCodContrata] [int] IDENTITY(1,1) NOT NULL,
	[cNomContrata] [varchar](150) NULL,
	[cRUC] [varchar](20) NULL,
	[cResponsable] [varchar](70) NULL,
	[cFono] [varchar](25) NULL,
	[cCorreo] [varchar](80) NULL,
	[cContacto1] [varchar](70) NULL,
	[cFono1] [varchar](25) NULL,
	[cCorreo1] [varchar](40) NULL,
	[cContacto2] [varchar](700) NULL,
	[cFono2] [varchar](25) NULL,
	[cNomCorto] [varchar](100) NULL,
	[bSubContrata] [bit] NULL,
	[iCodTDCondicion] [int] NULL,
	[cCondicionEmpresa] [varchar](50) NULL,
	[cCondicionEmpresaDetalle] [varchar](50) NULL,
	[cTipoEmpresa] [varchar](20) NULL,
	[iCodComunidadEmpresa] [int] NULL,
	[cAnotaciones] [varchar](max) NULL,
	[iCodRubroEmpresarial] [smallint] NULL,
	[bAnulado] [bit] NULL,
	[cUrlBrouchure] [varchar](max) NULL,
	[cUrlRDP] [varchar](max) NULL,
	[cUrlInfo] [varchar](max) NULL,
	[cWebsite] [varchar](max) NULL,
	[cFanpage] [varchar](max) NULL,
	[cInstagram] [varchar](max) NULL,
	[cTikTok] [varchar](max) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_Contrata] PRIMARY KEY CLUSTERED 
(
	[iCodContrata] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_ContrataRUC] UNIQUE NONCLUSTERED 
(
	[cRUC] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UsuarioContrata]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UsuarioContrata](
	[iCodUsuarioContrata] [int] IDENTITY(1,1) NOT NULL,
	[iCodPersona] [int] NULL,
	[iCodUsuario] [smallint] NULL,
	[iCodContrata] [int] NULL,
	[bAcceder] [bit] NULL,
 CONSTRAINT [PK_CodContrataUsuario] PRIMARY KEY CLUSTERED 
(
	[iCodUsuarioContrata] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_ContrataUsuario] UNIQUE NONCLUSTERED 
(
	[iCodContrata] ASC,
	[iCodUsuario] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_Usuario] UNIQUE NONCLUSTERED 
(
	[iCodUsuario] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[web_UsuarioContrata]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[web_UsuarioContrata]
AS
SELECT        uc.iCodUsuarioContrata, co.cNomContrata, CASE WHEN len(ltrim(rtrim(pn.cApelM))) > 0 THEN pn.cApelP + ' ' + pn.cApelM + ' ' + pn.cNombres ELSE pn.cApelP + ' ' + pn.cNombres END AS cNomCompleto, uc.bAcceder
FROM            dbo.UsuarioContrata AS uc INNER JOIN
                         dbo.Usuario AS u ON uc.iCodUsuario = u.iCodUsuario INNER JOIN
                         dbo.PersonaNatural AS pn ON uc.iCodPersona = pn.iCodPersona INNER JOIN
                         dbo.Contrata AS co ON uc.iCodContrata = co.iCodContrata
GO
/****** Object:  Table [dbo].[Persona]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Persona](
	[iCodPersona] [int] IDENTITY(10,1) NOT NULL,
	[cTipoPer] [char](2) NULL,
	[iCodTipoDocumentoIdentidad] [int] NULL,
	[cNroDoc] [varchar](50) NULL,
	[cDireccion] [varchar](150) NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_persona_iCodPersona] PRIMARY KEY CLUSTERED 
(
	[iCodPersona] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_cNroDoc] UNIQUE NONCLUSTERED 
(
	[cNroDoc] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[v_PersonaTrabajador]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[v_PersonaTrabajador]
AS
SELECT     p.iCodPersona, p.cNroDoc, pj.cApelP + ' ' + pj.cApelM + ' ' + pj.cNombres AS cnomcompleto,p.bAnulado 
FROM         dbo.Persona AS p INNER JOIN
                      dbo.PersonaNatural AS pj ON p.iCodPersona = pj.iCodPersona
WHERE     (p.cTipoPer = 'R') AND (p.bAnulado = 0) AND (pj.cFuncion = 'T')

GO
/****** Object:  View [dbo].[v_UserLogin]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [dbo].[v_UserLogin]
AS
SELECT     iCodUsuario, 
iCodPersona, 
cNick, 
dbo.fnLeeClave(cClave) AS cClave, cTipo, bEliminado
FROM         dbo.Usuario  
--where iCodPersona=18  
GO
/****** Object:  Table [dbo].[CandidatoInforme]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoInforme](
	[iCodCandidatoInforme] [int] IDENTITY(1,1) NOT NULL,
	[cDNI] [varchar](20) NULL,
	[cUbigeo] [varchar](8) NULL,
	[cApellidos] [varchar](60) NULL,
	[cNombres] [varchar](60) NULL,
	[cSexo] [varchar](2) NULL,
	[cEstCivil] [varchar](20) NULL,
	[cFono] [varchar](80) NULL,
	[cCorreo] [varchar](120) NULL,
	[dFechaNac] [date] NULL,
	[cCUI] [varchar](50) NULL,
	[cDireccion] [varchar](100) NULL,
	[cCondicion] [varchar](250) NULL,
	[cPuestoEspecialidad] [varchar](250) NULL,
	[cOcupacion] [varchar](250) NULL,
	[cOcupacion2] [varchar](90) NULL,
	[cEducaSecundaria] [varchar](50) NULL,
	[cEducaTecnica] [varchar](50) NULL,
	[cEducaSuperior] [varchar](50) NULL,
	[cExpLaboral] [varchar](500) NULL,
	[cEmprEx1] [varchar](150) NOT NULL,
	[cCargoEx1] [varchar](80) NULL,
	[dFechaIniEx1] [date] NULL,
	[dFechaFinEx1] [date] NULL,
	[cEmprEx2] [varchar](150) NULL,
	[cCargoEx2] [varchar](80) NULL,
	[dFechaIniEx2] [date] NULL,
	[dFechaFinEx2] [date] NULL,
	[cComunidad] [varchar](60) NULL,
	[cMOCMONC] [varchar](10) NULL,
	[cObservacion] [varchar](1200) NULL,
	[cAptitud] [varchar](50) NULL,
	[cUbigeoResidencia] [varchar](40) NULL,
	[dFechaDisponible] [date] NULL,
	[cCapacitacion] [varchar](50) NULL,
	[cLicenciaConducir] [varchar](25) NULL,
	[cCertificacion] [varchar](60) NULL,
	[iPAsertividad] [tinyint] NULL,
	[iPTrabajoEquipo] [tinyint] NULL,
	[iPComEfectiva] [tinyint] NULL,
	[iPAdaptabilidad] [tinyint] NULL,
	[iEEstable] [tinyint] NULL,
	[iEInestable] [tinyint] NULL,
	[iCCompromiso] [tinyint] NULL,
	[iSRptoNorma] [tinyint] NULL,
	[iSIperC] [tinyint] NULL,
	[iSActitud] [tinyint] NULL,
	[dFechaRegistro] [date] NULL,
	[iCodUsuarioRegistra] [smallint] NULL,
	[dFechaEvaluacion] [date] NULL,
	[bEvaluado] [bit] NULL,
	[dFechaVerificativa] [date] NULL,
	[bVerificativa] [bit] NULL,
	[iEstadoVerificativa] [tinyint] NULL,
	[iResultadoVerificativa] [tinyint] NULL,
	[dFechaCargaBox] [date] NULL,
	[bSustentoCV] [bit] NULL,
	[bContratado] [bit] NULL,
	[bCargaBox] [bit] NULL,
	[bDNIMoq] [bit] NULL,
	[bCasadoMoq] [bit] NULL,
	[bConviveMoq] [bit] NULL,
	[bHijosMoq] [bit] NULL,
	[bRucMoq] [bit] NULL,
	[bEstudioMoq] [bit] NULL,
	[bTrabajoMoq] [bit] NULL,
	[cTipoDoc] [varchar](5) NULL,
	[iTipoIngreso] [tinyint] NULL,
	[cPaisNacimiento] [varchar](30) NULL,
	[iTiempoExperiencia] [smallint] NULL,
	[cDNIConyuge] [varchar](10) NULL,
	[cUbigeoConyuge] [varchar](8) NULL,
	[cApellidosConyuge] [varchar](50) NULL,
	[cNombresConyuge] [varchar](50) NULL,
	[cDNIHijo] [varchar](10) NULL,
	[cUbigeoHijo] [varchar](8) NULL,
	[cApellidosHijo] [varchar](50) NULL,
	[cNombresHijo] [varchar](50) NULL,
	[bComunidadPadron] [bit] NULL,
	[bComunidadConstancia] [bit] NULL,
	[bCip] [bit] NULL,
	[bCumplePefil] [bit] NULL,
	[bDisponible] [bit] NULL,
	[dFechaEmisionDni] [date] NULL,
	[cEmpresaTrabaja] [varchar](50) NULL,
	[dFechaEvaluacionResultado] [date] NULL,
	[iCodPersonaEvalua] [int] NULL,
	[bDiscapacitado] [bit] NULL,
	[bPrioritario] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CandidatoInforme] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoInforme] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[m_DashboardComunidadLocal]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[m_DashboardComunidadLocal]
AS
select cDNI, cUbigeo,cCondicion,
case when cCondicion = 'COMUNIDAD' then cComunidad 
else case cUbigeo 
WHEN 170102 THEN 'CARUMAS [DISTRITO]'
WHEN 170103 THEN 'CUCHUMBAYA [DISTRITO]' 
WHEN 170104 THEN 'SANCRISTOBAL [DISTRITO]' 
WHEN 170105 THEN 'TORATA [DISTRITO]'
	else cComunidad 
	end end  as Comunidad,
	case when cCondicion = 'COMUNIDAD' then 'POR CERTIFICADO O PADRON DE COMUNIDAD' 
	else 'POR UBIGEO ANILLO DE INFLUENCIA' end as cGrupoComunidad,
case when bContratado = '1' then 'SI TRABAJA EN AAQ ' else 'NO TRABAJA EN AAQ' end as FFLL,
case when bEvaluado = '1' then 'SI' else 'NO' end as Evaluado,
case when bCargaBox = '1' then 'SI' else 'NO' end as Expediente,
cEmpresaTrabaja,cCapacitacion as cMMOO ,cSexo 
from CandidatoInforme
where cComunidad<>'' or cUbigeo in ('170102','170103','170104','170105') 



GO
/****** Object:  Table [dbo].[UsuarioPermiso]    Script Date: 30/08/2025 13:43:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UsuarioPermiso](
	[iCodUsuarioPermiso] [int] IDENTITY(1,1) NOT NULL,
	[iCodUFormulario] [int] NULL,
	[iCodUsuarioSistema] [int] NULL,
	[bVisualizar] [bit] NULL,
	[bAgregar] [bit] NULL,
	[bGuardar] [bit] NULL,
	[bEditar] [bit] NULL,
	[bEliminar] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_UsuarioPermiso] PRIMARY KEY CLUSTERED 
(
	[iCodUsuarioPermiso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UFormulario]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UFormulario](
	[iCodUFormulario] [int] IDENTITY(1,1) NOT NULL,
	[iNroFormulario] [int] NULL,
	[cNomFormulario] [varchar](50) NULL,
	[cNomCortoFormulario] [varchar](50) NULL,
	[cGrupo] [varchar](50) NULL,
 CONSTRAINT [PK_UFormulario] PRIMARY KEY CLUSTERED 
(
	[iCodUFormulario] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_Formulario] UNIQUE NONCLUSTERED 
(
	[cNomFormulario] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[v_UserPermiso]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[v_UserPermiso]
AS
SELECT   up.iCodUsuarioPermiso,  up.iCodUsuarioSistema, uf.iCodUFormulario, uf.cNomFormulario,uf.cNomCortoFormulario,uf.cGrupo, up.bVisualizar, up.bAgregar, up.bGuardar, up.bEditar, up.bEliminar
FROM         dbo.UsuarioPermiso AS up INNER JOIN
                      dbo.UFormulario AS uf ON up.iCodUFormulario = uf.iCodUFormulario




GO
/****** Object:  Table [dbo].[CandidatoContactoCatalogo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoContactoCatalogo](
	[iCodCandidatoContactoCatalogo] [int] IDENTITY(1,1) NOT NULL,
	[cDesMotivo] [varchar](80) NULL,
	[cResumen] [varchar](50) NULL,
	[cTipo] [char](1) NULL,
 CONSTRAINT [PK_CandidatoContactoMotivo] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoContactoCatalogo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CandidatoContacto]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoContacto](
	[iCodCandidatoContacto] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoInforme] [int] NULL,
	[iCodCandidatoContactoMotivo] [smallint] NULL,
	[dFechaContacto] [date] NULL,
	[iCodCandidatoContactoRespuesta] [smallint] NULL,
	[cObs] [varchar](250) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CandidatoContacto] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoContacto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[m_CandidatoLlamadas]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [dbo].[m_CandidatoLlamadas]
AS
SELECT        cc.dFechaContacto, ci.cDNI, 
ci.cNombres + ' '+ ci.cApellidos as cNomCompleto,
 cccm.cDesMotivo AS cMotivo, cccr.cDesMotivo AS cRespuesta, cc.cObs, u.cNick,
 convert( char(8),cc.dFechaSis,108) as Hora
FROM            dbo.CandidatoInforme AS ci INNER JOIN
                         dbo.CandidatoContacto AS cc ON cc.iCodCandidatoInforme = ci.iCodCandidatoInforme INNER JOIN
                         dbo.Usuario AS u ON cc.iCodUsuario = u.iCodUsuario INNER JOIN
                         dbo.CandidatoContactoCatalogo AS cccm ON cccm.iCodCandidatoContactoCatalogo = cc.iCodCandidatoContactoMotivo INNER JOIN
                         dbo.CandidatoContactoCatalogo AS cccr ON cccr.iCodCandidatoContactoCatalogo = cc.iCodCandidatoContactoRespuesta


GO
/****** Object:  Table [dbo].[CapacitacionGrupo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionGrupo](
	[iCodCapacitacionGrupo] [int] IDENTITY(1,1) NOT NULL,
	[iCodCapacitacionProgramaCurso] [int] NULL,
	[iCodContrataCapacita] [int] NULL,
	[iNro] [tinyint] NULL,
	[iHoras] [tinyint] NULL,
	[iTope] [tinyint] NULL,
	[dFechaIni] [date] NULL,
	[dFechaFin] [date] NULL,
	[iDiasEfectivos] [tinyint] NULL,
	[cLugar] [varchar](450) NULL,
	[cHorario] [varchar](450) NULL,
	[iCodUsuario] [smallint] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CapacitacionGrupo] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionGrupo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[cap_CapacitacionGrupos]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[cap_CapacitacionGrupos]
AS
SELECT        cg.iCodCapacitacionGrupo, cg.iCodCapacitacionProgramaCurso, cg.iNro, co.cNomCorto, cg.dFechaIni, cg.dFechaFin, cg.cLugar, cg.cHorario, cg.iTope
FROM            dbo.CapacitacionGrupo AS cg INNER JOIN
                         dbo.Contrata AS co ON cg.iCodContrataCapacita = co.iCodContrata
GO
/****** Object:  Table [dbo].[ConvocatoriaMain]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ConvocatoriaMain](
	[iCodConvocatoriaMain] [int] IDENTITY(1,1) NOT NULL,
	[COD_CLIENTE] [float] NULL,
	[COD_CONVOCATORIA] [varchar](20) NULL,
	[IDREQ] [float] NULL,
	[iCodCliente] [int] NULL,
	[iCodClienteCuenta] [int] NULL,
	[iCodContrata] [int] NULL,
	[iCodContratistaContrato] [int] NULL,
	[iCodSubContrata] [int] NULL,
	[cRUCContrata] [varchar](12) NULL,
	[cSubContrata] [varchar](80) NULL,
	[cNroConvocatoria] [varchar](15) NULL,
	[cSolicitante] [varchar](200) NULL,
	[dFechaSolicitud] [date] NULL,
	[dFechaAprobacion] [date] NULL,
	[iCodUsuarioAprueba] [int] NULL,
	[dFechaIni] [date] NULL,
	[dFechaFin] [date] NULL,
	[dFechaLimite] [date] NULL,
	[iTipo] [tinyint] NULL,
	[cObs] [varchar](250) NULL,
	[cRutaLista] [varchar](200) NULL,
	[cRutaComprobante] [varchar](200) NULL,
	[cRutaDifusion] [varchar](200) NULL,
	[iEstado] [tinyint] NULL,
	[cEstado] [char](2) NULL,
	[dEstadoFecha] [datetime] NULL,
	[iCodUsuarioEstado] [int] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
	[iCorrelativo] [smallint] NULL,
	[iPeriodo] [smallint] NULL,
	[bAprobadoCED] [bit] NULL,
	[bAprobadoCliente] [bit] NULL,
	[dFechaEnvio] [datetime] NULL,
	[iCodUsuarioEnvio] [int] NULL,
	[dFechaDesaAprobacionCliente] [datetime] NULL,
	[iCodUsuarioDesaAprobacionCliente] [int] NULL,
 CONSTRAINT [PK_ConvocatoriaMain] PRIMARY KEY CLUSTERED 
(
	[iCodConvocatoriaMain] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ContratistaContrato]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ContratistaContrato](
	[iCodContratistaContrato] [smallint] IDENTITY(1,1) NOT NULL,
	[iCodContrata] [int] NULL,
	[cNroContrato] [varchar](50) NULL,
	[cNomContrato] [varchar](250) NULL,
	[cZona] [varchar](45) NULL,
	[iHeadCount] [smallint] NULL,
	[cTipoFFLL] [varchar](5) NULL,
	[cTipoContrato] [varchar](10) NULL,
	[cGrupoContrato] [varchar](3) NULL,
	[cFase] [varchar](2) NULL,
	[dFechaTermino] [date] NULL,
	[iCodClienteArea] [int] NULL,
	[cAreaUsuaria] [varchar](100) NULL,
	[cAreaUsuariaSupervisor] [varchar](100) NULL,
	[bCerrado] [bit] NULL,
	[iCodRubroIntervencion] [int] NULL,
	[iCodLineaInversion] [int] NULL,
	[iCodCliente] [int] NULL,
	[iCodClienteContrato] [int] NULL,
	[cProvinciaEjecucion] [varchar](50) NULL,
	[iCodGrupoIntervencion] [int] NULL,
	[cAreaOperacional] [varchar](30) NULL,
	[cTipoValoracionPGS] [varchar](5) NULL,
	[iMOCForaneo] [int] NULL,
	[iMOCLocal] [int] NULL,
	[iMOSCForaneo] [int] NULL,
	[iMOSCLocal] [int] NULL,
	[iMONCForaneo] [int] NULL,
	[iMONCLocal] [int] NULL,
	[nTasaMOCLocal] [decimal](6, 2) NULL,
	[nTasaMOSCLocal] [decimal](6, 2) NULL,
	[nTasaMONCLocal] [decimal](6, 2) NULL,
	[cAnotaciones] [varchar](1000) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
	[dFechaInicio] [date] NULL,
	[cDatosContacto] [varchar](max) NULL,
	[iEstado] [tinyint] NULL,
	[cEstado] [varchar](30) NULL,
	[iCodUsuarioEstado] [int] NULL,
	[dFechaEstado] [datetime] NULL,
	[iCodUsuarioEnvio] [int] NULL,
	[dFechaUsuarioEnvio] [datetime] NULL,
	[iCodUsuarioAprueba] [int] NULL,
	[dFechaUsuarioAprueba] [datetime] NULL,
	[bReporteFFLL] [bit] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[cObs] [varchar](max) NULL,
 CONSTRAINT [PK_ContratistaContrato] PRIMARY KEY CLUSTERED 
(
	[iCodContratistaContrato] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_NroContrato] UNIQUE NONCLUSTERED 
(
	[cNroContrato] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Convocatoria]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Convocatoria](
	[iCodConvocatoria] [int] IDENTITY(1,1) NOT NULL,
	[iCodConvocatoriaMain] [int] NULL,
	[IDREQ] [float] NULL,
	[COD_DETALLE] [float] NULL,
	[cMOCMONC] [varchar](5) NULL,
	[cPerfil] [varchar](120) NULL,
	[cDesPerfil] [varchar](max) NULL,
	[iCantidad] [smallint] NULL,
	[iEstado] [smallint] NULL,
	[bLiberado] [bit] NULL,
	[iLiberado] [smallint] NULL,
	[bCoberturado] [bit] NULL,
	[iExceptuado] [smallint] NULL,
	[dFechaLiberaExceptua] [date] NULL,
	[cObs] [varchar](max) NULL,
	[bSituacion] [bit] NULL,
	[cAreaPerfil] [varchar](15) NULL,
	[iTiempoExpRequerida] [tinyint] NULL,
	[iTiempoExpDeseable] [tinyint] NULL,
	[cCategoriaRCC] [varchar](50) NULL,
	[cOcupacionRCC] [varchar](50) NULL,
	[cEspecialidadRCC] [varchar](50) NULL,
	[cTipoPerfil] [varchar](15) NULL,
	[cRegimenLaboral] [varchar](50) NULL,
	[cConocimiento] [varchar](100) NULL,
	[cEspecializacion] [varchar](100) NULL,
	[iTotal] [smallint] NULL,
	[bResolicitado] [bit] NULL,
	[iTipoObra] [tinyint] NULL,
	[cFrenteLugarTrabajo] [varchar](50) NULL,
	[dFechaEstimadaIngreso] [date] NULL,
	[iPeriodoContrataMeses] [tinyint] NULL,
	[iCodOcupacion] [int] NULL,
	[cFuncionesPuesto] [varchar](max) NULL,
	[iEscalaRemunerativa] [tinyint] NULL,
	[cOtrosBeneficios] [varchar](max) NULL,
	[iEdadMinimaRequerida] [tinyint] NULL,
	[iEdadMaximaRequerida] [tinyint] NULL,
	[cExperiencia] [varchar](max) NULL,
	[cCompetencias] [varchar](max) NULL,
	[cGenero] [char](1) NULL,
	[iGradoInstruccion] [tinyint] NULL,
	[iCodUsuarioAprobador] [int] NULL,
	[dFechaAprobacion] [datetime] NULL,
	[cNotasAprobador] [varchar](max) NULL,
	[cUrlExterna] [varchar](max) NULL,
	[iBandaSalarialMin] [smallint] NULL,
	[iBandaSalarialMax] [smallint] NULL,
	[cHorarioLaboral] [varchar](250) NULL,
	[cRotacion] [varchar](250) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_Convocatoria] PRIMARY KEY CLUSTERED 
(
	[iCodConvocatoria] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ConvocatoriaDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ConvocatoriaDetalle](
	[iCodConvocatoriaDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodConvocatoria] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[iTipoPostulacion] [tinyint] NULL,
	[dFechaMintra] [datetime] NULL,
	[dFechaLiberadoExceptuado] [date] NULL,
	[iRanking] [tinyint] NULL,
	[dFechaPropuesta] [datetime] NULL,
	[cObsConsultor] [varchar](500) NULL,
	[dFechaCargaCV] [date] NULL,
	[dFechaContactoContrata1] [date] NULL,
	[dFechaRptaConformidad] [datetime] NULL,
	[cSeleccionado] [varchar](3) NULL,
	[cRptaContrata] [varchar](100) NULL,
	[cRptaConformidad] [varchar](50) NULL,
	[dFechaVerificaFeedback] [datetime] NULL,
	[cFeedbackCorrecto] [varchar](3) NULL,
	[cEstado] [varchar](15) NULL,
	[cObs] [varchar](1250) NULL,
	[bCumplePerfil] [bit] NULL,
	[iCodUsuarioFeedback] [int] NULL,
	[cTipoValidaFeedback] [varchar](2) NULL,
	[iCodUsuarioRptaContrata] [int] NULL,
	[dFechaRptaContrata] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_ConvocatoriaDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodConvocatoriaDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_ConvocatoriaCandidatoInforme] UNIQUE NONCLUSTERED 
(
	[iCodConvocatoria] ASC,
	[iCodCandidatoInforme] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[mpg_ConvocatoriasLista]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[mpg_ConvocatoriasLista]
AS
SELECT        c.iCodConvocatoriaMain, c.iCodContrata, 
                         CASE c.iTipo WHEN 1 THEN 'REGULAR' WHEN 2 THEN 'EXCEPTUADO' WHEN 3 THEN 'INTERNO' WHEN 4 THEN 'REEMPLAZO' WHEN 5 THEN 'P. PLANTA' WHEN 6 THEN 'PGI' WHEN 7 THEN 'STAKEHOLDER' WHEN 8 THEN 'ATM'
                          WHEN 9 THEN 'OTROS' WHEN 10 THEN 'REGULAR BBDD' WHEN 11 THEN 'INDIRECTO' WHEN 12 THEN 'EXTERNO' ELSE '' END AS cTipo, c.cNroConvocatoria, cto.cNroContrato, ct.cNomContrata, 
                         CASE WHEN c.iCodContrata <> c.iCodSubContrata THEN isnull(sct.cNomContrata, '') ELSE '' END AS cSubContrata, c.dFechaSolicitud, c.dFechaAprobacion, c.dFechaIni, c.dFechaFin, c.dFechaLimite, COUNT(cd.iCodConvocatoria) 
                         AS iPerfiles, SUM(cd.iCantidad) AS iCantidad, c.iEstado, c.bAprobadoCED, c.bAprobadoCliente,
                             (SELECT        COUNT(cd0.iCodCandidatoInforme) AS Expr1
                               FROM            dbo.ConvocatoriaDetalle AS cd0 INNER JOIN
                                                         dbo.Convocatoria AS c0 ON cd0.iCodConvocatoria = c0.iCodConvocatoria INNER JOIN
                                                         dbo.ConvocatoriaMain AS cm0 ON c0.iCodConvocatoriaMain = cm0.iCodConvocatoriaMain INNER JOIN
                                                         dbo.CandidatoInforme AS ci0 ON cd0.iCodCandidatoInforme = ci0.iCodCandidatoInforme
                               WHERE        (cd0.dFechaCargaCV = '1900-01-01') AND (cd0.bCumplePerfil = 1) AND (cd0.iTipoPostulacion IN (1, 6)) AND (ci0.bCargaBox = 1) AND (cm0.iCodConvocatoriaMain = c.iCodConvocatoriaMain)) AS iCantSinEnvio, 
                         c.cRutaLista, CASE c.cEstado WHEN 'P' THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS bPublicado
FROM            dbo.ConvocatoriaMain AS c INNER JOIN
                         dbo.Contrata AS ct ON c.iCodContrata = ct.iCodContrata LEFT OUTER JOIN
                         dbo.Convocatoria AS cd ON c.iCodConvocatoriaMain = cd.iCodConvocatoriaMain LEFT OUTER JOIN
                         dbo.Contrata AS sct ON sct.iCodContrata = c.iCodSubContrata LEFT OUTER JOIN
                         dbo.ContratistaContrato AS cto ON c.iCodContratistaContrato = cto.iCodContratistaContrato
GROUP BY c.iCodConvocatoriaMain, ct.cNomContrata, c.dFechaIni, c.dFechaFin, c.iEstado, c.iCodContrata, c.iTipo, c.cSubContrata, c.dFechaLimite, c.cNroConvocatoria, c.cRutaLista, sct.cNomContrata, c.iCodSubContrata, c.cEstado, 
                         c.bAprobadoCED, c.bAprobadoCliente, cto.cNroContrato, c.dFechaSolicitud, c.dFechaAprobacion
GO
/****** Object:  View [dbo].[m_DashboardComunidadTodo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[m_DashboardComunidadTodo]
AS
 select ci.cCondicion as Condicion,ci.cComunidad as Comunidad, ci.cdni as DNI,ci.capellidos+ ' ' + ci.cnombres as [Nombres Trabajador],
   ci.cUbigeo as Ubigeo,
CASE 
WHEN ci.cOcupacion IS NULL 
 THEN '' ELSE 
 ci.cOcupacion + CASE WHEN ci.cOcupacion2 IS NULL 
 THEN '' WHEN ci.cOcupacion2 = '' THEN '' 
 ELSE ' - ' + ci.cOcupacion2 END END AS cOcupacion,
 ci.cMOCMONC as[Categoria Mano Obra],
  case 
 when ci.bComunidadConstancia=0 then 'NO' 
 else 'SI' end as [Constancia Comunidad],
 case 
 when ci.bComunidadPadron=0 then 'NO' 
 else 'SI' end as [Padron de Comunidad],  
 case 
 when bCargaBox=0 then 'NO' 
 else 'SI' end as CV, 
 case when ci.bEvaluado=1 then 'SI' 
 else 'NO' end as Evaluado, 
ci.cAptitud as Aptitud, 
case 
when ci.bContratado=1 then 'SI' 
else 'NO' end as [Fuerza Laboral]  , 
ci.cEmpresaTrabaja as [Empresa Contratante] ,
( --0
SELECT 
isnull( REPLACE(STUFF(
			(SELECT '  '+ convert(varchar, cds.dFechaCargaCV, 103)  + ' : '+  co.cNomContrata + char(13)
			FROM convocatoriadetalle cds 
			INNER JOIN convocatoria c ON  cds.iCodConvocatoria=c.iCodConvocatoria 
			inner join convocatoriamain cm on c.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
			inner join contrata co on cm.iCodContrata=co.iCodContrata    
			WHERE (cm.iTipo in (1,3)) and cds.dFechaCargaCV<>'1900-01-01' and cds.iCodCandidatoInforme =ci.icodcandidatoinforme  
			 
			FOR XML PATH ('')
			),--FIN SELECT
1,2, ''),'&#x0D;', CHAR(13)) --FIN STUFF
 ,'')--FIN ISNULL
)  as EmpresasPostuladas  
from CandidatoInforme ci   
left join ConvocatoriaDetalle cd on ci.iCodCandidatoInforme=cd.iCodCandidatoInforme  where
   ci.cCondicion ='COMUNIDAD'  
  group by ci.cdni,ci.cubigeo,ci.cApellidos,ci.cNombres,ci.cOcupacion,ci.cOcupacion2,
 ci.cCondicion ,ci.cMOCMONC,ci.bContratado ,ci.bCargaBox  , ci.cAptitud ,ci.bVerificativa ,ci.icodcandidatoinforme,ci.cComunidad ,
 ci.bEvaluado ,ci.bComunidadConstancia,ci.bComunidadPadron ,ci.cEmpresaTrabaja 
 




GO
/****** Object:  Table [dbo].[AnexoAdmisionTipo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AnexoAdmisionTipo](
	[iCodAnexoAdmisionTipo] [tinyint] IDENTITY(1,1) NOT NULL,
	[cDetalle] [varchar](50) NULL,
	[cResumen] [varchar](50) NULL,
	[iGrupo] [tinyint] NULL,
 CONSTRAINT [PK_AnexoAdmisionTipo] PRIMARY KEY CLUSTERED 
(
	[iCodAnexoAdmisionTipo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AnexoAdmisionDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AnexoAdmisionDetalle](
	[iCodAnexoAdmisionDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodAnexoAdmision] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[iCodSubContrata] [int] NULL,
	[iCodAnexoAdmisionTipo] [tinyint] NULL,
	[iCodOcupacion] [int] NULL,
	[iCodPuesto] [int] NULL,
	[bPerfilValidar] [bit] NULL,
	[bPerfilAprobado] [bit] NULL,
	[cCargo] [varchar](90) NULL,
	[cMOCMONC] [varchar](5) NULL,
	[cProcesoEtapa] [char](1) NULL,
	[cNota] [varchar](250) NULL,
	[cObs] [varchar](1500) NULL,
	[bAnulado] [bit] NULL,
	[bNuevo] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_AnexoDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodAnexoAdmisionDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_AnexoAdmisionCandidatoInforme] UNIQUE NONCLUSTERED 
(
	[iCodAnexoAdmision] ASC,
	[iCodCandidatoInforme] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AnexoAdmision]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AnexoAdmision](
	[iCodAnexoAdmision] [int] IDENTITY(1,1) NOT NULL,
	[iCodContrata] [int] NULL,
	[iCodContratistaContrato] [smallint] NULL,
	[iCodAnexoAdmisionTipo] [tinyint] NULL,
	[iCodConvocatoriaMain] [int] NULL,
	[iCodSubContrata] [int] NULL,
	[iCodCliente] [int] NULL,
	[iCodClienteArea] [int] NULL,
	[cGrupo] [varchar](8) NULL,
	[dFechaSolicitud] [date] NULL,
	[cNroAnexo] [varchar](25) NULL,
	[iCorrelativo] [smallint] NULL,
	[iPeriodo] [smallint] NULL,
	[iCodPersonaGestor] [int] NULL,
	[cPersonaSolicita] [varchar](50) NULL,
	[cPersonaSolicitaCargo] [varchar](50) NULL,
	[cAreaUsuaria] [varchar](50) NULL,
	[cNotas] [varchar](1500) NULL,
	[cTipo] [char](1) NULL,
	[cEstado] [char](1) NULL,
	[iCodUsuarioRegistra] [smallint] NULL,
	[dFechaRegistro] [datetime] NULL,
	[iCodUsuarioContrataEnvia] [int] NULL,
	[dFechaUsuarioContrataEnvia] [datetime] NULL,
	[iCodUsuarioValidaDoc] [int] NULL,
	[dFechaValidaDoc] [datetime] NULL,
	[iCodUsuarioAprueba] [int] NULL,
	[dFechaAprobacion] [datetime] NULL,
	[bAprobadoAAQ] [bit] NULL,
	[dFechaAprobadoAAQ] [datetime] NULL,
	[cNotasAprobadoAAQ] [varchar](250) NULL,
	[iCodUsuarioAprobadoAAQ] [int] NULL,
	[dFechaUsuarioAprobadoAAQ] [datetime] NULL,
	[bNotificado] [bit] NULL,
	[iCodUsuarioNotifica] [int] NULL,
	[dFechaNotifica] [datetime] NULL,
	[cCorreoNotifica] [varchar](70) NULL,
	[cNotasNotifica] [varchar](500) NULL,
	[bApruebaAreaAAQ] [bit] NULL,
	[dFechaApruebaAreaAAQ] [date] NULL,
	[cNotasApruebaAreaAAQ] [varchar](500) NULL,
	[iCodUsuarioApruebaAreaAAQ] [int] NULL,
	[dFechaUsuarioApruebaAreaAAQ] [datetime] NULL,
	[cObsDocumento] [varchar](1500) NULL,
	[cTipoObs] [varchar](4) NULL,
	[dFechaObs] [datetime] NULL,
	[iCodUsuarioObserva] [int] NULL,
	[iCodUsuario] [smallint] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_Anexo5] PRIMARY KEY CLUSTERED 
(
	[iCodAnexoAdmision] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[a_AnexoAdmisionResumen]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






CREATE VIEW [dbo].[a_AnexoAdmisionResumen]
AS
select aa.iCodAnexoAdmision,
 co.cNomCorto, ccto.cNroContrato, aa.cNroAnexo,
  aa.cGrupo, aat.cResumen,aa.dFechaSolicitud ,
   cast(aa.dFechaRegistro as date) as dFechaRegistro, 
case 
when aa.cEstado='F' then 
	case 
	when cast(aa.dFechaAprobacion as date)='1900-01-01' then '' 
	else CONVERT(varchar, aa.dFechaAprobacion, 103) end 
else '' 
end  as dFechaAprobacion, 
case aa.cEstado 
when 'P' then 'PROCESANDO'
when 'R' then 'REVISION'
when 'O' then 'OBSERVADO'
when 'F' then 'FINALIZADO' 
else '' 
end as cEstado,
sum( 
case ad.cProcesoEtapa 
when 'P' then 1 
else 0 end) as iEProceso, 
sum( 
case ad.cProcesoEtapa 
when 'O' then 1 
else 0 end) as iEObservado, 
sum( 
case ad.cProcesoEtapa 
when 'A' then 1 
else 0 end) as iEAprobado, 
sum( 
case ad.cProcesoEtapa 
when 'R' then 1 
else 0 end) as iERechazado, 
sum( 
case ad.cProcesoEtapa 
when 'C' then 1 
else 0 end) as iEComparativo, 
 sum(
 case ad.cMOCMONC 
 when 'MOC' then 1 
 else 0 end) as iMOC,
  sum(
 case ad.cMOCMONC 
 when 'MONC' then 1 
 else 0 end) as iMONC,
 sum( case ci.cCondicion 
 when 'LOCAL' then 1 
 when 'RESIDENTE' then 1 
 when 'COMUNIDAD' then 1 
 else 0 end) as iLocal,
   sum( case ci.cCondicion 
 when 'FORANEO' then 1 
 when '' then 1 
 else 0 end) as iForaneo ,
 sum(case ci.cSexo 
 when 'M' then 1 
 else 0 end) as iSexoM,
  sum(case ci.cSexo 
 when 'F' then 1 
 else 0 end) as iSexoF,
  sum(case ci.cSexo 
 when '' then 1 
 else 0 end) as iSexoI ,
  sum(case ci.bContratado 
 when 1 then 1 
 else 0 end) as iContratado,
 sum(case ci.bContratado 
 when 0 then 1 
 else 0 end) as iNoContratado 
from AnexoAdmision aa 
inner join AnexoAdmisionDetalle ad on aa.iCodAnexoAdmision=ad.iCodAnexoAdmision 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
INNER JOIN  dbo.AnexoAdmisionTipo AS aat ON aa.iCodAnexoAdmisionTipo = aat.iCodAnexoAdmisionTipo 
INNER JOIN dbo.Contrata AS co ON aa.iCodContrata = co.iCodContrata 
INNER JOIN dbo.ContratistaContrato AS ccto ON aa.iCodContratistaContrato = ccto.iCodContratistaContrato
group by aa.iCodAnexoAdmision,
 co.cNomCorto, ccto.cNroContrato, aa.cNroAnexo,
  aa.cGrupo, aat.cResumen,aa.dFechaSolicitud , aa.dFechaRegistro, 
aa.dFechaAprobacion, 
aa.cEstado 





GO
/****** Object:  Table [dbo].[CandidatoAsistencia]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoAsistencia](
	[iCodCandidatoAsistencia] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoInforme] [int] NULL,
	[cDNI] [varchar](12) NULL,
	[cNombres] [varchar](50) NULL,
	[cApellidos] [varchar](50) NULL,
	[dFechaHora] [date] NULL,
	[cLugar] [varchar](50) NULL,
	[bRegistroPrevio] [bit] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CandidatoAsistencia] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoAsistencia] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[m_Rpt_CandidatoAsistencia]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[m_Rpt_CandidatoAsistencia]
AS
SELECT        cDNI, cApellidos + ' ' + cNombres AS cNomCompleto, 
dFechaHora, 
CASE WHEN bRegistroPrevio = 0 
THEN 'NO' ELSE 'SI' END AS cAsistenciaPrevia
FROM            dbo.CandidatoAsistencia

GO
/****** Object:  Table [dbo].[CapacitacionCurso]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionCurso](
	[iCodCapacitacionCurso] [smallint] IDENTITY(1,1) NOT NULL,
	[iCodCapacitacionCursoModulo] [smallint] NULL,
	[cNombreCurso] [varchar](100) NULL,
	[cCodigoCurso] [varchar](20) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CapacitacionCurso] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionCurso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CapacitacionProgramaCurso]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionProgramaCurso](
	[iCodCapacitacionProgramaCurso] [int] IDENTITY(1,1) NOT NULL,
	[iCodCapacitacionPrograma] [int] NULL,
	[iCodCapacitacionCurso] [smallint] NULL,
	[iGradoAcademico] [tinyint] NULL,
	[iTiempoExperiencia] [tinyint] NULL,
	[iLicenciaConducirValor] [tinyint] NULL,
	[iCodCapacitacionCursoModulo] [smallint] NULL,
	[iLicenciaConducirTiempo] [tinyint] NULL,
	[iRecordConductor] [tinyint] NULL,
	[iCursoEspecialValor] [tinyint] NULL,
	[cCursoEspecial] [varchar](1200) NULL,
	[cObs] [varchar](500) NULL,
	[iMeta] [smallint] NULL,
	[iTopeGrupo] [tinyint] NULL,
	[iDias] [tinyint] NULL,
	[iHoras] [tinyint] NULL,
	[iVacantes] [tinyint] NULL,
	[cObjetivo] [varchar](max) NULL,
	[cCompetencias] [varchar](max) NULL,
	[cPublicoObjetivo] [varchar](max) NULL,
	[cMetodologiaDuracion] [varchar](max) NULL,
	[cCertificacion] [varchar](max) NULL,
	[cEstructuraCurricular] [text] NULL,
	[bPublicar] [bit] NULL,
	[cUrlPDF] [varchar](250) NULL,
	[cUrlFoto] [varchar](250) NULL,
	[cImagen] [varchar](250) NULL,
	[cModalidad] [varchar](4) NULL,
	[cTipoProceso] [varchar](4) NULL,
	[iCodCapacitacionTipoCurso] [smallint] NULL,
	[iCodContrataCapacita] [int] NULL,
	[cNivel] [varchar](2) NULL,
	[bDeclaracionJurada] [bit] NULL,
	[bSeleccionHorario] [bit] NULL,
	[bCartaCompromiso] [bit] NULL,
	[bAsistencia] [bit] NULL,
	[bConsentimientoDatos] [bit] NULL,
	[bEvaluacionCurricular] [bit] NULL,
	[bEvaluacionTecnica] [bit] NULL,
	[bExamen] [bit] NULL,
	[bEntrevista] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_Capacitacion] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionProgramaCurso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CandidatoAdmision]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoAdmision](
	[iCodCandidatoAdmision] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoAdmisionTipo] [tinyint] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[iCodConvocatoria] [int] NULL,
	[iCodCandidatoAdmisionOrigen] [int] NULL,
	[bNuevo] [bit] NULL,
	[bRequierePostulacion] [bit] NULL,
	[dFechaSolicitud] [date] NULL,
	[dFechaRegistro] [date] NULL,
	[iCodUsuarioRegistro] [int] NULL,
	[bDocumentoTramite] [bit] NULL,
	[dFechaEvaluacion] [date] NULL,
	[bEvaluacion] [bit] NULL,
	[iCodUsuarioEvaluacion] [int] NULL,
	[dFechaConsentimiento] [date] NULL,
	[bConsentimiento] [bit] NULL,
	[iCodUsuarioConsentimiento] [int] NULL,
	[dFechaAptitud] [date] NULL,
	[bAptitud] [bit] NULL,
	[iCodUsuarioAptitud] [int] NULL,
	[dFechaCheckList] [date] NULL,
	[bCheckList] [bit] NULL,
	[iCodUsuarioCheckList] [int] NULL,
	[dFechaExpediente] [date] NULL,
	[bExpediente] [bit] NULL,
	[iCodUsuarioExpediente] [int] NULL,
	[cObs] [varchar](max) NULL,
	[bImprocedente] [bit] NULL,
	[cEstado] [varchar](2) NULL,
	[iResultadoTramite] [tinyint] NULL,
	[iCodUsuarioResultado] [int] NULL,
	[cGuid] [varchar](50) NULL,
	[bRespuesta] [bit] NULL,
	[iCodUsuarioRespuesta] [int] NULL,
	[dFechaRespuesta] [datetime] NULL,
	[iNivelRiesgo] [tinyint] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CandidatoAdmision] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoAdmision] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_CandidatoAdmisionTipo] UNIQUE NONCLUSTERED 
(
	[iCodCandidatoInforme] ASC,
	[cGuid] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CapacitacionMatricula]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionMatricula](
	[iCodCapacitacionMatricula] [int] IDENTITY(1,1) NOT NULL,
	[iCodCapacitacionAdmision] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[iCodCapacitacionProgramaCurso] [int] NULL,
	[iCodCapacitacionGrupo] [int] NULL,
	[cNroMatricula] [smallint] NULL,
	[dFechaRegistro] [date] NULL,
	[iSituacionMatricula] [tinyint] NULL,
	[cObs] [varchar](250) NULL,
	[bActivo] [bit] NULL,
	[cTipoAlumno] [char](1) NULL,
	[iEstadoProceso] [tinyint] NULL,
	[cEstadoProcesoNotas] [varchar](50) NULL,
	[iEstadoProcesoResultado] [tinyint] NULL,
	[nNotaFinal] [decimal](4, 2) NULL,
	[dFechaEntregaCertificado] [date] NULL,
	[bCertificado] [bit] NULL,
	[iNroMatricula] [tinyint] NULL,
	[cUrlCertificado] [varchar](max) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CapacitacionProceso] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionMatricula] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_iCodCapacitacionAdmision] UNIQUE NONCLUSTERED 
(
	[iCodCapacitacionAdmision] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_MatriculaCursoPrograma] UNIQUE NONCLUSTERED 
(
	[iCodCandidatoInforme] ASC,
	[iCodCapacitacionProgramaCurso] ASC,
	[iSituacionMatricula] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CapacitacionCursoModulo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionCursoModulo](
	[iCodCapacitacionCursoModulo] [smallint] IDENTITY(1,1) NOT NULL,
	[cNomCursoModulo] [varchar](50) NULL,
	[iCodCapacitacionPrograma] [int] NULL,
 CONSTRAINT [PK_CapacitacionCursoCategoria] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionCursoModulo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CapacitacionAdmision]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionAdmision](
	[iCodCapacitacionAdmision] [int] IDENTITY(1,1) NOT NULL,
	[iCodCapacitacionProgramaCurso] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[dFechaRegistro] [date] NULL,
	[cProvinciaRegistro] [varchar](20) NULL,
	[iGradoAcademico] [tinyint] NULL,
	[iTiempoExperiencia] [tinyint] NULL,
	[iLicenciaConducirValor] [tinyint] NULL,
	[iLicenciaConducirTiempo] [tinyint] NULL,
	[iRecordConductor] [tinyint] NULL,
	[iCursoEspecialValor] [tinyint] NULL,
	[bApto] [bit] NULL,
	[dFechaEvaluacionTecnica] [date] NULL,
	[nEvaluacionTecnica] [decimal](4, 2) NULL,
	[iEstado] [tinyint] NULL,
	[cObs] [varchar](250) NULL,
	[cTipoAlumno] [varchar](3) NULL,
	[iCodPersonaEvaluaCV] [int] NULL,
	[dFechaEvaluaCV] [date] NULL,
	[iRanking] [smallint] NULL,
	[cLugarInscripcion] [varchar](20) NULL,
	[iTipoCV] [tinyint] NULL,
	[cObsAdmision] [varchar](250) NULL,
	[iCodCapacitacionAdmisionPrevia] [int] NULL,
	[cGUID] [varchar](400) NULL,
	[iNroAdmision] [tinyint] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CapacitacionAdmision] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionAdmision] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[cap_AdmisionPostulantes2021F3]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

























CREATE VIEW [dbo].[cap_AdmisionPostulantes2021F3]
AS
SELECT        CapacitacionAdmision.iCodCapacitacionAdmision,
 CapacitacionCursoModulo.cNomCursoModulo, 
 CapacitacionCurso.cNombreCurso, 
 cpc.iCodCapacitacionProgramaCurso, 
cpc.iMeta, CapacitacionAdmision.dFechaRegistro, 
ci.cDNI, 
 ci.cApellidos + ' '+ ci.cNombres as cNomCompleto, 
 case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as cCondicion , 
 
  case 
 when CapacitacionAdmision.dFechaEvaluaCV='1900-01-01' then '' 
 else convert(varchar, CapacitacionAdmision.dFechaEvaluaCV, 103)  end  as dFechaEvaluaCV,
 CASE 
 WHEN (select count(cmatpz.iCodCandidatoInforme) from CapacitacionMatricula cmatpz where cmatpz.iCodCandidatoInforme=ci.iCodCandidatoInforme and (cmatpz.iEstadoProceso=4 or cmatpz.iEstadoProceso=4))>=1 then 'NO APTO'    
 WHEN isnull(cmat.iEstadoProceso,0)=1 then  'NO APTO'
 ELSE
  case  
  when CapacitacionAdmision.bApto=1 then 'APTO' 
  when CapacitacionAdmision.bApto=0 then 'NO APTO'   
  when CapacitacionAdmision.iEstado=2 then 'NO APTO'  
  else 'NO APTO' 
  end 
 END AS cApto,
 
 
CapacitacionAdmision.cTipoAlumno,
 CapacitacionAdmision.iEstado ,ci.iCodCandidatoInforme  ,
 
CapacitacionAdmision.bApto, 
  ISNULL(u.cNick,'') as cNick,
 
CASE 
WHEN isnull(cmat.iEstadoProceso,0)=1 then  'ES BENEFICIARIO DE UN CURSO DE LA FASE I - FASE II' 
WHEN (select count(cmatpz.iCodCandidatoInforme) from CapacitacionMatricula cmatpz where cmatpz.iCodCandidatoInforme=ci.iCodCandidatoInforme and (cmatpz.iEstadoProceso=4 or cmatpz.iEstadoProceso=4))>=1 then 'USTED ESTA DESCALIFICADO POR ABANDONO DE UN CURSO ( 2019 - 2020 - 2021 )'    
ELSE
  case 
  when ci.bsustentoCV=1 and (ci.cCondicion='LOCAL' or ci.ccondicion='RESIDENTE' or ci.cCondicion='COMUNIDAD'  ) then 
			case
			when cpc.iGradoAcademico>CapacitacionAdmision.iGradoAcademico then 
			'NO ACREDITA NIVEL DE ESTUDIOS REQUERIDO' 
			when cpc.iTiempoExperiencia>CapacitacionAdmision.iTiempoExperiencia then 
			'NO ACREDITA TIEMPO DE EXPERIENCIA REQUERIDO' 
			when cpc.iLicenciaConducirValor>CapacitacionAdmision.iLicenciaConducirValor then 
			'NO ACREDITA EL TIPO DE LICENCIA DE CONDUCIR REQUERIDO' 
			when cpc.iRecordConductor>CapacitacionAdmision.iRecordConductor then 
			'NO ACREDITA RECORD DE CONDUCTOR REQUERIDO' 
			when cpc.iLicenciaConducirTiempo>CapacitacionAdmision.iLicenciaConducirTiempo then 
			'NO ACREDITA TIEMPO DE EXPERIENCIA REQUERIDO EN LICENCIA DE CONDUCIR' 
			when cpc.iCursoEspecialValor>CapacitacionAdmision.iCursoEspecialValor then 
			'NO ACREDITA LOS CURSOS O CERTIFICACIONES REQUERIDOS' 
			when ci.cCondicion='FORANEO' or ci.cCondicion='' then 
			'NO ACREDITA SUSTENTOS DE LOCAL' 
			  when CapacitacionAdmision.iEstado=2 then 
			CapacitacionAdmision.cObs 
			else 
				case CapacitacionAdmision.bApto 
					 when 1 then '' 
					-- when 0 then CapacitacionAdmision.cObs 
				end
			 end  
	 else
		case 
		when isnull(cad.iCodCandidatoAdmision,0)>0 then 'NO COMPLETÓ EL PROCESO DE REGISTRO OAEL'
		else  'NO ACREDITA SUSTENTO DE LOCAL'
		end
	 END
 END as cObs,
 
  case CapacitacionAdmision.iTipoCV 
  when 1 then 'N' 
  when 2 then 'S' 
  when 3 then 'A' 
  end as cTipoCV ,
 cpc.cObs as cInfoCurso  ,
CASE 
WHEN isnull(cmat.iEstadoProceso,0)=1 then  'ES BENEFICIARIO DE UN CURSO DE LA FASE I - FASE II' 
WHEN (select count(cmatpz.iCodCandidatoInforme) from CapacitacionMatricula cmatpz where cmatpz.iCodCandidatoInforme=ci.iCodCandidatoInforme and (cmatpz.iEstadoProceso=4 or cmatpz.iEstadoProceso=4))>=1 then 'USTED ESTA DESCALIFICADO POR ABANDONO DE UN CURSO ( 2019 - 2020 )'    
ELSE
	case  
	when CapacitacionAdmision.bApto=1 then '' 
	when CapacitacionAdmision.bApto=0 then   CapacitacionAdmision.cObs 
	when CapacitacionAdmision.iEstado=2 then  CapacitacionAdmision.cObs  
	end 
END AS cNotasObs ,CapacitacionAdmision.nEvaluacionTecnica ,
ci.cOcupacion as [OcupacionOAEL],
ci.cCorreo,ci.cFono 
--, ci.iTiempoExperiencia as Experiencia,
--case 
--when ci.bCumplePefil=1 then 'SI' 
--else 'NO' 
--end as [Cumple Perfil]  
FROM            CapacitacionCurso INNER JOIN
 CapacitacionProgramaCurso cpc ON CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
 CapacitacionAdmision  ON cpc.iCodCapacitacionProgramaCurso = CapacitacionAdmision.iCodCapacitacionProgramaCurso INNER JOIN
 CandidatoInforme ci ON CapacitacionAdmision.iCodCandidatoInforme = ci.iCodCandidatoInforme INNER JOIN
 CapacitacionCursoModulo ON CapacitacionCurso.iCodCapacitacionCursoModulo = CapacitacionCursoModulo.iCodCapacitacionCursoModulo 
 LEFT JOIN Usuario u on CapacitacionAdmision.iCodPersonaEvaluaCV=u.iCodPersona 
  left join candidatoadmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and icodcandidatoadmisiontipo=1  
 and cad.bImprocedente=0 
 LEFT JOIN  dbo.CapacitacionMatricula cmat on cmat.iCodCandidatoInforme =ci.iCodCandidatoInforme  and cmat.iCodCapacitacionProgramaCurso>=50 and   cmat.iCodCapacitacionProgramaCurso<=81 
 
 WHERE cpc.iCodCapacitacionProgramaCurso>=82 
 -- de 50 a 58 es FASE I
 -- de 59 a 81 es FASE II
 -- de 82 a 99 es FASE III

















GO
/****** Object:  Table [dbo].[FuerzaLaboralDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[FuerzaLaboralDetalle](
	[iCodFuerzaLaboralDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodFuerzaLaboral] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[iCodSubContrata] [int] NULL,
	[cTipoCargo] [varchar](15) NULL,
	[cOcupacion] [varchar](100) NULL,
	[cMOCMONC] [varchar](5) NULL,
	[cRotacion] [varchar](8) NULL,
	[cTurno] [varchar](8) NULL,
	[cTipoContrato] [varchar](50) NULL,
	[cRegimenLaboral] [varchar](50) NULL,
	[iHorasHombre] [smallint] NULL,
	[cLugarPernocte] [varchar](55) NULL,
	[cAreaTrabajo] [varchar](70) NULL,
	[dFechaIni] [date] NULL,
	[dFechaCese] [date] NULL,
	[cMotivoCese] [varchar](50) NULL,
	[cObs] [varchar](max) NULL,
	[iCalificacion] [tinyint] NULL,
	[bDevolvioFotocheck] [bit] NULL,
	[iEstado] [tinyint] NULL,
	[bCesado] [bit] NULL,
	[bConsentimiento] [bit] NULL,
	[iPeriodo] [smallint] NULL,
	[iMes] [tinyint] NULL,
	[cGrupo] [varchar](10) NULL,
	[cNivel] [varchar](20) NULL,
	[cSituacionLaboral] [varchar](50) NULL,
	[iCodUsuarioModifica] [int] NULL,
	[dFechaModifica] [datetime] NULL,
	[iCodUsuarioCierra] [int] NULL,
	[dFechaCierre] [datetime] NULL,
	[iCodOcupacion] [int] NULL,
	[dFechaTerminoContrato] [date] NULL,
	[nSalarioBase] [decimal](7, 2) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_FuerzaLaboralDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodFuerzaLaboralDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_PersonaUnica] UNIQUE NONCLUSTERED 
(
	[iCodCandidatoInforme] ASC,
	[iPeriodo] ASC,
	[iMes] ASC,
	[bCesado] ASC,
	[dFechaCese] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[FuerzaLaboral]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[FuerzaLaboral](
	[iCodFuerzaLaboral] [int] IDENTITY(1,1) NOT NULL,
	[iCodContrata] [int] NULL,
	[iCodSubContratista] [int] NULL,
	[iCodContratistaContrato] [int] NULL,
	[iPeriodo] [smallint] NULL,
	[iMes] [tinyint] NULL,
	[bActivo] [bit] NULL,
	[iCodEstado] [tinyint] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_FuerzaLaboral] PRIMARY KEY CLUSTERED 
(
	[iCodFuerzaLaboral] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_PeriodoContrato] UNIQUE NONCLUSTERED 
(
	[iCodContratistaContrato] ASC,
	[iPeriodo] ASC,
	[iMes] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[GrupoPrioritario]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[GrupoPrioritario](
	[iCodGrupoPrioritario] [int] IDENTITY(1,1) NOT NULL,
	[iCodCatalogoMaster] [int] NULL,
	[iCodContrata] [int] NULL,
	[cNombreGrupo] [varchar](50) NULL,
	[cDesGrupo] [varchar](400) NULL,
	[dFecha] [date] NULL,
	[cObs] [varchar](400) NULL,
	[bCompletado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_GestionGrupal] PRIMARY KEY CLUSTERED 
(
	[iCodGrupoPrioritario] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[GrupoPrioritarioDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[GrupoPrioritarioDetalle](
	[iCodGrupoPrioritarioDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodGrupoPrioritario] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[dFechaOperacion] [date] NULL,
	[cNotas] [varchar](1500) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_GestionGrupalDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodGrupoPrioritarioDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[m_GrupoPrioritarioDetalleSTKHv2]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[m_GrupoPrioritarioDetalleSTKHv2]
AS
SELECT  
 
    gpd.iCodGrupoPrioritarioDetalle, 
gpd.iCodGrupoPrioritario, 
gp.cNombreGrupo ,
ci.iCodCandidatoInforme, 
ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
ci.cCondicion,
case ci.cCondicion 
when 'LOCAL ' then 'SI' 
when 'RESIDENTE ' then 'SI' 
when 'COMUNIDAD ' then 'SI' 
else 'NO' 
end as cEsLocal,
ci.cUbigeo, 
ci.cOcupacion,
case 
 when ci.dFechaEvaluacion='1900-01-01' then '' 
 else convert(varchar, ci.dFechaEvaluacion, 103)  end  as dFechaEvaluacion
,
  case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then cast( 0 as bit) 
 else cast(1 as bit)  
 end as bContratado ,
                         gpd.cNotas,
isnull((SELECT top 1 '  '+ convert(varchar, cds0.dFechaCargaCV, 103)  + ' : '+  co0.cNomContrata + char(13)
			FROM convocatoriadetalle cds0 
			INNER JOIN convocatoria c0 ON  cds0.iCodConvocatoria=c0.iCodConvocatoria 
			inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain 
			inner join contrata co0 on cm0.iCodContrata=co0.iCodContrata    
			WHERE  cds0.dFechaCargaCV<>'1900-01-01' and cds0.iCodCandidatoInforme =ci.icodcandidatoinforme  
			 order by cds0.dFechaCargaCV desc,cds0.iCodConvocatoriaDetalle desc  ),'') as cUltimaEmpresaPostulada, 

						 ( --0
SELECT 
isnull( REPLACE(STUFF(
			(SELECT top 5 '  '+ convert(varchar, cds.dFechaCargaCV, 103)  + ' : '+  co.cNomContrata + char(13)
			FROM convocatoriadetalle cds 
			INNER JOIN convocatoria c ON  cds.iCodConvocatoria=c.iCodConvocatoria 
			inner join convocatoriamain cm on c.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
			inner join contrata co on cm.iCodContrata=co.iCodContrata    
			WHERE  cds.dFechaCargaCV<>'1900-01-01' and cds.iCodCandidatoInforme =ci.icodcandidatoinforme  
			 order by cds.dFechaCargaCV desc,cds.iCodConvocatoriaDetalle desc 
			FOR XML PATH ('')
			),--FIN SELECT
1,2, ''),'&#x0D;', ' **** ') --FIN STUFF
 ,'')--FIN ISNULL
)  as EmpresasPostuladas , 
ci.cComunidad 
,case 
 when ci.bcargabox=1 then 'SI' 
 else  
	case 
	when isnull(cad.iCodCandidatoAdmision,0)>0 then 'SI' 
	else 'NO' 
	end
end as cProcesoOAEL
,case 
 when ci.bcargabox=1 then 'SI' 
 else  
	case 
	when isnull(cad.bDocumentoTramite,0)=1 then 'SI' 
	else 'NO' 
	end
end as cCV,
case 
 when ci.bcargabox=1 then 'SI' 
 else  
	case 
	when isnull(cad.bEvaluacion,0)=1 then 'SI' 
	else 'NO' 
	end
end as cEvaluacionEnvio,
case 
 when ci.bcargabox=1 then 'SI' 
 else  
	case 
	when isnull(cad.bAptitud,0)=1 then 'SI' 
	else 
		case 
		when ci.bEvaluado=1 then 'SI'
		else 'NO' 
		end
	end
end as cEvaluacionResultado,
case 
 when ci.bcargabox=1 then 'SI' 
 else  
	case 
	when isnull(cad.bConsentimiento,0)=1 then 'SI' 
	else 'NO' 
	end
end as cConsentimiento ,
case 
 when ci.bcargabox=1 then 'SI' 
 else  
	case 
	when isnull(cad.bCheckList,0)=1 then 'SI' 
	else 'NO' 
	end
end as cCheckList,
case 
 when ci.bcargabox=1 then 'SI' 
 else  'NO' 
end as cExpediente,
case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then 'NO' 
 else 'SI' 
 end as cFFLLGlobal ,
 isnull(co.cNomContrata,'') as cEmpresaTrabaja ,

   ( --0
SELECT 
isnull( REPLACE(STUFF(
			(SELECT top 5 '  '+ convert(varchar, cc.dFechaContacto, 103)  + ' : '+  ccr.cResumen + char(13)
			FROM CandidatoContacto cc 
			INNER JOIN CandidatoContactoCatalogo ccr ON  cc.iCodCandidatoContactoRespuesta=ccr.iCodCandidatoContactoCatalogo  
			 
			WHERE   cc.iCodCandidatoInforme =ci.icodcandidatoinforme  
			 order by  cc.iCodCandidatoContacto desc 
			FOR XML PATH ('')
			),--FIN SELECT
1,2, ''),'&#x0D;', ' **** ') --FIN STUFF
 ,'')--FIN ISNULL
)  as cLlamadasRealizadas   ,
case 
when ci.dFechaEvaluacionResultado='1900-01-01' then 'SIN EXP.'
when ci.dFechaEvaluacionResultado='0001-01-01' then 'SIN EXP.'
else cast(year(ci.dFechaEvaluacionResultado) as varchar(4)) 
end as cUltimaExp  ,

 isnull((SELECT top 1 isnull(antco.cNomContrata,'') from FuerzaLaboralDetalle fld3 
 inner join FuerzaLaboral fl3 on fld3.iCodFuerzaLaboral=fl3.iCodFuerzaLaboral
 inner join Contrata antco on fl3.iCodContrata=antco.iCodContrata 
  inner join ContratistaContrato  ctro44 on fl3.iCodContratistaContrato=ctro44.iCodContratistaContrato 

  where fld3.iCodCandidatoInforme=fld.iCodCandidatoInforme  
 and fl3.iCodContratistaContrato<>fl.iCodContratistaContrato 
 and fld3.iCodFuerzaLaboralDetalle<fld.iCodFuerzaLaboralDetalle 
  and ctro44.cFase<>'NA'  
 order by fld3.iCodFuerzaLaboralDetalle desc  ),'') as cEmpresaAnterior
FROM      grupoprioritario gp inner join   
dbo.GrupoPrioritarioDetalle AS gpd  on gp.iCodGrupoPrioritario=gpd.iCodGrupoPrioritario
 INNER JOIN        dbo.CandidatoInforme AS ci ON gpd.iCodCandidatoInforme = ci.iCodCandidatoInforme 
 left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.iEstado<>0  and fld.bCesado=0 
  left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
left join contrata co on fl.iCodContrata=co.iCodContrata  
left join CandidatoAdmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and iCodCandidatoAdmisionTipo=1
 
 


GO
/****** Object:  Table [dbo].[TDOcupacion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TDOcupacion](
	[iCodOcupacion] [int] IDENTITY(1,1) NOT NULL,
	[cNomOcupacion] [varchar](150) NULL,
	[cOcupacionAbrev] [varchar](50) NULL,
	[cTipo] [varchar](6) NULL,
	[cCategoriaRCC] [varchar](50) NULL,
	[cOcupacionRCC] [varchar](50) NULL,
	[cEspecialidadRCC] [varchar](50) NULL,
	[iGradoInstruccion] [int] NULL,
	[cGenero] [varchar](50) NULL,
	[cExperiencia] [varchar](50) NULL,
	[cDetalleOcupacion] [varchar](max) NULL,
	[cCompetencia] [varchar](max) NULL,
	[iTiempoExperiencia] [smallint] NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
	[cObsModificacion] [varchar](max) NULL,
 CONSTRAINT [PK_TDOcupacion] PRIMARY KEY CLUSTERED 
(
	[iCodOcupacion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  View [dbo].[v_TDOcupacion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[v_TDOcupacion]
AS
SELECT        iCodOcupacion, cNomOcupacion, cTipo
FROM            dbo.TDOcupacion
--WHERE        (cEspecialidadRCC = 'UPDATE')

GO
/****** Object:  View [dbo].[cap_CapacitacionGruposMatriculados]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[cap_CapacitacionGruposMatriculados]
AS
SELECT        cg.iCodCapacitacionGrupo, cg.iCodCapacitacionProgramaCurso, cg.iNro, co.cNomCorto, cg.dFechaIni, cg.dFechaFin, cg.cLugar, cg.cHorario, cg.iTope, COUNT(cm.iCodCapacitacionGrupo) AS TotalMatr, 
                         cg.iTope - COUNT(cm.iCodCapacitacionGrupo) AS iRestante
FROM            dbo.CapacitacionGrupo AS cg INNER JOIN
                         dbo.Contrata AS co ON cg.iCodContrataCapacita = co.iCodContrata LEFT OUTER JOIN
                         dbo.CapacitacionMatricula AS cm ON cg.iCodCapacitacionGrupo = cm.iCodCapacitacionGrupo
GROUP BY cg.iCodCapacitacionGrupo, cg.iCodCapacitacionProgramaCurso, cg.iNro, co.cNomCorto, cg.dFechaIni, cg.dFechaFin, cg.cLugar, cg.cHorario, cg.iTope
GO
/****** Object:  View [dbo].[mpg_ConvocatoriasListaDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








CREATE VIEW [dbo].[mpg_ConvocatoriasListaDetalle]
AS
SELECT        co.iCodConvocatoriaMain, co.iCodContrata, 
c.iCodConvocatoria,
case cO.iTipo 
when 1 then 'REGULAR'
WHEN 2 THEN 'EXCEPTUADO'
WHEN 3 THEN 'INTERNO'
WHEN 4 THEN 'REEMPLAZO'
WHEN 5 THEN 'P. PLANTA'
WHEN 6 THEN 'PGI'
WHEN 7 THEN 'STAKEHOLDER'
WHEN 8 THEN 'ATM'
WHEN 9 THEN 'OTROS' 
WHEN 10 THEN 'REGULAR BBDD' 
WHEN 11 THEN 'INDIRECTO' 
WHEN 12 THEN 'EXTERNO' 
ELSE '' END AS cTipo,
 
 ct.cNomContrata, 
 case 
 when co.iCodContrata<>co.iCodSubContrata then  isnull(sct.cNomContrata,'') 
 else '' end 
 as cSubContrata,    
 c.cPerfil, co.dFechaIni, co.dFechaFin, co.dFechaLimite, 
 c.iCantidad, c.iEstado,
 (select count(cd0.iCodCandidatoInforme) from convocatoriadetalle cd0
inner join convocatoria c0 on cd0.iCodConvocatoria=c0.iCodConvocatoria 
where cd0.dFechaCargaCV='1900-01-01' and cd0.bCumplePerfil=1 
 and cd0.iTipoPostulacion in(1,6)  and c0.iCodConvocatoria=c.iCodConvocatoria) 
 as iCantSinEnvio ,co.cRutaLista ,c.bCoberturado as Cob
FROM            dbo.ConvocatoriaMain AS co INNER JOIN
                         dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain INNER JOIN
                         dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata
left join dbo.Contrata sct on sct.iCodContrata=co.iCodSubContrata   







GO
/****** Object:  View [dbo].[m_GrupoPrioritarioDetalleSTKH]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[m_GrupoPrioritarioDetalleSTKH]
AS
SELECT  
 
    gpd.iCodGrupoPrioritarioDetalle, 
gpd.iCodGrupoPrioritario, 
gp.cNombreGrupo ,
ci.iCodCandidatoInforme, 
ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
ci.cCondicion,
case ci.cCondicion 
when 'LOCAL ' then 'SI' 
when 'RESIDENTE ' then 'SI' 
when 'COMUNIDAD ' then 'SI' 
else 'NO' 
end as cEsLocal,
ci.cUbigeo, 
ci.cOcupacion,
case 
 when ci.dFechaEvaluacion='1900-01-01' then '' 
 else convert(varchar, ci.dFechaEvaluacion, 103)  end  as dFechaEvaluacion
,
  case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then cast( 0 as bit) 
 else cast(1 as bit)  
 end as bContratado ,
                         gpd.cNotas,
isnull((SELECT top 1 '  '+ convert(varchar, cds0.dFechaCargaCV, 103)  + ' : '+  co0.cNomContrata + char(13)
			FROM convocatoriadetalle cds0 
			INNER JOIN convocatoria c0 ON  cds0.iCodConvocatoria=c0.iCodConvocatoria 
			inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain 
			inner join contrata co0 on cm0.iCodContrata=co0.iCodContrata    
			WHERE  cds0.dFechaCargaCV<>'1900-01-01' and cds0.iCodCandidatoInforme =ci.icodcandidatoinforme  
			 order by cds0.dFechaCargaCV desc,cds0.iCodConvocatoriaDetalle desc  ),'') as cUltimaEmpresaPostulada, 

						 ( --0
SELECT 
isnull( REPLACE(STUFF(
			(SELECT top 5 '  '+ convert(varchar, cds.dFechaCargaCV, 103)  + ' : '+  co.cNomContrata + char(13)
			FROM convocatoriadetalle cds 
			INNER JOIN convocatoria c ON  cds.iCodConvocatoria=c.iCodConvocatoria 
			inner join convocatoriamain cm on c.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
			inner join contrata co on cm.iCodContrata=co.iCodContrata    
			WHERE  cds.dFechaCargaCV<>'1900-01-01' and cds.iCodCandidatoInforme =ci.icodcandidatoinforme  
			 order by cds.dFechaCargaCV desc,cds.iCodConvocatoriaDetalle desc 
			FOR XML PATH ('')
			),--FIN SELECT
1,2, ''),'&#x0D;', ' **** ') --FIN STUFF
 ,'')--FIN ISNULL
)  as EmpresasPostuladas , 
ci.cComunidad 
,case 
 when ci.bcargabox=1 then 'SI' 
 else  
	case 
	when isnull(cad.iCodCandidatoAdmision,0)>0 then 'SI' 
	else 'NO' 
	end
end as cProcesoOAEL
,case 
 when ci.bcargabox=1 then 'SI' 
 else  
	case 
	when isnull(cad.bDocumentoTramite,0)=1 then 'SI' 
	else 'NO' 
	end
end as cCV,
case 
 when ci.bcargabox=1 then 'SI' 
 else  
	case 
	when isnull(cad.bEvaluacion,0)=1 then 'SI' 
	else 'NO' 
	end
end as cEvaluacionEnvio,
case 
 when ci.bcargabox=1 then 'SI' 
 else  
	case 
	when isnull(cad.bAptitud,0)=1 then 'SI' 
	else 
		case 
		when ci.bEvaluado=1 then 'SI'
		else 'NO' 
		end
	end
end as cEvaluacionResultado,
case 
 when ci.bcargabox=1 then 'SI' 
 else  
	case 
	when isnull(cad.bConsentimiento,0)=1 then 'SI' 
	else 'NO' 
	end
end as cConsentimiento ,
case 
 when ci.bcargabox=1 then 'SI' 
 else  
	case 
	when isnull(cad.bCheckList,0)=1 then 'SI' 
	else 'NO' 
	end
end as cCheckList,
case 
 when ci.bcargabox=1 then 'SI' 
 else  'NO' 
end as cExpediente,
case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then 'NO' 
 else 'SI' 
 end as cFFLLGlobal ,
 isnull(co.cNomContrata,'') as cEmpresaTrabaja ,
 isnull(
 (select top 1  

case 
when aa.bAnulado=1 then '' 
else 
	case 
	when  aa.cProcesoEtapa='R' then '' 
	else convert(varchar,a.dFechaRegistro,103) + ' : ' +   emp.cNomContrata 
	end  
end
 from anexoadmision a 
inner join AnexoAdmisionDetalle aa on a.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join Contrata emp on a.iCodContrata=emp.iCodContrata 
 where aa.iCodCandidatoInforme=ci.iCodCandidatoInforme     
 AND 
  DATEADD(day,30,cast(a.dFechaSolicitud as date))>=gpd.dFechaOperacion   
  order by iCodAnexoAdmisionDetalle desc),'') as cEstadoPGI 
  , isnull(cad.iCodCandidatoAdmision,0)  as iCodCandidatoAdmision,
     ( --0
SELECT 
isnull( REPLACE(STUFF(
			(SELECT top 1 '  '+ convert(varchar, cc.dFechaContacto, 103)  + ' : '+  ccr.cResumen + char(13)
			FROM CandidatoContacto cc 
			INNER JOIN CandidatoContactoCatalogo ccr ON  cc.iCodCandidatoContactoRespuesta=ccr.iCodCandidatoContactoCatalogo  
			 
			WHERE   cc.iCodCandidatoInforme =ci.icodcandidatoinforme  
			 order by  cc.iCodCandidatoContacto desc 
			FOR XML PATH ('')
			),--FIN SELECT
1,2, ''),'&#x0D;', ' **** ') --FIN STUFF
 ,'')--FIN ISNULL
)  as cUltimaLLamada   ,
   ( --0
SELECT 
isnull( REPLACE(STUFF(
			(SELECT top 5 '  '+ convert(varchar, cc.dFechaContacto, 103)  + ' : '+  ccr.cResumen + char(13)
			FROM CandidatoContacto cc 
			INNER JOIN CandidatoContactoCatalogo ccr ON  cc.iCodCandidatoContactoRespuesta=ccr.iCodCandidatoContactoCatalogo  
			 
			WHERE   cc.iCodCandidatoInforme =ci.icodcandidatoinforme  
			 order by  cc.iCodCandidatoContacto desc 
			FOR XML PATH ('')
			),--FIN SELECT
1,2, ''),'&#x0D;', ' **** ') --FIN STUFF
 ,'')--FIN ISNULL
)  as cLlamadasRealizadas   ,
case 
when ci.dFechaEvaluacionResultado='1900-01-01' then 'SIN EXP.'
when ci.dFechaEvaluacionResultado='0001-01-01' then 'SIN EXP.'
else cast(year(ci.dFechaEvaluacionResultado) as varchar(4)) 
end as cUltimaExp  ,
ci.cCorreo,ci.cFono 
FROM      grupoprioritario gp inner join   
dbo.GrupoPrioritarioDetalle AS gpd  on gp.iCodGrupoPrioritario=gpd.iCodGrupoPrioritario
 INNER JOIN        dbo.CandidatoInforme AS ci ON gpd.iCodCandidatoInforme = ci.iCodCandidatoInforme 
 left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.iEstado<>0  and fld.bCesado=0 
  left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
left join contrata co on fl.iCodContrata=co.iCodContrata  
left join CandidatoAdmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and iCodCandidatoAdmisionTipo=1
 
 



GO
/****** Object:  Table [dbo].[TDUbigeo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TDUbigeo](
	[iCodUbigeo] [smallint] IDENTITY(1,1) NOT NULL,
	[cUbigeo] [varchar](8) NULL,
	[cDepartamento] [varchar](20) NULL,
	[cProvincia] [varchar](30) NULL,
	[cDistrito] [varchar](35) NULL,
 CONSTRAINT [PK_Ubigeo] PRIMARY KEY CLUSTERED 
(
	[iCodUbigeo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[m_CandidatoInforme]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








-- AÑADIR DFECHAOPA


/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW [dbo].[m_CandidatoInforme]
AS
SELECT        iCodCandidatoInforme, cDNI, dbo.CandidatoInforme.cUbigeo, 
cApellidos, cNombres, cSexo, cEstCivil, cFono, cCorreo,
 dFechaNac,
 
  isnull(u.cDepartamento,'')  as cLugarNac, cDireccion, cCondicion, cPuestoEspecialidad, 
cOcupacion, cOcupacion2, 
                         cEducaSecundaria, cEducaTecnica, 
						 cEducaSuperior, cExpLaboral, (CASE WHEN cEmprEx1 = '' THEN '' ELSE cEmprEx1 + CHAR(13) + cCargoEx1 + CHAR(13) + CONVERT(varchar, dFechaIniEx1, 101) 
                         + ' - ' + CONVERT(varchar, dFechaFinEx1, 101) END) + CHAR(13) + '********************************************' + CHAR(13) + (CASE WHEN cEmprEx2 = '' THEN '' ELSE cEmprEx2 + CHAR(13) 
                         + cCargoEx2 + CHAR(13) + CONVERT(varchar, dFechaIniEx2, 101) + ' - ' + CONVERT(varchar, dFechaFinEx2, 101) END) AS cExperienciaLaboralTotal, cEmprEx1, cCargoEx1, dFechaIniEx1, dFechaFinEx1, 
                         cEmprEx2,
						  cCargoEx2, dFechaIniEx2, dFechaFinEx2, cComunidad, cMOCMONC, cObservacion, cAptitud, cUbigeoResidencia,   iPAsertividad, iPTrabajoEquipo, 
                         iPComEfectiva, iPAdaptabilidad, iEEstable,
						  iEInestable, iCCompromiso, iSRptoNorma, iSIperC,
						   iSActitud, dFechaEvaluacion,
						    bEvaluado, dFechaVerificativa, bVerificativa, iEstadoVerificativa,
                          dFechaCargaBox, bContratado, bCargaBox, bDNIMoq, bCasadoMoq, bConviveMoq, bHijosMoq, bRucMoq, bEstudioMoq, bTrabajoMoq, dFechaSis, iCodUsuario,iResultadoVerificativa
FROM            dbo.CandidatoInforme

left join TDUbigeo u on dbo.CandidatoInforme.cUbigeo=u.cUbigeo 











GO
/****** Object:  View [dbo].[fl_ReporteResumen]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[fl_ReporteResumen]
AS
SELECT        TOP (100) PERCENT co.cNomContrata, CASE fl.iMes WHEN 1 THEN 'ENERO - ' + CAST(fl.iPeriodo AS varchar(4)) WHEN 2 THEN 'FEBRERO - ' + CAST(fl.iPeriodo AS varchar(4)) 
                         WHEN 3 THEN 'MARZO - ' + CAST(fl.iPeriodo AS varchar(4)) WHEN 4 THEN 'ABRIL - ' + CAST(fl.iPeriodo AS varchar(4)) WHEN 5 THEN 'MAYO - ' + CAST(fl.iPeriodo AS varchar(4)) 
                         WHEN 6 THEN 'JUNIO - ' + CAST(fl.iPeriodo AS varchar(4)) WHEN 7 THEN 'JULIO - ' + CAST(fl.iPeriodo AS varchar(4)) WHEN 8 THEN 'AGOSTO - ' + CAST(fl.iPeriodo AS varchar(4)) 
                         WHEN 9 THEN 'SETIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4)) WHEN 10 THEN 'OCTUBRE - ' + CAST(fl.iPeriodo AS varchar(4)) WHEN 11 THEN 'NOVIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4)) 
                         WHEN 12 THEN 'DICIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4)) ELSE '' END AS cMes, ccto.cNroContrato, ccto.cZona, COUNT(fld.iCodFuerzaLaboralDetalle) AS iCant, fl.iCodEstado, fl.iMes, fl.iPeriodo
FROM            dbo.FuerzaLaboral AS fl LEFT OUTER JOIN
                         dbo.FuerzaLaboralDetalle AS fld ON fl.iCodFuerzaLaboral = fld.iCodFuerzaLaboral INNER JOIN
                         dbo.ContratistaContrato AS ccto ON fl.iCodContratistaContrato = ccto.iCodContratistaContrato INNER JOIN
                         dbo.Contrata AS co ON fl.iCodContrata = co.iCodContrata
GROUP BY fl.iMes, fl.iPeriodo, ccto.cNroContrato, ccto.cZona, fl.iCodEstado, co.cNomContrata
ORDER BY fl.iPeriodo DESC, fl.iMes DESC, ccto.cNroContrato
GO
/****** Object:  View [dbo].[m_CandidatoVerificaDisponibilidad]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[m_CandidatoVerificaDisponibilidad]
AS
SELECT        cd.iCodConvocatoriaDetalle, cd.iCodCandidatoInforme, cd.iCodConvocatoria, 
cd.cEstado,cd.dFechaMintra AS dFechaEnvio, cd.iTipoPostulacion, ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, LEFT(ci.cCondicion, 1) AS cCondicion, ct.cNomContrata, 
                         c.cPerfil,  ci.bDisponible, ci.dFechaDisponible, co.cRutaLista,
						 c.cPerfil as Plaza,ci.cFono as Fono ,
						  case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then '' 
 else 'SI' 
 end as [FFLL],
  CASE cd.iTipoPostulacion 
 --WHEN 1 THEN 'OAEL' 
-- WHEN 2 THEN 'SIST' 
-- WHEN 3 THEN 'EXCE' 
--  WHEN 4 THEN 'PREF.' 
  -- WHEN 5 THEN 'SOLI' 
 --       WHEN 6 THEN 'APP' 
 WHEN 7 THEN 'STKH' 
 else '' 
    END AS Tipo   
FROM            dbo.ConvocatoriaMain AS co INNER JOIN
                         dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain INNER JOIN
                         dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata INNER JOIN
                         dbo.ConvocatoriaDetalle AS cd ON c.iCodConvocatoria = cd.iCodConvocatoria INNER JOIN
                         dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme
 left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado>0 
 WHERE        (cd.cEstado = 'E') 







GO
/****** Object:  Table [dbo].[GrupoPrioritarioDetalleB]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[GrupoPrioritarioDetalleB](
	[iCodGrupoPrioritarioDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodGrupoPrioritario] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[cPrioridad] [char](1) NULL,
	[dFechaOperacion] [date] NULL,
	[dFechaActivacion] [date] NULL,
	[bPostulable] [int] NULL,
	[cPostulableEstado] [varchar](50) NULL,
	[bActivo] [bit] NULL,
	[cEstadoActivo] [varchar](50) NULL,
	[cNotas] [varchar](1500) NULL,
	[cEstado1] [varchar](50) NULL,
	[cEstado2] [varchar](50) NULL,
	[cEstado3] [varchar](50) NULL,
	[cEstado4] [varchar](50) NULL,
	[cEstado5] [varchar](50) NULL,
	[cEstado6] [varchar](50) NULL,
	[cEstado7] [varchar](50) NULL,
	[cEstado8] [varchar](50) NULL,
	[cEstado9] [varchar](50) NULL,
	[cEstado10] [varchar](50) NULL,
	[cEstado11] [varchar](50) NULL,
	[cEstado12] [varchar](50) NULL,
	[dFechaUltimoEstado] [date] NULL,
	[cUltimoEstado] [varchar](50) NULL,
	[iCodContrata] [int] NULL,
	[dFechaNotasEECC] [date] NULL,
	[cUltimaEtapaEECC] [varchar](50) NULL,
	[cNotasEECC] [varchar](1200) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_GestionGrupalDetalleB] PRIMARY KEY CLUSTERED 
(
	[iCodGrupoPrioritarioDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[gp_GrupoPersonas]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


 CREATE VIEW [dbo].[gp_GrupoPersonas] as 
SELECT       gpd.iCodGrupoPrioritarioDetalle, 
gpd.iCodGrupoPrioritario, 
ci.iCodCandidatoInforme, 
ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
case ci.bSustentoCV
when 1 then 
	 case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'RESIDENTE' 
		when 'COMUNIDAD' then 'COMUNIDAD' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end 
else 
	'FORANEO'
end as cCondicion,
case 
when ci.bCargaBox=1 then 
	case ci.cCondicion 
	when 'LOCAL' then 'CON EXPEDIENTE' 
	when 'RESIDENTE' then 'CON EXPEDIENTE' 
	when 'COMUNIDAD' then 'CON EXPEDIENTE' 
	else 
		case 
			when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN'
		else  
			CASE
				when ci.bSustentoCV=1 then 
					case ci.cCondicion 
						when 'LOCAL' then 'LOCAL SIN CV' 
						when 'RESIDENTE' then 'LOCAL SIN CV' 
						when 'COMUNIDAD' then 'LOCAL SIN CV' 
						when 'FORANEO' then 'SIN SUSTENTO DE LOCAL' 
						else 'SIN SUSTENTO DE LOCAL' 
					end
				else 'SIN SUSTENTO DE LOCAL'
			end
		end 
	end
else 
	case 
	when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN'
	else  
		CASE
		when ci.bSustentoCV=1 then 
			case ci.cCondicion 
			when 'LOCAL' then 'LOCAL SIN CV' 
			when 'RESIDENTE' then 'LOCAL SIN CV' 
			when 'COMUNIDAD' then 'LOCAL SIN CV' 
			when 'FORANEO' then 'SIN SUSTENTO DE LOCAL' 
			else 'SIN SUSTENTO DE LOCAL' 
			end
		else 'SIN SUSTENTO DE LOCAL'
		end
	end 
end as cCondicionEstado ,
gpd.cPrioridad,
gpd.dFechaOperacion 


FROM            dbo.GrupoPrioritarioDetalleb AS gpd INNER JOIN
                         dbo.CandidatoInforme AS ci ON gpd.iCodCandidatoInforme = ci.iCodCandidatoInforme
 left join candidatoadmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and icodcandidatoadmisiontipo=1  
 and cad.bImprocedente=0 
  




GO
/****** Object:  View [dbo].[fl_ReporteDetallado]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [dbo].[fl_ReporteDetallado]
AS
SELECT    TOP (100) PERCENT    co.cNomContrata, 
case fl.iMes 
when 1 then 'ENERO - ' + cast(fl.iPeriodo as varchar(4)) 
when 2 then 'FEBRERO - '  + cast(fl.iPeriodo as varchar(4)) 
when 3 then 'MARZO - '  + cast(fl.iPeriodo as varchar(4)) 
when 4 then 'ABRIL - '  + cast(fl.iPeriodo as varchar(4)) 
when 5 then 'MAYO - '  + cast(fl.iPeriodo as varchar(4)) 
when 6 then 'JUNIO - '  + cast(fl.iPeriodo as varchar(4)) 
when 7 then 'JULIO - '  + cast(fl.iPeriodo as varchar(4)) 
when 8 then 'AGOSTO - '  + cast(fl.iPeriodo as varchar(4)) 
when 9 then 'SETIEMBRE - '  + cast(fl.iPeriodo as varchar(4)) 
when 10 then 'OCTUBRE - '  + cast(fl.iPeriodo as varchar(4)) 
when 11 then 'NOVIEMBRE - '  + cast(fl.iPeriodo as varchar(4)) 
when 12 then 'DICIEMBRE - '  + cast(fl.iPeriodo as varchar(4)) 
else '' 
end as cMes,
ccto.cNroContrato,
ccto.cZona,
fl.iMes,fl.iPeriodo,
fld.cMOCMONC,
case 
when ci.bSustentoCV=1 then 
case
	when ci.cCondicion='LOCAL' then 'LOCAL' 
	when ci.cCondicion='RESIDENTE' then 'LOCAL' 
	when ci.cCondicion='COMUNIDAD' then 'LOCAL' 
	else 'FORANEO' end
else 'FORANEO' end as cCondicion,
ci.cSexo,
ci.cUbigeo,
fld.dFechaIni,
fld.dFechaCese,
fld.bCesado,
ccto.cGrupoContrato,
ccto.cFase,
ci.bSustentoCV 
FROM  FuerzaLaboral AS fl 
LEFT JOIN FuerzaLaboralDetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral 
left join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme 
INNER JOIN ContratistaContrato AS ccto ON fl.iCodContratistaContrato = ccto.iCodContratistaContrato
  INNER JOIN contrata co on fl.iCodcontrata=co.icodcontrata 
  where fld.bcesado=0 
   order by fl.iPeriodo desc, fl.iMes desc,ccto.cNroContrato 
 


GO
/****** Object:  View [dbo].[m_CandidatoInformeDashboard]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [dbo].[m_CandidatoInformeDashboard]
AS
SELECT        cDNI, cSexo, cCondicion, cComunidad,
 cMOCMONC, cAptitud, bContratado,
 case bContratado 
 when 1 then 'SI' 
 when 0 then 'NO' end as cFuerzaLaboral
 , bCip, cEmpresaTrabaja
FROM            dbo.CandidatoInforme
WHERE        (bEvaluado = 1) AND (cCondicion <> 'FORANEO')


GO
/****** Object:  View [dbo].[mpg_ConvocatoriasListaDetalleFullTV]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[mpg_ConvocatoriasListaDetalleFullTV]
AS
SELECT        co.iCodConvocatoriaMain, co.iCodContrata, c.iCodConvocatoria, ct.cNomContrata, co.cSubContrata, c.cPerfil,c.cDesPerfil, co.dFechaIni, co.dFechaFin, co.dFechaLimite, c.iCantidad, c.iEstado
FROM            dbo.ConvocatoriaMain AS co INNER JOIN
                         dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain INNER JOIN
                         dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata
WHERE co.iTipo=1  


GO
/****** Object:  View [dbo].[m_Rpt_ConvocatoriasVigentes]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[m_Rpt_ConvocatoriasVigentes]
AS
SELECT        co.iCodConvocatoriaMain, co.iCodContrata, ct.cNomContrata, co.cSubContrata, c.cPerfil, c.iCantidad, c.cMOCMONC, CASE co.iTipo WHEN 1 THEN 'REGULAR' WHEN 3 THEN 'ADICIONAL' END AS cTipoConvocatoria
FROM            dbo.ConvocatoriaMain AS co INNER JOIN
                         dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain INNER JOIN
                         dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata
WHERE        (co.dFechaFin >= GETDATE()) AND (co.iTipo IN (1, 3))
GO
/****** Object:  Table [dbo].[CapacitacionPrograma]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionPrograma](
	[iCodCapacitacionPrograma] [int] IDENTITY(1,1) NOT NULL,
	[iPeriodo] [smallint] NULL,
	[cBeneficiario] [varchar](50) NULL,
	[cNombrePrograma] [varchar](50) NULL,
	[cGestorPrograma] [varchar](2) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CapacitacionPrograma] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionPrograma] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[m_DashboardCapacitacionMatriculaListadoGestion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [dbo].[m_DashboardCapacitacionMatriculaListadoGestion]
AS
SELECT        dbo.CapacitacionPrograma.cNombrePrograma, 
			  dbo.CapacitacionCursoModulo.cNomCursoModulo, 
			  dbo.CapacitacionCurso.cNombreCurso, 
              cmat.cTipoAlumno, 
			  dbo.CandidatoInforme.cDNI, 
			  dbo.CandidatoInforme.cApellidos + ' ' + dbo.CandidatoInforme.cNombres AS cNomCompleto, 
			  dbo.CandidatoInforme.cCondicion, dbo.CandidatoInforme.cUbigeo, dbo.CandidatoInforme.cUbigeoResidencia,
			  --case when cLugarNac = 'MOQUEGUA' then cComunidad 
			  --else case cUbigeo 
			  case when dbo.CandidatoInforme.cCondicion = 'COMUNIDAD' then 'COMUNIDAD' 
			  else case dbo.CandidatoInforme.cUbigeo
			  when 170101 then 'MARISCAL NIETO'
			  when 170102 then 'MARISCAL NIETO'
			  when 170103 then 'MARISCAL NIETO'
			  when 170104 then 'MARISCAL NIETO'
			  when 170105 then 'MARISCAL NIETO'
			  when 170106 then 'MARISCAL NIETO'
			  when 170201 then 'GENERAL SANCHEZ CERRO'
			  when 170202 then 'GENERAL SANCHEZ CERRO'
			  when 170203 then 'GENERAL SANCHEZ CERRO'
			  when 170204 then 'GENERAL SANCHEZ CERRO'
			  when 170205 then 'GENERAL SANCHEZ CERRO'
			  when 170206 then 'GENERAL SANCHEZ CERRO'
			  when 170207 then 'GENERAL SANCHEZ CERRO'
			  when 170208 then 'GENERAL SANCHEZ CERRO'
			  when 170209 then 'GENERAL SANCHEZ CERRO'
			  when 170210 then 'GENERAL SANCHEZ CERRO'
			  when 170211 then 'GENERAL SANCHEZ CERRO'
			  when 170301 then 'ILO'
			  when 170302 then 'ILO'
			  when 170303 then 'ILO'
			  ELSE case cUbigeoResidencia 
			  when 170101 then 'MARISCAL NIETO'
			  when 170102 then 'MARISCAL NIETO'
			  when 170103 then 'MARISCAL NIETO'
			  when 170104 then 'MARISCAL NIETO'
			  when 170105 then 'MARISCAL NIETO'
			  when 170106 then 'MARISCAL NIETO'
			  when 170201 then 'GENERAL SANCHEZ CERRO'
			  when 170202 then 'GENERAL SANCHEZ CERRO'
			  when 170203 then 'GENERAL SANCHEZ CERRO'
			  when 170204 then 'GENERAL SANCHEZ CERRO'
			  when 170205 then 'GENERAL SANCHEZ CERRO'
			  when 170206 then 'GENERAL SANCHEZ CERRO'
			  when 170207 then 'GENERAL SANCHEZ CERRO'
			  when 170208 then 'GENERAL SANCHEZ CERRO'
			  when 170209 then 'GENERAL SANCHEZ CERRO'
			  when 170210 then 'GENERAL SANCHEZ CERRO'
			  when 170211 then 'GENERAL SANCHEZ CERRO'
			  when 170301 then 'ILO'
			  when 170302 then 'ILO'
			  when 170303 then 'ILO'
			  else 'FORANEO' end end end AS Provincia,

              dbo.CandidatoInforme.cComunidad, 
			  dbo.CandidatoInforme.cSexo, 
			  CASE WHEN bContratado = '1' THEN 'SI PERTENECE A FFLL' ELSE 'NO PERTENECE A FFLL' END AS FFLL, dbo.CandidatoInforme.cEmpresaTrabaja, 
              cmat.iEstadoProcesoResultado, 
              CASE cmat.iEstadoProcesoResultado 
			  WHEN 0 THEN 'NO APLICA' 
			  WHEN 1 THEN 'SIN RESULTADO' 
			  WHEN 2 THEN 'EGRESADO' 
			  WHEN 3 THEN 'APROBADO' 
			  WHEN 4 THEN 'DESAPROBADO'
			  ELSE 'NO APLICA' END AS cEstadoProcesoResultado,
              CASE WHEN cmat.dFechaEntregaCertificado = '1900-01-01' THEN '' ELSE CONVERT(varchar, cmat.dFechaEntregaCertificado, 103) END AS dFechaEntregaCertificado

FROM            dbo.CapacitacionCurso INNER JOIN
                dbo.CapacitacionProgramaCurso AS cpc ON dbo.CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
                dbo.CapacitacionPrograma ON cpc.iCodCapacitacionPrograma = dbo.CapacitacionPrograma.iCodCapacitacionPrograma INNER JOIN
                dbo.CapacitacionMatricula AS cmat ON cpc.iCodCapacitacionProgramaCurso = cmat.iCodCapacitacionProgramaCurso INNER JOIN
                dbo.CandidatoInforme ON cmat.iCodCandidatoInforme = dbo.CandidatoInforme.iCodCandidatoInforme INNER JOIN
                dbo.CapacitacionCursoModulo ON dbo.CapacitacionCurso.iCodCapacitacionCursoModulo = dbo.CapacitacionCursoModulo.iCodCapacitacionCursoModulo


GO
/****** Object:  View [dbo].[m_ConvocatoriaDetalleRptaContrata]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [dbo].[m_ConvocatoriaDetalleRptaContrata]
AS
SELECT        cd.iCodConvocatoriaDetalle, 
cd.iCodConvocatoria, 
cm.iCodContrata, cd.cEstado, 
cd.iTipoPostulacion, 

LEFT(ci.cCondicion, 1) AS cCondicion, ci.cDNI, 
ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
c.cPerfil,
 ci.bEvaluado, 
 CASE WHEN ci.iEstadoVerificativa = 3 THEN CAST(1 AS bit) 
 ELSE CAST(0 AS bit) END AS bVerificativa, 
  cd.bCumplePerfil, 
 CASE WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS BIT) 
 ELSE CAST(1 AS BIT) END AS bCVCargado, ci.bContratado, 
 CASE WHEN cd.dFechaContactoContrata1 = '1900-01-01' THEN CAST(0 AS BIT) 
 ELSE CAST(1 AS BIT) END AS bRptaContrata, 
 cd.dFechaContactoContrata1, 
 cd.cRptaContrata, cd.cObs, 
 cd.iCodCandidatoInforme, ci.bVerificativa AS bRiesgo
FROM            dbo.ConvocatoriaDetalle AS cd INNER JOIN
 dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme LEFT OUTER JOIN
 dbo.Convocatoria AS c ON cd.iCodConvocatoria = c.iCodConvocatoria LEFT OUTER JOIN
 dbo.ConvocatoriaMain AS cm ON c.iCodConvocatoriaMain = cm.iCodConvocatoriaMain


GO
/****** Object:  Table [dbo].[CandidatoInformeAdd]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoInformeAdd](
	[iCodCandidatoInforme] [int] NOT NULL,
	[iCodCliente] [int] NULL,
	[bCumplePerfilCliente] [bit] NULL,
	[cOcupacionGrupo] [varchar](50) NULL,
	[cGradoInstruccion] [varchar](50) NULL,
	[dFechaConsultaMTC] [date] NULL,
	[dFechaVigenciaBrevete] [date] NULL,
	[iFaltaGrave] [tinyint] NULL,
	[iFaltaMuyGrave] [tinyint] NULL,
	[iPuntos] [tinyint] NULL,
	[cHorarioDisponible] [varchar](50) NULL,
	[bAnulado] [bit] NULL,
	[dFechaAnulado] [datetime] NULL,
	[bObservado] [bit] NULL,
	[cObsSistema] [varchar](350) NULL,
	[dFechaConsultaDisponible] [date] NULL,
	[iCodOcupacion] [int] NULL,
	[iTiempoExperiencia] [smallint] NULL,
	[iUltimaExperiencia] [smallint] NULL,
	[cRubroExperiencia] [varchar](50) NULL,
	[cSectorExperiencia] [varchar](20) NULL,
	[iCodOcupacion2] [int] NULL,
	[iTiempoExperiencia2] [smallint] NULL,
	[iUltimaExperiencia2] [smallint] NULL,
	[cRubroExperiencia2] [varchar](50) NULL,
	[cSectorExperiencia2] [varchar](20) NULL,
	[bConsentimiento] [bit] NULL,
	[cGUIDConsentimiento] [varchar](250) NULL,
	[dFechaConsentimiento] [datetime] NULL,
	[cIPConsentimiento] [varchar](50) NULL,
	[cHostConsentimiento] [varchar](200) NULL,
	[cGUIDAptitudLaboral] [varchar](250) NULL,
	[iCodUsuarioAptitudLaboral] [int] NULL,
	[cUsuarioAptitudLaboral] [varchar](50) NULL,
	[dFechaProcesoAptitudLaboral] [datetime] NULL,
	[bAptitudLaboralPorRevisar] [bit] NULL,
	[bAptitudLaboralProcede] [bit] NULL,
	[cAptitudLaboralEstado] [varchar](5) NULL,
	[bBlue] [bit] NULL,
	[cBlueObs] [varchar](50) NULL,
	[dFechaIniBlue] [date] NULL,
	[dFechaFinBlue] [date] NULL,
	[cGrupoBlue] [varchar](50) NULL,
	[iCodUsuarioTestPsicoValida] [int] NULL,
	[cUsuarioTestPsicoValida] [varchar](50) NULL,
	[dFechaTestPsicoValida] [datetime] NULL,
	[dFechaTestPsico] [datetime] NULL,
	[cGUIDTestPsico] [varchar](50) NULL,
	[cAptitudTestPsico] [varchar](50) NULL,
	[iArbolSiGusta] [tinyint] NULL,
	[iArbolSiDibuja] [tinyint] NULL,
	[iArbolNoGusta] [tinyint] NULL,
	[iArbolNoDibujar] [tinyint] NULL,
	[iCodEvaluatest] [int] NULL,
	[bEvaluacionEnviada] [bit] NULL,
	[dFechaEnvioEvaluacion] [datetime] NULL,
	[iCodEvaluacionDiscPatron] [int] NULL,
	[iCodEvaluacionDiscPatronResultado] [int] NULL,
	[dFechaEvaluacionDisc] [datetime] NULL,
	[cTipoEvaluacionPsico] [char](1) NULL,
	[bRetcc] [bit] NULL,
	[cEmpresaTrabaja] [varchar](50) NULL,
	[cEmpresaTrabajaSector] [varchar](50) NULL,
	[cDiscapacidad] [varchar](50) NULL,
	[nExpectativaSalarial] [decimal](8, 2) NULL,
	[cTallaCamisa] [varchar](5) NULL,
	[cTallaPantalon] [varchar](5) NULL,
	[cTallaZapato] [varchar](5) NULL,
	[bStakeholder] [bit] NULL,
	[cStakeholderOrigen] [varchar](50) NULL,
	[cStakeholderGrupoInfluencia] [varchar](50) NULL,
	[cStakeholderPrioridad] [varchar](50) NULL,
	[cStakeholderVinculo] [varchar](25) NULL,
	[cStakeholderDNIFamiliar] [varchar](15) NULL,
	[cStakeholderDatosFamiliar] [varchar](150) NULL,
	[cPresentacionPerfil] [varchar](max) NULL,
	[iCodEvaluacionArbolCombinacion] [int] NULL,
	[bConsentimientoCapacita] [bit] NULL,
	[cGUIDConsentimientoCapacita] [varchar](250) NULL,
	[dFechaConsentimientoCapacita] [datetime] NULL,
	[cIPConsentimientoCapacita] [varchar](50) NULL,
	[cHostConsentimientoCapacita] [varchar](200) NULL,
	[dFechaInicioObservado] [date] NULL,
	[dFechaFinObservado] [date] NULL,
	[iCodUsuarioObserva] [int] NULL,
 CONSTRAINT [PK_CandidatoInformeAdd] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoInforme] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  View [dbo].[m_CandidatoInformeAptitud]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




 CREATE view [dbo].[m_CandidatoInformeAptitud] as 
SELECT    ci.iCodCandidatoInforme,
 case 
 when ci.bCargaBox=1 then 'ACTUALIZACION' 
 else 'REGISTRO NUEVO'  
 end as cTipoProcesoAptitud ,
  ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,
  case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'RESIDENTE' 
		when 'COMUNIDAD' then 'COMUNIDAD' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end 
  as cCondicion ,

 CASE WHEN 
 ci.cOcupacion IS NULL THEN '' 
 ELSE ci.cOcupacion + 
 case 
 when ci.cOcupacion2 IS null then '' 
 when ci.cOcupacion2='' then '' 
 else ' - ' + ci.cOcupacion2 end 
 END AS cOcupacion, 
 ci.bEvaluado,
  ISNULL(cid.bAptitudLaboralPorRevisar,0) as bAptitudLaboralPorRevisar ,
  case   ISNULL(cid.bAptitudLaboralPorRevisar,0) 
  when 0 then cast(0 as bit) 
  else cast(1 as bit) end as bAptitudLaboralProcesada,
 ISNULL(cid.bAptitudLaboralProcede,0)  as bAptitudLaboralProcede  ,
 ci.cAptitud,
 ci.dFechaEvaluacion   
FROM         dbo.CandidatoInforme ci   
left join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme 
left join CandidatoAdmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  
where cCondicion in('LOCAL','RESIDENTE','COMUNIDAD') 
  /*
cAptitudLaboralEstado
NA = No Aplica
PR = Por Revisar
R = Revisado */
  
GO
/****** Object:  View [dbo].[Rpt_FeedBack2020]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE VIEW [dbo].[Rpt_FeedBack2020]
AS

SELECT  ltrim(rtrim(co.cNomContrata)) as cNomContrata, 
  cm.cNroConvocatoria,
convert(varchar(15), cm.dFechaIni, 6) + ' al '+convert(varchar(15), cm.dFechaFin, 6) as cFechaConvocatoria,
cm.dFechaIni, 
cm.dFechaFin ,
 cv.cPerfil, 
 cv.cMOCMONC, 
cm.dFechaLimite as dFechaMaxima,
 CASE cd.iTipoPostulacion 
 WHEN 1 THEN 'GRTPE' 
 WHEN 2 THEN 'SISTEMA' 
 WHEN 3 THEN '---' 
  WHEN 4 THEN 'PREFERENCIAL' 
   WHEN 5 THEN 'SOLICITADO' 
    WHEN 6 THEN 'VIRTUAL APP' END AS cTipoPostulacion,  
 cd.dFechaCargaCV,
 case 
 when cd.dFechaContactoContrata1='1900-01-01' then '' 
 else convert(varchar, cd.dFechaContactoContrata1, 103)  end  as dFechaRespuesta,
      --isnull(cd.cRptaContrata,'') as cRptaContrata
	   case cd.cRptaContrata  when '' then 'CV SIN REVISAR' 
		else  isnull(cd.cRptaContrata,'') end as cRtaContrata,
(select count(cd0.iCodCandidatoInforme) from convocatoriadetalle cd0
inner join convocatoria c0 on cd0.iCodConvocatoria=c0.iCodConvocatoria 
inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain  
where cd0.dFechaCargaCV<>'1900-01-01' and cm0.iCodConvocatoriaMain=cm.iCodConvocatoriaMain) as iCantEnviada,
  (select  count(cd1.iCodConvocatoriaDetalle) 
   from convocatoriadetalle cd1
inner join convocatoria c1 on cd1.iCodConvocatoria=c1.iCodConvocatoria 
inner join convocatoriamain cm1 on c1.iCodConvocatoriaMain=cm1.iCodConvocatoriaMain  
where cd1.dFechaContactoContrata1='1900-01-01' and cd1.dFechaCargaCV<>'1900-01-01' 
 and cm1.iCodConvocatoriaMain=cm.iCodConvocatoriaMain) as iRespuestaNO , 
(select count(cd2.iCodConvocatoriaDetalle) 
   from convocatoriadetalle cd2
inner join convocatoria c2 on cd2.iCodConvocatoria=c2.iCodConvocatoria 
inner join convocatoriamain cm2 on c2.iCodConvocatoriaMain=cm2.iCodConvocatoriaMain  
where cd2.dFechaContactoContrata1<>'1900-01-01' and  cm2.iCodConvocatoriaMain=cm.iCodConvocatoriaMain) as iRespuestaSI 

	   
FROM dbo.ConvocatoriaDetalle AS cd left JOIN
 dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme  
 left JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria left JOIN
 ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain  left join
 Contrata AS co ON cm.iCodContrata = co.iCodContrata  
  where year(cm.dFechaini)=2021 and cd.dFechaCargaCV<>'1900-01-01' 
 



GO
/****** Object:  View [dbo].[fl_EvolucionFuerzaLaboralComunidad]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view [dbo].[fl_EvolucionFuerzaLaboralComunidad]
as
select ct.cRuc AS [RUC],ct.cNomContrata AS [CONTRATA],
case cc.cFase 
	when 'CO' then 'CONSTRUCCION' 
	when 'OP' then 'OPERACION' 		
	else 'NA' 
end as 'FASE',
cast(fl.iPeriodo as varchar(10)) as [PERIODO],
case fl.iMes
	when 1 then 'Enero'
	when 2 then 'Febrero'
	when 3 then 'Marzo'
	when 4 then 'Abril'
	when 5 then 'Mayo'
	when 6 then 'Junio'
	when 7 then 'Julio'
	when 8 then 'Agosto'
	when 9 then 'Setiembre'
	when 10 then 'Octubre'
	when 11 then 'Noviembre'
	when 12 then 'Diciembre'
end as 'MES',
fl.dFechaSis AS [FECHA_SISTEMA],
 case ci.bSustentoCV
when 1 then
	 case when  ci.cCondicion = 'COMUNIDAD' then  'CONSTANCIA DE COMUNIDAD'  
	else 
		case  ci.cUbigeo  
		WHEN '170102' THEN 'NACIDOS EN EL AID' --'CARUMAS [DISTRITO]'
		WHEN '170103' THEN 'NACIDOS EN EL AID' --'CUCHUMBAYA [DISTRITO]' 
		WHEN '170104' THEN 'NACIDOS EN EL AID' --'SANCRISTOBAL [DISTRITO]' 
		WHEN '170105' THEN 'NACIDOS EN EL AID' --'TORATA [DISTRITO]'
		else '' end
	end 		
else ''  end  as [TIPOAID],
case ci.bSustentoCV
when 1 then
	 case when  ci.cCondicion = 'COMUNIDAD' then  ci.cComunidad 
	else 
		case  ci.cUbigeo 
		WHEN '170102' THEN 'CARUMAS [DISTRITO]'
		WHEN '170103' THEN 'CUCHUMBAYA [DISTRITO]' 
		WHEN '170104' THEN 'SANCRISTOBAL [DISTRITO]' 
		WHEN '170105' THEN 'TORATA [DISTRITO]'
		else '' end
	end 		
else ''  end  as [COMUNIDAD],
case ci.bSustentoCV
when 1 then
	 case when  ci.cCondicion = 'COMUNIDAD' then  ci.cComunidad 
	else 
		case  ci.cUbigeo 
		WHEN '170102' THEN 'CARUMAS [DISTRITO]'
		WHEN '170103' THEN 'CUCHUMBAYA [DISTRITO]' 
		WHEN '170104' THEN 'SANCRISTOBAL [DISTRITO]' 
		WHEN '170105' THEN 'TORATA [DISTRITO]'
		else '' end
	end 		
else ''  end  as [DISTRITO],
case ci.bSustentoCV
when 1 then
	case  
	when ci.cCondicion='LOCAL' or ci.cCondicion='RESIDENTE' or ci.cCondicion='COMUNIDAD' THEN
		CASE 
		WHEN ci.cCondicion='COMUNIDAD' THEN 'MARISCAL NIETO' 
		WHEN ci.cUbigeoResidencia like '1701%' THEN 'MARISCAL NIETO' 
		WHEN ci.cUbigeoResidencia like '1702%' THEN 'GRAL. SANCHEZ CERRO' 
		WHEN ci.cUbigeoResidencia like '1703%' THEN 'ILO' 
		WHEN ci.cUbigeo like '1701%' THEN 'MARISCAL NIETO' 
		WHEN ci.cubigeo like '1702%' THEN 'GRAL. SANCHEZ CERRO' 
		WHEN ci.cubigeo like '1703%' THEN 'ILO' 	
		ELSE 'MARISCAL NIETO'
		END
	ELSE 'OTRAS PROVINCIAS' END
else 'OTRAS PROVINCIAS' end as [PROVINCIA],
case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	
end as 'CONDICION',
fd.cMOCMONC AS [MANO_OBRA],ci.cDNI AS [DNI],concat(ci.cApellidos,', ',ci.cNombres) AS [NOMBRE],
case ci.cSexo 
		when 'M' then 'MASCULINO' 
		when 'F' then 'FEMENINO'
end as 'GENERO',
ci.bComunidadPadron AS [PADRON],
case ci.bComunidadConstancia 
		when 0 then 'NO' 
		when 1 then 'SI'
end AS [CONSTANCIA]
from FuerzaLaboral as fl
inner join FuerzaLaboralDetalle as fd on fd.iCodFuerzaLaboral = fl.iCodFuerzaLaboral
inner join CandidatoInforme as ci on ci.iCodCandidatoInforme = fd.iCodCandidatoInforme
inner join Contrata as ct on ct.iCodContrata = fl.iCodContrata
inner join ContratistaContrato as cc on cc.iCodContratistaContrato = fl.iCodContratistaContrato
--where fl.iPeriodo=2021 and fl.iMes=2 and fd.bCesado=0
--where (ci.cCondicion in ('COMUNIDAD') and ci.bSustentoCV=1) or SUBSTRING(ci.cUbigeo,1,2) ='17'
where ci.bsustentocv=1 and ( ci.ccondicion='COMUNIDAD' or  ci.cubigeo in('170102','170103','170104','170105'))
GO
/****** Object:  View [dbo].[c_CapacitadosOAEL]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [dbo].[c_CapacitadosOAEL]
AS
SELECT        cDNI, cApellidos + ' ' + cNombres AS cNomCompleto, cUbigeo, cUbigeoResidencia, cSexo, cMOCMONC, cOcupacion, cCondicion, 
                         CASE WHEN ci.bRucMoq = 1 THEN 'RUC' WHEN ci.bTrabajoMoq = 1 THEN 'TR' WHEN ci.bEstudioMoq = 1 THEN 'ES' WHEN ci.bConviveMoq = 1 THEN 'CONV' WHEN ci.bCasadoMoq = 1 THEN 'MA' WHEN ci.bHijosMoq = 1 THEN
                          'HI' WHEN ci.bDNIMoq = 1 THEN 'RE' WHEN ci.cCondicion = 'LOCAL' THEN 'DNI' WHEN ci.cCondicion = 'COMUNIDAD' THEN 'CO' WHEN ci.cCondicion = 'FORANEO' THEN 'DNI' ELSE '' END AS cDocSustento, 
 CASE ci.iCodPersonaEvalua 
 WHEN 11 THEN 'ACCESITARIO' 
 WHEN 12 THEN 'RENUNCIA' 
 WHEN 21 THEN 'POR INICIAR' 
 WHEN 22 THEN 'EN CURSO' 
 WHEN 23 THEN 'ABANDONO' 
 WHEN 24 THEN 'FINALIZADO' ELSE '' END AS
 cEstadoCapacitacion, 
 CASE WHEN ci.bContratado = 1 THEN 'SI' ELSE 'NO' END AS [Fuerza Laboral],
 case 
 when LEN(cEmpresaTrabaja)>0 then cEmpresaTrabaja 
 else 'NINGUNO' end 
  AS [Empresa Contratante], 
 
 CASE WHEN bCargaBox = 0 THEN 'NO' ELSE 'SI' END AS CV, 
                         CASE WHEN ci.bEvaluado = 1 THEN 'SI' ELSE 'NO' END AS Evaluado
FROM            dbo.CandidatoInforme AS ci
WHERE        (cCapacitacion = 'CM1')



GO
/****** Object:  View [dbo].[v_tempo2021]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE view [dbo].[v_tempo2021] as 
SELECT    cd.iCodConvocatoriaDetalle, cd.iCodConvocatoria, 
cm.iCodContrata,
case cm.iTipo 
when 1 then 'REGULAR'
WHEN 2 THEN 'EXCEPTUADO'
WHEN 3 THEN 'ADICIONAL'
WHEN 4 THEN 'DISPENSADO'
WHEN 5 THEN 'P. PLANTA'
WHEN 6 THEN 'PGI'
WHEN 9 THEN 'OTROS' 
ELSE '' END AS cTipo,
cm.cNroConvocatoria,
ltrim(rtrim(co.cNomContrata)) as cNomContrata, 
cm.dFechaIni, cm.dFechaFin 
 ,cv.iCantidad,
 cv.cPerfil, 
 CASE cd.iTipoPostulacion 
 WHEN 1 THEN 'OAEL' 
 WHEN 2 THEN 'SISTEMA' 
 WHEN 3 THEN 'EXCEPTUADO' 
  WHEN 4 THEN 'PREFERENCIAL' 
   WHEN 5 THEN 'SOLICITADO' 
        WHEN 6 THEN 'VIRTUAL APP' 
 WHEN 7 THEN 'STAKEHOLDER' 
    END AS cTipoPostulacion,  
	cd.cEstado,
   ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
 ci.cFono,
 isnull(tu.cDepartamento,'---') as cRegionNac,
isnull(tur.cDepartamento,'---') as cRegionDom,
case 
when ci.bRucMoq=1 then 'RUC'
 when ci.bTrabajoMoq=1 then 'TR' 
 when ci.bEstudioMoq=1 then 'ES'
 when ci.bConviveMoq=1 then 'CONV' 
when ci.bCasadoMoq=1 then 'MA'
 when ci.bHijosMoq=1 then 'HI' 
 when ci.bDNIMoq=1 then 'RE' 
 when ci.cCondicion='LOCAL' then 'DNI'    
  when ci.cCondicion='COMUNIDAD' then 'CO'    
 when ci.cCondicion='FORANEO' then 'DNI' else '' end 
 as cDocSustento  ,
 case 
 when cd.bCumplePerfil=1 then 'SI' 
 else 'NO' 
 end as CumplePerfil, 
 case 
 when cd.dFechaCargaCV<>'1900-01-01' then 'SI' 
 else 'NO' 
 end as CVCargado, 
 cd.dFechaCargaCV,
 case 
 when cd.dFechaContactoContrata1='1900-01-01' then '' 
 else convert(varchar, cd.dFechaContactoContrata1, 103)  end  as dFechaRespuesta,
 case 
 when  cd.dFechaCargaCV<>'1900-01-01' then 
	 case 
	 when isnull(cd.cRptaContrata,'')='' then
		 case 
		 when dateadd(day,15,cast(cm.dFechaFin as date))>cast(getdate() as date) then 'EN EVALUACIÓN DE LA EECC' 
		 else 'SIN RESPUESTA'
		 END
	else
		cd.cRptaContrata 
	end 
else 'NO CARGADO'
end as cRptaContrata,
case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then 'NO' 
 else 'SI' 
 end as cFFLLGlobal , 
case isnull(fld.iCodFuerzaLaboralDetalle,0) 
 when 0 then ''
 else cont.cNomContrata 
end as cEmpresaTrabaja  ,
case isnull(fld.iCodFuerzaLaboralDetalle,0) 
 when 0 then ''
 else 
	case 
	when cont.iCodContrata=cm.iCodContrata then   'SI'
	else 'NO' 
	end  
end as cMismaEmpresa
,
 isnull(
 (select top 1 
case 
when aa.bAnulado=1 then '' 
else 
	case 
	when  aa.cProcesoEtapa='R' then '' 
	else 'PGI' 
	end  
end
 from anexoadmision a 
inner join AnexoAdmisionDetalle aa on a.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join Contrata emp on a.iCodContrata=emp.iCodContrata 
 where aa.iCodCandidatoInforme=ci.iCodCandidatoInforme  and a.iCodContrata=cm.iCodContrata  
  and cast(a.dFechaAprobacion as date)>=cm.dFechaIni
  order by iCodAnexoAdmisionDetalle desc),'') as cEstadoPGI 

FROM dbo.ConvocatoriaDetalle AS cd left JOIN
 dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme 
  left join TDubigeo as tu on ci.cUbigeo=tu.cUbigeo 
 LEFt JOIN TDubigeo as tur ON ci.cUbigeoResidencia=tur.cUbigeo   
 left JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria 
 left JOIN  ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
 left join  Contrata AS co ON cm.iCodContrata = co.iCodContrata  
 left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 
 left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
left join contrata cont on fl.iCodContrata=cont.iCodContrata 
-- left join anexoadmisiondetalle aad on ci.iCodCandidatoInforme=aad.iCodCandidatoInforme and aad.bAnulado=0  
--- left join anexoadmision aa on aad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
--left join contrata conta on aa.iCodContrata=conta.iCodContrata and  cm.iCodContrata=aa.iCodContrata
 where     ci.ccomunidad in('TUMILACA','POCATA','COSCORE','TALA','CCTPCT') and ci.bSustentoCV=1  
--order by cd.icodconvocatoriadetalle desc,cm.cNroConvocatoria, cNomContrata,cSubContrata,dfechafin,cPerfil  
 


GO
/****** Object:  View [dbo].[c_CapacitadosPostulaciones]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[c_CapacitadosPostulaciones]
AS
SELECT        ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, ci.cCondicion, 
                         CASE ci.iCodPersonaEvalua WHEN 11 THEN 'ACCESITARIO' WHEN 12 THEN 'RENUNCIA' WHEN 21 THEN 'POR INICIAR' WHEN 22 THEN 'EN CURSO' WHEN 23 THEN 'ABANDONO' WHEN 24 THEN 'FINALIZADO' ELSE '' END AS
                          cEstadoCapacitacion, 
                         CASE cd.iTipoPostulacion WHEN 1 THEN 'GRTPE' WHEN 2 THEN 'SISTEMA' WHEN 3 THEN '---' WHEN 4 THEN 'PREFERENCIAL' WHEN 5 THEN 'SOLICITADO' ELSE 'SIN POSTULACION' END AS cTipoPostulacion, 
                         LTRIM(RTRIM(ISNULL(co.cNomContrata, ''))) AS cContrataPostula, ISNULL(cv.cPerfil, '') AS cPerfil, 
			CASE 
			when ISNULL(cd.bCumplePerfil, 0)=1 then 'SI' 
			when ISNULL(cd.bCumplePerfil, 0)=0 then 'NO' 
			else  	'NO' END AS cCumplePerfil, 
                         CASE WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS bit) WHEN cd.dFechaCargaCV IS NULL THEN CAST(0 AS bit) ELSE CAST(1 AS bit) END AS bCVCargado, cd.dFechaCargaCV, 
                         CASE WHEN cd.dFechaContactoContrata1 = '1900-01-01' THEN '' ELSE CONVERT(varchar, cd.dFechaContactoContrata1, 103) END AS dFechaRespuesta, ISNULL(cd.cRptaContrata, '') AS cRptaContrata, ISNULL(cd.cObs, '') 
                         AS cObs
FROM            dbo.CandidatoInforme AS ci LEFT OUTER JOIN
                         dbo.ConvocatoriaDetalle AS cd ON ci.iCodCandidatoInforme = cd.iCodCandidatoInforme LEFT OUTER JOIN
                         dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria LEFT OUTER JOIN
                         dbo.ConvocatoriaMain AS cm ON cv.iCodConvocatoriaMain = cm.iCodConvocatoriaMain LEFT OUTER JOIN
                         dbo.Contrata AS co ON cm.iCodContrata = co.iCodContrata
WHERE        (ci.cCapacitacion = 'CM1') AND (cd.dFechaCargaCV <> '1900-01-01') AND (cm.iTipo IN (1, 3))

GO
/****** Object:  View [dbo].[cap_AdmisionPostulantes2021F2]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






















CREATE VIEW [dbo].[cap_AdmisionPostulantes2021F2]
AS
SELECT        CapacitacionAdmision.iCodCapacitacionAdmision,
 CapacitacionCursoModulo.cNomCursoModulo, 
 CapacitacionCurso.cNombreCurso, 
 cpc.iCodCapacitacionProgramaCurso, 
cpc.iMeta, CapacitacionAdmision.dFechaRegistro, 
ci.cDNI, 
 ci.cApellidos + ' '+ ci.cNombres as cNomCompleto, 
 case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as cCondicion , 
 
  case 
 when CapacitacionAdmision.dFechaEvaluaCV='1900-01-01' then '' 
 else convert(varchar, CapacitacionAdmision.dFechaEvaluaCV, 103)  end  as dFechaEvaluaCV,
 CASE 
 WHEN (select count(cmatpz.iCodCandidatoInforme) from CapacitacionMatricula cmatpz where cmatpz.iCodCandidatoInforme=ci.iCodCandidatoInforme and (cmatpz.iEstadoProceso=4 or cmatpz.iEstadoProceso=4))>=1 then 'NO APTO'    
 WHEN isnull(cmat.iEstadoProceso,0)=1 then  'NO APTO'
 ELSE
  case  
  when CapacitacionAdmision.bApto=1 then 'APTO' 
  when CapacitacionAdmision.bApto=0 then 'NO APTO'   
  when CapacitacionAdmision.iEstado=2 then 'NO APTO'  
  else 'NO APTO' 
  end 
 END AS cApto,
 
 
CapacitacionAdmision.cTipoAlumno,
 CapacitacionAdmision.iEstado ,ci.iCodCandidatoInforme  ,
 
CapacitacionAdmision.bApto, 
  ISNULL(u.cNick,'') as cNick,
 
CASE 
WHEN isnull(cmat.iEstadoProceso,0)=1 then  'ES BENEFICIARIO DE UN CURSO DE LA FASE I' 
WHEN (select count(cmatpz.iCodCandidatoInforme) from CapacitacionMatricula cmatpz where cmatpz.iCodCandidatoInforme=ci.iCodCandidatoInforme and (cmatpz.iEstadoProceso=4 or cmatpz.iEstadoProceso=4))>=1 then 'USTED ESTA DESCALIFICADO POR ABANDONO DE UN CURSO ( 2019 - 2020 )'    
ELSE
  case 
  when ci.bsustentoCV=1 and (ci.cCondicion='LOCAL' or ci.ccondicion='RESIDENTE' or ci.cCondicion='COMUNIDAD'  ) then 
			case
			when cpc.iGradoAcademico>CapacitacionAdmision.iGradoAcademico then 
			'NO ACREDITA NIVEL DE ESTUDIOS REQUERIDO' 
			when cpc.iTiempoExperiencia>CapacitacionAdmision.iTiempoExperiencia then 
			'NO ACREDITA TIEMPO DE EXPERIENCIA REQUERIDO' 
			when cpc.iLicenciaConducirValor>CapacitacionAdmision.iLicenciaConducirValor then 
			'NO ACREDITA EL TIPO DE LICENCIA DE CONDUCIR REQUERIDO' 
			when cpc.iRecordConductor>CapacitacionAdmision.iRecordConductor then 
			'NO ACREDITA RECORD DE CONDUCTOR REQUERIDO' 
			when cpc.iLicenciaConducirTiempo>CapacitacionAdmision.iLicenciaConducirTiempo then 
			'NO ACREDITA TIEMPO DE EXPERIENCIA REQUERIDO EN LICENCIA DE CONDUCIR' 
			when cpc.iCursoEspecialValor>CapacitacionAdmision.iCursoEspecialValor then 
			'NO ACREDITA LOS CURSOS O CERTIFICACIONES REQUERIDOS' 
			when ci.cCondicion='FORANEO' or ci.cCondicion='' then 
			'NO ACREDITA SUSTENTOS DE LOCAL' 
			  when CapacitacionAdmision.iEstado=2 then 
			CapacitacionAdmision.cObs 
			else 
				case CapacitacionAdmision.bApto 
					 when 1 then '' 
					-- when 0 then CapacitacionAdmision.cObs 
				end
			 end  
	 else
		case 
		when isnull(cad.iCodCandidatoAdmision,0)>0 then 'NO COMPLETÓ EL PROCESO DE REGISTRO OAEL'
		else  'NO ACREDITA SUSTENTO DE LOCAL'
		end
	 END
 END as cObs,
 
  case CapacitacionAdmision.iTipoCV 
  when 1 then 'N' 
  when 2 then 'S' 
  when 3 then 'A' 
  end as cTipoCV ,
 cpc.cObs as cInfoCurso  ,
CASE 
WHEN isnull(cmat.iEstadoProceso,0)=1 then  'ES BENEFICIARIO DE UN CURSO DE LA FASE I' 
WHEN (select count(cmatpz.iCodCandidatoInforme) from CapacitacionMatricula cmatpz where cmatpz.iCodCandidatoInforme=ci.iCodCandidatoInforme and (cmatpz.iEstadoProceso=4 or cmatpz.iEstadoProceso=4))>=1 then 'USTED ESTA DESCALIFICADO POR ABANDONO DE UN CURSO ( 2019 - 2020 )'    
ELSE
	case  
	when CapacitacionAdmision.bApto=1 then '' 
	when CapacitacionAdmision.bApto=0 then   CapacitacionAdmision.cObs 
	when CapacitacionAdmision.iEstado=2 then  CapacitacionAdmision.cObs  
	end 
END AS cNotasObs ,CapacitacionAdmision.nEvaluacionTecnica 
--, ci.iTiempoExperiencia as Experiencia,
--case 
--when ci.bCumplePefil=1 then 'SI' 
--else 'NO' 
--end as [Cumple Perfil]  
FROM            CapacitacionCurso INNER JOIN
 CapacitacionProgramaCurso cpc ON CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
 CapacitacionAdmision  ON cpc.iCodCapacitacionProgramaCurso = CapacitacionAdmision.iCodCapacitacionProgramaCurso INNER JOIN
 CandidatoInforme ci ON CapacitacionAdmision.iCodCandidatoInforme = ci.iCodCandidatoInforme INNER JOIN
 CapacitacionCursoModulo ON CapacitacionCurso.iCodCapacitacionCursoModulo = CapacitacionCursoModulo.iCodCapacitacionCursoModulo 
 LEFT JOIN Usuario u on CapacitacionAdmision.iCodPersonaEvaluaCV=u.iCodPersona 
  left join candidatoadmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and icodcandidatoadmisiontipo=1  
 and cad.bImprocedente=0 
 LEFT JOIN  dbo.CapacitacionMatricula cmat on cmat.iCodCandidatoInforme =ci.iCodCandidatoInforme  and cmat.iCodCapacitacionProgramaCurso>=48 and   cmat.iCodCapacitacionProgramaCurso<=58 
 
 WHERE cpc.iCodCapacitacionProgramaCurso>=59  

















GO
/****** Object:  View [dbo].[cap_MatriculaListado]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[cap_MatriculaListado]
AS
SELECT        cmat.iCodCapacitacionMatricula,
 dbo.CapacitacionCursoModulo.cNomCursoModulo, 
 dbo.CapacitacionCurso.cNombreCurso, 
 cpc.iCodCapacitacionProgramaCurso, 
 cpc.iMeta, 
 cmat.cNroMatricula, 
  cmat.cTipoAlumno ,
 dbo.CandidatoInforme.cDNI, 
 dbo.CandidatoInforme.cApellidos + ' ' + dbo.CandidatoInforme.cNombres AS cNomCompleto,
 CASE WHEN cmat.dFechaRegistro = '1900-01-01' THEN '' ELSE CONVERT(varchar, cmat.dFechaRegistro, 103) END AS dFechaRegistro,

 case cmat.iSituacionMatricula   
 when 0 then 'PENDIENTE DE MATRICULA' 
when 1 then 'CORRECTO'
when 2 then 'NSP'
when 3 then 'RENUNCIA'
when 4 then 'PENALIZADO' 
else 'STAND BY' end as cEstado,
cmat.bActivo  ,cmat.iSituacionMatricula ,CapacitacionCurso.cCodigoCurso  
FROM            dbo.CapacitacionCurso INNER JOIN
                         dbo.CapacitacionProgramaCurso AS cpc ON dbo.CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
                         dbo.CapacitacionMatricula AS cmat ON cpc.iCodCapacitacionProgramaCurso = cmat.iCodCapacitacionProgramaCurso INNER JOIN
                         dbo.CandidatoInforme ON cmat.iCodCandidatoInforme = dbo.CandidatoInforme.iCodCandidatoInforme INNER JOIN
                         dbo.CapacitacionCursoModulo ON dbo.CapacitacionCurso.iCodCapacitacionCursoModulo = dbo.CapacitacionCursoModulo.iCodCapacitacionCursoModulo


GO
/****** Object:  View [dbo].[m_DashboardPGIAnexoAdmisionResumen]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[m_DashboardPGIAnexoAdmisionResumen]
AS
SELECT        aa.iCodAnexoAdmision, co.cNomCorto, ccto.cNroContrato, aa.cNroAnexo, aa.cGrupo, aat.cResumen, aa.dFechaSolicitud, CAST(aa.dFechaRegistro AS date) AS dFechaRegistro, CAST(aa.dFechaAprobacion AS date) 
                         AS dFechaAprobacion, CASE aa.cEstado WHEN 'P' THEN 'PROCESANDO' WHEN 'R' THEN 'REVISION' WHEN 'O' THEN 'OBSERVADO' WHEN 'F' THEN 'FINALIZADO' END AS cEstado, 
                         SUM(CASE ad.cProcesoEtapa WHEN 'P' THEN 1 ELSE 0 END) AS iEProceso, SUM(CASE ad.cProcesoEtapa WHEN 'O' THEN 1 ELSE 0 END) AS iEObservado, SUM(CASE ad.cProcesoEtapa WHEN 'A' THEN 1 ELSE 0 END) 
                         AS iEAprobado, SUM(CASE ad.cProcesoEtapa WHEN 'R' THEN 1 ELSE 0 END) AS iERechazado, SUM(CASE ad.cProcesoEtapa WHEN 'C' THEN 1 ELSE 0 END) AS iEComparativo, 
                         SUM(CASE ad.cMOCMONC WHEN 'MOC' THEN 1 ELSE 0 END) AS iMOC, SUM(CASE ad.cMOCMONC WHEN 'MONC' THEN 1 ELSE 0 END) AS iMONC, 
                         SUM(CASE ci.cCondicion WHEN 'LOCAL' THEN 1 WHEN 'RESIDENTE' THEN 1 WHEN 'COMUNIDAD' THEN 1 ELSE 0 END) AS iLocal, SUM(CASE ci.cCondicion WHEN 'FORANEO' THEN 1 WHEN '' THEN 1 ELSE 0 END) 
                         AS iForaneo, SUM(CASE ci.cSexo WHEN 'M' THEN 1 ELSE 0 END) AS iSexoM, SUM(CASE ci.cSexo WHEN 'F' THEN 1 ELSE 0 END) AS iSexoF, SUM(CASE ci.cSexo WHEN '' THEN 1 ELSE 0 END) AS iSexoI, 
                         SUM(CASE ci.bContratado WHEN 1 THEN 1 ELSE 0 END) AS iContratado, SUM(CASE ci.bContratado WHEN 0 THEN 1 ELSE 0 END) AS iNoContratado
FROM            dbo.AnexoAdmision AS aa INNER JOIN
                         dbo.AnexoAdmisionDetalle AS ad ON aa.iCodAnexoAdmision = ad.iCodAnexoAdmision INNER JOIN
                         dbo.CandidatoInforme AS ci ON ad.iCodCandidatoInforme = ci.iCodCandidatoInforme INNER JOIN
                         dbo.AnexoAdmisionTipo AS aat ON aa.iCodAnexoAdmisionTipo = aat.iCodAnexoAdmisionTipo INNER JOIN
                         dbo.Contrata AS co ON aa.iCodContrata = co.iCodContrata INNER JOIN
                         dbo.ContratistaContrato AS ccto ON aa.iCodContratistaContrato = ccto.iCodContratistaContrato

						 where aa.dFechaSolicitud>='2021-01-01'
GROUP BY aa.iCodAnexoAdmision, co.cNomCorto, ccto.cNroContrato, aa.cNroAnexo, aa.cGrupo, aat.cResumen, aa.dFechaSolicitud, aa.dFechaRegistro, aa.dFechaAprobacion, aa.cEstado
GO
/****** Object:  Table [dbo].[PracticantesProcesoDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PracticantesProcesoDetalle](
	[iCodPracticantesProcesoDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodPracticantesProceso] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[cPeriodoEgreso] [varchar](10) NULL,
	[cGradoAcademico] [varchar](20) NULL,
	[cCentroEstudio] [varchar](50) NULL,
	[cSede] [varchar](50) NULL,
	[cTipoRegistro] [varchar](20) NULL,
	[dFechaContactoFono1] [date] NULL,
	[cObsContactoFono1] [varchar](50) NULL,
	[dFechaContactoCorreo1] [date] NULL,
	[dFechaRegistroDocumentos] [date] NULL,
	[dFechaInvitacionEvaluaTest] [date] NULL,
	[iTrabajoEquipo] [tinyint] NULL,
	[iResponsabilidad] [tinyint] NULL,
	[iProactividad] [tinyint] NULL,
	[iComunicacionEfectiva] [tinyint] NULL,
	[iEnvioEvaluaTest] [tinyint] NULL,
	[dFechaAssesmentCom] [date] NULL,
	[dFechaAssesmentProgr] [date] NULL,
	[cGrupoAssesment] [varchar](25) NULL,
	[cHoraAssesment] [varchar](30) NULL,
	[iDinamica1Com] [tinyint] NULL,
	[iDinamica1Integr] [tinyint] NULL,
	[iDinamica2Seg] [tinyint] NULL,
	[iDinamica2Trab] [tinyint] NULL,
	[iDinamica3Manage] [tinyint] NULL,
	[iDinamica3Data] [tinyint] NULL,
	[iDinamica3HabNum] [tinyint] NULL,
	[iDinamica3Com] [tinyint] NULL,
	[cObsAssesment] [varchar](1000) NULL,
	[cCondicionAssesment] [varchar](15) NULL,
	[dFechaEntrevistaInvita] [date] NULL,
	[dFechaEntrevistaProgr] [date] NULL,
	[cHoraEntrevistaProgr] [varchar](15) NULL,
	[cLugarEntrevista] [varchar](30) NULL,
	[cResponsable] [varchar](50) NULL,
	[cEntrevistador] [varchar](50) NULL,
	[dFechaEntrevistaConfirma] [date] NULL,
	[cCondicionEntrevista] [varchar](15) NULL,
	[dFechaEmo] [date] NULL,
	[cAptitudGeneral] [varchar](30) NULL,
	[cObservaciones] [varchar](100) NULL,
	[cNotas] [varchar](50) NULL,
	[dFechaUpdate] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_PracticantesProcesoDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodPracticantesProcesoDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[prac_ListadoPracticantes]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [dbo].[prac_ListadoPracticantes]
AS
SELECT        pp.iCodPracticantesProcesoDetalle,pp.iCodPracticantesProceso, 
ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
ci.cCondicion, ci.cPuestoEspecialidad, ci.cFono,
pp.iCodCandidatoInforme 
FROM            dbo.PracticantesProcesoDetalle AS pp INNER JOIN
                         dbo.CandidatoInforme AS ci ON pp.iCodCandidatoInforme = ci.iCodCandidatoInforme


GO
/****** Object:  View [dbo].[mpg_ConvocatoriaFeedackReview]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [dbo].[mpg_ConvocatoriaFeedackReview]
AS
SELECT c.iCodConvocatoriaMain,
 c.iCodContrata,
case c.iTipo 
when 1 then 'REGULAR'
WHEN 2 THEN 'EXCEPTUADO'
WHEN 3 THEN 'ADICIONAL'
WHEN 4 THEN 'DISPENSADO'
WHEN 5 THEN 'MARATON'
WHEN 6 THEN 'PGI'
WHEN 9 THEN 'OTROS' 
ELSE '' END AS cTipo,
c.cNroConvocatoria,
 ct.cNomContrata, 
 c.cSubContrata , 
 c.iEstado,
 (select count(cd0.iCodCandidatoInforme) from convocatoriadetalle cd0
inner join convocatoria c0 on cd0.iCodConvocatoria=c0.iCodConvocatoria 
inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain  
where cd0.dFechaCargaCV<>'1900-01-01' 
and cm0.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iCantEnviada ,
 (select count(cd1.iCodCandidatoInforme) from convocatoriadetalle cd1
inner join convocatoria c1 on cd1.iCodConvocatoria=c1.iCodConvocatoria 
inner join convocatoriamain cm1 on c1.iCodConvocatoriaMain=cm1.iCodConvocatoriaMain  
where cd1.dFechaContactoContrata1<>'1900-01-01'   
and cm1.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iFeedbackRespondido ,
c.IDREQ  as nPercentRespuesta,
 (select count(cd2.iCodCandidatoInforme) from convocatoriadetalle cd2
inner join convocatoria c2 on cd2.iCodConvocatoria=c2.iCodConvocatoria 
inner join convocatoriamain cm2 on c2.iCodConvocatoriaMain=cm2.iCodConvocatoriaMain  
where cd2.dFechaCargaCV<>'1900-01-01' and cd2.dFechaVerificaFeedback<>'1900-01-01' and cd2.cFeedbackCorrecto in('SI','NO') 
and cm2.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iFeedbackRevisado ,
c.IDREQ as nPercentEsperado,
'0' as nPercentRevisadoActual
FROM         dbo.ConvocatoriaMain AS c INNER JOIN
                      dbo.Contrata AS ct ON c.iCodContrata = ct.iCodContrata LEFT OUTER JOIN
                      dbo.Convocatoria AS cd ON c.iCodConvocatoriaMain = cd.iCodConvocatoriaMain
where c.iEstado=1 
GROUP BY c.iCodConvocatoriaMain, ct.cNomContrata, c.iEstado, c.iCodContrata,c.iTipo ,
  c.cSubContrata, c.cNroConvocatoria  ,c.IDREQ 


GO
/****** Object:  View [dbo].[mpg_ConvocatoriaFeedbackReviewDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[mpg_ConvocatoriaFeedbackReviewDetalle]
AS
SELECT cm.iCodConvocatoriaMain,cd.iCodConvocatoriaDetalle, cd.iCodConvocatoria,
case cd.iTipoPostulacion 
when 1 then 'OAEL' 
when 2 then 'SISTEMA' 
when 3 then '---'  
when 4 then 'PREFERENCIAL' 
when 5 then 'SOLICITADO'  
when 6 then 'VIRTUAL'  
when 7 then 'STAKEHOLDER' 
else 'SIN POSTULACION' 
end as cTipoPostulacion, 
 cd.cEstado,   
  c.cPerfil, 
 ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
  case 
 when cd.dFechaContactoContrata1='1900-01-01' then '' 
 else convert(varchar, cd.dFechaContactoContrata1, 103)  end  as dFechaRespuesta,
      isnull(cd.cRptaContrata,'') as cRptaContrata ,isnull(cd.cObs,'') as cObs ,ci.cFono ,
	  cd.dFechaVerificaFeedback,
	  cd.cFeedbackCorrecto,
	  cd.cObsConsultor 

FROM    dbo.ConvocatoriaMain AS cm 
INNER JOIN  dbo.Convocatoria AS c ON cm.iCodConvocatoriaMain = c.iCodConvocatoriaMain   
INNER JOIN  dbo.ConvocatoriaDetalle AS cd ON c.iCodConvocatoria=cd.iCodConvocatoria  
INNER JOIN  dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme  
 where cd.cFeedbackCorrecto in('-','')   
  and cd.dFechaContactoContrata1<>'1900-01-01' 



GO
/****** Object:  Table [dbo].[CandidatoInformeCondicion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoInformeCondicion](
	[iCodCandidatoInformeCondicion] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoInforme] [int] NULL,
	[iCodCandidatoAdmision] [int] NULL,
	[iCodTDCondicionSustentoAnterior] [smallint] NULL,
	[cCondicionAnterior] [varchar](50) NULL,
	[iCodTDCondicionSustentoNueva] [smallint] NULL,
	[cCondicionNueva] [varchar](50) NULL,
	[cCondicionSustento] [varchar](50) NULL,
	[cNotas] [varchar](max) NULL,
	[iCodComunidad] [int] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CandidatoInformeCondicion] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoInformeCondicion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CandidatoAdmisionCatalogo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoAdmisionCatalogo](
	[iCodCandidatoAdmisionCatalogo] [int] IDENTITY(1,1) NOT NULL,
	[cDesTipoAdmision] [varchar](50) NULL,
	[cGrupo] [varchar](50) NULL,
	[bPostular] [bit] NULL,
	[cTipo] [varchar](4) NULL,
	[bHabilitado] [bit] NULL,
 CONSTRAINT [PK_CandidatoAnexoAdmisionTipo] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoAdmisionCatalogo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TDCondicionSustento]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TDCondicionSustento](
	[iCodTDCondicionSustento] [int] IDENTITY(1,1) NOT NULL,
	[iCodCliente] [int] NULL,
	[cCondicion] [varchar](10) NULL,
	[cCondicionSustento] [varchar](50) NULL,
	[cSustento] [varchar](50) NULL,
	[cRequisitos] [varchar](max) NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_TDCondicionSustento] PRIMARY KEY CLUSTERED 
(
	[iCodTDCondicionSustento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Comunidad]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Comunidad](
	[cComunidad] [varchar](50) NULL,
	[iCodComunidad] [int] IDENTITY(1,1) NOT NULL,
	[cUbigeoLugar] [varchar](10) NULL,
	[cTipoAreaInfluencia] [varchar](5) NULL,
	[cUbicacionZona] [varchar](40) NULL,
	[cUbicacionCuenca] [varchar](50) NULL,
	[cTipoCompromiso] [varchar](50) NULL,
	[bMesaDialogo] [bit] NULL,
	[bActivo] [bit] NULL,
	[bLocalidad] [bit] NULL,
	[cTipoComunidad] [varchar](50) NULL,
 CONSTRAINT [PK_Comunidad] PRIMARY KEY CLUSTERED 
(
	[iCodComunidad] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[m_CandidatoAdmisionSolicitud]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[m_CandidatoAdmisionSolicitud] AS
	SELECT ca.iCodCandidatoAdmision,
		   ci.iCodCandidatoInforme,
		   CASE
			   WHEN ca.cEstado='E' THEN cast(0 AS bit)
			   WHEN ca.cEstado='R' THEN cast(1 AS bit)
			   WHEN ca.cEstado='I' THEN cast(1 AS bit)
			   WHEN ca.cEstado='O' THEN cast(1 AS bit)
			   ELSE cast(0 AS bit)
		   END AS bAtendido,
		   ca.dFechaRegistro,
		   ca.dFechaSolicitud,
		   cat.cDesTipoAdmision AS cCandidatoAdmisionTipo,
		   caf.cGrupo AS cCandidatoAdmisionOrigenGrupo,
		   ci.cDNI,
		   ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,
		   ci.cCondicion,
		   ca.bEvaluacion, -- envio de evaluacion
		 ca.bConsentimiento, -- const datos 1
		 ca.bAptitud, -- resultado psico  1
		 ca.bCheckList, --ficha post resultado lab  1
		 CASE
			 WHEN ci.iEstadoVerificativa=1
				  OR ci.iEstadoVerificativa=2 THEN cast(0 AS bit)
			 WHEN ci.iEstadoVerificativa=3 THEN cast(1 AS bit)
			 ELSE cast(0 AS bit)
		 END AS bVerificativa,
		 CASE
			 WHEN ca.iCodCandidatoAdmisionTipo=1
				  AND ca.bCheckList=1
				  AND ca.bAptitud=1
				  AND ca.bConsentimiento=1
				  AND ci.iEstadoVerificativa=3 THEN 'SI' -- R NUEVO

			 WHEN ca.iCodCandidatoAdmisionTipo=3
				  AND ca.bCheckList=1 THEN 'SI' -- ACT

			 WHEN ca.iCodCandidatoAdmisionTipo=4
				  AND ca.bCheckList=1 THEN 'SI' -- ACT Y POST

			 WHEN ca.iCodCandidatoAdmisionTipo=2
				  OR ca.iCodCandidatoAdmisionTipo=12 THEN 'NA' --POSTULAR Y CONSULTA

			 WHEN ca.cEstado='O' THEN 'OB' --observado

			 WHEN ca.bImprocedente=1 THEN 'NA'
			 ELSE 'NO'
		 END AS bDocsListos,
		 ca.bExpediente, -- doc actualizado
		ci.bCargaBox, -- expd. oael
		ca.bImprocedente,
		ca.bNuevo,
		ca.bRequierePostulacion,
		ISNULL(co.cNomContrata, '') AS cNomContrata,
		ISNULL(c.cPerfil, '') AS cPerfil,
		CASE
			WHEN isnull(cd.iCodConvocatoriaDetalle, 0) <= 0 THEN CAST(0 AS bit)
			ELSE CAST(1 AS bit)
		END AS bPostulado,
		CASE
			WHEN isnull(cd.dFechaCargaCV, '1900-01-01')= '1900-01-01' THEN CAST(0 AS bit)
			ELSE CAST(1 AS bit)
		END AS bCVEnviado,
		ci.cCorreo,
		ci.cFono,
		ca.bRespuesta AS cRespuesta,
		dbo.fnObtenerCondicionDetalle(com.cTipoAreaInfluencia, u.cUbigeo) AS [CONDICION DETALLE]        
FROM dbo.CandidatoAdmision AS ca
INNER JOIN dbo.CandidatoInforme AS ci ON ca.iCodCandidatoInforme = ci.iCodCandidatoInforme
INNER JOIN dbo.CandidatoAdmisionCatalogo AS cat ON ca.iCodCandidatoAdmisionTipo = cat.iCodCandidatoAdmisionCatalogo
INNER JOIN dbo.CandidatoAdmisionCatalogo AS caf ON ca.iCodCandidatoAdmisionOrigen = caf.iCodCandidatoAdmisionCatalogo
LEFT OUTER JOIN dbo.Convocatoria AS c ON ca.iCodConvocatoria = c.iCodConvocatoria
LEFT OUTER JOIN dbo.ConvocatoriaMain AS cm ON c.iCodConvocatoriaMain = cm.iCodConvocatoriaMain
LEFT OUTER JOIN dbo.Contrata AS co ON cm.iCodContrata = co.iCodContrata
LEFT OUTER JOIN dbo.ConvocatoriaDetalle AS cd ON c.iCodConvocatoria = cd.iCodConvocatoria
AND cd.iCodCandidatoInforme = ca.iCodCandidatoInforme
 LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo        
 LEFT JOIN TDUbigeo ur ON ci.cUbigeoResidencia=ur.cUbigeo        
 LEFT JOIN CandidatoInformeCondicion cond ON ci.iCodCandidatoInforme=cond.iCodCandidatoInforme        
 LEFT JOIN TDCondicionSustento tdco ON cond.iCodTDCondicionSustentoNueva=tdco.iCodTDCondicionSustento        
 AND tdco.iCodUsuario=1   
 LEFT JOIN Comunidad com ON com.iCodComunidad=cond.iCodComunidad        
 AND com.iCodComunidad>1
  WHERE cond.iCodCandidatoInformeCondicion=        
  (SELECT MAX(cond9.iCodCandidatoInformeCondicion)        
   FROM CandidatoInformeCondicion cond9        
   WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme)        
GO
/****** Object:  View [dbo].[m_CandidatoVerificativaLista]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [dbo].[m_CandidatoVerificativaLista]
AS
SELECT       iCodCandidatoInforme, cDNI, cApellidos, cNombres, iEstadoVerificativa, 
                         CASE iEstadoVerificativa WHEN 0 THEN 'SIN ENVIAR' WHEN 1 THEN 'SIN ENVIAR' WHEN 2 THEN 'ENVIADO' WHEN 3 THEN 'RESPONDIDO' ELSE 'SIN ENVIAR' END AS cEstadoVerificativa, 
                         dFechaVerificativa
FROM            dbo.CandidatoInforme
 WHERE   iTipoIngreso=1 --SOLO INGRESOS MINTRA 
 and len(cDNI)=8 and cApellidos<>'' 
 and cCondicion in ('LOCAL','RESIDENTE','COMUNIDAD')
 --and (iEstadoVerificativa=0 or iEstadoVerificativa=1 ) 
 --and (cCondicion='LOCAL' or cCondicion='RESIDENTE' or cCondicion='COMUNIDAD') 


GO
/****** Object:  View [dbo].[m_DashboardCapacitacionAdmision]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[m_DashboardCapacitacionAdmision]
AS
SELECT        cp.iCodCapacitacionPrograma, cp.cNombrePrograma, dbo.CapacitacionCursoModulo.cNomCursoModulo, dbo.CapacitacionCurso.cNombreCurso, dbo.CapacitacionAdmision.dFechaRegistro, dbo.CandidatoInforme.cCondicion, 
                         dbo.CandidatoInforme.cUbigeoResidencia, dbo.CandidatoInforme.bEvaluado, dbo.CandidatoInforme.bContratado, dbo.CandidatoInforme.bCargaBox, dbo.CapacitacionAdmision.iGradoAcademico, 
                         dbo.CapacitacionAdmision.iTiempoExperiencia, dbo.CapacitacionAdmision.iLicenciaConducirValor, dbo.CapacitacionAdmision.iRecordConductor, dbo.CapacitacionAdmision.iCursoEspecialValor, 
                         CASE WHEN CapacitacionAdmision.dFechaEvaluaCV = '1900-01-01' THEN 'NO' ELSE 'SI' END AS cEvaluado, CASE WHEN CapacitacionAdmision.dFechaEvaluaCV = '1900-01-01' THEN '' ELSE CONVERT(varchar, 
                         CapacitacionAdmision.dFechaEvaluaCV, 103) END AS dFechaEvaluaCV, 
                         CASE WHEN CapacitacionAdmision.dFechaEvaluaCV <> '1900-01-01' THEN CASE CapacitacionAdmision.bApto WHEN 1 THEN 'APTO' WHEN 0 THEN 'NO APTO' END ELSE 'SIN EVALUAR' END AS cEvalResultado, 
                         CASE CapacitacionAdmision.bApto WHEN 1 THEN 'APTO' WHEN 0 THEN 'NO APTO' END AS cApto, CASE WHEN CapacitacionAdmision.dFechaEvaluacionTecnica = '1900-01-01' THEN '' ELSE CONVERT(varchar, 
                         CapacitacionAdmision.dFechaEvaluacionTecnica, 103) END AS dFechaEvaluacionTecnica, dbo.CapacitacionAdmision.nEvaluacionTecnica, dbo.CapacitacionAdmision.cTipoAlumno, dbo.CapacitacionAdmision.iEstado, 
                         dbo.CapacitacionAdmision.bApto, ISNULL(u.cNick, N'') AS cNick, dbo.CapacitacionAdmision.cLugarInscripcion, CASE CapacitacionAdmision.iTipoCV WHEN 1 THEN 'N' WHEN 2 THEN 'S' WHEN 3 THEN 'A' END AS cTipoCV
FROM            dbo.CapacitacionCurso INNER JOIN
                         dbo.CapacitacionProgramaCurso AS cpc ON dbo.CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
                         dbo.CapacitacionPrograma AS cp ON cpc.iCodCapacitacionPrograma = cp.iCodCapacitacionPrograma INNER JOIN
                         dbo.CapacitacionAdmision ON cpc.iCodCapacitacionProgramaCurso = dbo.CapacitacionAdmision.iCodCapacitacionProgramaCurso INNER JOIN
                         dbo.CandidatoInforme ON dbo.CapacitacionAdmision.iCodCandidatoInforme = dbo.CandidatoInforme.iCodCandidatoInforme INNER JOIN
                         dbo.CapacitacionCursoModulo ON dbo.CapacitacionCurso.iCodCapacitacionCursoModulo = dbo.CapacitacionCursoModulo.iCodCapacitacionCursoModulo LEFT OUTER JOIN
                         dbo.Usuario AS u ON dbo.CapacitacionAdmision.iCodPersonaEvaluaCV = u.iCodPersona
GO
/****** Object:  View [dbo].[cap_MatriculaXGrupo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[cap_MatriculaXGrupo]
AS
SELECT        cmat.iCodCapacitacionMatricula, dbo.CapacitacionCursoModulo.cNomCursoModulo, dbo.CapacitacionCurso.cNombreCurso, cpc.iCodCapacitacionProgramaCurso, cmat.cNroMatricula, dbo.CandidatoInforme.cDNI, 
                         dbo.CandidatoInforme.cApellidos + ' ' + dbo.CandidatoInforme.cNombres AS cNomCompleto, CASE WHEN cmat.dFechaRegistro = '1900-01-01' THEN '' ELSE CONVERT(varchar, cmat.dFechaRegistro, 103) 
                         END AS dFechaRegistro, 
                         CASE cmat.iSituacionMatricula WHEN 0 THEN 'PENDIENTE DE MATRICULA' WHEN 1 THEN 'CORRECTO' WHEN 2 THEN 'NSP' WHEN 3 THEN 'RENUNCIA' WHEN 4 THEN 'PENALIZADO' ELSE 'STAND BY' END AS cEstadoMatricula,
                          cmat.bActivo, cmat.iSituacionMatricula, dbo.CapacitacionCurso.cCodigoCurso, ISNULL(cg.iCodCapacitacionGrupo, 0) AS iCodCapacitacionGrupo, ISNULL(CONVERT(varchar, cg.dFechaIni, 103), '') AS dFechaIni, 
                         ISNULL(CONVERT(varchar, cg.dFechaFin, 103), '') AS dFechaFin, ISNULL(cg.cLugar, '') AS cLugar, ISNULL(cg.cHorario, '') AS cHorario, ISNULL(con.cNomContrata, '') AS cNomContrata
FROM            dbo.CapacitacionCurso INNER JOIN
                         dbo.CapacitacionProgramaCurso AS cpc ON dbo.CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
                         dbo.CapacitacionMatricula AS cmat ON cpc.iCodCapacitacionProgramaCurso = cmat.iCodCapacitacionProgramaCurso INNER JOIN
                         dbo.CandidatoInforme ON cmat.iCodCandidatoInforme = dbo.CandidatoInforme.iCodCandidatoInforme INNER JOIN
                         dbo.CapacitacionCursoModulo ON dbo.CapacitacionCurso.iCodCapacitacionCursoModulo = dbo.CapacitacionCursoModulo.iCodCapacitacionCursoModulo LEFT OUTER JOIN
                         dbo.CapacitacionGrupo AS cg ON cmat.iCodCapacitacionGrupo = cg.iCodCapacitacionGrupo LEFT OUTER JOIN
                         dbo.Contrata AS con ON cg.iCodContrataCapacita = con.iCodContrata
GO
/****** Object:  View [dbo].[m_ConvocatoriaDetalleRptaContrataTemp]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[m_ConvocatoriaDetalleRptaContrataTemp]
AS
SELECT        cd.iCodConvocatoriaDetalle, cd.iCodConvocatoria, cm.iCodContrata, cd.cEstado, cd.iTipoPostulacion, LEFT(ci.cCondicion, 1) AS cCondicion, ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, c.cPerfil, 
                         ci.bEvaluado, CASE WHEN ci.iEstadoVerificativa = 3 THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS bVerificativa, cd.bCumplePerfil, CASE WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS BIT) 
                         ELSE CAST(1 AS BIT) END AS bCVCargado, ci.bContratado, CASE WHEN cd.dFechaContactoContrata1 = '1900-01-01' THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS bRptaContrata, 
                         cd.dFechaContactoContrata1, cd.cRptaContrata, cd.cObs, cd.iCodCandidatoInforme, ci.bVerificativa AS bRiesgo, '1900-01-01' AS FechaEntrevista, 'APTO' AS Entrevista, '1900-01-01' AS FechaExamenMed, 
                         'APTO' AS Resultado, CAST(1 AS bit) AS Seleccionado, '1900-01-01' AS FechaInduccion, '	' AS TemaInduccion
FROM            dbo.ConvocatoriaDetalle AS cd INNER JOIN
                         dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme LEFT OUTER JOIN
                         dbo.Convocatoria AS c ON cd.iCodConvocatoria = c.iCodConvocatoria LEFT OUTER JOIN
                         dbo.ConvocatoriaMain AS cm ON c.iCodConvocatoriaMain = cm.iCodConvocatoriaMain
GO
/****** Object:  View [dbo].[cap_MatriculaListadoGestion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[cap_MatriculaListadoGestion]
AS
SELECT        cmat.iCodCapacitacionMatricula,
 dbo.CapacitacionCursoModulo.cNomCursoModulo, 
 dbo.CapacitacionCurso.cNombreCurso, 
 cpc.iCodCapacitacionProgramaCurso, 
 cpc.iMeta, 
 cmat.cNroMatricula, 
  cmat.cTipoAlumno ,
 dbo.CandidatoInforme.cDNI, 
 dbo.CandidatoInforme.cApellidos + ' ' + dbo.CandidatoInforme.cNombres AS cNomCompleto,

 case cmat.iEstadoProceso   
 when 0 then 'NO APLICA' 
when 1 then 'CORRECTO - SIN OBS.'
when 2 then 'OBSERVADO'
when 3 then 'RENUNCIA'
when 4 then 'PENALIZADO' 
else 'NO APLICA' end as cEstadoProceso,
cmat.iEstadoProceso ,
cmat.iEstadoProcesoResultado,
 case cmat.iEstadoProcesoResultado   
 when 0 then 'NO APLICA' 
when 1 then 'SIN RESULTADO'
when 2 then 'EGRESADO'
when 3 then 'APROBADO'
when 4 then 'DESAPROBADO' 
else 'NO APLICA' end as cEstadoProcesoResultado,
 CASE WHEN cmat.dFechaEntregaCertificado = '1900-01-01' THEN '' ELSE CONVERT(varchar, cmat.dFechaEntregaCertificado, 103) END AS dFechaEntregaCertificado 

FROM            dbo.CapacitacionCurso INNER JOIN
                         dbo.CapacitacionProgramaCurso AS cpc ON dbo.CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
                         dbo.CapacitacionMatricula AS cmat ON cpc.iCodCapacitacionProgramaCurso = cmat.iCodCapacitacionProgramaCurso INNER JOIN
                         dbo.CandidatoInforme ON cmat.iCodCandidatoInforme = dbo.CandidatoInforme.iCodCandidatoInforme INNER JOIN
                         dbo.CapacitacionCursoModulo ON dbo.CapacitacionCurso.iCodCapacitacionCursoModulo = dbo.CapacitacionCursoModulo.iCodCapacitacionCursoModulo


GO
/****** Object:  View [dbo].[m_GrupoPrioritarioDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [dbo].[m_GrupoPrioritarioDetalle]
AS
SELECT        gpd.iCodGrupoPrioritarioDetalle, 
gpd.iCodGrupoPrioritario, 
ci.iCodCandidatoInforme, 
ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
case ci.bSustentoCV
when 1 then 
	 case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'RESIDENTE' 
		when 'COMUNIDAD' then 'COMUNIDAD' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end 
else 
	'FORANEO'
end as cCondicion,
ci.cUbigeo, 
ci.bEvaluado, ci.bCargaBox , ci.bContratado,
                         gpd.cNotas
FROM            dbo.GrupoPrioritarioDetalle AS gpd INNER JOIN
                         dbo.CandidatoInforme AS ci ON gpd.iCodCandidatoInforme = ci.iCodCandidatoInforme


GO
/****** Object:  View [dbo].[v_TempoCIEval]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_TempoCIEval]
AS
SELECT        cOcupacion, iTiempoExperiencia
FROM            dbo.CandidatoInforme AS ci
WHERE        (bEvaluado = 1) AND (cCondicion IN ('LOCAL', 'COMUNIDAD', 'RESIDENTE'))
GO
/****** Object:  View [dbo].[mpg_ConvocatoriasListaDetalleVigente]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






CREATE VIEW [dbo].[mpg_ConvocatoriasListaDetalleVigente]
AS
SELECT  c.iCodConvocatoria,
c.bCoberturado,
co.dFechaFin,
c.iCantidad,
c.cPerfil,
ct.cNomCorto, 
case 
when c.bCoberturado=0 then ''
else convert(varchar, c.dFechaLiberaExceptua,103)
end  as dFechaCoberturado

FROM            dbo.ConvocatoriaMain AS co INNER JOIN
                         dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain INNER JOIN
                         dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata
where 
 (co.iTipo in(1,3,5) and DATEADD(DAY,2,co.dFechaFin)>=CAST(GETDATE() as DATE) and c.bCoberturado=0) 
  or 
  (co.iTipo in(1,3,5)  and DATEADD(DAY,2,co.dFechaFin)>=CAST(GETDATE() as DATE) and c.bCoberturado=1 and c.dFechaLiberaExceptua>=DATEADD(DAY,-2, CAST(GETDATE() as DATE)))




GO
/****** Object:  Table [dbo].[GrupoPrioritarioLista]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[GrupoPrioritarioLista](
	[iCodGrupoPrioritarioLista] [int] IDENTITY(1,1) NOT NULL,
	[iCodGrupoPrioritario] [int] NULL,
	[iCodGrupoPrioritarioDetalle] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[dFechaRegistro] [date] NULL,
	[bActivo] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_GrupoPrioritarioLista] PRIMARY KEY CLUSTERED 
(
	[iCodGrupoPrioritarioLista] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[gp_GrupoListaCandidato]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE view [dbo].[gp_GrupoListaCandidato] as 
select gpl.iCodGrupoPrioritarioLista,gpl.bActivo,gpl.dFechaRegistro,gp.cNombreGrupo, 
 gpd.iCodCandidatoInforme ,gpd.iCodGrupoPrioritarioDetalle
 from GrupoPrioritario gp  
 inner join grupoprioritariolista gpl on gp.iCodGrupoPrioritario=gpl.iCodGrupoPrioritario 
 inner join grupoprioritariodetalle gpd on gpl.iCodGrupoPrioritarioDetalle=gpd.iCodGrupoPrioritarioDetalle 


GO
/****** Object:  View [dbo].[m_CandidatoHistorial]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [dbo].[m_CandidatoHistorial]
AS
SELECT        ci.iCodCandidatoInforme, 
ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
ci.cUbigeo + ' - ' + ci.cLugarNac AS cDepartamento, 
ci.cCondicion, 
CASE WHEN ci.cOcupacion IS NULL 
 THEN '' ELSE ci.cOcupacion + CASE WHEN ci.cOcupacion2 IS NULL THEN '' WHEN ci.cOcupacion2 = '' THEN '' ELSE ' - ' + ci.cOcupacion2 END END AS cOcupacion, cd.dFechaMintra, ci.dFechaEvaluacion, 
 ci.bEvaluado, 
 ci.cAptitud, 
 ci.dFechaVerificativa, 
 ci.bVerificativa, 
 CASE ci.iEstadoVerificativa 
 WHEN 0 THEN '-' 
 WHEN 1 THEN '-' 
 WHEN 2 THEN 'E' 
 WHEN 3 THEN 'R' 
 END AS cEstadoVerificativa, 
 ci.dFechaCargaBox, ci.bCargaBox, 
 LTRIM(RTRIM(ISNULL(co.cNomContrata, '') + ' ' + ISNULL(cm.cSubContrata, ''))) AS cContrataPostula,
  cd.bCumplePerfil ,
 CASE WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS bit) 
 WHEN cd.dFechaCargaCV IS NULL THEN CAST(0 AS bit) ELSE CAST(1 AS bit) END AS bCVCargado, 
   cd.dFechaCargaCV, 
 ci.bContratado, ci.dFechaSis AS dFechaRegistro
FROM            dbo.CandidatoInforme AS ci LEFT OUTER JOIN 
 dbo.ConvocatoriaDetalle AS cd ON ci.iCodCandidatoInforme = cd.iCodCandidatoInforme LEFT OUTER JOIN
 dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria  
 left join ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
 left join dbo.Contrata AS co ON cm.iCodContrata = co.iCodContrata



GO
/****** Object:  View [dbo].[v_TempoCIExpFFLL]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[v_TempoCIExpFFLL]
AS
SELECT     ci.iCodCandidatoInforme,  ci.cDNI,ci.cApellidos + ' ' + ci.cNombres as cNomCompleto,  ci.cOcupacion, ci.iTiempoExperiencia, ISNULL(fld.iCodFuerzaLaboralDetalle, 0) AS CodFFLL, ci.bDisponible
FROM            dbo.CandidatoInforme AS ci LEFT OUTER JOIN
                         dbo.FuerzaLaboralDetalle AS fld ON ci.iCodCandidatoInforme = fld.iCodCandidatoInforme AND fld.bCesado = 0 AND fld.iEstado <> 0
WHERE        (ci.bEvaluado = 1) AND (ci.cCondicion IN ('LOCAL', 'COMUNIDAD', 'RESIDENTE'))


GO
/****** Object:  Table [dbo].[CapacitacionAdmisionRequisitoValor]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionAdmisionRequisitoValor](
	[iCodCapacitacionAdmisionRequisitoValor] [int] IDENTITY(1,1) NOT NULL,
	[iCodCapacitacionAdmision] [int] NULL,
	[iCodCapacitacionProgramaCurso] [int] NULL,
	[iCodCapacitacionProgramaCursoRequisito] [int] NULL,
	[iCodCapacitacionProgramaCursoRequisitoValor] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[iCalificaDescalifica] [smallint] NULL,
	[bRevisado] [bit] NULL,
	[bApto] [bit] NULL,
	[bPresentaRequisito] [bit] NULL,
	[cObs] [varchar](max) NULL,
	[iNotaEvaluacion] [smallint] NULL,
	[dFechaEvaluacion] [date] NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CapacitacionAdmisionRequisitoValor] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionAdmisionRequisitoValor] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_CapacitacionAdmisionRequisito] UNIQUE NONCLUSTERED 
(
	[iCodCapacitacionAdmision] ASC,
	[iCodCapacitacionProgramaCursoRequisito] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CapacitacionProgramaCursoRequisitoValor]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionProgramaCursoRequisitoValor](
	[iCodCapacitacionProgramaCursoRequisitoValor] [int] IDENTITY(1,1) NOT NULL,
	[iCodCapacitacionProgramaCursoRequisito] [int] NULL,
	[iCalificaDescalifica] [smallint] NULL,
	[cDetalleValor] [varchar](200) NULL,
	[iOrden] [tinyint] NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CapacitacionProgramaCursoRequisitoValor] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionProgramaCursoRequisitoValor] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[cap_AdmisionPostulantes]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
























CREATE VIEW [dbo].[cap_AdmisionPostulantes]
AS
SELECT        CapacitacionAdmision.iCodCapacitacionAdmision,
 CapacitacionCursoModulo.cNomCursoModulo, 
 CapacitacionCurso.cNombreCurso, 
 cpc.iCodCapacitacionProgramaCurso, 
cpc.iMeta, CapacitacionAdmision.dFechaRegistro, 
ci.cDNI, 
 ci.cApellidos + ' '+ ci.cNombres as cNomCompleto, 
 case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as cCondicion , 

ci.cUbigeoResidencia, ci.bEvaluado, 
ci.bContratado, ci.bCargaBox,
CapacitacionAdmision.iGradoAcademico, CapacitacionAdmision.iTiempoExperiencia, 
CapacitacionAdmision.iLicenciaConducirValor, CapacitacionAdmision.iRecordConductor,
  CapacitacionAdmision.iCursoEspecialValor, 
  case 
 when CapacitacionAdmision.dFechaEvaluaCV='1900-01-01' then '' 
 else convert(varchar, CapacitacionAdmision.dFechaEvaluaCV, 103)  end  as dFechaEvaluaCV,
 CASE 
 WHEN (select count(cmatpz.iCodCandidatoInforme) from CapacitacionMatricula cmatpz where cmatpz.iCodCandidatoInforme=ci.iCodCandidatoInforme and (cmatpz.iEstadoProceso=4 or cmatpz.iEstadoProceso=4))>=1 then 'NO APTO'    
 WHEN isnull(cmat.iEstadoProceso,0)=1 then  'NO APTO'
 ELSE
  case  
  when CapacitacionAdmision.bApto=1 then 'APTO' 
  when CapacitacionAdmision.bApto=0 then 'NO APTO'   
  when CapacitacionAdmision.iEstado=2 then 'NO APTO'  
  end 
 END AS cApto,
   case 
 when CapacitacionAdmision.dFechaEvaluacionTecnica='1900-01-01' then '' 
 else convert(varchar, CapacitacionAdmision.dFechaEvaluacionTecnica, 103)  end  as dFechaEvaluacionTecnica,
CapacitacionAdmision.nEvaluacionTecnica,
CapacitacionAdmision.cTipoAlumno,
 CapacitacionAdmision.iEstado ,ci.iCodCandidatoInforme  ,
 CapacitacionAdmision.iCodPersonaEvaluaCV ,
CapacitacionAdmision.bApto, 
  ISNULL(u.cNick,'') as cNick,
  CapacitacionAdmision.iLicenciaConducirTiempo, 
  cpc.iGradoAcademico as iGradoAcademicoReq, cpc.iTiempoExperiencia as iTiempoExperienciaReq, 
cpc.iLicenciaConducirValor as iLicenciaConducirValorReq, cpc.iRecordConductor as iRecordConductorReq,
  cpc.iCursoEspecialValor as iCursoEspecialValorReq,cpc.iLicenciaConducirTiempo as iLicenciaConducirTiempoReq ,
CASE 
WHEN isnull(cmat.iEstadoProceso,0)=1 then  'ES BENEFICIARIO DE UN CURSO DE LA FASE I' 
WHEN (select count(cmatpz.iCodCandidatoInforme) from CapacitacionMatricula cmatpz where cmatpz.iCodCandidatoInforme=ci.iCodCandidatoInforme and (cmatpz.iEstadoProceso=4 or cmatpz.iEstadoProceso=4))>=1 then 'USTED ESTA DESCALIFICADO POR ABANDONO DE UN CURSO ( 2019 - 2020 )'    
ELSE
  case 
  when ci.bsustentoCV=1 and (ci.cCondicion='LOCAL' or ci.ccondicion='RESIDENTE' or ci.cCondicion='COMUNIDAD'  ) then 
			case
			when cpc.iGradoAcademico>CapacitacionAdmision.iGradoAcademico then 
			'NO ACREDITA NIVEL DE ESTUDIOS REQUERIDO' 
			when cpc.iTiempoExperiencia>CapacitacionAdmision.iTiempoExperiencia then 
			'NO ACREDITA TIEMPO DE EXPERIENCIA REQUERIDO' 
			when cpc.iLicenciaConducirValor>CapacitacionAdmision.iLicenciaConducirValor then 
			'NO ACREDITA EL TIPO DE LICENCIA DE CONDUCIR REQUERIDO' 
			when cpc.iRecordConductor>CapacitacionAdmision.iRecordConductor then 
			'NO ACREDITA RECORD DE CONDUCTOR REQUERIDO' 
			when cpc.iLicenciaConducirTiempo>CapacitacionAdmision.iLicenciaConducirTiempo then 
			'NO ACREDITA TIEMPO DE EXPERIENCIA REQUERIDO EN LICENCIA DE CONDUCIR' 
			when cpc.iCursoEspecialValor>CapacitacionAdmision.iCursoEspecialValor then 
			'NO ACREDITA LOS CURSOS O CERTIFICACIONES REQUERIDOS' 
			when ci.cCondicion='FORANEO' or ci.cCondicion='' then 
			'NO ACREDITA SUSTENTOS DE LOCAL' 
			  when CapacitacionAdmision.iEstado=2 then 
			CapacitacionAdmision.cObs 
			else 
				case CapacitacionAdmision.bApto 
					 when 1 then '' 
					-- when 0 then CapacitacionAdmision.cObs 
				end
			 end  
	 else
		case 
		when isnull(cad.iCodCandidatoAdmision,0)>0 then 'NO COMPLETÓ EL PROCESO DE REGISTRO OAEL'
		else  'NO ACREDITA SUSTENTO DE LOCAL'
		end
	 END
 END as cObs,
  CapacitacionAdmision.iRanking ,CapacitacionAdmision.cLugarInscripcion ,
  case CapacitacionAdmision.iTipoCV 
  when 1 then 'N' 
  when 2 then 'S' 
  when 3 then 'A' 
  end as cTipoCV ,
  cpc.iCodCapacitacionPrograma ,cpc.cObs as cInfoCurso  ,
--CASE 
--WHEN isnull(cmat.iEstadoProceso,0)=1 then  'ES BENEFICIARIO DE UN CURSO DE LA FASE I' 
--WHEN (select count(cmatpz.iCodCandidatoInforme) from CapacitacionMatricula cmatpz where cmatpz.iCodCandidatoInforme=ci.iCodCandidatoInforme and (cmatpz.iEstadoProceso=4 or cmatpz.iEstadoProceso=4))>=1 then 'USTED ESTA DESCALIFICADO POR ABANDONO DE UN CURSO ( 2019 - 2020 )'    
--ELSE
--	case  
--	when CapacitacionAdmision.bApto=1 then '' 
--	when CapacitacionAdmision.bApto=0 then   CapacitacionAdmision.cObs 
--	when CapacitacionAdmision.iEstado=2 then  CapacitacionAdmision.cObs  
--	end 
--END AS cNotasObs 
'' AS cNotasObs, 
(select sum(isnull(cpval.iCalificaDescalifica,0))
from CapacitacionAdmisionRequisitoValor ca 
left join CapacitacionProgramaCursoRequisitoValor cpval on ca.iCodCapacitacionProgramaCursoRequisitoValor=cpval.iCodCapacitacionProgramaCursoRequisitoValor 
where ca.iCodCapacitacionAdmision=CapacitacionAdmision.iCodCapacitacionAdmision ) as [NroReq]

FROM            CapacitacionCurso INNER JOIN
 CapacitacionProgramaCurso cpc ON CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
 CapacitacionAdmision  ON cpc.iCodCapacitacionProgramaCurso = CapacitacionAdmision.iCodCapacitacionProgramaCurso INNER JOIN
 CandidatoInforme ci ON CapacitacionAdmision.iCodCandidatoInforme = ci.iCodCandidatoInforme INNER JOIN
 CapacitacionCursoModulo ON CapacitacionCurso.iCodCapacitacionCursoModulo = CapacitacionCursoModulo.iCodCapacitacionCursoModulo 
 LEFT JOIN Usuario u on CapacitacionAdmision.iCodPersonaEvaluaCV=u.iCodPersona 
  left join candidatoadmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and icodcandidatoadmisiontipo=1  
 and cad.bImprocedente=0 
 LEFT JOIN  dbo.CapacitacionMatricula cmat on cmat.iCodCandidatoInforme =ci.iCodCandidatoInforme  and cmat.iCodCapacitacionProgramaCurso>=48 and   cmat.iCodCapacitacionProgramaCurso<=58 
 
 --WHERE cpc.iCodCapacitacionProgramaCurso>=59  















GO
/****** Object:  View [dbo].[cap_MatriculaListadoSeguimiento]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









-- Select * from cap_MatriculaListadoSeguimiento order by iCodCapacitacionPrograma,iCodCapacitacionCursoModulo,iCodCapacitacionProgramaCurso


CREATE VIEW [dbo].[cap_MatriculaListadoSeguimiento]
AS
SELECT        cmat.iCodCapacitacionMatricula,
 cpc.iCodCapacitacionPrograma,
 cpc.iCodCapacitacionCursoModulo,
  cpc.iCodCapacitacionProgramaCurso, 
 dbo.CapacitacionCursoModulo.cNomCursoModulo as [Módulo], 
 dbo.CapacitacionCurso.cNombreCurso as [Curso], 

  
  cmat.cTipoAlumno as [Tipo] ,
ci.cDNI as [DNI], 
ci.cApellidos + ' ' + ci.cNombres AS [Apellidos y Nombres],
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end   as [Condición],
case ci.bSustentoCV
when 1 then ci.cCondicion 
else 'FORANEO' end as [Condición Det.] ,
 case ci.bSustentoCV
when 1 then
	 case when  ci.cCondicion = 'COMUNIDAD' then  'CONSTANCIA DE COMUNIDAD'  
	else 
		case  ci.cUbigeo  
		WHEN '170102' THEN 'NACIDO EN EL AID' --'CARUMAS [DISTRITO]'
		WHEN '170103' THEN 'NACIDO EN EL AID' --'CUCHUMBAYA [DISTRITO]' 
		WHEN '170104' THEN 'NACIDO EN EL AID' --'SANCRISTOBAL [DISTRITO]' 
		WHEN '170105' THEN 'NACIDO EN EL AID' --'TORATA [DISTRITO]'
		else '' end
	end 		
else ''  end  as [Tipo AID],
case ci.bSustentoCV
when 1 then
	 case when  ci.cCondicion = 'COMUNIDAD' then  ci.cComunidad 
	else 
		case  ci.cUbigeo 
		WHEN '170102' THEN 'CARUMAS [DISTRITO]'
		WHEN '170103' THEN 'CUCHUMBAYA [DISTRITO]' 
		WHEN '170104' THEN 'SANCRISTOBAL [DISTRITO]' 
		WHEN '170105' THEN 'TORATA [DISTRITO]'
		else '' end
	end 		
else ''  end  as [Comunidad],
case ci.bSustentoCV
when 1 then
	case  
	when ci.cCondicion='LOCAL' or ci.cCondicion='RESIDENTE' or ci.cCondicion='COMUNIDAD' THEN
		CASE 
		WHEN ci.cCondicion='COMUNIDAD' THEN 'MARISCAL NIETO' 

		WHEN ci.cUbigeo like '1701%' THEN 'MARISCAL NIETO' 
		WHEN ci.cubigeo like '1702%' THEN 'GRAL. SANCHEZ CERRO' 
		WHEN ci.cubigeo like '1703%' THEN 'ILO' 	

		WHEN ci.cUbigeoResidencia like '1701%' THEN 'MARISCAL NIETO' 
		WHEN ci.cUbigeoResidencia like '1702%' THEN 'GRAL. SANCHEZ CERRO' 
		WHEN ci.cUbigeoResidencia like '1703%' THEN 'ILO' 
		
		ELSE 'MARISCAL NIETO'
		END
	ELSE 'OTRAS PROVINCIAS' END
else 'OTRAS PROVINCIAS' end as [Provincia],

 case cmat.iEstadoProceso   
 when 0 then 'NO APLICA' 
when 1 then 'CORRECTO - SIN OBS.'
when 2 then 'OBSERVADO'
when 3 then 'RENUNCIA'
when 4 then 'PENALIZADO' 
else 'NO APLICA' end as [Estado Proceso],
--cmat.iEstadoProceso ,
--cmat.iEstadoProcesoResultado,
 case cmat.iEstadoProcesoResultado   
 when 0 then 'NO APLICA' 
when 1 then 'SIN RESULTADO'
when 2 then 'EGRESADO'
when 3 then 'APROBADO'
when 4 then 'DESAPROBADO' 
else 'NO APLICA' end as [Resultado Curso],
/* case  
 isnull(
 (select top 1
case 
when aa.bAnulado=1 then 'N' 
else 
	case 
	when DATEADD(DAY,10,CAST(a.dFechaAprobacion as date))>=CAST(GETDATE() AS DATE) 
	 then aa.cProcesoEtapa    
	 when aa.cProcesoEtapa='R' then 'V' 
	else 'V' end  
end
 from anexoadmision a 
inner join AnexoAdmisionDetalle aa on a.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join Contrata emp on a.iCodContrata=emp.iCodContrata 
 where aa.iCodCandidatoInforme=ci.iCodCandidatoInforme 
  and DATEADD(DAY,10,CAST(a.dFechaAprobacion as date))>=CAST(GETDATE() AS DATE) 
  order by iCodAnexoAdmisionDetalle desc),'N')  
  when 'R' then cast(0 as bit) 
  when 'N' then cast(0 as bit) 
  else cast(1 as bit) 
  end 
  as PGI ,*/
isnull((SELECT top 1 '  '+ convert(varchar, cds0.dFechaCargaCV, 103)  + ' : '+  co0.cNomContrata + char(13)
			FROM convocatoriadetalle cds0 
			INNER JOIN convocatoria c0 ON  cds0.iCodConvocatoria=c0.iCodConvocatoria 
			inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain 
			inner join contrata co0 on cm0.iCodContrata=co0.iCodContrata    
			WHERE  cds0.dFechaCargaCV<>'1900-01-01' and cds0.iCodCandidatoInforme =ci.icodcandidatoinforme  
			 order by cds0.dFechaCargaCV desc,cds0.iCodConvocatoriaDetalle desc  ),'') as [Última Postulación], 
isnull(( select count(cds0.iCodConvocatoriaDetalle)
 FROM convocatoriadetalle cds0 
 INNER JOIN convocatoria c0 ON  cds0.iCodConvocatoria=c0.iCodConvocatoria 
 inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain 
 inner join contrata co0 on cm0.iCodContrata=co0.iCodContrata    
 WHERE  cds0.dFechaCargaCV<>'1900-01-01' and cds0.iCodCandidatoInforme =ci.icodcandidatoinforme  
    ),0) as [Total Post.],
   isnull(
 (select top 1
case 
when aa.bAnulado=1 then '' 
else 
	case 
	when DATEADD(DAY,10,CAST(a.dFechaAprobacion as date))>=CAST(GETDATE() AS DATE) 
	then -- aa.cProcesoEtapa +'**' + 
	     convert(varchar,DATEADD(DAY,10,CAST(a.dFechaAprobacion as date)),103) + '    ' + emp.cNomContrata   
	when aa.cProcesoEtapa='R' then '' 
	else '' 
	end  
end
 from anexoadmision a 
inner join AnexoAdmisionDetalle aa on a.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join Contrata emp on a.iCodContrata=emp.iCodContrata 
 where aa.iCodCandidatoInforme=ci.iCodCandidatoInforme 
  and DATEADD(DAY,10,CAST(a.dFechaAprobacion as date))>=CAST(GETDATE() AS DATE) 
  order by iCodAnexoAdmisionDetalle desc),'') as [Estado PGI] ,
--isnull(co.cNomContrata,'')  as [Empresa Trabaja Actual] ,

--isnull((select top 1 co3.cNomContrata   from fuerzalaboral fl3 
--inner join fuerzalaboraldetalle fld3 on fl3.iCodFuerzaLaboral=fld3.iCodFuerzaLaboral  
--inner join ContratistaContrato cto3 on fl3.iCodContratistaContrato=cto3.iCodContratistaContrato and cto3.cFase<>'NA'  
--inner join Contrata co3 on cto3.iCodContrata=co3.iCodContrata  
--where fld3.icodcandidatoinforme=ci.icodcandidatoinforme order by fld3.iCodFuerzaLaboralDetalle desc ) ,'') 
--as [ÚLTIMA EMPRESA FFLL ok] ,

ci.cFono as [Telefono],
ci.cCorreo as [Correo] ,
case 
when ci.dFechaNac='1900-01-01' then ''
else convert(varchar(10),ci.dFechaNac,103) 
end as [Fecha Nac.],

floor(
(cast(convert(varchar(8),getdate(),112) as int)-
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000
) as [Edad] ,
case (select count(fld01.icodcandidatoinforme) from fuerzalaboraldetalle fld01 
 inner join FuerzaLaboral fl01 on fld01.iCodFuerzaLaboral=fl01.iCodFuerzaLaboral
 inner join ContratistaContrato cto01 on fl01.iCodContratistaContrato=cto01.iCodContratistaContrato 
where fld01.icodcandidatoinforme=ci.icodcandidatoinforme 
and cto01.cFase<>'NA'  
and fld01.bCesado=0 and fld01.iEstado<>0 ) 
when  0 then '' 
else 'SI' 
end as [ACTUALMENTE TRABAJA] ,
case (select count(fld0.icodcandidatoinforme) from fuerzalaboraldetalle fld0 
 inner join FuerzaLaboral fl0 on fld0.iCodFuerzaLaboral=fl0.iCodFuerzaLaboral
 inner join ContratistaContrato cto0 on fl0.iCodContratistaContrato=cto0.iCodContratistaContrato 
where fld0.icodcandidatoinforme=ci.icodcandidatoinforme 
and cto0.cFase<>'NA') 
when  0 then '' 
else 'SI' 
end as [LABORÓ EN AAQ] ,

isnull((select top 1 fldo.cOcupacion from FuerzaLaboralDetalle fldo 
inner join FuerzaLaboral flo on fldo.iCodFuerzaLaboral=flo.iCodFuerzaLaboral
 inner join ContratistaContrato ctoo on flo.iCodContratistaContrato=ctoo.iCodContratistaContrato 
where fldo.icodcandidatoinforme=ci.icodcandidatoinforme 
and ctoo.cFase<>'NA'
order by fldo.iCodFuerzaLaboralDetalle desc),'') 
as [ULTIMA OCUPACION FFLL],
 

 isnull((SELECT top 1 isnull(antco.cNomContrata,'') from FuerzaLaboralDetalle fld3 
 inner join FuerzaLaboral fl3 on fld3.iCodFuerzaLaboral=fl3.iCodFuerzaLaboral
 inner join Contrata antco on fl3.iCodContrata=antco.iCodContrata 
  inner join ContratistaContrato cto3 on fl3.iCodContratistaContrato=cto3.iCodContratistaContrato 

  where fld3.iCodCandidatoInforme=ci.iCodCandidatoInforme  
  and cto3.cFase<>'NA'
 order by fld3.iCodFuerzaLaboralDetalle desc  ),'') as [ULTIMA EMPRESA FFLL],

  isnull((SELECT top 1 isnull(fl4.iPeriodo,'') from FuerzaLaboralDetalle fld4 
 inner join FuerzaLaboral fl4 on fld4.iCodFuerzaLaboral=fl4.iCodFuerzaLaboral 
  inner join ContratistaContrato cto4 on fl4.iCodContratistaContrato=cto4.iCodContratistaContrato 
  where fld4.iCodCandidatoInforme=ci.iCodCandidatoInforme  
    and cto4.cFase<>'NA'
 order by fld4.iCodFuerzaLaboralDetalle desc  ),'') as [ULTIMA PERIODO LABORADO] ,

 isnull((select top 1 co33.cNomContrata   from fuerzalaboral fl33 
inner join fuerzalaboraldetalle fld33 on fl33.iCodFuerzaLaboral=fld33.iCodFuerzaLaboral  
inner join ContratistaContrato cto33 on fl33.iCodContratistaContrato=cto33.iCodContratistaContrato and cto33.cFase='NA' 
and cto33.cTipoFFLL='S' 
inner join Contrata co33 on cto33.iCodContrata=co33.iCodContrata  
where fld33.icodcandidatoinforme=ci.icodcandidatoinforme order by fld33.iCodFuerzaLaboralDetalle desc ) ,'') 
as [FFLL SOPORTADO] ,

 isnull((select top 1 co33.cNomContrata   from fuerzalaboral fl33 
inner join fuerzalaboraldetalle fld33 on fl33.iCodFuerzaLaboral=fld33.iCodFuerzaLaboral  
inner join ContratistaContrato cto33 on fl33.iCodContratistaContrato=cto33.iCodContratistaContrato and cto33.cFase='NA' 
and cto33.cTipoFFLL='I' 
inner join Contrata co33 on cto33.iCodContrata=co33.iCodContrata  
where fld33.icodcandidatoinforme=ci.icodcandidatoinforme order by fld33.iCodFuerzaLaboralDetalle desc ) ,'') 
as [FFLL EXTERNA EMPRESA]
 

FROM            dbo.CapacitacionCurso INNER JOIN
 dbo.CapacitacionProgramaCurso AS cpc ON dbo.CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
 dbo.CapacitacionMatricula AS cmat ON cpc.iCodCapacitacionProgramaCurso = cmat.iCodCapacitacionProgramaCurso INNER JOIN
 dbo.CandidatoInforme ci ON cmat.iCodCandidatoInforme = ci.iCodCandidatoInforme INNER JOIN
 dbo.CapacitacionCursoModulo ON dbo.CapacitacionCurso.iCodCapacitacionCursoModulo = dbo.CapacitacionCursoModulo.iCodCapacitacionCursoModulo
-- left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 
-- left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
--left join contrata co on fl.iCodContrata=co.iCodContrata 
--left join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato and cto.cFase<>'NA'  





GO
/****** Object:  View [dbo].[cap_CursoLista]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[cap_CursoLista]
AS
SELECT        dbo.CapacitacionCurso.iCodCapacitacionCurso, dbo.CapacitacionCursoModulo.cNomCursoModulo, dbo.CapacitacionCurso.cNombreCurso
FROM            dbo.CapacitacionCurso INNER JOIN
                         dbo.CapacitacionCursoModulo ON dbo.CapacitacionCurso.iCodCapacitacionCursoModulo = dbo.CapacitacionCursoModulo.iCodCapacitacionCursoModulo

GO
/****** Object:  View [dbo].[cap_CursosPorPrograma]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[cap_CursosPorPrograma]
AS
SELECT        pc.iCodCapacitacionProgramaCurso, m.cNomCursoModulo, c.cNombreCurso, pc.iCodCapacitacionPrograma
FROM            dbo.CapacitacionProgramaCurso AS pc INNER JOIN
                         dbo.CapacitacionCurso AS c ON pc.iCodCapacitacionCurso = c.iCodCapacitacionCurso INNER JOIN
                         dbo.CapacitacionCursoModulo AS m ON c.iCodCapacitacionCursoModulo = m.iCodCapacitacionCursoModulo

GO
/****** Object:  View [dbo].[cap_ProgramaCursoLista]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[cap_ProgramaCursoLista]
AS
SELECT        dbo.CapacitacionProgramaCurso.iCodCapacitacionProgramaCurso, dbo.CapacitacionCursoModulo.cNomCursoModulo, 
dbo.CapacitacionCurso.cNombreCurso, dbo.CapacitacionProgramaCurso.iMeta, 
                         dbo.CapacitacionProgramaCurso.iDias, dbo.CapacitacionProgramaCurso.iCodCapacitacionPrograma,
						 dbo.CapacitacionCurso.iCodCapacitacionCurso 
FROM            dbo.CapacitacionProgramaCurso INNER JOIN
                         dbo.CapacitacionCurso ON dbo.CapacitacionProgramaCurso.iCodCapacitacionCurso = dbo.CapacitacionCurso.iCodCapacitacionCurso INNER JOIN
                         dbo.CapacitacionCursoModulo ON dbo.CapacitacionCurso.iCodCapacitacionCursoModulo = dbo.CapacitacionCursoModulo.iCodCapacitacionCursoModulo


GO
/****** Object:  View [dbo].[m_Rpt_TiempoAtencion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[m_Rpt_TiempoAtencion]
AS
SELECT        TOP (100) PERCENT ci.iCodCandidatoInforme, cd.iTipoPostulacion, CASE cd.iTipoPostulacion WHEN 1 THEN 'PREFERENCIAL' ELSE 'SUGERIDO' END AS cTipoPostulacion, ci.cDNI, 
                         ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, ci.cCondicion, cd.dFechaMintra, cd.dFechaCargaCV, CASE WHEN cd.dFechaCargaCV = '1900-01-01' THEN 'NO' ELSE 'SI' END AS cAtendido, 
                         CASE WHEN cd.dFechaCargaCV = '1900-01-01' THEN 0 ELSE DATEDIFF(day, cd.dFechaMintra, cd.dFechaCargaCV) END AS iDiasAtencion, ci.dFechaSis AS dFechaRegistro
FROM            dbo.CandidatoInforme AS ci INNER JOIN
                         dbo.ConvocatoriaDetalle AS cd ON ci.iCodCandidatoInforme = cd.iCodCandidatoInforme
WHERE        (cd.dFechaMintra <> '1900-01-01')
GO
/****** Object:  View [dbo].[v_TempoFFLL]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create view [dbo].[v_TempoFFLL]  as 
 select fld.iCodCandidatoInforme , 
 count(fl.iCodContrata ) as iCantEmpresas
 from fuerzalaboraldetalle fld 
 inner join FuerzaLaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral  
 group by  fld.iCodCandidatoInforme ,fl.icodcontrata 
GO
/****** Object:  View [dbo].[m_CandidatosInformeMinimal]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[m_CandidatosInformeMinimal]  
AS  
SELECT   ci.iCodCandidatoInforme, ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,  
ci.cUbigeo  as cDepartamento,  
 CASE    
           WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AID' THEN 'LOCAL'    
           WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AIO' THEN 'LOCAL'    
           WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'LOCAL'    
           WHEN ltrim(rtrim(u.cUbigeo))='140902' THEN 'LOCAL'    
           WHEN ltrim(rtrim(u.cUbigeo))='090409' THEN 'LOCAL'    
           WHEN ltrim(rtrim(u.cUbigeo))='090401' THEN 'LOCAL'    
           ELSE 'FORANEO'    
       END AS [CONDICION],    
       CASE    
           WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AID' THEN 'AID'    
           WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AIO' THEN 'AIO'    
           WHEN LTRIM(RTRIM(u.cUbigeo))='020805'    
                OR LTRIM(RTRIM(u.cUbigeo))='020813'    
                OR LTRIM(RTRIM(u.cUbigeo))='021901'    
                OR LTRIM(RTRIM(u.cUbigeo))='020814' THEN 'AID'    
           WHEN LTRIM(RTRIM(u.cUbigeo))='021901'    
                OR LTRIM(RTRIM(u.cUbigeo))='020301'    
                OR LTRIM(RTRIM(u.cUbigeo))='020304'    
                OR LTRIM(RTRIM(u.cUbigeo))='020305'    
                OR LTRIM(RTRIM(u.cUbigeo))='020310'    
                OR LTRIM(RTRIM(u.cUbigeo))='020321'    
                OR LTRIM(RTRIM(u.cUbigeo))='020323'    
                OR LTRIM(RTRIM(u.cUbigeo))='020325'    
                OR LTRIM(RTRIM(u.cUbigeo))='020803'    
                OR LTRIM(RTRIM(u.cUbigeo))='021204'    
OR LTRIM(RTRIM(u.cUbigeo))='021205'    
                OR LTRIM(RTRIM(u.cUbigeo))='021206'    
                OR LTRIM(RTRIM(u.cUbigeo))='021209'    
 OR LTRIM(RTRIM(u.cUbigeo))='021210'    
                OR LTRIM(RTRIM(u.cUbigeo))='090401'    
                OR LTRIM(RTRIM(u.cUbigeo))='090409'    
                OR LTRIM(RTRIM(u.cUbigeo))='140902' THEN 'AIO'    
           WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'REGIONAL'    
           ELSE 'FORANEO'    
       END AS 'CONDICION DETALLE',      
  
 CASE WHEN   
 ci.cOcupacion IS NULL THEN ''   
 ELSE ci.cOcupacion+   
 case   
 when ci.cOcupacion2 IS null then ''   
 when ci.cOcupacion2='' then ''   
 else ' - ' + ci.cOcupacion2 end   
 END AS cOcupacion,  
 ltrim(rtrim(ci.cLicenciaConducir + ' ' + ci.cCertificacion )) as cSkills,  
 ci.dFechaEvaluacion,  
 ci.bEvaluado ,ci.cAptitud, ci.bVerificativa,ci.iEstadoVerificativa ,  
 ci.bCargaBox,  
 -- case isnull(fld.iCodFuerzaLaboralDetalle,0)  
 --when 0 then cast( 0 as bit)   
 --else cast(1 as bit)    
 --end as bContratado    
 cast(0 as bit) as bContratado  
 , CONVERT(date, ci.dFechaEvaluacion) as dFechaRegistro ,  
 case   
 when ltrim(rtrim(ci.cObservacion))='SELECCIONADO' then CAST (1 as BIT)    
 else CAST(0 AS BIT)   
 end as bSeleccionado  ,  
ci.iResultadoVerificativa ,ci.cPuestoEspecialidad ,ci.iTiempoExperiencia ,ci.bDisponible,  
ci.cCapacitacion as cHorarioDisponible ,  
--case   
--when fld.cDNI is null then cast(0 as bit)   
--else cast(1 as bit) end as Anexo2,  
case isnull(fld.iCodFuerzaLaboralDetalle,0)  
 when 0 then cast(0 as bit)   
 else  cast(1 as bit)   
 end as Anexo2,  
case    
 isnull(  
 (select top 1  
case   
when aa.bAnulado=1 then 'N'   
else   
 case   
 when DATEADD(DAY,10,CAST(a.dFechaAprobacion as date))>=CAST(GETDATE() AS DATE)   
  then aa.cProcesoEtapa      
  when aa.cProcesoEtapa='R' then 'V'   
 else 'V' end    
end  
 from anexoadmision a   
inner join AnexoAdmisionDetalle aa on a.iCodAnexoAdmision=aa.iCodAnexoAdmision   
left join Contrata emp on a.iCodContrata=emp.iCodContrata   
 where aa.iCodCandidatoInforme=ci.iCodCandidatoInforme   
  and DATEADD(DAY,10,CAST(a.dFechaAprobacion as date))>=CAST(GETDATE() AS DATE)   
  order by iCodAnexoAdmisionDetalle desc),'N')    
  when 'R' then cast(0 as bit)   
  when 'N' then cast(0 as bit)   
  else cast(1 as bit)   
  end   
  as PGI ,  
  floor(  
(cast(convert(varchar(8),getdate(),112) as int)-  
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000  
) as Edad,  
case   
when ci.dFechaEvaluacionResultado='1900-01-01' then 'SIN EXP.'  
when ci.dFechaEvaluacionResultado='0001-01-01' then 'SIN EXP.'  
else cast(year(ci.dFechaEvaluacionResultado) as varchar(4))   
end as cUltimaExp ,  
case (select count(icodcandidatoinforme) from fuerzalaboraldetalle fld   
where fld.icodcandidatoinforme=ci.icodcandidatoinforme)   
when  0 then ''   
else 'SI'   
end as cFFLLHistorial,  
isnull(cid.bConsentimiento,cast(0 as bit))  as [CDatosP]   
   
     
FROM         dbo.CandidatoInforme ci  
--left join TempoAnexo02 t2 on ci.cDNI=t2.cDNI   
 --left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0   
left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0   
left join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme   
--left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.iEstado<>0 --and fld.bCesado=0 and fld.iEstado<>0   
LEFT JOIN Comunidad comu ON comu.cComunidad=ci.cComunidad    
LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo    
GO
/****** Object:  Table [dbo].[ConvocatoriaDetalleFile]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ConvocatoriaDetalleFile](
	[iCodConvocatoriaDetalleFile] [int] IDENTITY(1,1) NOT NULL,
	[iCodConvocatoriaDetalle] [int] NULL,
	[cRutaFile] [varchar](650) NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_ConvocatoriaDetalleFile] PRIMARY KEY CLUSTERED 
(
	[iCodConvocatoriaDetalleFile] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[m_ConvocatoriaDetalleGrid]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


















CREATE VIEW [dbo].[m_ConvocatoriaDetalleGrid]
AS
SELECT  distinct   cd.iCodConvocatoriaDetalle, cd.iCodConvocatoria,
 cd.cEstado, iTipoPostulacion,
 LEFT(ci.cCondicion, 1) as cCondicion,
 ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
 ci.bEvaluado ,
 case 
 when ci.iEstadoVerificativa=3 then 
 CAST (1 as bit) 
 else CAST (0 as bit)
 end as bVerificativa, 
 ci.bCargaBox,
 cd.bCumplePerfil,
 case 
 when cd.dFechaCargaCV='1900-01-01' then CAST(0 AS BIT) 
 else CAST(1 AS BIT) 
 end as bCVCargado, 
 case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then cast( 0 as bit) 
 else cast(1 as bit)  
 end as bContratado ,
cd.iCodCandidatoInforme ,
isnull(cdf.cRutaFile,'') as cRutaFile,
ci.bVerificativa as bRiesgo ,
cd.iRanking ,
case 
when ci.cAptitud='NO APTO' then cast(1 as BIT)  -- 1 NO APTO
when ci.cAptitud='SIN DATOS'   then cast(1 as BIT)  -- 1 NO APTO EN EL SISTEMA
else  cast(0 as BIT)  end as bAptEvaluacion -- 0 APTO 
FROM         dbo.ConvocatoriaDetalle AS cd INNER JOIN
 dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme 
 left join ConvocatoriaDetalleFile cdf on cd.icodconvocatoriadetalle=cdf.iCodConvocatoriaDetalle  
 left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 

 



GO
/****** Object:  Table [dbo].[TempoAnexo02]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TempoAnexo02](
	[cDNI] [varchar](15) NULL,
	[dFechaReporte] [date] NULL,
	[cReporte] [varchar](5) NULL,
	[cContrata] [varchar](90) NULL,
	[cOcupacion] [varchar](90) NULL,
	[cTipoMMOO] [varchar](5) NULL
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[m_GrupoPrioritarioDetalleCompleto]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









CREATE VIEW [dbo].[m_GrupoPrioritarioDetalleCompleto]
AS
SELECT        gpd.iCodGrupoPrioritarioDetalle, 
gpd.iCodGrupoPrioritario, 
ci.iCodCandidatoInforme, 
ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
ci.cCondicion,
ci.cUbigeo, 
ci.cOcupacion,
ci.bEvaluado,
case 
 when ci.dFechaEvaluacion='1900-01-01' then '' 
 else convert(varchar, ci.dFechaEvaluacion, 103)  end  as dFechaEvaluacion
, ci.bCargaBox ,
case 
 when ci.dFechaCargaBox='1900-01-01' then '' 
 else convert(varchar, ci.dFechaCargaBox, 103)  end  as dFechaCargaBox,
  case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then cast( 0 as bit) 
 else cast(1 as bit)  
 end as bContratado ,
                         gpd.cNotas,
						 ( --0
SELECT 
isnull( REPLACE(STUFF(
			(SELECT top 5 '  '+ convert(varchar, cds.dFechaCargaCV, 103)  + ' : '+  co.cNomContrata + char(13)
			FROM convocatoriadetalle cds 
			INNER JOIN convocatoria c ON  cds.iCodConvocatoria=c.iCodConvocatoria 
			inner join convocatoriamain cm on c.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
			inner join contrata co on cm.iCodContrata=co.iCodContrata    
			WHERE  cds.dFechaCargaCV<>'1900-01-01' and cds.iCodCandidatoInforme =ci.icodcandidatoinforme  
			 order by cds.dFechaCargaCV desc 
			FOR XML PATH ('')
			),--FIN SELECT
1,2, ''),'&#x0D;', ' **** ') --FIN STUFF
 ,'')--FIN ISNULL
)  as EmpresasPostuladas , 
isnull(co.cNomContrata,'') as cEmpresaTrabaja   ,ci.cComunidad,gp.cNombreGrupo ,
'' as cEmpresaAnexo2 
FROM      grupoprioritario gp inner join   
dbo.GrupoPrioritarioDetalle AS gpd  on gp.iCodGrupoPrioritario=gpd.iCodGrupoPrioritario
 INNER JOIN        dbo.CandidatoInforme AS ci ON gpd.iCodCandidatoInforme = ci.iCodCandidatoInforme 
 left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.iEstado<>0  and fld.bCesado=0 
  left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
left join contrata co on fl.iCodContrata=co.iCodContrata 		
left join TempoAnexo02 a2 on ci.cDNI=a2.cDNI 				









GO
/****** Object:  View [dbo].[mpg_ConvocatoriasListaDetalleFull]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[mpg_ConvocatoriasListaDetalleFull]
AS
SELECT        co.iCodConvocatoriaMain, co.iCodContrata, c.iCodConvocatoria, ct.cNomContrata, co.cSubContrata, c.cPerfil,c.cDesPerfil, co.dFechaIni, co.dFechaFin, co.dFechaLimite, c.iCantidad, c.iEstado
FROM            dbo.ConvocatoriaMain AS co INNER JOIN
                         dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain INNER JOIN
                         dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata

GO
/****** Object:  Table [dbo].[Cliente]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Cliente](
	[iCodCliente] [int] IDENTITY(1,1) NOT NULL,
	[iCodContrata] [int] NOT NULL,
	[cCodigo] [varchar](10) NOT NULL,
	[cDescripcion] [varchar](50) NULL,
	[bActivo] [bit] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_Cliente] PRIMARY KEY CLUSTERED 
(
	[iCodCliente] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[main_Clientes]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create view [dbo].[main_Clientes] as 
select c.iCodCliente,co.cNomContrata,c.cDescripcion,c.bActivo from  cliente c 
inner join contrata co on c.iCodContrata=co.iCodContrata 
GO
/****** Object:  Table [dbo].[CapacitacionProgramaCursoRequisito]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionProgramaCursoRequisito](
	[iCodCapacitacionProgramaCursoRequisito] [int] IDENTITY(1,1) NOT NULL,
	[iCodCapacitacionProgramaCurso] [int] NULL,
	[cRequisito] [varchar](200) NULL,
	[iOrden] [tinyint] NULL,
	[bSeleccionado] [bit] NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CapacitacionProgramaCursoRequisito] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionProgramaCursoRequisito] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[cap_AdmisionPostulantesProcesoWeb]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[cap_AdmisionPostulantesProcesoWeb] 
as 
SELECT        cad.iCodCapacitacionAdmision,
sum(isnull(cpval.iCalificaDescalifica,0)) as [ReqValor]
--,
--ci.cSexo 
--,

--SELECT 
--isnull( REPLACE(STUFF(
--			(SELECT top 5 '  '+ convert(varchar, cds.dFechaCargaCV, 103)  + ' : '+  co.cNomContrata + char(13)
--			FROM convocatoriadetalle cds 
--			INNER JOIN convocatoria c ON  cds.iCodConvocatoria=c.iCodConvocatoria 
--			inner join convocatoriamain cm on c.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
--			inner join contrata co on cm.iCodContrata=co.iCodContrata    
--			WHERE  cds.dFechaCargaCV<>'1900-01-01' and cds.iCodCandidatoInforme =ci.icodcandidatoinforme  
--			 order by cds.dFechaCargaCV desc 
--			FOR XML PATH ('')
--			),--FIN SELECT
--1,2, ''),'&#x0D;', ' **** ') --FIN STUFF
-- ,'')--FIN ISNULL
--)  as EmpresasPostuladas 


FROM            CapacitacionCurso cc INNER JOIN
 CapacitacionProgramaCurso cpc ON cc.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
 CapacitacionAdmision cad ON cpc.iCodCapacitacionProgramaCurso = cad.iCodCapacitacionProgramaCurso INNER JOIN
 CandidatoInforme ci ON cad.iCodCandidatoInforme = ci.iCodCandidatoInforme  
 inner join  CapacitacionAdmisionRequisitoValor ca on cad.iCodCapacitacionAdmision=ca.iCodCapacitacionAdmision  
left join CapacitacionProgramaCursoRequisito cpr on ca.iCodCapacitacionProgramaCursoRequisito=cpr.iCodCapacitacionProgramaCursoRequisito  
left join CapacitacionProgramaCursoRequisitoValor cpval on ca.iCodCapacitacionProgramaCursoRequisitoValor=cpval.iCodCapacitacionProgramaCursoRequisitoValor 

 
 where cpc.iCodCapacitacionProgramaCurso in(112) 
 group by 
  cad.iCodCapacitacionAdmision 
GO
/****** Object:  Table [dbo].[UsuarioCliente]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UsuarioCliente](
	[iCodUsuarioCliente] [int] IDENTITY(1,1) NOT NULL,
	[iCodUsuario] [int] NULL,
	[iCodCliente] [int] NULL,
	[iCodClienteCuenta] [int] NULL,
	[cRolUsuario] [varchar](20) NULL,
	[bActivo] [bit] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_UsuarioCliente] PRIMARY KEY CLUSTERED 
(
	[iCodUsuarioCliente] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_UsuarioCliente] UNIQUE NONCLUSTERED 
(
	[iCodUsuario] ASC,
	[iCodCliente] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[main_UsuarioCliente]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create view [dbo].[main_UsuarioCliente] as 
SELECT 
isnull(uc.iCodUsuarioCliente,0) as iCodUsuarioCliente,
isnull(u.iCodUsuario,0) as iCodUsuario ,
isnull(uc.iCodCliente,0) as iCodCliente ,
co.cNomContrata ,
isnull(uc.bActivo ,0) as bActivo
FROM Usuario u 
inner join UsuarioCliente uc on u.iCodUsuario=uc.iCodUsuario 
right join Cliente c on uc.iCodCliente=c.iCodCliente 
inner join Contrata co on c.iCodContrata=co.iCodContrata 
--where u.iCodUsuario in(0)
GO
/****** Object:  View [dbo].[m_CandidatoAdmisionSolicitudRegistroActualizacion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

 create view [dbo].[m_CandidatoAdmisionSolicitudRegistroActualizacion] 
 as 
SELECT  top 200      ca.iCodCandidatoAdmision, 
ci.iCodCandidatoInforme, 
ca.dFechaRegistro, ca.dFechaSolicitud, 
cat.cDesTipoAdmision AS cCandidatoAdmisionTipo, 
 
ci.cDNI,
ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,
ci.cCondicion, ca.bEvaluacion,
ca.bConsentimiento,
 
ca.bAptitud, 
 
ca.bCheckList,
ca.bExpediente,
ci.bCargaBox, ca.bImprocedente,
ca.bNuevo 

FROM            dbo.CandidatoAdmision AS ca INNER JOIN
  dbo.CandidatoInforme AS ci ON ca.iCodCandidatoInforme = ci.iCodCandidatoInforme INNER JOIN
  dbo.CandidatoAdmisionCatalogo AS cat ON ca.iCodCandidatoAdmisionTipo = cat.iCodCandidatoAdmisionCatalogo  
                    



GO
/****** Object:  View [dbo].[m_DashboardPostulantes]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO







CREATE VIEW [dbo].[m_DashboardPostulantes]
AS
select 
case ci.cUbigeo
WHEN '170102' THEN 'COMUNIDAD'
	WHEN '170103' THEN 'COMUNIDAD' 
	WHEN '170104' THEN 'COMUNIDAD' 
	WHEN '170105' THEN 'COMUNIDAD' 
	else ci.cCondicion  end 
 as Condicion,
 case 
when bRucMoq=1 then 'RUC'
 when bTrabajoMoq=1 then 'TR' 
  when bEstudioMoq=1 then 'ES'
 when bConviveMoq=1 then 'CONV'  
when bCasadoMoq=1 then 'MA' 
  when bHijosMoq=1 then 'HI' 
 when bDNIMoq=1 then 'RE' 

 when cCondicion='LOCAL' then 'DNI'    
  when cCondicion='COMUNIDAD' then 'CO'    
 when cCondicion='FORANEO' then 'DNI' end 
 as SustentoLocal,
 
 isnull(u.cDepartamento,'') as DepartamentoNac,
isnull(ur.cDepartamento,'') as DepartamentoRes,
floor(
(cast(convert(varchar(8),getdate(),112) as int)-
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000
) as Edad ,
 case when ci.bSustentoCV=1 then 'SI' 
 else 'NO' end as TieneSustento, 
 case when ci.bEvaluado=1 then 'SI' 
 else 'NO' end as EstaEvaluado ,
  case when ci.bCargaBox=1 then 'SI' 
 else 'NO' end as TieneExpediente,
 case when  ci.cCondicion = 'COMUNIDAD' then  ci.cComunidad 
else case  ci.cUbigeo 
WHEN '170102' THEN 'CARUMAS [DISTRITO]'
WHEN '170103' THEN 'CUCHUMBAYA [DISTRITO]' 
WHEN '170104' THEN 'SANCRISTOBAL [DISTRITO]' 
WHEN '170105' THEN 'TORATA [DISTRITO]'
	else '' 
	end end  as Comunidad,
case when  ci.cCondicion = 'COMUNIDAD' then 'POR CERTIFICADO O PADRON DE COMUNIDAD' 
else 
	case  ci.cUbigeo 
	WHEN '170102' THEN 'POR UBIGEO ANILLO DE INFLUENCIA'
	WHEN '170103' THEN 'POR UBIGEO ANILLO DE INFLUENCIA' 
	WHEN '170104' THEN 'POR UBIGEO ANILLO DE INFLUENCIA' 
	WHEN '170105' THEN 'POR UBIGEO ANILLO DE INFLUENCIA' 
	else ''  end 
end as cGrupoComunidad ,
 case 
  when ci.iTiempoExperiencia<=0 then '[Sin Experiencia]' 
 when ci.iTiempoExperiencia>0 and ci.iTiempoExperiencia<=6 then  '[1m y 6m]' 
 when ci.iTiempoExperiencia>6 and ci.iTiempoExperiencia<=12 then '[6m y <=1 Año]' 
 when ci.iTiempoExperiencia>12 and ci.iTiempoExperiencia<=24 then '[>1 Año y <=2 Años]'  
  when ci.iTiempoExperiencia>24 and ci.iTiempoExperiencia<=36 then '[>2 Años y <=3 Año]'  
 when ci.iTiempoExperiencia>36 and ci.iTiempoExperiencia<=48 then '[>3 Años y <=4 Año]'  
 when ci.iTiempoExperiencia>48 and ci.iTiempoExperiencia<=60 then '[>4 Años y <=5 Año]' 
 when ci.iTiempoExperiencia>60 then '[Más de 5 años]' 
  end as RangoExperiencia,

ci.iTiempoExperiencia as Experiencia,
ci.cOcupacion as Ocupacion,
case 
when ci.cSexo='M' then 'Masculino'
when ci.cSexo='F' then 'Femenino'
end as Genero,

--ci.cSexo as Genero,
ci.cMOCMONC as MOCMONC,
case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then 'NO' 
 else 'SI' 
 end as FFLL ,
 case  
when ci.cCondicion='LOCAL' or ci.cCondicion='RESIDENTE' or ci.cCondicion='COMUNIDAD' THEN
	CASE 
	WHEN ci.cCondicion='COMUNIDAD' THEN 'MARISCAL NIETO' 
	WHEN ci.cUbigeoResidencia like '1701%' THEN 'MARISCAL NIETO' 
	WHEN ci.cUbigeoResidencia like '1702%' THEN 'GRAL. SANCHEZ CERRO' 
	WHEN ci.cUbigeoResidencia like '1703%' THEN 'ILO' 
	WHEN ci.cUbigeo like '1701%' THEN 'MARISCAL NIETO' 
	WHEN ci.cubigeo like '1702%' THEN 'GRAL. SANCHEZ CERRO' 
	WHEN ci.cubigeo like '1703%' THEN 'ILO' 	
	ELSE 'MARISCAL NIETO'
	END
else 'OTRAS PROVINCIAS' end as cProvincia 

from CandidatoInforme ci 
left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.iEstado<>0  and fld.bCesado=0 
  left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
where ci.cCondicion in ('LOCAL','COMUNIDAD','RESIDENTE')  and ci.bEvaluado=1 
 


GO
/****** Object:  View [dbo].[m_DashboardCapacitacionAdmisionResumen]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[m_DashboardCapacitacionAdmisionResumen]
AS
SELECT        cp.iCodCapacitacionPrograma, cp.cNombrePrograma AS Programa, dbo.CapacitacionCursoModulo.cNomCursoModulo AS Modulo, dbo.CapacitacionCurso.cNombreCurso AS Curso, 
                         dbo.CapacitacionAdmision.dFechaRegistro AS [Fecha Registro], dbo.CandidatoInforme.cDNI AS DNI, dbo.CandidatoInforme.cApellidos + ' ' + dbo.CandidatoInforme.cNombres AS [Datos del Postulante], 
                         dbo.CandidatoInforme.cCondicion AS Condicion, dbo.CandidatoInforme.cUbigeoResidencia AS [Ubigeo Residencia], dbo.CandidatoInforme.bEvaluado AS [Eval OAEL], dbo.CandidatoInforme.bContratado AS FFLL, 
                         dbo.CandidatoInforme.bCargaBox AS Expediente, CASE WHEN CapacitacionAdmision.dFechaEvaluaCV = '1900-01-01' THEN '' ELSE CONVERT(varchar, CapacitacionAdmision.dFechaEvaluaCV, 103) END AS dFechaEvaluaCV, 
                         CASE WHEN CapacitacionAdmision.dFechaEvaluaCV <> '1900-01-01' THEN CASE CapacitacionAdmision.bApto WHEN 1 THEN 'APTO' WHEN 0 THEN 'NO APTO' END ELSE 'SIN EVALUAR' END AS [Eval Resultado], 
                         CASE WHEN CapacitacionAdmision.dFechaEvaluacionTecnica = '1900-01-01' THEN '' ELSE CONVERT(varchar, CapacitacionAdmision.dFechaEvaluacionTecnica, 103) END AS dFechaEvaluacionTecnica, 
                         dbo.CapacitacionAdmision.nEvaluacionTecnica, dbo.CapacitacionAdmision.cTipoAlumno, dbo.CapacitacionAdmision.iEstado, dbo.CapacitacionAdmision.bApto, ISNULL(u.cNick, N'') AS cNick, 
                         dbo.CapacitacionAdmision.cLugarInscripcion, CASE CapacitacionAdmision.iTipoCV WHEN 1 THEN 'N' WHEN 2 THEN 'S' WHEN 3 THEN 'A' END AS cTipoCV
FROM            dbo.CapacitacionCurso INNER JOIN
                         dbo.CapacitacionProgramaCurso AS cpc ON dbo.CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
                         dbo.CapacitacionPrograma AS cp ON cpc.iCodCapacitacionPrograma = cp.iCodCapacitacionPrograma INNER JOIN
                         dbo.CapacitacionAdmision ON cpc.iCodCapacitacionProgramaCurso = dbo.CapacitacionAdmision.iCodCapacitacionProgramaCurso INNER JOIN
                         dbo.CandidatoInforme ON dbo.CapacitacionAdmision.iCodCandidatoInforme = dbo.CandidatoInforme.iCodCandidatoInforme INNER JOIN
                         dbo.CapacitacionCursoModulo ON dbo.CapacitacionCurso.iCodCapacitacionCursoModulo = dbo.CapacitacionCursoModulo.iCodCapacitacionCursoModulo LEFT OUTER JOIN
                         dbo.Usuario AS u ON dbo.CapacitacionAdmision.iCodPersonaEvaluaCV = u.iCodPersona
GO
/****** Object:  View [dbo].[mpg_ContratistaContrato]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[mpg_ContratistaContrato] AS  

SELECT 
	cc.iCodContratistaContrato,  
    cc.cGrupoContrato,  
    co.cNomContrata,  
    cc.cNroContrato,
	cc.cAreaUsuaria,
	cc.cZona,
    cc.dFechaTermino
FROM dbo.ContratistaContrato AS cc  
INNER JOIN dbo.Contrata AS co ON cc.iCodContrata = co.iCodContrata  
GO
/****** Object:  View [dbo].[cap_ResultadosTecnico]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[cap_ResultadosTecnico]
AS
SELECT        CapacitacionAdmision.iCodCapacitacionAdmision,
 CapacitacionCursoModulo.cNomCursoModulo, 
 CapacitacionCurso.cNombreCurso, 
 cpc.iCodCapacitacionProgramaCurso, 
cpc.iMeta, 
CandidatoInforme.cDNI, 
 ltrim(rtrim(CandidatoInforme.cApellidos + ' '+ CandidatoInforme.cNombres)) as cNomCompleto, CandidatoInforme.cCondicion, 
CapacitacionAdmision.nEvaluacionTecnica,
CapacitacionAdmision.cTipoAlumno,
 CapacitacionAdmision.iEstado ,
 ROW_NUMBER() over (ORDER BY CapacitacionAdmision.nEvaluacionTecnica DESC) AS iRanking 
   FROM            CapacitacionCurso INNER JOIN
 CapacitacionProgramaCurso cpc ON CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
 CapacitacionAdmision ON cpc.iCodCapacitacionProgramaCurso = CapacitacionAdmision.iCodCapacitacionProgramaCurso INNER JOIN
 CandidatoInforme ON CapacitacionAdmision.iCodCandidatoInforme = CandidatoInforme.iCodCandidatoInforme INNER JOIN
 CapacitacionCursoModulo ON CapacitacionCurso.iCodCapacitacionCursoModulo = CapacitacionCursoModulo.iCodCapacitacionCursoModulo 
 where CapacitacionAdmision.bApto=1 
 
GO
/****** Object:  View [dbo].[a_AnexoAdmision]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[a_AnexoAdmision]
AS
SELECT        aa.iCodAnexoAdmision, co.cNomCorto, ccto.cNroContrato, aa.cNroAnexo, aa.iCorrelativo + '-' + aa.iPeriodo AS cCorrelativo, aa.cGrupo, aat.cResumen, aa.dFechaRegistro  , 
 CASE WHEN convert(date,aa.dFechaAprobacion) = '1900-01-01' THEN '' 
 ELSE CONVERT(varchar, aa.dFechaAprobacion, 103) END AS dFechaAprobacion, 
 aa.bNotificado, aa.cEstado,aa.dFechaSolicitud  
FROM            dbo.AnexoAdmision AS aa INNER JOIN
                         dbo.AnexoAdmisionTipo AS aat ON aa.iCodAnexoAdmisionTipo = aat.iCodAnexoAdmisionTipo INNER JOIN
                         dbo.Contrata AS co ON aa.iCodContrata = co.iCodContrata INNER JOIN
                         dbo.ContratistaContrato AS ccto ON aa.iCodContratistaContrato = ccto.iCodContratistaContrato




GO
/****** Object:  Table [jobs].[InduccionGrupoDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[InduccionGrupoDetalle](
	[iCodInduccionGrupoDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodInduccionGrupo] [int] NULL,
	[iCodPersona] [int] NULL,
	[bConfirmaAsistencia] [bit] NULL,
	[dFechaConfirmacion] [datetime] NULL,
	[bAsistioInduccion] [bit] NULL,
	[nNota] [numeric](12, 2) NULL,
	[cAptitud] [text] NULL,
	[cObs] [text] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [datetime] NULL,
 CONSTRAINT [PK_InduccionConvocatoriaDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodInduccionGrupoDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_InduccionGrupoPersona] UNIQUE NONCLUSTERED 
(
	[iCodInduccionGrupo] ASC,
	[iCodPersona] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [jobs].[InduccionGrupo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[InduccionGrupo](
	[iCodInduccionGrupo] [int] IDENTITY(1,1) NOT NULL,
	[iCodEmpresaCliente] [int] NULL,
	[iCodUnidadMinera] [int] NULL,
	[iCodEmpresaCapacitadora] [int] NULL,
	[iCodRequisitoIngreso] [int] NULL,
	[iCodProyecto] [int] NULL,
	[cGPS] [text] NULL,
	[cDireccion] [text] NULL,
	[dFechaHora] [datetime] NULL,
	[cNotas] [text] NULL,
	[bCerrado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [date] NULL,
 CONSTRAINT [PK_InduccionConvocatoria] PRIMARY KEY CLUSTERED 
(
	[iCodInduccionGrupo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  View [jobs].[v_InduccionGrupoResumen]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [jobs].[v_InduccionGrupoResumen]
AS
SELECT        ig.iCodInduccionGrupo, 
ig.iCodUnidadMinera,
 ig.iCodEmpresaCliente,
 ig.iCodRequisitoIngreso,
 ig.bCerrado, COUNT(igd.iCodInduccionGrupoDetalle) AS iCant
FROM            jobs.InduccionGrupo AS ig LEFT OUTER JOIN
                         jobs.InduccionGrupoDetalle AS igd ON ig.iCodInduccionGrupo = igd.iCodInduccionGrupo
GROUP BY ig.iCodInduccionGrupo, 
ig.iCodUnidadMinera, 
ig.iCodEmpresaCliente,
 ig.bCerrado,
  ig.iCodRequisitoIngreso

GO
/****** Object:  View [dbo].[m_DashboardDesmovilizado]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [dbo].[m_DashboardDesmovilizado]
AS
SELECT        ci.cApellidos + ' ' + ci.cNombres AS [Datos del Trabajador], 
ci.cDNI AS DNI, ci.cSexo AS Sexo,
 ci.cUbigeo AS Ubigeo,
  case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then 'NO' 
 else 'SI' 
 end as FFLL ,
 -- CASE WHEN ci.bContratado = '1' THEN 'SI' ELSE 'NO' END AS FFLL,
   gpd.dFechaOperacion, 
   case isnull(fld.iCodFuerzaLaboralDetalle,0) 
 when 0 then ''
 else 
	   isnull(co.cNomContrata,'') 
end as cEmpresaTrabaja 
  
--  ci.cEmpresaTrabaja AS EmpresaTrabaja,

FROM            dbo.CandidatoInforme AS ci INNER JOIN
                         dbo.GrupoPrioritarioDetalle AS gpd ON ci.iCodCandidatoInforme = gpd.iCodCandidatoInforme INNER JOIN
                         dbo.GrupoPrioritario AS gp ON gp.iCodGrupoPrioritario = gpd.iCodGrupoPrioritario

left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 
left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
left join contrata co on fl.iCodContrata=co.iCodContrata 
WHERE        (gp.iCodCatalogoMaster = 6)



GO
/****** Object:  View [dbo].[cap_AdmisionPostulantesBeca2023]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[cap_AdmisionPostulantesBeca2023] 
as 
SELECT        cad.iCodCapacitacionAdmision,
sum(isnull(cpval.iCalificaDescalifica,0)) as [ReqValor]
--,
--ci.cSexo 
--,

--SELECT 
--isnull( REPLACE(STUFF(
--			(SELECT top 5 '  '+ convert(varchar, cds.dFechaCargaCV, 103)  + ' : '+  co.cNomContrata + char(13)
--			FROM convocatoriadetalle cds 
--			INNER JOIN convocatoria c ON  cds.iCodConvocatoria=c.iCodConvocatoria 
--			inner join convocatoriamain cm on c.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
--			inner join contrata co on cm.iCodContrata=co.iCodContrata    
--			WHERE  cds.dFechaCargaCV<>'1900-01-01' and cds.iCodCandidatoInforme =ci.icodcandidatoinforme  
--			 order by cds.dFechaCargaCV desc 
--			FOR XML PATH ('')
--			),--FIN SELECT
--1,2, ''),'&#x0D;', ' **** ') --FIN STUFF
-- ,'')--FIN ISNULL
--)  as EmpresasPostuladas 


FROM            CapacitacionCurso cc INNER JOIN
 CapacitacionProgramaCurso cpc ON cc.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
 CapacitacionAdmision cad ON cpc.iCodCapacitacionProgramaCurso = cad.iCodCapacitacionProgramaCurso INNER JOIN
 CandidatoInforme ci ON cad.iCodCandidatoInforme = ci.iCodCandidatoInforme  
 inner join  CapacitacionAdmisionRequisitoValor ca on cad.iCodCapacitacionAdmision=ca.iCodCapacitacionAdmision  
left join CapacitacionProgramaCursoRequisito cpr on ca.iCodCapacitacionProgramaCursoRequisito=cpr.iCodCapacitacionProgramaCursoRequisito  
left join CapacitacionProgramaCursoRequisitoValor cpval on ca.iCodCapacitacionProgramaCursoRequisitoValor=cpval.iCodCapacitacionProgramaCursoRequisitoValor 

 
 where cpc.iCodCapacitacionProgramaCurso in(109,110) 
 group by 
  cad.iCodCapacitacionAdmision 
GO
/****** Object:  Table [jobs].[Usuario]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[Usuario](
	[iCodUsuario] [int] IDENTITY(1,1) NOT NULL,
	[iCodPersona] [int] NULL,
	[iCodEmpresaClienteEmpleado] [int] NULL,
	[cRol] [char](2) NULL,
	[cTipo] [char](2) NULL,
	[cNick] [varchar](25) NULL,
	[cClave] [varbinary](800) NULL,
	[dLoginLast] [datetime] NULL,
	[iContLogin] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[bHabilitado] [bit] NULL,
	[iCodUsuarioGestor] [int] NULL,
	[dFechaSistema] [datetime] NULL,
 CONSTRAINT [PK_Usuario] PRIMARY KEY CLUSTERED 
(
	[iCodUsuario] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_Usuario] UNIQUE NONCLUSTERED 
(
	[cNick] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[Persona]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[Persona](
	[iCodPersona] [int] IDENTITY(1,1) NOT NULL,
	[iCodPerfilPuesto] [int] NULL,
	[iCodEmpresaCliente] [int] NULL,
	[cTipoDoc] [varchar](10) NULL,
	[cDni] [varchar](20) NULL,
	[cNombres] [varchar](150) NULL,
	[cApellidos] [varchar](150) NULL,
	[cUbigeo] [varchar](8) NULL,
	[cSexo] [char](1) NULL,
	[cEstCivil] [varchar](10) NULL,
	[cTelefono] [varchar](10) NULL,
	[cCorreo] [varchar](50) NULL,
	[dFechaNacimiento] [date] NULL,
	[cDireccion] [varchar](150) NULL,
	[cCondicion] [varchar](50) NULL,
	[cPuestoEspecialidad] [varchar](150) NULL,
	[cOcupacion] [varchar](150) NULL,
	[cMOCMONC] [varchar](5) NULL,
	[cAptitud] [varchar](20) NULL,
	[cUbigeoResidencia] [varchar](8) NULL,
	[cLicenciaConducir] [varchar](10) NULL,
	[dFechaVerificativa] [date] NULL,
	[iEstadoVerificativa] [int] NULL,
	[iResultadoVerificativa] [int] NULL,
	[iTiempoExperiencia] [int] NULL,
	[bColegiadoProfesional] [bit] NULL,
	[bDisponible] [bit] NULL,
	[dFIniNoDisponible] [date] NULL,
	[dFFinNoDisponible] [date] NULL,
	[cMotivoNoDisponible] [varchar](150) NULL,
	[cEmpresaTrabaja] [varchar](150) NULL,
	[bDiscapacitado] [bit] NULL,
	[cCategoriaRCC] [varchar](50) NULL,
	[nExpectativaSalarial] [numeric](18, 0) NULL,
	[iReputacion] [int] NULL,
	[iNivelSistema] [int] NULL,
	[cTallaCamisa] [varchar](4) NULL,
	[cTallaPantalon] [varchar](4) NULL,
	[cTallaRespirador] [varchar](14) NULL,
	[cTallaZapatos] [char](4) NULL,
	[cUsaLentes] [char](2) NULL,
	[bCesado] [bit] NULL,
	[dFechaCese] [date] NULL,
	[dFechaTerminoContrato] [date] NULL,
	[cCodSisPla] [varchar](20) NULL,
	[dFechaCreacion] [date] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [date] NULL,
 CONSTRAINT [PK_Persona] PRIMARY KEY CLUSTERED 
(
	[iCodPersona] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_NroDoc] UNIQUE NONCLUSTERED 
(
	[cDni] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [jobs].[u_ListaUsuarios]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [jobs].[u_ListaUsuarios]
AS
SELECT        u.iCodUsuario, u.iCodPersona, p.cDni, p.cApellidos + ' ' + p.cNombres AS cNomCompleto, u.cNick
FROM            jobs.Usuario AS u INNER JOIN
                         jobs.Persona AS p ON u.iCodPersona = p.iCodPersona

GO
/****** Object:  View [dbo].[fl_ReporteContratistas]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[fl_ReporteContratistas]
AS
SELECT   co.iCodContrata,co.cNomContrata
FROM            dbo.FuerzaLaboral AS fl INNER JOIN                         
                         dbo.Contrata AS co ON fl.iCodContrata = co.iCodContrata
GROUP BY co.iCodContrata , co.cNomContrata

GO
/****** Object:  View [dbo].[m_Rpt_PostulantesListos]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[m_Rpt_PostulantesListos]
AS
SELECT  ci.iCodCandidatoInforme, cd.iTipoPostulacion, 
CASE cd.iTipoPostulacion WHEN 1 
THEN 'PREFERENCIAL' 
when 2 then 'SUGERIDO' 
WHEN 3 THEN 'EXCEPTUADO'
ELSE '' END AS cTipoPostulacion, 
ci.cDNI, 
 ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,
 ci.cOcupacion+
 (case 
 when ltrim(rtrim(ci.cOcupacion2))='' then ''
 else  
 ' - ' +ci.cOcupacion2 end ) as cOcupacion,
  ci.cCondicion, cd.dFechaMintra, cd.dFechaCargaCV,
   CASE WHEN cd.dFechaCargaCV = '1900-01-01' 
   THEN 'NO' ELSE 'SI' END AS cAtendido, 
 CASE 
 WHEN cd.dFechaCargaCV = '1900-01-01' THEN 0 
 ELSE DATEDIFF(day, cd.dFechaMintra, cd.dFechaCargaCV) END AS iDiasAtencion, 
 ci.dFechaSis AS dFechaRegistro
FROM dbo.CandidatoInforme AS ci INNER JOIN
 dbo.ConvocatoriaDetalle AS cd ON ci.iCodCandidatoInforme = cd.iCodCandidatoInforme
WHERE        (cd.dFechaMintra <> '1900-01-01') 
and ci.bEvaluado=1 
and ci.cAptitud<>'NO APTO'
and  ci.bVerificativa=0 
and ci.iEstadoVerificativa=3  




GO
/****** Object:  View [dbo].[m_DashboardComunidad]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[m_DashboardComunidad]
AS
SELECT        ci.cDNI,ci.cApellidos+' '+ci.cNombres as cNombreCompleto, ci.cSexo, ci.cCondicion, ci.cComunidad,
 ci.cMOCMONC, ci.cAptitud, 
 case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then 'NO' 
 else 'SI' 
 end as cFuerzaLaboral ,
 case isnull(fld.iCodFuerzaLaboralDetalle,0) 
 when 0 then ''
 else 
	case 
	when co.iCodContrata=sco.iCodContrata then   isnull(co.cNomContrata,'NINGUNA') 
	else isnull(co.cNomContrata,'NINGUNA') + ' - ' + isnull(sco.cNomContrata,'NINGUNA') 
	end 
end as cEmpresaTrabaja
 
 -- case bContratado 
-- when 1 then 'SI' 
-- when 0 then 'NO' end as cFuerzaLaboral
-- , cEmpresaTrabaja
FROM            dbo.CandidatoInforme ci 
left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 
left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
left join contrata co on fl.iCodContrata=co.iCodContrata 
left join Contrata sco on fld.iCodSubContrata=sco.iCodContrata
WHERE       cCondicion='COMUNIDAD'




GO
/****** Object:  View [dbo].[m_DahsboardConvocatoriasVigentes]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [dbo].[m_DahsboardConvocatoriasVigentes]
AS
SELECT        co.iCodConvocatoriaMain, 
CASE co.iTipo 
WHEN 1 THEN 'REGULAR' 
WHEN 3 THEN 'ADICIONAL' 
ELSE '' END AS cTipoConvocatoria, 
ct.cNomContrata, 
 c.cPerfil, 
 c.iCantidad, c.cMOCMONC
FROM            dbo.ConvocatoriaMain AS co INNER JOIN
                         dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain INNER JOIN
                         dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata
WHERE        co.dFechaFin >=cast(GETDATE() as date) AND (co.iTipo IN (1, 3))


GO
/****** Object:  View [dbo].[m_DashboardFFLLResumen]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[m_DashboardFFLLResumen]
AS
SELECT 
-- fl.iCodFuerzaLaboral, 
co.cNomContrata, 
CASE fl.iMes 
WHEN 1 THEN 'ENERO'  
WHEN 2 THEN 'FEBRERO'  
 WHEN 3 THEN 'MARZO'  
 WHEN 4 THEN 'ABRIL'  
 WHEN 5 THEN 'MAYO'  
 WHEN 6 THEN 'JUNIO'  
 WHEN 7 THEN 'JULIO'  
 WHEN 8 THEN 'AGOSTO'  
 WHEN 9 THEN 'SETIEMBRE'  
 WHEN 10 THEN 'OCTUBRE'  
 WHEN 11 THEN 'NOVIEMBRE'  
 WHEN 12 THEN 'DICIEMBRE'  
 ELSE '' END AS cMes,
CASE fl.iMes 
WHEN 1 THEN 'ENERO - ' + CAST(fl.iPeriodo AS varchar(4)) 
WHEN 2 THEN 'FEBRERO - ' + CAST(fl.iPeriodo AS varchar(4)) 
 WHEN 3 THEN 'MARZO - ' + CAST(fl.iPeriodo AS varchar(4)) 
 WHEN 4 THEN 'ABRIL - ' + CAST(fl.iPeriodo AS varchar(4)) 
 WHEN 5 THEN 'MAYO - ' + CAST(fl.iPeriodo AS varchar(4)) 
 WHEN 6 THEN 'JUNIO - ' + CAST(fl.iPeriodo AS varchar(4)) 
 WHEN 7 THEN 'JULIO - ' + CAST(fl.iPeriodo AS varchar(4)) 
 WHEN 8 THEN 'AGOSTO - ' + CAST(fl.iPeriodo AS varchar(4)) 
 WHEN 9 THEN 'SETIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4)) 
 WHEN 10 THEN 'OCTUBRE - ' + CAST(fl.iPeriodo AS varchar(4)) 
 WHEN 11 THEN 'NOVIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4)) 
 WHEN 12 THEN 'DICIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4)) 
 ELSE '' END AS cMesPeriodo,

 COUNT(fld.iCodFuerzaLaboralDetalle) AS iCant, 
 sum(case 
when fld.bCesado=1 then 1
else 0 end) as iCesados,
sum(case 
when fld.bCesado=0 then 1
else 0 end) as iActivos,
sum(case 
when (fld.iEstado=0 or fld.iEstado=2) and fld.bCesado=0 then 1 
else 0 end) as iAnteriores, 
sum(case 
when fld.iEstado=1 then 1 
else 0 end) as iNuevos, 
 sum( 
 case
 when fld.cMOCMONC='MOC' and fld.bCesado=0  then 1
 else 0 end ) as iMOC,
  sum( 
 case
 when fld.cMOCMONC='MONC' and fld.bCesado=0  then 1
 else 0 end ) as iMONC,
 sum(case 
when ci.bSustentoCV=1 then 
 case when (ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD')  and fld.bCesado=0 then 1 
else 0 end
else 0
 end) as iLocal,
 sum( 
 case 
when ci.bSustentoCV=1 then 
case 
when (ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD') and fld.bCesado=0  then 0 
		else 
			case 
			when fld.bCesado=0 then 1 
			else 0
			end
		end
else 
	case 
			when fld.bCesado=0 then 1 
			else 0
	end
 end ) as iForaneo,
sum(case 
when ci.cSexo='M' and fld.bCesado=0 then 1
else 0 end) as iMasculino,
sum(case 
when ci.cSexo='F'  and fld.bCesado=0  then 1
else 0
end) as iFemenino,
 fl.iMes, fl.iPeriodo,
 fl.iPeriodo+fl.iMes as iPeriodoGrupo 
FROM  dbo.FuerzaLaboral AS fl 
 INNER JOIN dbo.FuerzaLaboralDetalle AS fld ON fl.iCodFuerzaLaboral = fld.iCodFuerzaLaboral 
 INNER JOIN dbo.Contrata AS co ON fl.iCodContrata = co.iCodContrata 
 INNER JOIN dbo.CandidatoInforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme 

GROUP BY fl.iMes, fl.iPeriodo, co.cNomContrata





GO
/****** Object:  View [dbo].[v_Tempo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [dbo].[v_Tempo]
AS
--SELECT        TOP (100) PERCENT ci.iCodCandidatoInforme AS Nro, ci.iCodCandidatoInforme, ci.cDNI AS DNI, ci.cNombres + ' ' + ci.cApellidos AS Nombres, cc.dFechaContacto AS Fecha, cccm.cDesMotivo AS Motivo, 
--                         cccr.cDesMotivo AS Respuesta, cc.cObs AS Observaciones, ci.iCodCandidatoInforme AS Estandar, ci.iCodCandidatoInforme AS [Nro Actualizar]
--FROM            dbo.CandidatoInforme AS ci INNER JOIN
--                         dbo.CandidatoContacto AS cc ON cc.iCodCandidatoInforme = ci.iCodCandidatoInforme INNER JOIN
 --                        dbo.Usuario AS u ON cc.iCodUsuario = u.iCodUsuario INNER JOIN
  --                       dbo.CandidatoContactoCatalogo AS cccm ON cccm.iCodCandidatoContactoCatalogo = cc.iCodCandidatoContactoMotivo INNER JOIN
 --                        dbo.CandidatoContactoCatalogo AS cccr ON cccr.iCodCandidatoContactoCatalogo = cc.iCodCandidatoContactoRespuesta
--WHERE        (cc.dFechaContacto >= '2020-04-07') AND (cc.dFechaContacto <= '2020-04-22')
--ORDER BY DNI

  select distinct gpd.iCodCandidatoInforme  from 
  GrupoPrioritario gp 
  inner join GrupoPrioritarioDetalle gpd on gp.iCodGrupoPrioritario=gpd.iCodGrupoPrioritario 
   where gp.iCodCatalogoMaster=6 
GO
/****** Object:  View [dbo].[fl_ReporteEvolucionFuerzaLaboral]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view [dbo].[fl_ReporteEvolucionFuerzaLaboral]
as
select ct.cRuc,ct.cNomContrata,
case cc.cFase 
	when 'CO' then 'CONSTRUCCION' 
	when 'OP' then 'OPERACION' 		
	else 'NA' 
end as 'cFase',
cast(fl.iPeriodo as varchar(10)) as iPeriodo,
case fl.iMes
	when 1 then 'Enero'
	when 2 then 'Febrero'
	when 3 then 'Marzo'
	when 4 then 'Abril'
	when 5 then 'Mayo'
	when 6 then 'Junio'
	when 7 then 'Julio'
	when 8 then 'Agosto'
	when 9 then 'Setiembre'
	when 10 then 'Octubre'
	when 11 then 'Noviembre'
	when 12 then 'Diciembre'
end as 'Mes',
month(fl.dFechaSis) as messs, fl.dFechaSis,ci.cCondicion as condLF, ci.cCondicion,
case  
	when ci.cCondicion='LOCAL' or ci.cCondicion='RESIDENTE' or ci.cCondicion='COMUNIDAD' THEN
		CASE 
		WHEN ci.cCondicion='COMUNIDAD' THEN 'MARISCAL NIETO' 
		WHEN ci.cUbigeoResidencia like '1701%' THEN 'MARISCAL NIETO' 
		WHEN ci.cUbigeoResidencia like '1702%' THEN 'GRAL. SANCHEZ CERRO' 
		WHEN ci.cUbigeoResidencia like '1703%' THEN 'ILO' 
		WHEN ci.cUbigeo like '1701%' THEN 'MARISCAL NIETO' 
		WHEN ci.cubigeo like '1702%' THEN 'GRAL. SANCHEZ CERRO' 
		WHEN ci.cubigeo like '1703%' THEN 'ILO' 	
		ELSE 'MARISCAL NIETO'
		END
	ELSE 'OTRAS PROVINCIAS' 
END as 'Provincia',
case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	
end as 'CondicionPer',
fd.cMOCMONC,ci.cDNI,concat(ci.cApellidos,', ',ci.cNombres)as nombre,
case ci.cSexo 
		when 'M' then 'Masculino' 
		when 'F' then 'Femenino'
end as 'Genero'
from FuerzaLaboral as fl
inner join FuerzaLaboralDetalle as fd on fd.iCodFuerzaLaboral = fl.iCodFuerzaLaboral
inner join CandidatoInforme as ci on ci.iCodCandidatoInforme = fd.iCodCandidatoInforme
inner join Contrata as ct on ct.iCodContrata = fl.iCodContrata
inner join ContratistaContrato as cc on cc.iCodContratistaContrato = fl.iCodContratistaContrato
--where fl.iPeriodo=2021 and fl.iMes=2 and fd.bCesado=0
GO
/****** Object:  View [dbo].[v_Estudios]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Script for SelectTopNRows command from SSMS  ******/
create view [dbo].[v_Estudios] as 
SELECT 
  
      [cCentroEstudios]
      ,[iGradoInstruccion]
      ,[cCarrera]
      ,[iSituacionAcademica]
      ,[iGradoAcademico]
      ,[iRankingAcademico]
      ,[iPeriodoInicioMes]
      ,[iPeriodoInicioAno]
      ,[iPeriodoFinMes]
      ,[iPeriodoFinAno]
      ,[bPrincipal]
    
      
  FROM [GTManpowerLocalDESA].[dts].[Estudios] 
  where bActivo=1  
GO
/****** Object:  Table [DataSync].[provision_marker_dss]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [DataSync].[provision_marker_dss](
	[object_id] [int] NOT NULL,
	[owner_scope_local_id] [int] NOT NULL,
	[provision_scope_local_id] [int] NULL,
	[provision_timestamp] [bigint] NOT NULL,
	[provision_local_peer_key] [int] NOT NULL,
	[provision_scope_peer_key] [int] NULL,
	[provision_scope_peer_timestamp] [bigint] NULL,
	[provision_datetime] [datetime] NULL,
	[state] [int] NULL,
	[version] [timestamp] NOT NULL,
 CONSTRAINT [PK_DataSync.provision_marker_dss] PRIMARY KEY CLUSTERED 
(
	[owner_scope_local_id] ASC,
	[object_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [DataSync].[schema_info_dss]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [DataSync].[schema_info_dss](
	[schema_major_version] [int] NOT NULL,
	[schema_minor_version] [int] NOT NULL,
	[schema_extended_info] [nvarchar](100) NOT NULL,
 CONSTRAINT [PK_DataSync.schema_info_dss] PRIMARY KEY CLUSTERED 
(
	[schema_major_version] ASC,
	[schema_minor_version] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [DataSync].[scope_config_dss]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [DataSync].[scope_config_dss](
	[config_id] [uniqueidentifier] NOT NULL,
	[config_data] [xml] NOT NULL,
	[scope_status] [char](1) NULL,
 CONSTRAINT [PK_DataSync.scope_config_dss] PRIMARY KEY CLUSTERED 
(
	[config_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [DataSync].[scope_info_dss]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [DataSync].[scope_info_dss](
	[scope_local_id] [int] IDENTITY(1,1) NOT NULL,
	[scope_id] [uniqueidentifier] NOT NULL,
	[sync_scope_name] [nvarchar](100) NOT NULL,
	[scope_sync_knowledge] [varbinary](max) NULL,
	[scope_tombstone_cleanup_knowledge] [varbinary](max) NULL,
	[scope_timestamp] [timestamp] NULL,
	[scope_config_id] [uniqueidentifier] NULL,
	[scope_restore_count] [int] NOT NULL,
	[scope_user_comment] [nvarchar](max) NULL,
 CONSTRAINT [PK_DataSync.scope_info_dss] PRIMARY KEY CLUSTERED 
(
	[sync_scope_name] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CandidatoAdmisionNotas]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoAdmisionNotas](
	[iCodCandidatoAdmisionNotas] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoAdmision] [int] NULL,
	[cUrlImagen] [varchar](max) NULL,
	[cNotas] [varchar](max) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CandidatoAdmisionNotas] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoAdmisionNotas] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CandidatoAptitudLaboral]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoAptitudLaboral](
	[iCodCandidatoAptitudLaboral] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoInforme] [int] NULL,
	[iCodCandidatoAdmision] [int] NULL,
	[cTipoMMOO] [varchar](5) NULL,
	[cTipoRevision] [varchar](2) NULL,
	[bEmpleableCliente] [bit] NULL,
	[iCodOcupacion] [int] NULL,
	[cOcupacion] [varchar](120) NULL,
	[iTiempoExperiencia] [smallint] NULL,
	[iUltimaExperiencia] [smallint] NULL,
	[cRubroExperiencia] [varchar](50) NULL,
	[cSectorExperiencia] [varchar](20) NULL,
	[iCodOcupacion2] [int] NULL,
	[cOcupacion2] [varchar](120) NULL,
	[iTiempoExperiencia2] [smallint] NULL,
	[iUltimaExperiencia2] [smallint] NULL,
	[cRubroExperiencia2] [varchar](50) NULL,
	[cSectorExperiencia2] [varchar](20) NULL,
	[cEstado] [varchar](3) NULL,
	[cTipoResultado] [varchar](5) NULL,
	[cObservaciones] [varchar](max) NULL,
	[bAptitudLaboralProcede] [bit] NULL,
	[bRevisionCorrecta] [bit] NULL,
	[bActivo] [bit] NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuarioAptitudLaboral] [int] NULL,
	[dFechaAptitudLaboral] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CandidatoAptitudLaboral] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoAptitudLaboral] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CandidatoEstudios]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoEstudios](
	[iCodCandidatoEstudios] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoInforme] [int] NOT NULL,
	[cCentroEstudios] [varchar](250) NULL,
	[iGradoInstruccion] [int] NULL,
	[cCarrera] [varchar](250) NULL,
	[iSituacionAcademica] [tinyint] NULL,
	[iGradoAcademico] [tinyint] NULL,
	[iCicloAcademico] [tinyint] NULL,
	[iRankingAcademico] [tinyint] NULL,
	[iPeriodoInicioMes] [tinyint] NULL,
	[iPeriodoInicioAno] [smallint] NULL,
	[iPeriodoFinMes] [tinyint] NULL,
	[iPeriodoFinAno] [smallint] NULL,
	[bPrincipal] [bit] NULL,
	[bActivo] [bit] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_Estudios] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoEstudios] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CandidatoExperienciaLaboral]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoExperienciaLaboral](
	[iCodCandidatoExperienciaLaboral] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoInforme] [int] NOT NULL,
	[iCodOcupacion] [int] NOT NULL,
	[iCodCandidatoExperienciaNivel] [smallint] NULL,
	[cSectorExperiencia] [varchar](20) NULL,
	[cRubroExperiencia] [varchar](50) NULL,
	[cRegimenExperiencia] [varchar](3) NULL,
	[cEmpresa] [varchar](220) NULL,
	[cPuesto] [varchar](100) NULL,
	[cFuncionesLogros] [varchar](max) NULL,
	[cDestacariasEmpresa] [varchar](max) NOT NULL,
	[iPeriodoInicioMes] [tinyint] NOT NULL,
	[iPeriodoInicioAno] [smallint] NOT NULL,
	[iPeriodoFinMes] [tinyint] NOT NULL,
	[iPeriodoFinAno] [smallint] NOT NULL,
	[dFechaIni] [date] NULL,
	[dFechaFin] [date] NULL,
	[bActualmenteTrabajado] [bit] NULL,
	[bObservado] [bit] NULL,
	[cObservacionExperiencia] [varchar](max) NULL,
	[cReferenciaPersona] [varchar](150) NULL,
	[cReferenciaPuesto] [varchar](70) NULL,
	[cReferenciaFono] [varchar](30) NULL,
	[cReferenciaCalificacion] [varchar](2) NULL,
	[cReferenciaObs] [varchar](max) NULL,
	[dFechaValidacionExperiencia] [date] NULL,
	[iCodUsuarioValidaExperiencia] [int] NULL,
	[cUrlDocumento] [varchar](max) NULL,
	[bActivo] [bit] NULL,
	[bOcupacion1] [bit] NULL,
	[bOcupacion2] [bit] NULL,
	[bDocumentado] [bit] NULL,
	[iCodUsuarioRegistro] [int] NULL,
	[dFechaRegistro] [datetime] NOT NULL,
	[iCodUsuario] [int] NOT NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_ExperienciaLaboral] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoExperienciaLaboral] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CandidatoExperienciaNivel]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoExperienciaNivel](
	[iCodCandidatoExperienciaNivel] [smallint] IDENTITY(1,1) NOT NULL,
	[cNivelExperiencia] [varchar](40) NULL,
	[cRegimenNivel] [varchar](3) NULL,
	[cGrupoNivel] [varchar](40) NULL,
	[iNivel] [tinyint] NULL,
 CONSTRAINT [PK_CandidatoExperienciaNivel] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoExperienciaNivel] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CandidatoFamiliar]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoFamiliar](
	[iCodCandidatoFamiliar] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoInformeTitular] [int] NULL,
	[iCodCandidatoInformeFamiliar] [int] NULL,
	[iCodComunidad] [int] NULL,
	[cTipoVinculo] [varchar](2) NULL,
	[iGrado] [tinyint] NULL,
	[cVinculoFamiliar] [varchar](50) NULL,
	[cPersonaValida] [varchar](50) NULL,
	[dFechaValida] [date] NULL,
	[bComunidadBeneficiario] [bit] NULL,
	[cComunidadBeneficiario] [varchar](50) NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CandidatoBeneficiario] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoFamiliar] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CandidatoInformeTestPsicoRpta]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoInformeTestPsicoRpta](
	[iCodCandidatoInformeTestPsicoRpta] [int] IDENTITY(1,1) NOT NULL,
	[cAptitudTestPsico] [varchar](50) NULL,
	[cCombinacion] [varchar](10) NULL,
	[iRptaA] [tinyint] NULL,
	[iRptaC] [tinyint] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CandidatoInformeTestPsicoRpta] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoInformeTestPsicoRpta] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CandidatoInformeVacuna]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoInformeVacuna](
	[iCodCandidatoInformeVacuna] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoInforme] [int] NULL,
	[cNombreVacuna] [varchar](50) NULL,
	[iDosis] [smallint] NULL,
	[dFechaUltimaDosis] [date] NULL,
	[cDepartamento] [varchar](50) NULL,
	[cMarcaVacuna] [varchar](50) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CandidatoInformeVacuna] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoInformeVacuna] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CandidatoReferencia]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CandidatoReferencia](
	[iCodCandidatoReferencia] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoInforme] [int] NULL,
	[dFechaReferencia] [date] NULL,
	[cEmpresa] [varchar](60) NULL,
	[cNomReferencia] [varchar](70) NULL,
	[cCargoReferencia] [varchar](70) NULL,
	[cCelReferencia] [varchar](20) NULL,
	[cDescripcion] [varchar](250) NULL,
	[iCalificacion] [tinyint] NULL,
	[cObs] [varchar](350) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CandidatoReferencia] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoReferencia] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CapacitacionAdmisionPrevia]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionAdmisionPrevia](
	[iCodCapacitacionAdmisionPrevia] [int] IDENTITY(1,1) NOT NULL,
	[iCodCapacitacionProgramaCurso] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[dFechaRegistro] [date] NULL,
	[bExpedienteOAEL] [bit] NULL,
	[bProcede] [bit] NULL,
	[cGUID] [varchar](400) NULL,
	[cCondicionPrevia] [varchar](50) NULL,
	[cSustentoPrevio] [varchar](50) NULL,
	[iTipoSustento] [tinyint] NULL,
	[cRespuesta] [varchar](100) NULL,
	[cDNI] [varchar](20) NULL,
	[cApellidos] [varchar](50) NULL,
	[cNombres] [varchar](50) NULL,
	[cCorreo] [varchar](50) NULL,
	[cFono] [varchar](50) NULL,
	[cDigitoDNI] [varchar](4) NULL,
	[cCodigoRegistro] [varchar](100) NULL,
	[iTipoProceso] [tinyint] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CapacitacionAdmisionPrevia] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionAdmisionPrevia] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [CandidatoCursoAdmision] UNIQUE NONCLUSTERED 
(
	[iCodCandidatoInforme] ASC,
	[cGUID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CapacitacionFirmaDocumento]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionFirmaDocumento](
	[iCodCapacitacionFirmaDocumento] [int] IDENTITY(1,1) NOT NULL,
	[iCodCapacitacionAdmision] [int] NULL,
	[iCodCapacitacionMatricula] [int] NULL,
	[iCodCapacitacionProgramaCursoDocumentoProceso] [int] NULL,
	[cTitulo] [varchar](150) NULL,
	[cContenido] [varchar](max) NULL,
	[bFirmado] [bit] NULL,
	[cFirma] [image] NULL,
	[dFechaFirma] [datetime] NULL,
	[cGUIconsentimiento] [varchar](250) NULL,
	[cIPconsentimiento] [varchar](50) NULL,
	[cHostConsentimiento] [varchar](200) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionFirmaDocumento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CapacitacionMatriculaAsistencia]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionMatriculaAsistencia](
	[iCodCapacitacionMatriculaAsistencia] [int] IDENTITY(1,1) NOT NULL,
	[iCodCapacitacionMatricula] [int] NULL,
	[iCodCapacitacionGrupo] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[dFecha] [date] NULL,
	[cAsistencia] [varchar](4) NULL,
	[cNotas] [varchar](200) NULL,
	[bJustificado] [bit] NULL,
	[bModificado] [bit] NULL,
	[cTipo] [varchar](4) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CapacitacionMatriculaAsistencia] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionMatriculaAsistencia] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CapacitacionMatriculaProceso]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionMatriculaProceso](
	[iCodCapacitacionMatriculaProceso] [int] IDENTITY(1,1) NOT NULL,
	[iCodCapacitacionMatricula] [int] NULL,
	[iSituacionFinal] [tinyint] NULL,
	[iPenalizacion] [tinyint] NULL,
	[cNotasPenalizacion] [varchar](250) NULL,
	[nNotaFinal] [decimal](4, 2) NULL,
	[dFechaEntregaCertificado] [date] NULL,
	[bCertificado] [bit] NULL,
	[cUrlCertificado] [varchar](max) NULL,
	[iCodUsuario] [smallint] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CapacitacionMatriculaProceso] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionMatriculaProceso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_CapacitacionMatriculaProceso] UNIQUE NONCLUSTERED 
(
	[iCodCapacitacionMatricula] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CapacitacionProgramaCursoDocumentoProceso]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionProgramaCursoDocumentoProceso](
	[iCodCapacitacionProgramaCursoDocumentoProceso] [int] IDENTITY(1,1) NOT NULL,
	[iCodDocumentoGestion] [int] NULL,
	[iCodCapacitacionProgramaCurso] [int] NULL,
	[cFase] [varchar](3) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionProgramaCursoDocumentoProceso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CapacitacionProgramaCursoMalla]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionProgramaCursoMalla](
	[iCodCapacitacionProgramaCursoMalla] [int] IDENTITY(1,1) NOT NULL,
	[cNomCursoMalla] [varchar](50) NULL,
 CONSTRAINT [PK_CapacitacionProgramaCursoMalla] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionProgramaCursoMalla] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CapacitacionProgramaCursoTipo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionProgramaCursoTipo](
	[iCodCapacitacionProgramaCursoTipo] [int] IDENTITY(1,1) NOT NULL,
	[cNombreTipoProgramaCurso] [varchar](50) NULL,
	[bAnulado] [bit] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CapacitacionProgramaCursoTipo] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionProgramaCursoTipo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CapacitacionTipoCurso]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CapacitacionTipoCurso](
	[iCodCapacitacionTipoCurso] [smallint] IDENTITY(1,1) NOT NULL,
	[iCodCliente] [int] NULL,
	[cNomTipoCapacitacion] [varchar](50) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CapacitacionTipoCurso] PRIMARY KEY CLUSTERED 
(
	[iCodCapacitacionTipoCurso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Catalogo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Catalogo](
	[iCodCatalogo] [int] IDENTITY(1,1) NOT NULL,
	[cTabla] [varchar](70) NULL,
	[cNombreGrupo] [varchar](50) NULL,
	[iOrden] [smallint] NULL,
	[cValueMember] [varchar](max) NULL,
	[cDisplayMember] [nvarchar](max) NULL,
	[cFuncion] [varchar](50) NULL,
 CONSTRAINT [PK_TDCatalogos] PRIMARY KEY CLUSTERED 
(
	[iCodCatalogo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CatalogoCarrera]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CatalogoCarrera](
	[iCodCatalogoCarrera] [int] IDENTITY(1,1) NOT NULL,
	[cDescripcion] [varchar](250) NULL,
	[iOrden] [smallint] NULL,
 CONSTRAINT [PK_CatalogoCarrera] PRIMARY KEY CLUSTERED 
(
	[iCodCatalogoCarrera] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CatalogoCentroEstudio]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CatalogoCentroEstudio](
	[iCodCatalogoCentroEstudio] [int] IDENTITY(1,1) NOT NULL,
	[cTipoCentroEstudio] [varchar](20) NULL,
	[cDescripcion] [varchar](250) NULL,
	[iOrden] [int] NULL,
 CONSTRAINT [PK_CatalogoCentroEstudio] PRIMARY KEY CLUSTERED 
(
	[iCodCatalogoCentroEstudio] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CatalogoConocimiento]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CatalogoConocimiento](
	[iCodCatalogoConocimiento] [int] IDENTITY(1,1) NOT NULL,
	[cTipoConocimiento] [varchar](20) NULL,
	[cDescripcion] [varchar](250) NULL,
	[iOrden] [smallint] NULL,
 CONSTRAINT [PK_CatalogoConocimiento] PRIMARY KEY CLUSTERED 
(
	[iCodCatalogoConocimiento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CatalogoEmpresa]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CatalogoEmpresa](
	[iCodCatalogoEmpresa] [int] IDENTITY(1,1) NOT NULL,
	[cDescripcion] [varchar](250) NULL,
	[iOrden] [int] NULL,
 CONSTRAINT [PK_CatalogoEmpresa] PRIMARY KEY CLUSTERED 
(
	[iCodCatalogoEmpresa] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ClienteArea]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ClienteArea](
	[iCodClienteArea] [int] IDENTITY(1,1) NOT NULL,
	[iCodCliente] [int] NULL,
	[iCodClienteCuenta] [int] NULL,
	[iCodClienteAreaTipo] [int] NULL,
	[iCodClienteAreaSuperior] [int] NULL,
	[iCodPersonaResponsable] [int] NULL,
	[cNombreArea] [varchar](200) NULL,
	[cNombreCorto] [varchar](70) NULL,
	[cResponsableNombres] [varchar](80) NULL,
	[cResponsableCargo] [varchar](80) NULL,
	[cResponsableCorreo] [varchar](60) NULL,
	[cResponsableFono] [varchar](20) NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_ClienteArea] PRIMARY KEY CLUSTERED 
(
	[iCodClienteArea] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ClienteAreaPersonal]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ClienteAreaPersonal](
	[iCodClienteAreaPersonal] [int] IDENTITY(1,1) NOT NULL,
	[iCodCliente] [int] NULL,
	[iCodClienteArea] [int] NULL,
	[iCodContratistaContrato] [int] NULL,
	[iCodTDTipoPerfilPersonalCliente] [int] NULL,
	[iCodPersona] [int] NULL,
	[cCargo] [varchar](200) NULL,
	[cCorreo] [varchar](300) NULL,
	[bTitular] [bit] NULL,
	[bAprobador] [bit] NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_ClienteAreaPersonal] PRIMARY KEY CLUSTERED 
(
	[iCodClienteAreaPersonal] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_cCorreo] UNIQUE NONCLUSTERED 
(
	[cCorreo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ClienteConfiguracion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ClienteConfiguracion](
	[iCodClienteConfiguracion] [int] IDENTITY(1,1) NOT NULL,
	[iCodCliente] [int] NULL,
	[iCodConfiguracion] [int] NULL,
	[cValor] [varchar](50) NULL,
	[cValorDetalle] [varchar](50) NULL,
	[bActivo] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_ClienteConfiguracion] PRIMARY KEY CLUSTERED 
(
	[iCodClienteConfiguracion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ClienteCuenta]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ClienteCuenta](
	[iCodClienteCuenta] [int] IDENTITY(1,1) NOT NULL,
	[iCodCliente] [int] NOT NULL,
	[iCodOperacion] [int] NOT NULL,
	[iCodCompania] [smallint] NULL,
	[iCodProyectoNAV] [int] NULL,
	[cDescripcionCuenta] [varchar](200) NOT NULL,
	[bActivo] [bit] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_ClienteCuenta] PRIMARY KEY CLUSTERED 
(
	[iCodClienteCuenta] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Configuracion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Configuracion](
	[iCodConfiguracion] [int] IDENTITY(1,1) NOT NULL,
	[cConfiguracion] [varchar](50) NULL,
	[cConfiguracionDetalle] [varchar](400) NULL,
	[bCifrado] [bit] NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_Configuracion] PRIMARY KEY CLUSTERED 
(
	[iCodConfiguracion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Conocimiento]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Conocimiento](
	[iCodConocimiento] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoInforme] [int] NOT NULL,
	[iCodCatalogoConocimiento] [int] NOT NULL,
	[iNivelConocimiento] [tinyint] NULL,
	[cOtrosConocimientos] [nvarchar](max) NULL,
	[bActivo] [bit] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_Conocimiento] PRIMARY KEY CLUSTERED 
(
	[iCodConocimiento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_ConocimientoPersona] UNIQUE NONCLUSTERED 
(
	[iCodCatalogoConocimiento] ASC,
	[iCodCandidatoInforme] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ContrataCondicion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ContrataCondicion](
	[iCodContrataCondicion] [int] NOT NULL,
	[iCodContrata] [int] NULL,
	[iCodContrataAdmision] [int] NULL,
	[iCodTDCondicionSustentoAnterior] [smallint] NULL,
	[cCondicionAnterior] [varchar](50) NULL,
	[iCodTDCondicionSustentoNueva] [smallint] NULL,
	[cCondicionNueva] [varchar](50) NULL,
	[cCondicionSustento] [varchar](50) NULL,
	[cNotas] [varchar](max) NULL,
	[iCodComunidad] [int] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_ContrataCondicion] PRIMARY KEY CLUSTERED 
(
	[iCodContrataCondicion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ContrataEmpleado]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ContrataEmpleado](
	[iCodContrataEmpleado] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoInforme] [int] NULL,
	[iCodContrata] [int] NULL,
	[iCodContratistaContrato] [int] NULL,
	[iCodUsuarioLogin] [int] NULL,
	[cCargo] [varchar](50) NULL,
	[bActivo] [nchar](10) NULL,
	[cUsuario] [varchar](50) NULL,
	[cClave] [varchar](50) NULL,
	[cTipoUsuario] [varchar](10) NULL,
	[cTipoRol] [varchar](10) NULL,
	[dFechaLastLogin] [datetime] NULL,
	[iCodEmpleadoCrea] [int] NULL,
	[dFechaCreacion] [date] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_ContrataEmpleado] PRIMARY KEY CLUSTERED 
(
	[iCodContrataEmpleado] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ContrataRepresentante]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ContrataRepresentante](
	[iCodContrataRepresentante] [int] IDENTITY(1,1) NOT NULL,
	[iCodContrata] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_ContrataRepresentante] PRIMARY KEY CLUSTERED 
(
	[iCodContrataRepresentante] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ContrataSunatInfo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ContrataSunatInfo](
	[iCodContrataSunatInfo] [int] IDENTITY(1,1) NOT NULL,
	[iCodContrata] [int] NULL,
	[dFechaInscripcion] [date] NULL,
	[dFechaInicioActividades] [date] NULL,
	[cEstadoContribuyente] [varchar](40) NULL,
	[cCondicionContribuyente] [varchar](40) NULL,
	[cDomicilioFiscal] [varchar](250) NULL,
	[cUbigeoDomicilioFiscal] [varchar](8) NULL,
	[cSistemaEmiteComprobante] [varchar](40) NULL,
	[cActividadComercioExterior] [varchar](40) NULL,
	[cSistemaContabilidad] [varchar](30) NULL,
	[cActividadPrincipal] [varchar](max) NULL,
	[iCodRubroEmpresarialPrincipal] [smallint] NULL,
	[cActividadSecundariaUno] [varchar](max) NULL,
	[iCodRubroEmpresarialSecundariaUno] [smallint] NULL,
	[cActividadSecundariaDos] [varchar](max) NULL,
	[iCodRubroEmpresarialSecundariaDos] [smallint] NULL,
	[dFechaBoleta] [date] NULL,
	[dFechaFactura] [date] NULL,
	[dFechaGuiaRemision] [date] NULL,
	[dFechaAfiliadoPle] [date] NULL,
	[cPadron] [varchar](400) NULL,
	[bDeudaCoactiva] [bit] NULL,
	[cDeudaCoactiva] [varchar](50) NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_ContrataSunatInfo] PRIMARY KEY CLUSTERED 
(
	[iCodContrataSunatInfo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ContrataSunatTrabajadores]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ContrataSunatTrabajadores](
	[iCodContrataSunatTrabajadores] [int] IDENTITY(1,1) NOT NULL,
	[iCodContrata] [int] NULL,
	[iPeriodo] [smallint] NULL,
	[iMes] [tinyint] NULL,
	[iNroTrabajadores] [smallint] NULL,
	[iNroPensionistas] [smallint] NULL,
	[iNroPrestadorServicio] [smallint] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_ContrataSunatTrabajadores] PRIMARY KEY CLUSTERED 
(
	[iCodContrataSunatTrabajadores] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_ContrataPeriodoMes] UNIQUE NONCLUSTERED 
(
	[iCodContrata] ASC,
	[iPeriodo] ASC,
	[iMes] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ContratistaContratoPGSEmpleo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ContratistaContratoPGSEmpleo](
	[iCodContratistaContratoPGSEmpleo] [int] IDENTITY(1,1) NOT NULL,
	[iCodContratistaContrato] [int] NULL,
	[nPorcentajeMONC] [decimal](6, 2) NULL,
	[nPorcentajeMOSC] [decimal](6, 2) NULL,
	[nPorcentajeMOC] [decimal](6, 2) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_ContratistaContratoPGSEmpleo] PRIMARY KEY CLUSTERED 
(
	[iCodContratistaContratoPGSEmpleo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ContratistaContratoRenovacion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ContratistaContratoRenovacion](
	[iCodContratistaContratoRenovacion] [int] IDENTITY(1,1) NOT NULL,
	[iCodContratistaContrato] [int] NULL,
	[iCodContrata] [int] NULL,
	[dFechaTerminoAnterior] [date] NULL,
	[dFechaTerminoNuevo] [date] NULL,
	[cMotivoAmpliacion] [varchar](max) NULL,
	[cObservaciones] [varchar](max) NULL,
	[iEstado] [tinyint] NULL,
	[cEstado] [varchar](30) NULL,
	[iCodUsuarioSolicita] [int] NULL,
	[dFechaSolicita] [datetime] NULL,
	[iCodUsuarioAprueba] [int] NULL,
	[dFechaAprueba] [datetime] NULL,
	[iCodUsuarioAnula] [int] NULL,
	[dFechaAnula] [datetime] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_iCodContratistaContratoRenovacion] PRIMARY KEY CLUSTERED 
(
	[iCodContratistaContratoRenovacion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ContratistaContratoResponsable]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ContratistaContratoResponsable](
	[iCodContratistaContratoResponsable] [smallint] IDENTITY(1,1) NOT NULL,
	[iCodContratistaContrato] [smallint] NOT NULL,
	[iCodPersona] [int] NULL,
	[cCargo] [varchar](max) NULL,
	[bOperadorContrato] [bit] NULL,
	[bFuerzaLaboral] [bit] NULL,
	[bEmpleo] [bit] NULL,
	[bProveeduria] [bit] NULL,
	[bCapacitacion] [bit] NULL,
	[bEvaluacionDesempeno] [bit] NULL,
	[bRDP] [bit] NULL,
	[cObs] [varchar](max) NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_ContratistaContratoResponsable] PRIMARY KEY CLUSTERED 
(
	[iCodContratistaContratoResponsable] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ConvocatoriaComunidad]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ConvocatoriaComunidad](
	[iCodConvocatoriaComunidad] [int] IDENTITY(1,1) NOT NULL,
	[iCodConvocatoria] [int] NULL,
	[iCodComunidad] [varchar](max) NULL,
	[iCodConvocatoriaMain] [int] NULL,
	[cComunidad] [varchar](max) NULL,
	[iCantidad] [int] NULL,
	[iCodPersonaGestorComunidad] [int] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_ConvocatoriaComunidad] PRIMARY KEY CLUSTERED 
(
	[iCodConvocatoriaComunidad] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ConvocatoriaDetalleHistorial]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ConvocatoriaDetalleHistorial](
	[iCodConvocatoriaDetalleHistorial] [int] IDENTITY(1,1) NOT NULL,
	[iCodConvocatoriaDetalle] [int] NOT NULL,
	[cSeleccinado] [nvarchar](3) NOT NULL,
	[cRptaContrata] [nvarchar](100) NOT NULL,
	[cObs] [nvarchar](1000) NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[iCodConvocatoriaDetalleHistorial] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CorreoEnvio]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CorreoEnvio](
	[iCodCorreoEnvio] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoAdmision] [int] NOT NULL,
	[iCodCandidatoInforme] [int] NULL,
	[cNickCreacion] [nvarchar](50) NOT NULL,
	[cPlantilla] [nvarchar](100) NULL,
	[cTitulo] [nvarchar](200) NULL,
	[cMensaje] [nvarchar](max) NULL,
	[cNombreClienteRemitente] [varchar](100) NULL,
	[cCorreoRemitente] [nvarchar](100) NOT NULL,
	[cKeyRemitente] [varchar](200) NULL,
	[cCorreoDestino] [nvarchar](100) NOT NULL,
	[cCorreoCopia] [nvarchar](100) NULL,
	[bEnviado] [bit] NOT NULL,
	[dFechaEnvio] [datetime] NULL,
	[iCodUsuarioEnvio] [int] NULL,
	[bReenviado] [bit] NOT NULL,
	[cNombres] [nvarchar](200) NULL,
	[cUsuario] [nvarchar](50) NULL,
	[cClave] [nvarchar](100) NULL,
	[cFechaFinBloqueo] [datetime] NULL,
	[cFechaFinObservado] [datetime] NULL,
	[cNomContrata] [nvarchar](200) NULL,
	[cUrlDrive] [nvarchar](500) NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK__CorreoEn__E7D4585B7F835CF0] PRIMARY KEY CLUSTERED 
(
	[iCodCorreoEnvio] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Cuestionario]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Cuestionario](
	[iCodCuestionario] [int] IDENTITY(1,1) NOT NULL,
	[cNombre] [varchar](255) NOT NULL,
	[bFechaConLimite] [bit] NULL,
	[dFechaInicio] [date] NOT NULL,
	[dFechaTermino] [date] NOT NULL,
	[cEstado] [varchar](4) NOT NULL,
	[nPuntajeMinimoAprobatorio] [decimal](6, 2) NOT NULL,
	[cDetalleCuestionario] [nvarchar](1000) NOT NULL,
	[cTipoCuestionario] [varchar](30) NULL,
	[cTipoProceso] [varchar](8) NULL,
	[cModalidad] [varchar](4) NULL,
	[iTiempoMinutos] [tinyint] NOT NULL,
	[bEditable] [bit] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_Cuestionario9] PRIMARY KEY CLUSTERED 
(
	[iCodCuestionario] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CuestionarioCapacitacion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CuestionarioCapacitacion](
	[iCodCuestionarioCapacitacion] [int] IDENTITY(1,1) NOT NULL,
	[iCodCuestionario] [int] NULL,
	[iCodCapacitacionPrograma] [int] NULL,
	[iCodCapacitacionCursoModulo] [int] NULL,
	[iCodCapacitacionProgramaCurso] [int] NULL,
	[cFase] [varchar](2) NULL,
	[iOrden] [tinyint] NULL,
	[dFechaInicio] [date] NULL,
	[dFechaFin] [date] NULL,
	[cEstado] [varchar](4) NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_CapacitacionCuestionario] PRIMARY KEY CLUSTERED 
(
	[iCodCuestionarioCapacitacion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CuestionarioConvocatoria]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CuestionarioConvocatoria](
	[iCodCuestionarioConvocatoria] [int] IDENTITY(1,1) NOT NULL,
	[iCodCuestionario] [int] NULL,
	[iCodConvocatoriaMain] [int] NULL,
	[iCodConvocatoria] [int] NULL,
	[cFase] [varchar](2) NULL,
	[iOrden] [tinyint] NULL,
	[dFechaInicio] [date] NULL,
	[dFechaFin] [date] NULL,
	[cEstado] [varchar](4) NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_CuestionarioConvocatoria] PRIMARY KEY CLUSTERED 
(
	[iCodCuestionarioConvocatoria] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_CuestionarioConvocatoria] UNIQUE NONCLUSTERED 
(
	[iCodCuestionario] ASC,
	[iCodConvocatoria] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CuestionarioPostulante]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CuestionarioPostulante](
	[iCodCuestionarioPostulante] [int] IDENTITY(1,1) NOT NULL,
	[iCodCuestionario] [int] NOT NULL,
	[iCodCuestionarioCapacitacion] [int] NULL,
	[iCodCuestionarioConvocatoria] [int] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[iCodCapacitacionAdmision] [int] NULL,
	[iCodCapacitacionMatricula] [int] NULL,
	[iCodConvocatoriaMain] [int] NULL,
	[iCodConvocatoria] [int] NULL,
	[dFechaInicio] [datetime] NULL,
	[dFechaFin] [datetime] NULL,
	[iEstado] [int] NULL,
	[bEnviado] [bit] NULL,
	[nPuntaje] [decimal](6, 2) NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_iCodCuestionarioPostulante] PRIMARY KEY CLUSTERED 
(
	[iCodCuestionarioPostulante] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CuestionarioPostulanteRespuestas]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CuestionarioPostulanteRespuestas](
	[iCodCuestionarioPostulanteRespuestas] [int] IDENTITY(1,1) NOT NULL,
	[iCodCuestionarioPostulante] [int] NOT NULL,
	[iCodCuestionarioPreguntas] [int] NOT NULL,
	[iCodCuestionarioPreguntasOpciones] [int] NOT NULL,
	[iCalificaDescalifica] [smallint] NULL,
	[cRespuestaOpcion] [varchar](500) NULL,
	[nPuntajeRespuesta] [decimal](6, 2) NOT NULL,
	[bRespondido] [bit] NULL,
	[cOtraRespuesta] [varchar](450) NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_iCodCuestionarioPostulanteRespuestas] PRIMARY KEY CLUSTERED 
(
	[iCodCuestionarioPostulanteRespuestas] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CuestionarioPreguntas]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CuestionarioPreguntas](
	[iCodCuestionarioPreguntas] [int] IDENTITY(1,1) NOT NULL,
	[iCodCuestionario] [int] NOT NULL,
	[cPregunta] [varchar](255) NOT NULL,
	[nPuntaje] [decimal](6, 2) NULL,
	[iEstado] [tinyint] NULL,
	[cTipoPregunta] [char](1) NULL,
	[cTipoLista] [varchar](20) NULL,
	[cTipoVista] [varchar](20) NULL,
	[bMultiple] [bit] NULL,
	[bAleatorio] [bit] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_iCodCuestionarioPreguntas] PRIMARY KEY CLUSTERED 
(
	[iCodCuestionarioPreguntas] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CuestionarioPreguntasOpciones]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CuestionarioPreguntasOpciones](
	[iCodCuestionarioPreguntasOpciones] [int] IDENTITY(1,1) NOT NULL,
	[iCodCuestionarioPreguntas] [int] NOT NULL,
	[cDescripcion] [varchar](255) NULL,
	[iOrden] [int] NULL,
	[nPuntaje] [decimal](6, 2) NULL,
	[iCalificaDescalifica] [smallint] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_Opciones14] PRIMARY KEY CLUSTERED 
(
	[iCodCuestionarioPreguntasOpciones] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Dependencia]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Dependencia](
	[iCodDependencia] [int] IDENTITY(8,1) NOT NULL,
	[cTipo] [varchar](2) NULL,
	[cDesDependencia] [varchar](250) NULL,
	[cSigla] [varchar](50) NULL,
	[cRotulo] [varchar](50) NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_dependencia_iCodDependencia] PRIMARY KEY CLUSTERED 
(
	[iCodDependencia] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DependenciaPersona]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DependenciaPersona](
	[iCodDependenciaPersona] [int] IDENTITY(1,1) NOT NULL,
	[iCodPersona] [int] NOT NULL,
	[iCodDependencia] [int] NOT NULL,
 CONSTRAINT [PK_dependenciapersona_iCodPersona] PRIMARY KEY CLUSTERED 
(
	[iCodPersona] ASC,
	[iCodDependencia] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [dependenciapersona$iCodDependenciaPersona_UNIQUE] UNIQUE NONCLUSTERED 
(
	[iCodDependenciaPersona] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DocumentoGestion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DocumentoGestion](
	[iCodDocumentoGestion] [int] IDENTITY(1,1) NOT NULL,
	[cDescripcion] [varchar](150) NULL,
	[cTitulo] [varchar](150) NULL,
	[cContenido] [varchar](max) NULL,
	[cTipoProceso] [varchar](1) NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[iCodDocumentoGestion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[EvaluacionArbol]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[EvaluacionArbol](
	[iCodEvaluacionArbol] [int] IDENTITY(1,1) NOT NULL,
	[cAptitudPositiva] [varchar](max) NULL,
	[cAptitudNegativa] [varchar](max) NULL,
	[iNroArbol] [int] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[iCodEvaluacionArbol] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[EvaluacionArbolCombinacion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[EvaluacionArbolCombinacion](
	[iCodEvaluacionArbolCombinacion] [int] IDENTITY(1,1) NOT NULL,
	[iCodArbolPos] [int] NULL,
	[iCodArbolNeg] [int] NULL,
	[cAptitud] [varchar](30) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
	[bAnulado] [bit] NULL,
PRIMARY KEY CLUSTERED 
(
	[iCodEvaluacionArbolCombinacion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[EvaluacionDesempeno]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[EvaluacionDesempeno](
	[iCodEvaluacionDesempeno] [int] IDENTITY(1,1) NOT NULL,
	[iCodFuerzaLaboralDetalle] [int] NOT NULL,
	[iCodCandidatoInforme] [int] NOT NULL,
	[cTipoEvaluacion] [nvarchar](max) NOT NULL,
	[dFechaSolicitud] [datetime] NOT NULL,
	[dFechaEvaluacion] [datetime] NOT NULL,
	[bEsEvaluado] [bit] NULL,
	[nPuntajeTotalEvaluacion] [decimal](10, 2) NOT NULL,
	[cNombreSupervisor] [nvarchar](max) NOT NULL,
	[cComentarioSupervisor] [nvarchar](max) NOT NULL,
	[cComentarioEmpleado] [nvarchar](max) NOT NULL,
	[cPuestoPromovido] [nvarchar](max) NOT NULL,
	[dFechaContratacion] [datetime] NOT NULL,
	[bActivo] [bit] NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_EvaluacionDesempeno] PRIMARY KEY CLUSTERED 
(
	[iCodEvaluacionDesempeno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[EvaluacionDesempenoDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[EvaluacionDesempenoDetalle](
	[iCodEvaluacionDesempenoDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodEvaluacionDesempeno] [int] NOT NULL,
	[iCodEvaluacionRubroDetalle] [int] NOT NULL,
	[cDescripcionEvaluacionRubro] [nvarchar](max) NOT NULL,
	[cDescripcionEvaluacionRubroDetalle] [nvarchar](max) NOT NULL,
	[nPuntajeEvaluacion] [decimal](10, 2) NOT NULL,
	[bActivo] [bit] NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_EvaluacionDesempenoDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodEvaluacionDesempenoDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[EvaluacionRubro]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[EvaluacionRubro](
	[iCodEvaluacionRubro] [int] IDENTITY(1,1) NOT NULL,
	[cDescripcionEvaluacionRubro] [nvarchar](max) NOT NULL,
	[nPonderacion] [decimal](10, 2) NOT NULL,
	[bTipoEvaluacionIngreso] [bit] NULL,
	[bTipoEvaluacionCese] [bit] NULL,
	[bTipoEvaluacionAuditoria] [bit] NULL,
	[bTipoEvaluacionCambioPuesto] [bit] NULL,
	[bActivo] [bit] NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_EvaluacionRubro] PRIMARY KEY CLUSTERED 
(
	[iCodEvaluacionRubro] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[EvaluacionRubroDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[EvaluacionRubroDetalle](
	[iCodEvaluacionRubroDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodEvaluacionRubro] [int] NOT NULL,
	[cDescripcionEvaluacionRubroDetalle] [nvarchar](max) NOT NULL,
	[nPuntaje] [decimal](10, 2) NOT NULL,
	[bHabilitado] [bit] NULL,
	[bActivo] [bit] NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_EvaluacionRubroDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodEvaluacionRubroDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ExperienciaLaboral]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ExperienciaLaboral](
	[iCodExperienciaLaboral] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoInforme] [int] NOT NULL,
	[iCodPosicion] [int] NOT NULL,
	[iCodEmpresaRubro] [int] NOT NULL,
	[cEmpresa] [varchar](220) NULL,
	[cPuesto] [varchar](100) NULL,
	[cFuncionesLogros] [varchar](max) NULL,
	[cDestacariasEmpresa] [varchar](max) NOT NULL,
	[iCodRegion] [int] NOT NULL,
	[iPeriodoInicioMes] [tinyint] NOT NULL,
	[iPeriodoInicioAno] [smallint] NOT NULL,
	[iPeriodoFinMes] [tinyint] NOT NULL,
	[iPeriodoFinAno] [smallint] NOT NULL,
	[bActualmenteTrabajado] [bit] NULL,
	[cReferenciaPersona] [varchar](150) NULL,
	[cReferenciaPuesto] [varchar](70) NULL,
	[cReferenciaFono] [varchar](30) NULL,
	[cUrlDocumento] [varchar](max) NULL,
	[bActivo] [bit] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_ExperienciaLaboralExp] PRIMARY KEY CLUSTERED 
(
	[iCodExperienciaLaboral] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LogVisita]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LogVisita](
	[iCodLogVisita] [int] IDENTITY(1,1) NOT NULL,
	[cProceso] [varchar](50) NULL,
	[cDNI] [varchar](50) NULL,
	[iCodCandidatoInforme] [int] NULL,
	[iCodProceso] [int] NULL,
	[dFechaHora] [datetime] NULL,
	[cTipo] [varchar](35) NULL,
 CONSTRAINT [PK_LogVisita] PRIMARY KEY CLUSTERED 
(
	[iCodLogVisita] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PersonaGestorComunidad]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PersonaGestorComunidad](
	[iCodPersonaGestorComunidad] [int] IDENTITY(1,1) NOT NULL,
	[iCodPersona] [int] NULL,
	[iCodComunidad] [int] NULL,
	[bHabilitar] [bit] NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_PersonaGestorComunidad] PRIMARY KEY CLUSTERED 
(
	[iCodPersonaGestorComunidad] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_PersonaGestorComunidad] UNIQUE NONCLUSTERED 
(
	[iCodPersona] ASC,
	[iCodComunidad] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PersonaJuridica]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PersonaJuridica](
	[iCodPersonaJuridica] [int] IDENTITY(10,1) NOT NULL,
	[iCodPersona] [int] NOT NULL,
	[cRazonSocial] [varchar](240) NULL,
	[cNomCorto] [varchar](40) NULL,
 CONSTRAINT [PK_personajuridica_iCodPersonaJuridica] PRIMARY KEY CLUSTERED 
(
	[iCodPersonaJuridica] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [personajuridica$iCodPersona_UNIQUE] UNIQUE NONCLUSTERED 
(
	[iCodPersona] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PostulacionVirtual]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PostulacionVirtual](
	[iCodPostulacionVirtual] [int] NOT NULL,
	[iCodCandidatoInforme] [int] NULL,
	[iCodConvocatoria] [int] NULL,
	[cDNI] [varchar](15) NULL,
	[dFechaPostulacion] [datetime] NULL,
	[bAtentido] [bit] NULL,
	[bPostulado] [bit] NULL,
	[cObs] [varchar](300) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [date] NULL,
 CONSTRAINT [PK_PostulacionVirtual] PRIMARY KEY CLUSTERED 
(
	[iCodPostulacionVirtual] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PracticantesProceso]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PracticantesProceso](
	[iCodPracticantesProceso] [int] IDENTITY(1,1) NOT NULL,
	[iCodCliente] [int] NULL,
	[cNomProceso] [varchar](90) NULL,
	[iTipo] [tinyint] NULL,
	[iPeriodo] [smallint] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_PracticantesProceso] PRIMARY KEY CLUSTERED 
(
	[iCodPracticantesProceso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Puesto]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Puesto](
	[iCodPuesto] [int] IDENTITY(1,1) NOT NULL,
	[iCodCliente] [int] NOT NULL,
	[cCodigo] [varchar](50) NOT NULL,
	[cDescripcion] [varchar](150) NULL,
	[cTipoRegimen] [varchar](50) NULL,
	[bActivo] [bit] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_Puesto] PRIMARY KEY CLUSTERED 
(
	[iCodPuesto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PuestoPerfil]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PuestoPerfil](
	[iCodPuestoPerfil] [int] IDENTITY(1,1) NOT NULL,
	[iCodPuesto] [int] NOT NULL,
	[iCodPlantillaHablidades] [int] NOT NULL,
	[iEdadRequeridaMinima] [int] NOT NULL,
	[iEdadRequeridaMaxima] [int] NULL,
	[cGenero] [char](1) NULL,
	[bViajar] [bit] NULL,
	[cTipoContrato] [varchar](500) NULL,
	[nRemuneracionMinima] [decimal](10, 2) NULL,
	[nRemuneracionMaxima] [decimal](10, 2) NULL,
	[nRemuneracionProvinciaMinima] [decimal](10, 2) NULL,
	[nRemuneracionProvinciaMaxima] [decimal](10, 2) NULL,
	[cLugar] [varchar](500) NULL,
	[iCodGradoSalarial] [int] NULL,
	[cHorario] [varchar](150) NULL,
	[cMisionRazonPuesto] [varchar](max) NULL,
	[cContribucionPuestoAlNegocio] [varchar](max) NULL,
	[cCaracteristicasEquipoTrabajo] [varchar](max) NULL,
	[cDondeUbicaOrganigramaPuesto] [varchar](max) NULL,
	[cFunciones] [varchar](max) NULL,
	[iGradoInstruccion] [tinyint] NULL,
	[cCicloMin] [varchar](4) NULL,
	[cCicloMax] [varchar](4) NULL,
	[cRankingAcademico] [varchar](max) NULL,
	[cEspecializacion] [varchar](max) NULL,
	[cExperienciaOtroPuesto] [varchar](max) NULL,
	[cTiempoExperienciaOtroPuesto] [varchar](4) NULL,
	[cExperienciaRubro] [varchar](max) NULL,
	[cTiempoExperienciaOtroRubro] [varchar](4) NULL,
	[cSupervisionDirecta] [varchar](max) NULL,
	[cSupervisionDirectaRangoCant] [varchar](100) NULL,
	[cSupervisionIndirecta] [varchar](max) NULL,
	[cSupervisionIndirectaRangoCant] [varchar](100) NULL,
	[cFuncionesSupervisa] [varchar](max) NULL,
	[cObservacionesAdicionales] [varchar](max) NULL,
	[cPropuestaValor] [varchar](max) NULL,
	[cInformacionAdicional] [varchar](max) NULL,
	[cConocimientos] [varchar](max) NULL,
	[cIdiomas] [varchar](max) NULL,
	[cUniversidades] [varchar](max) NULL,
	[cProfesiones] [varchar](max) NULL,
	[cHabilidades] [varchar](max) NULL,
	[bActivo] [bit] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_PuestoPerfil] PRIMARY KEY CLUSTERED 
(
	[iCodPuestoPerfil] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[RPT_Fragentation_M]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RPT_Fragentation_M](
	[Fragmentation] [int] NULL,
	[BD] [varchar](100) NULL,
	[INDICE] [varchar](200) NULL,
	[SchemaName] [varchar](200) NULL,
	[TABLA] [varchar](200) NULL,
	[IndiceTipo] [varchar](200) NULL,
	[TableSizeInMB] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SeguridadClaveHistorial]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SeguridadClaveHistorial](
	[iCodSeguridadClaveHistorial] [int] IDENTITY(1,1) NOT NULL,
	[iCodUsuario] [int] NULL,
	[cClave] [varchar](250) NOT NULL,
	[iNroCorrelativo] [int] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
 CONSTRAINT [PK_SeguridadClaveHistorial] PRIMARY KEY CLUSTERED 
(
	[iCodSeguridadClaveHistorial] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SeguridadMFA]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SeguridadMFA](
	[iCodSeguridadMFA] [int] IDENTITY(1,1) NOT NULL,
	[iCodUsuario] [int] NULL,
	[iCodPersona] [int] NULL,
	[cTipo] [varchar](5) NULL,
	[cToken] [varchar](50) NULL,
	[cTokenBinary] [varchar](250) NULL,
	[dFechaHoraIni] [datetime] NULL,
	[dFechaHoraFin] [datetime] NULL,
	[bAutenticado] [bit] NULL,
 CONSTRAINT [PK_SeguridadMFA] PRIMARY KEY CLUSTERED 
(
	[iCodSeguridadMFA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SeguridadUsuarioHistorial]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SeguridadUsuarioHistorial](
	[iCodSeguridadUsuarioHistorial] [int] IDENTITY(1,1) NOT NULL,
	[cNick] [varchar](50) NOT NULL,
	[iCodUsuario] [int] NULL,
	[cTipoLogOnOff] [varchar](250) NOT NULL,
	[iNroIntentosLogOn] [int] NULL,
	[bIngresoAplicacion] [bit] NOT NULL,
	[dFechaLogOnOff] [datetime] NOT NULL,
	[cHostName] [varchar](250) NOT NULL,
	[cIP] [varchar](250) NOT NULL,
	[bBloqueado] [bit] NULL,
	[dFechaBloqueo] [datetime] NULL,
 CONSTRAINT [PK_SeguridadUsuarioHistorial] PRIMARY KEY CLUSTERED 
(
	[iCodSeguridadUsuarioHistorial] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TDCatalogo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TDCatalogo](
	[iCodTDCatalogo] [int] IDENTITY(1,1) NOT NULL,
	[cTabla] [varchar](30) NULL,
	[cNombreGrupo] [varchar](50) NULL,
	[iOrden] [tinyint] NULL,
	[cValueMember] [varchar](200) NULL,
	[cDisplayMember] [varchar](200) NULL,
	[cValor] [varchar](50) NULL,
 CONSTRAINT [PK_TDCatalogo] PRIMARY KEY CLUSTERED 
(
	[iCodTDCatalogo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TDCentroEstudios]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TDCentroEstudios](
	[iCodCentroEstudios] [int] IDENTITY(1,1) NOT NULL,
	[iTipo] [tinyint] NULL,
	[cNombreCentroEstudios] [varchar](150) NULL,
	[cNomCorto] [varchar](100) NULL,
 CONSTRAINT [PK_TDCentroEstudios] PRIMARY KEY CLUSTERED 
(
	[iCodCentroEstudios] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TDIni]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TDIni](
	[iCodTDIni] [int] IDENTITY(1,1) NOT NULL,
	[iCodUsuario] [int] NULL,
	[cNick] [varchar](50) NULL,
	[cHost] [varchar](100) NULL,
	[cUser] [varchar](50) NULL,
	[cNet] [varchar](200) NULL,
	[cTipo] [char](1) NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_TDIni] PRIMARY KEY CLUSTERED 
(
	[iCodTDIni] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TDLugar]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TDLugar](
	[iCodLugar] [int] IDENTITY(1,1) NOT NULL,
	[cNomLugar] [varchar](120) NULL,
	[cDirLugar] [varchar](200) NULL,
	[bAnulado] [bit] NULL,
 CONSTRAINT [PK_lugar_iCodLugar] PRIMARY KEY CLUSTERED 
(
	[iCodLugar] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TDPais]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TDPais](
	[iCodPais] [smallint] IDENTITY(1,1) NOT NULL,
	[cPais] [varchar](50) NULL,
 CONSTRAINT [PK_TDPais] PRIMARY KEY CLUSTERED 
(
	[iCodPais] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TDTipoConvocatoria]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TDTipoConvocatoria](
	[iCodTDTipoConvocatoria] [int] IDENTITY(1,1) NOT NULL,
	[cDesTDTipoConvocatoria] [varchar](50) NULL,
	[bPublicar] [bit] NULL,
	[bDirecto] [bit] NULL,
	[bIndirecto] [bit] NULL,
	[bExterno] [bit] NULL,
	[bAnulado] [bit] NULL,
 CONSTRAINT [PK_TDTipoConvocatoria] PRIMARY KEY CLUSTERED 
(
	[iCodTDTipoConvocatoria] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UConfig]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UConfig](
	[iCodUConfig] [int] IDENTITY(1,1) NOT NULL,
	[cDisplay] [varchar](200) NULL,
	[cValue1] [varbinary](1000) NULL,
	[cValue2] [varbinary](1000) NULL,
	[cValue3] [varbinary](1000) NULL,
	[cValue4] [varbinary](1000) NULL,
	[cValue5] [varbinary](1000) NULL,
 CONSTRAINT [PK_UConfig] PRIMARY KEY CLUSTERED 
(
	[iCodUConfig] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UConfig2]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UConfig2](
	[iCodUConfig2] [int] IDENTITY(1,1) NOT NULL,
	[cName] [varchar](50) NULL,
	[cValue1] [varchar](1500) NULL,
	[cValue2] [varchar](1500) NULL,
	[cValue3] [varchar](150) NULL,
 CONSTRAINT [PK_UConfig2] PRIMARY KEY CLUSTERED 
(
	[iCodUConfig2] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UsuarioApp]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UsuarioApp](
	[iCodUsuarioApp] [int] IDENTITY(1,1) NOT NULL,
	[iCodCandidatoInforme] [int] NULL,
	[cNick] [varchar](50) NULL,
	[cClave] [varbinary](1000) NULL,
	[dLastLogin] [datetime] NULL,
	[bAnulado] [bit] NULL,
 CONSTRAINT [PK_UsuarioApp] PRIMARY KEY CLUSTERED 
(
	[iCodUsuarioApp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_CandidatoInforme] UNIQUE NONCLUSTERED 
(
	[iCodCandidatoInforme] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_Nick] UNIQUE NONCLUSTERED 
(
	[cNick] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UsuarioPerfil]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UsuarioPerfil](
	[iCodUsuarioPerfil] [int] IDENTITY(1,1) NOT NULL,
	[iCodUsuarioSistema] [int] NULL,
	[cPerfil] [varchar](50) NULL,
	[bActivo] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_UsuarioPerfil] PRIMARY KEY CLUSTERED 
(
	[iCodUsuarioPerfil] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UsuarioReporteCatalogo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UsuarioReporteCatalogo](
	[iCodUsuarioReporteCatalogo] [int] IDENTITY(1,1) NOT NULL,
	[iCodUsuarioSistema] [int] NULL,
	[iCodReporteCatalogo] [int] NULL,
	[bHabilitar] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_UsuarioReporteCatalogo] PRIMARY KEY CLUSTERED 
(
	[iCodUsuarioReporteCatalogo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_UsuarioReporteCatalogo] UNIQUE NONCLUSTERED 
(
	[iCodUsuarioSistema] ASC,
	[iCodReporteCatalogo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[Alerta]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[Alerta](
	[iCodAlerta] [int] IDENTITY(1,1) NOT NULL,
	[iCodEmpresaCliente] [int] NULL,
	[iCodPersona] [int] NULL,
	[cTipo] [varchar](5) NULL,
	[iCodProceso] [int] NULL,
	[cTitulo] [varchar](300) NULL,
	[iTiempoMaximo] [int] NULL,
	[bRequiereConfirmacion] [bit] NULL,
	[bResultadoConfirmacion] [bit] NULL,
	[bCerrado] [bit] NULL,
	[bRespondido] [bit] NULL,
	[bLeido] [bit] NULL,
	[iCodCandidatoInforme] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuario] [int] NOT NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_AlertaDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodAlerta] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_Alerta] UNIQUE NONCLUSTERED 
(
	[iCodEmpresaCliente] ASC,
	[iCodProceso] ASC,
	[cTipo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[AlertaDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[AlertaDetalle](
	[iCodAlertaDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodAlerta] [int] NULL,
	[cContenido] [text] NULL,
	[bVisto] [bit] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_Alerta] PRIMARY KEY CLUSTERED 
(
	[iCodAlertaDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [jobs].[CategoriaPersona]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[CategoriaPersona](
	[iCodCategoriaPersona] [int] IDENTITY(1,1) NOT NULL,
	[iCodEmpresaCliente] [int] NULL,
	[iCodUnidadMinera] [int] NULL,
	[iCodPerfilPuesto] [int] NULL,
	[cNombrePerfilPuestoCliente] [varchar](150) NULL,
	[dFechaCreacion] [date] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [date] NULL,
 CONSTRAINT [PK_CategoriaPersona] PRIMARY KEY CLUSTERED 
(
	[iCodCategoriaPersona] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[CursoInduccion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[CursoInduccion](
	[iCodCursoInduccion] [int] IDENTITY(1,1) NOT NULL,
	[cNomCurso] [varchar](50) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_CursoInduccion] PRIMARY KEY CLUSTERED 
(
	[iCodCursoInduccion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[DerechoHabiente]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[DerechoHabiente](
	[iCodDerechoHabiente] [int] IDENTITY(1,1) NOT NULL,
	[iCodPersona] [int] NOT NULL,
	[cDni] [varchar](8) NULL,
	[cNombres] [varchar](150) NULL,
	[cApellidos] [varchar](150) NULL,
	[cTipo] [varchar](10) NULL,
	[cTelefono] [varchar](10) NULL,
	[cCorreo] [varchar](50) NULL,
	[cRutaPartida] [text] NULL,
	[cRutaDni] [text] NULL,
	[dFechaCreacion] [date] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [date] NULL,
 CONSTRAINT [PK_DerechoHabiente] PRIMARY KEY CLUSTERED 
(
	[iCodDerechoHabiente] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [jobs].[EMOConvocatoria]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[EMOConvocatoria](
	[iCodEMOConvocatoria] [int] IDENTITY(1,1) NOT NULL,
	[iCodEmpresaCliente] [int] NULL,
	[iCodUnidadMinera] [int] NULL,
	[iCodClinica] [int] NULL,
	[iCodProyecto] [int] NULL,
	[cGPS] [varchar](150) NULL,
	[cDireccion] [varchar](250) NULL,
	[cNotas] [text] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [datetime] NULL,
 CONSTRAINT [PK_EMOConvocatoria] PRIMARY KEY CLUSTERED 
(
	[iCodEMOConvocatoria] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_iCodProyecto] UNIQUE NONCLUSTERED 
(
	[iCodProyecto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [jobs].[EMOConvocatoriaDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[EMOConvocatoriaDetalle](
	[iCodEMOConvocatoriaDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodEMOConvocatoria] [int] NULL,
	[iCodPersona] [int] NULL,
	[dFechaHoraEMO] [datetime] NULL,
	[bConfirmaAsistencia] [bit] NULL,
	[dFechaConfirmacion] [datetime] NULL,
	[bAsistioEMO] [bit] NULL,
	[cAptitud] [char](2) NULL,
	[bObservado] [bit] NULL,
	[cObs] [text] NULL,
	[cURLDoc] [text] NULL,
	[dFechaResultado] [date] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [datetime] NULL,
 CONSTRAINT [PK_EMOConvocatoriaDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodEMOConvocatoriaDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_EMOPersona] UNIQUE NONCLUSTERED 
(
	[iCodEMOConvocatoria] ASC,
	[iCodPersona] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [jobs].[Empresa]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[Empresa](
	[iCodEmpresa] [int] IDENTITY(1,1) NOT NULL,
	[cRUC] [varchar](15) NULL,
	[cRazonSocial] [varchar](250) NULL,
	[cNomComercial] [varchar](250) NULL,
	[cTipo] [varchar](5) NULL,
	[cFonoCorporativo] [varchar](20) NULL,
	[cNomContacto] [varchar](100) NULL,
	[cFonoContacto] [varchar](20) NULL,
	[cCorreoContacto] [varchar](50) NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [datetime] NULL,
 CONSTRAINT [PK_Empresa] PRIMARY KEY CLUSTERED 
(
	[iCodEmpresa] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[EmpresaClienteEmpleado]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[EmpresaClienteEmpleado](
	[iCodEmpresaClienteEmpleado] [int] IDENTITY(1,1) NOT NULL,
	[iCodEmpresaCliente] [int] NULL,
	[iCodPersona] [int] NULL,
	[iCodCentroCosto] [int] NULL,
	[iCodArea] [int] NULL,
	[iCodCompania] [int] NULL,
	[cOP] [varchar](20) NULL,
	[cCargo] [varchar](50) NULL,
	[dFechaContrato] [date] NULL,
	[dFechaCese] [date] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [datetime] NULL,
 CONSTRAINT [PK_EmpresaClienteEmpleado] PRIMARY KEY CLUSTERED 
(
	[iCodEmpresaClienteEmpleado] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[ExperienciaLaboral]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[ExperienciaLaboral](
	[iCodExperienciaLaboral] [int] IDENTITY(1,1) NOT NULL,
	[iCodPersona] [int] NULL,
	[cCargo] [varchar](150) NULL,
	[cCategoriaMP] [varchar](150) NULL,
	[cNombrePuesto] [varchar](150) NULL,
	[dFechaIni] [date] NULL,
	[dFechaFin] [date] NULL,
	[nTiempoExperiencia] [numeric](6, 2) NULL,
	[cRutaDocumento] [text] NULL,
	[dFechaCreacion] [date] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [date] NULL,
 CONSTRAINT [PK_ExperienciaLaboralJob] PRIMARY KEY CLUSTERED 
(
	[iCodExperienciaLaboral] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [jobs].[FormacionEducativa]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[FormacionEducativa](
	[iCodFormacionEducativa] [int] IDENTITY(1,1) NOT NULL,
	[iCodPersona] [int] NULL,
	[cCentroEducativo] [varchar](150) NULL,
	[cNivelEducativo] [varchar](150) NULL,
	[cAreaEducativa] [varchar](150) NULL,
	[cEstado] [varchar](150) NULL,
	[dFPeriodoInicio] [date] NULL,
	[dFPeriodoFin] [date] NULL,
	[cDocumentoSustento] [text] NULL,
	[dFechaCreacion] [date] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [date] NULL,
 CONSTRAINT [PK_Educacion] PRIMARY KEY CLUSTERED 
(
	[iCodFormacionEducativa] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [jobs].[PerfilPuesto]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[PerfilPuesto](
	[iCodPerfilPuesto] [int] IDENTITY(1,1) NOT NULL,
	[iCodEmpresaCliente] [int] NULL,
	[cNomPerfilPuesto] [varchar](150) NULL,
	[iCodPerfilPuestoGrupo] [int] NULL,
	[cDesPerfilPuesto] [varchar](500) NULL,
	[cMOCMONC] [varchar](5) NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [datetime] NULL,
 CONSTRAINT [PK_PerfilPuesto] PRIMARY KEY CLUSTERED 
(
	[iCodPerfilPuesto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[PerfilPuestoGrupo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[PerfilPuestoGrupo](
	[iCodPerfilPuestoGrupo] [smallint] IDENTITY(1,1) NOT NULL,
	[iCodUnidadMinera] [int] NULL,
	[iCodEmpresaCliente] [int] NULL,
	[cNomGrupo] [varchar](50) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_PerfilPuestoGrupo] PRIMARY KEY CLUSTERED 
(
	[iCodPerfilPuestoGrupo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[PerfilPuestoGrupoRequisitoIngreso]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[PerfilPuestoGrupoRequisitoIngreso](
	[iCodPerfilPuestoGrupoRequisitoIngreso] [int] IDENTITY(1,1) NOT NULL,
	[iCodPerfilPuestoGrupo] [int] NULL,
	[iCodRequisitoIngreso] [int] NULL,
	[bVigente] [bit] NULL,
 CONSTRAINT [PK_PerfilPuestoGrupoRequisitoIngreso] PRIMARY KEY CLUSTERED 
(
	[iCodPerfilPuestoGrupoRequisitoIngreso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [IX_PerfilPuestoGrupoRequisitoIngreso] UNIQUE NONCLUSTERED 
(
	[iCodPerfilPuestoGrupo] ASC,
	[iCodRequisitoIngreso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[PersonaEMO]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[PersonaEMO](
	[iCodPersonaEMO] [int] IDENTITY(1,1) NOT NULL,
	[iCodPersona] [int] NULL,
	[iCodUnidadMinera] [int] NULL,
	[iCodEMOConvocatoriaDetalle] [int] NULL,
	[dFechaIni] [date] NULL,
	[dFechaFin] [date] NULL,
	[iDiasVigencia] [int] NULL,
	[cAptitud] [text] NULL,
	[iCodCandidato] [int] NULL,
	[bVigente] [bit] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [datetime] NULL,
 CONSTRAINT [PK_CandidatoEMO] PRIMARY KEY CLUSTERED 
(
	[iCodPersonaEMO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [jobs].[PersonaInduccion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[PersonaInduccion](
	[iCodCandidatoInduccion] [int] IDENTITY(1,1) NOT NULL,
	[iCodPersona] [int] NULL,
	[iCodUnidadMinera] [int] NULL,
	[iCodInduccionConvocatoriaDetalle] [int] NULL,
	[dFechaIni] [date] NULL,
	[iCodCurso] [int] NULL,
	[dFechaFin] [date] NULL,
	[iDiasVigencia] [int] NULL,
	[cAptitud] [text] NULL,
	[bVigente] [bit] NULL,
	[cURLDoc] [text] NULL,
	[dFechaCreacion] [date] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [date] NULL,
 CONSTRAINT [PK_CandidatoInduccion] PRIMARY KEY CLUSTERED 
(
	[iCodCandidatoInduccion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [jobs].[PersonaRequisitoAdmision]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[PersonaRequisitoAdmision](
	[iCodPersonaRequisitoAdmision] [int] IDENTITY(1,1) NOT NULL,
	[iCodPersona] [int] NULL,
	[iCodUnidadMinera] [int] NULL,
	[bExamenMedico] [bit] NULL,
	[dFechaIniExamenMedico] [date] NULL,
	[dFechaFinExamenMedico] [date] NULL,
	[bInduccionGral] [bit] NULL,
	[dFechaIniInduccionGral] [date] NULL,
	[dFechaFinInduccionGral] [date] NULL,
	[bReglas] [bit] NULL,
	[dFechaIniReglas] [date] NULL,
	[dFechaFinReglas] [date] NULL,
	[bEspacioConfinado] [bit] NULL,
	[dFechaIniEspacioConfinado] [date] NULL,
	[dFechaFinEspacioConfinado] [date] NULL,
	[bTrabajoAltura] [bit] NULL,
	[dFechaIniTrabajoAltura] [date] NULL,
	[dFechaFinTrabajoAltura] [date] NULL,
	[bLototo] [bit] NULL,
	[dFechaIniLototo] [date] NULL,
	[dFechaFinLototo] [date] NULL,
	[bMoly] [bit] NULL,
	[dFechaIniMoly] [date] NULL,
	[dFechaFinMoly] [date] NULL,
	[bSeguridadSalud] [bit] NULL,
	[dFechaIniSeguridadSalud] [date] NULL,
	[dFechaFinSeguridadSalud] [date] NULL,
	[bOperaciones] [bit] NULL,
	[dFechaIniOperaciones] [date] NULL,
	[dFechaFinOperaciones] [date] NULL,
	[bSCTR] [bit] NULL,
	[dFechaIniSCTR] [date] NULL,
	[dFechaFinSCTR] [date] NULL,
	[bVidaLey] [bit] NULL,
	[dFechaIniVidaLey] [date] NULL,
	[dFechaFinVidaLey] [date] NULL,
	[cCodigoInterno] [varchar](25) NULL,
	[cNroContrato] [varchar](50) NULL,
	[dFechaFinContrato] [date] NULL,
	[bActivo] [bit] NULL,
	[bDevolvioFotocheck] [bit] NULL,
	[dFechaIniFotocheck] [date] NULL,
	[dFechaFinFotocheck] [date] NULL,
	[cObs] [varchar](50) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_PersonaRequisitoAdmision] PRIMARY KEY CLUSTERED 
(
	[iCodPersonaRequisitoAdmision] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_PersonaUnidadMinera] UNIQUE NONCLUSTERED 
(
	[iCodPersona] ASC,
	[iCodUnidadMinera] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[PersonaRequisitoIngreso]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[PersonaRequisitoIngreso](
	[iCodPersonaRequisitoIngreso] [int] IDENTITY(1,1) NOT NULL,
	[iCodPersona] [int] NULL,
	[iCodRequisitoIngreso] [int] NULL,
	[iCodEmpresaCliente] [int] NULL,
	[iCodUnidadMinera] [int] NULL,
	[bAplica] [bit] NULL,
	[dFechaIni] [date] NULL,
	[dFechaFin] [date] NULL,
	[bActivo] [bit] NULL,
	[cObs] [varchar](500) NULL,
	[cUrlDoc] [varchar](50) NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_PersonaRequisitoIngreso] PRIMARY KEY CLUSTERED 
(
	[iCodPersonaRequisitoIngreso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[Proyecto]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[Proyecto](
	[iCodProyecto] [int] IDENTITY(1,1) NOT NULL,
	[iCodEmpresaCliente] [int] NULL,
	[iCodUnidadMinera] [int] NULL,
	[cNomProyecto] [varchar](180) NULL,
	[cBrief] [text] NULL,
	[dFechaIni] [date] NULL,
	[dFechaFin] [date] NULL,
	[cTurno] [varchar](10) NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [datetime] NULL,
 CONSTRAINT [PK_Proyecto] PRIMARY KEY CLUSTERED 
(
	[iCodProyecto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [jobs].[ProyectoDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[ProyectoDetalle](
	[iCodProyectoDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodProyecto] [int] NULL,
	[iCodPerfilPuesto] [int] NULL,
	[cNomPuesto] [text] NULL,
	[cDetalle] [text] NULL,
	[iCantidad] [int] NULL,
	[iTiempoExperiencia] [smallint] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [datetime] NULL,
 CONSTRAINT [PK_ProyectoDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodProyectoDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_ProyectoPerfilPuesto] UNIQUE NONCLUSTERED 
(
	[iCodProyecto] ASC,
	[iCodPerfilPuesto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [jobs].[ProyectoDetallePersona]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[ProyectoDetallePersona](
	[iCodProyectoDetallePersona] [int] IDENTITY(1,1) NOT NULL,
	[iCodProyectoDetalle] [int] NULL,
	[iCodPersona] [int] NULL,
	[bConfirmaAsistencia] [bit] NULL,
	[dFechaConfirmacion] [datetime] NULL,
	[bSeleccionado] [bit] NULL,
	[dFechaCreacion] [date] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [date] NULL,
 CONSTRAINT [PK_ProyectoDetalleCandidato] PRIMARY KEY CLUSTERED 
(
	[iCodProyectoDetallePersona] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_ProyectoDetallePersona] UNIQUE NONCLUSTERED 
(
	[iCodProyectoDetalle] ASC,
	[iCodPersona] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[ReferenciaLaboral]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[ReferenciaLaboral](
	[iCodReferenciaLaboral] [int] IDENTITY(1,1) NOT NULL,
	[iCodExperienciaLaboral] [int] NOT NULL,
	[cNombres] [varchar](150) NULL,
	[cApellidos] [varchar](150) NULL,
	[cRazonSocial] [varchar](150) NULL,
	[cTelefono] [varchar](10) NULL,
	[cCorreo] [varchar](50) NULL,
	[dFechaCreacion] [date] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [date] NULL,
 CONSTRAINT [PK_ReferenciaLaboral] PRIMARY KEY CLUSTERED 
(
	[iCodReferenciaLaboral] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[RequisitoIngreso]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[RequisitoIngreso](
	[iCodRequisitoIngreso] [int] IDENTITY(1,1) NOT NULL,
	[iCodEmpresaCliente] [int] NULL,
	[iCodUnidadMinera] [int] NULL,
	[cNomRequisito] [varchar](50) NULL,
	[cDesRequisito] [varchar](200) NULL,
	[cTipo] [varchar](5) NULL,
	[nImpacto] [decimal](6, 2) NULL,
	[iOrden] [tinyint] NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSis] [datetime] NULL,
 CONSTRAINT [PK_RequisitoIngreso] PRIMARY KEY CLUSTERED 
(
	[iCodRequisitoIngreso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[Ubigeo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[Ubigeo](
	[iCodUbigeo] [smallint] IDENTITY(1,1) NOT NULL,
	[cUbigeo] [varchar](8) NULL,
	[cDepartamento] [varchar](20) NULL,
	[cProvincia] [varchar](30) NULL,
	[cDistrito] [varchar](35) NULL,
 CONSTRAINT [PK_Ubigeo] PRIMARY KEY CLUSTERED 
(
	[iCodUbigeo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [jobs].[UnidadMinera]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [jobs].[UnidadMinera](
	[iCodUnidadMinera] [int] IDENTITY(1,1) NOT NULL,
	[iCodEmpresa] [int] NULL,
	[cNomUnidadMinera] [varchar](250) NULL,
	[cUbigeo] [varchar](8) NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuario] [int] NULL,
	[dFechaSistema] [datetime] NULL,
 CONSTRAINT [PK_UnidadMinera] PRIMARY KEY CLUSTERED 
(
	[iCodUnidadMinera] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [lib].[Catalogo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [lib].[Catalogo](
	[iCodCatalogo] [int] IDENTITY(1,1) NOT NULL,
	[cTabla] [varchar](70) NULL,
	[cNombreGrupo] [varchar](50) NULL,
	[iOrden] [smallint] NULL,
	[cValueMember] [varchar](max) NULL,
	[cDisplayMember] [nvarchar](max) NULL,
	[cFuncion] [varchar](50) NULL,
 CONSTRAINT [PK_Catalogo] PRIMARY KEY CLUSTERED 
(
	[iCodCatalogo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [lib].[Categoria]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [lib].[Categoria](
	[iCodCategoria] [int] IDENTITY(1,1) NOT NULL,
	[cNombreCategoria] [varchar](max) NULL,
	[cNombreCorto] [varchar](max) NULL,
	[iNroOrden] [varchar](1) NULL,
	[bActivo] [bit] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_Categoria] PRIMARY KEY CLUSTERED 
(
	[iCodCategoria] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [lib].[Correo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [lib].[Correo](
	[iCodCorreo] [int] IDENTITY(1,1) NOT NULL,
	[cNombreTabla] [varchar](max) NULL,
	[iCodigoRegistro] [int] NULL,
	[iCodCorreoPlantilla] [int] NULL,
	[cDestinatarios] [varchar](max) NULL,
	[cConCopia] [varchar](max) NULL,
	[bTieneAdjuntos] [bit] NULL,
	[iCodArchivoAdjuntos] [int] NULL,
	[bActivo] [bit] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_Correo] PRIMARY KEY CLUSTERED 
(
	[iCodCorreo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [lib].[Documento]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [lib].[Documento](
	[iCodDocumento] [int] IDENTITY(1,1) NOT NULL,
	[iCodCliente] [int] NOT NULL,
	[iCodCategoria] [int] NOT NULL,
	[cTituloDocumento] [varchar](max) NULL,
	[cDescripcionDocumento] [varchar](max) NULL,
	[cNombreDocumento] [varchar](max) NULL,
	[cExtensionDocumento] [varchar](max) NULL,
	[cUrlDocumento] [varchar](max) NULL,
	[iNivelImportancia] [int] NULL,
	[iPeriodo] [smallint] NULL,
	[iMes] [tinyint] NULL,
	[dFechaRegistro] [datetime] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_Documento] PRIMARY KEY CLUSTERED 
(
	[iCodDocumento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [lib].[DocumentoDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [lib].[DocumentoDetalle](
	[iCodDocumentoDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodDocumento] [int] NOT NULL,
	[iCodTagDetalle] [int] NOT NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_DocumentoDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodDocumentoDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [lib].[DocumentoVersion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [lib].[DocumentoVersion](
	[iCodDocumentoVersion] [int] IDENTITY(1,1) NOT NULL,
	[iCodDocumento] [int] NOT NULL,
	[iNroVersion] [int] NOT NULL,
	[cTituloVersion] [varchar](max) NULL,
	[cDescripcionVersion] [varchar](max) NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_DocumentoVersion] PRIMARY KEY CLUSTERED 
(
	[iCodDocumentoVersion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [lib].[Tag]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [lib].[Tag](
	[iCodTag] [int] IDENTITY(1,1) NOT NULL,
	[iCodCliente] [int] NOT NULL,
	[cNombreTag] [varchar](max) NULL,
	[cDescripcionTag] [varchar](max) NULL,
	[bActivo] [bit] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_Tag] PRIMARY KEY CLUSTERED 
(
	[iCodTag] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [lib].[TagDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [lib].[TagDetalle](
	[iCodTagDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodTag] [int] NOT NULL,
	[cNombreTagDetalle] [varchar](max) NULL,
	[cDescripcionTagDetalle] [varchar](max) NULL,
	[bActivo] [bit] NULL,
	[dFechaCreacion] [datetime] NOT NULL,
	[iCodUsuarioCreacion] [int] NOT NULL,
	[dFechaModificacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
 CONSTRAINT [PK_TagDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodTagDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [prov].[CatalogoBienesServicios]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[CatalogoBienesServicios](
	[iCodCatalogoBienesServicios] [int] IDENTITY(1,1) NOT NULL,
	[iCodRubroBienesServicios] [int] NULL,
	[iCodCategoriaBienesServicios] [int] NULL,
	[iCodTipoMedida] [int] NULL,
	[cTipo] [char](1) NULL,
	[cDetalleBienesServicios] [varchar](max) NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_CatalogoBienesServicios] PRIMARY KEY CLUSTERED 
(
	[iCodCatalogoBienesServicios] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [prov].[CategoriaBienesServicios]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[CategoriaBienesServicios](
	[iCodCategoriaBienesServicios] [int] IDENTITY(1,1) NOT NULL,
	[iCodRubroBienesServicios] [int] NULL,
	[cCategoriaBienesServicios] [varchar](250) NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_CategoriaBienesServicios] PRIMARY KEY CLUSTERED 
(
	[iCodCategoriaBienesServicios] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [prov].[Eje]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[Eje](
	[iCodEje] [int] IDENTITY(1,1) NOT NULL,
	[cNomEje] [varchar](70) NULL,
	[cDetalleEje] [varchar](250) NULL,
	[nPonderacion] [decimal](6, 2) NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_Eje] PRIMARY KEY CLUSTERED 
(
	[iCodEje] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [prov].[EjeCriterio]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[EjeCriterio](
	[iCodEjeCriterio] [int] IDENTITY(1,1) NOT NULL,
	[iCodEje] [int] NULL,
	[cNomCriterio] [varchar](150) NULL,
	[cDetalleCriterio] [varchar](max) NULL,
	[cTiempoRevision] [varchar](2) NULL,
	[cFormaRevision] [varchar](3) NULL,
	[nPonderacion] [decimal](6, 2) NULL,
	[bDeshabilitado] [bit] NULL,
	[nValorSuperior] [decimal](6, 2) NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_EjeCriterio] PRIMARY KEY CLUSTERED 
(
	[iCodEjeCriterio] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [prov].[EjeCriterioValor]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[EjeCriterioValor](
	[iCodEjeCriterioValor] [int] IDENTITY(1,1) NOT NULL,
	[iCodEjeCriterio] [int] NULL,
	[cDetalleValor] [varchar](max) NULL,
	[nPuntuacion] [decimal](6, 2) NULL,
	[iCalificaDescalifica] [smallint] NULL,
	[iOrden] [tinyint] NULL,
	[bAnulado] [bit] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_EjeCriterioValor] PRIMARY KEY CLUSTERED 
(
	[iCodEjeCriterioValor] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [prov].[EvaluacionIME]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[EvaluacionIME](
	[iCodEvaluacionIME] [int] IDENTITY(1,1) NOT NULL,
	[iCodContrata] [int] NULL,
	[iPeriodo] [smallint] NULL,
	[iMes] [tinyint] NULL,
	[iNroEvaluacion] [tinyint] NULL,
	[nPuntuacionTotal] [decimal](6, 2) NULL,
	[cTipoEvaluacion] [varchar](5) NULL,
	[cEstado] [varchar](4) NULL,
	[bFinalizado] [bit] NULL,
	[dFechaFinalizado] [datetime] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_EvaluacionIME] PRIMARY KEY CLUSTERED 
(
	[iCodEvaluacionIME] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_EvaluacionIMEContrataPeriodo] UNIQUE NONCLUSTERED 
(
	[iCodContrata] ASC,
	[iPeriodo] ASC,
	[iMes] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [prov].[EvaluacionIMEDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[EvaluacionIMEDetalle](
	[iCodEvaluacionIMEDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodEvaluacionIME] [int] NULL,
	[iCodEjeCriterio] [int] NULL,
	[iCodEjeCriterioValor] [int] NULL,
	[cNomCriterio] [varchar](max) NULL,
	[cDetalleValor] [varchar](max) NULL,
	[iPeriodo] [smallint] NULL,
	[iMes] [tinyint] NULL,
	[iCalificaDescalifica] [smallint] NULL,
	[nPuntuacion] [decimal](6, 2) NULL,
	[bRevisado] [bit] NULL,
	[cEstadoRevisadoAnterior] [varchar](10) NULL,
	[cEstadoRevisado] [varchar](10) NULL,
	[cLogEvaluacion] [varchar](max) NULL,
	[cObs] [varchar](max) NULL,
	[iCodUsuarioRevisado] [int] NULL,
	[dFechaUsuarioRevisado] [datetime] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_EvaluacionIMEDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodEvaluacionIMEDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_EvaluacionIMEDetalleValor] UNIQUE NONCLUSTERED 
(
	[iCodEvaluacionIME] ASC,
	[iCodEjeCriterio] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [prov].[Requerimiento]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[Requerimiento](
	[iCodRequerimiento] [int] IDENTITY(1,1) NOT NULL,
	[iCodCliente] [int] NULL,
	[iCodclienteCuenta] [int] NULL,
	[iCodContrata] [int] NULL,
	[iCodContratistaContrato] [int] NULL,
	[iCodSubContrata] [int] NULL,
	[iCodTipoMoneda] [int] NULL,
	[iCodTipoRequerimiento] [smallint] NULL,
	[iCodTipoEstadoRequerimiento] [smallint] NULL,
	[cEstado] [varchar](30) NULL,
	[iPeriodo] [smallint] NULL,
	[iCorrelativo] [smallint] NULL,
	[cNroRequerimiento] [varchar](15) NULL,
	[cSolicitante] [varchar](200) NULL,
	[dFechaSolicitud] [datetime] NULL,
	[iCodUsuarioSolicitud] [int] NULL,
	[dFechaEnvio] [datetime] NULL,
	[iCodUsuarioEnvio] [int] NULL,
	[dFechaAprobacion] [datetime] NULL,
	[iCodUsuarioAprueba] [int] NULL,
	[bAprobado] [bit] NULL,
	[dFechaDesaAprobacionCliente] [datetime] NULL,
	[iCodUsuarioDesaAprobacionCliente] [int] NULL,
	[bAprobadoCliente] [bit] NULL,
	[cObs] [varchar](max) NULL,
	[iCodUsuarioEstado] [int] NULL,
	[dFechaEstado] [datetime] NULL,
	[dFechaConvocatoriaIni] [date] NULL,
	[dFechaConvocatoriaFin] [date] NULL,
	[dFechaRegistroIni] [datetime] NULL,
	[dFechaRegistroFin] [datetime] NULL,
	[bFechaConsultas] [bit] NULL,
	[dFechaConsultasIni] [date] NULL,
	[dFechaConsultasFin] [date] NULL,
	[bFechaRespuestas] [bit] NULL,
	[dFechaRespuestasIni] [date] NULL,
	[dFechaRespuestasFin] [date] NULL,
	[bFechaIntegracion] [bit] NULL,
	[dFechaIntegracionIni] [date] NULL,
	[dFechaIntegracionFin] [date] NULL,
	[bFechaPresentaOferta] [bit] NULL,
	[dFechaPresentaOfertaIni] [datetime] NULL,
	[dFechaPresentaOfertaFin] [datetime] NULL,
	[bFechaEvaluacion] [bit] NULL,
	[dFechaEvaluacionIni] [datetime] NULL,
	[dFechaEvaluacionFin] [datetime] NULL,
	[dFechaAdjudicado] [datetime] NULL,
	[cAlcanceRequerimiento] [varchar](max) NULL,
	[cTerminosPago] [varchar](250) NULL,
	[bFechaTiempoServicio] [bit] NULL,
	[dFechaTiempoServicioIni] [date] NULL,
	[dFechaTiempoServicioFin] [date] NULL,
	[cLogRequerimiento] [varchar](max) NULL,
	[cUrlDocumentos] [varchar](max) NULL,
	[cUrlCarpeta] [varchar](max) NULL,
	[bLiberado] [bit] NULL,
	[iCodUsuarioLiberado] [int] NULL,
	[dFechaLiberado] [datetime] NULL,
	[cMotivoLiberado] [varchar](50) NULL,
	[cNotasLiberado] [varchar](max) NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_Requerimiento] PRIMARY KEY CLUSTERED 
(
	[iCodRequerimiento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [prov].[RequerimientoCotizacion]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[RequerimientoCotizacion](
	[iCodRequerimientoCotizacion] [int] IDENTITY(1,1) NOT NULL,
	[iCodRequerimiento] [int] NULL,
	[iCodContrataLocal] [int] NULL,
	[cCondicion] [varchar](30) NULL,
	[cEstado] [varchar](20) NULL,
	[iTipoPostulacion] [tinyint] NULL,
	[dFechaPostulacion] [datetime] NULL,
	[iCodUsuarioPostulacion] [int] NULL,
	[iRanking] [tinyint] NULL,
	[iDiasValidezOferta] [tinyint] NULL,
	[iTiempoEntrega] [tinyint] NULL,
	[cCondicionesPropuesta] [varchar](max) NULL,
	[cAnotaciones] [varchar](max) NULL,
	[dFechaPresentaPropuesta] [datetime] NULL,
	[iCodUsuarioPresentaPropuesta] [int] NULL,
	[bIGV] [bit] NULL,
	[nSubTotal] [decimal](12, 2) NULL,
	[nIGV] [decimal](12, 2) NULL,
	[nTotal] [decimal](12, 2) NULL,
	[bAdjudicado] [bit] NULL,
	[iCodUsuarioAdjudica] [int] NULL,
	[dFechaAdjudica] [datetime] NULL,
	[cNotasAdjudica] [varchar](max) NULL,
	[iCodUsuarioObs] [int] NULL,
	[dFechaObs] [datetime] NULL,
	[cObs] [varchar](max) NULL,
	[cUrlDocumentosPostor] [varchar](max) NULL,
	[iCodUsuarioFeedbackContrata] [int] NULL,
	[dFechaFeedbackContrata] [datetime] NULL,
	[cFeedbackContrata] [varchar](100) NULL,
	[cFeedbackContrataDetalle] [varchar](max) NULL,
	[iCodUsuarioValidaFeedback] [int] NULL,
	[dFechaValidaFeedback] [datetime] NULL,
	[cFeedbackCorrecto] [varchar](3) NULL,
	[cTipoValidaFeedback] [varchar](2) NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_RequerimientoCotizacion] PRIMARY KEY CLUSTERED 
(
	[iCodRequerimientoCotizacion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_RequerimientoContrataLocal] UNIQUE NONCLUSTERED 
(
	[iCodRequerimiento] ASC,
	[iCodContrataLocal] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [prov].[RequerimientoCotizacionDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[RequerimientoCotizacionDetalle](
	[iCodRequerimientoCotizacionDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodRequerimientoCotizacion] [int] NULL,
	[iCodRequerimientoDetalle] [int] NULL,
	[iRanking] [tinyint] NULL,
	[nPrecioUnit] [decimal](12, 2) NULL,
	[nCantidad] [decimal](10, 2) NULL,
	[nSubTotal] [decimal](12, 2) NULL,
	[nIGV] [decimal](12, 2) NULL,
	[nTotal] [decimal](12, 2) NULL,
	[cCondicionesPropuesta] [varchar](max) NULL,
	[cMarca] [varchar](50) NULL,
	[cModelo] [varchar](50) NULL,
	[bAdjudicado] [bit] NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_RequerimientoCotizacionDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodRequerimientoCotizacionDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_RequerimientoCotizacionDetalle] UNIQUE NONCLUSTERED 
(
	[iCodRequerimientoCotizacion] ASC,
	[iCodRequerimientoDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [prov].[RequerimientoDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[RequerimientoDetalle](
	[iCodRequerimientoDetalle] [int] IDENTITY(1,1) NOT NULL,
	[iCodRequerimiento] [int] NULL,
	[iCodRubroBienesServicios] [int] NULL,
	[iCodCategoriaBienesServicios] [int] NULL,
	[iCodCatalogoBienesServicios] [int] NULL,
	[cDescripcionBienServicio] [varchar](max) NULL,
	[cDetalleRequerimiento] [varchar](max) NULL,
	[iCodTipoMedida] [int] NULL,
	[cEstado] [varchar](20) NULL,
	[bAprobado] [bit] NULL,
	[iCodUsuarioAprobado] [int] NULL,
	[dFechaAprobado] [datetime] NULL,
	[cNotasAprobado] [varchar](max) NULL,
	[bExceptuado] [bit] NULL,
	[iCodUsuarioExceptuado] [int] NULL,
	[dFechaExceptuado] [datetime] NULL,
	[bLiberado] [bit] NULL,
	[iCodUsuarioLiberado] [int] NULL,
	[dFechaLiberado] [datetime] NULL,
	[cNotasLiberado] [varchar](max) NULL,
	[nCantidad] [decimal](10, 2) NULL,
	[nPrecioUnit] [decimal](12, 2) NULL,
	[nSubTotal] [decimal](12, 2) NULL,
	[bIGV] [bit] NULL,
	[nTiempoDuracion] [decimal](6, 2) NULL,
	[cUrlBases] [varchar](max) NULL,
	[cObs] [varchar](max) NULL,
	[cNotas] [varchar](max) NULL,
	[cOtrosRequisitos] [varchar](max) NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_RequerimientoDetalle] PRIMARY KEY CLUSTERED 
(
	[iCodRequerimientoDetalle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [prov].[RequerimientoPerformance]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[RequerimientoPerformance](
	[iCodRequerimientoPerformance] [int] IDENTITY(1,1) NOT NULL,
	[iCodRequerimiento] [int] NULL,
	[iCodRequerimientoDetalle] [int] NULL,
	[iCodRequerimientoDetallePostor] [int] NULL,
	[iCodContrataLocal] [int] NULL,
	[dFechaAdjudicacion] [date] NULL,
	[cResultadoServicio] [varchar](200) NULL,
	[iNotaPerformance] [tinyint] NULL,
	[cNotaPerformance] [varchar](50) NULL,
	[nNotasContrata] [varchar](max) NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_RequerimientoPerformance] PRIMARY KEY CLUSTERED 
(
	[iCodRequerimientoPerformance] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [prov].[RubroBienesServicios]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[RubroBienesServicios](
	[iCodRubroBienesServicios] [int] IDENTITY(1,1) NOT NULL,
	[cRubroBienesServicios] [varchar](200) NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_RubroBienesServicios] PRIMARY KEY CLUSTERED 
(
	[iCodRubroBienesServicios] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_RubroBienesServicios] UNIQUE NONCLUSTERED 
(
	[cRubroBienesServicios] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [prov].[RubroEmpresarial]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[RubroEmpresarial](
	[iCodRubroEmpresarial] [smallint] IDENTITY(1,1) NOT NULL,
	[cRubroEmpresarial] [varchar](150) NULL,
	[cTipoRubro] [varchar](20) NULL,
	[iCodUsuarioCreacion] [int] NULL,
	[dFechaCreacion] [datetime] NULL,
	[iCodUsuarioModificacion] [int] NULL,
	[dFechaModificacion] [datetime] NULL,
 CONSTRAINT [PK_RubroEmpresarial] PRIMARY KEY CLUSTERED 
(
	[iCodRubroEmpresarial] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ_RubroEmpresarial] UNIQUE NONCLUSTERED 
(
	[cRubroEmpresarial] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [prov].[TipoEstadoRequerimiento]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[TipoEstadoRequerimiento](
	[iCodTipoEstadoRequerimiento] [smallint] IDENTITY(1,1) NOT NULL,
	[cEstadoRequerimiento] [varchar](50) NULL,
	[cAbrEstado] [varchar](10) NULL,
	[bAnulado] [bit] NULL,
	[iOrden] [tinyint] NULL,
 CONSTRAINT [PK_TipoEstadoRequerimiento] PRIMARY KEY CLUSTERED 
(
	[iCodTipoEstadoRequerimiento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [prov].[TipoFeedback]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[TipoFeedback](
	[iCodTipoFeedback] [smallint] IDENTITY(1,1) NOT NULL,
	[cFeedback] [varchar](50) NULL,
	[cTipo] [varchar](10) NULL,
	[bAnulado] [bit] NULL,
 CONSTRAINT [PK_TipoFeedback] PRIMARY KEY CLUSTERED 
(
	[iCodTipoFeedback] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [prov].[TipoMedida]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[TipoMedida](
	[iCodTipoMedida] [int] IDENTITY(19,1) NOT NULL,
	[cNomMedida] [varchar](85) NULL,
	[cNomCorto] [varchar](50) NULL,
	[cCodigoSunat] [varchar](8) NULL,
	[bSunat] [bit] NULL,
 CONSTRAINT [PK_medida_iCodMedida] PRIMARY KEY CLUSTERED 
(
	[iCodTipoMedida] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [medida$cNomMedida] UNIQUE NONCLUSTERED 
(
	[cNomMedida] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [prov].[TipoMedioPago]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[TipoMedioPago](
	[iCodTipoMedioPago] [tinyint] IDENTITY(1,1) NOT NULL,
	[cCorrelativoSunat] [varchar](50) NULL,
	[cDetalle] [varchar](250) NULL,
 CONSTRAINT [PK_tipomediopago_iCodTipoMedioPago] PRIMARY KEY CLUSTERED 
(
	[iCodTipoMedioPago] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [prov].[TipoMoneda]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[TipoMoneda](
	[iCodTipoMoneda] [tinyint] IDENTITY(3,1) NOT NULL,
	[cCodigoSunat] [varchar](5) NULL,
	[cDesMoneda] [varchar](20) NULL,
	[cNomMoneda] [varchar](50) NULL,
	[cPais] [varchar](35) NULL,
 CONSTRAINT [PK_tipomoneda_iCodTipoMoneda] PRIMARY KEY CLUSTERED 
(
	[iCodTipoMoneda] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [prov].[TipoRequerimiento]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [prov].[TipoRequerimiento](
	[iCodTipoRequerimiento] [smallint] IDENTITY(1,1) NOT NULL,
	[cTipoRequerimiento] [varchar](50) NULL,
	[bPublicar] [bit] NULL,
	[bDirecto] [bit] NULL,
	[bIndirecto] [bit] NULL,
	[bExterno] [bit] NULL,
	[bAnulado] [bit] NULL,
 CONSTRAINT [PK_TipoRequerimiento] PRIMARY KEY CLUSTERED 
(
	[iCodTipoRequerimiento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [rpt].[DataFuerzaLaboralDetalle]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [rpt].[DataFuerzaLaboralDetalle](
	[FECHA REPORTE] [datetime] NULL,
	[NOMBRE REPORTE] [varchar](50) NULL,
	[IDFL] [int] NULL,
	[PERIODO] [smallint] NULL,
	[MES NRO] [tinyint] NULL,
	[MES] [varchar](15) NULL,
	[CONTRATISTA] [varchar](max) NULL,
	[FASE] [varchar](5) NULL,
	[NRO CONTRATO] [varchar](150) NULL,
	[ZONA] [varchar](20) NULL,
	[TIPO MMOO] [varchar](5) NULL,
	[OCUPACION] [varchar](300) NULL,
	[FECHA INGRESO] [date] NULL,
	[TIPO PLANILLA] [varchar](5) NULL,
	[TIPO CARGO] [varchar](50) NULL,
	[EECC TIPO] [varchar](25) NULL,
	[EECC NOMBRE] [varchar](max) NULL,
	[FASE NUEVA] [varchar](5) NULL,
	[ESTADO PERSONA] [varchar](20) NULL,
	[ESTADO DETALLE] [varchar](20) NULL,
	[ESTADO INICIAL] [varchar](15) NULL,
	[ESTADO FINAL] [varchar](15) NULL,
	[CID] [int] NULL,
	[EXP. OAEL] [varchar](4) NULL,
	[CONDICION] [varchar](15) NULL,
	[CONDICION DETALLE] [varchar](15) NULL,
	[UBIGEO] [varchar](10) NULL,
	[TIPOAID] [varchar](50) NULL,
	[COMUNIDAD] [varchar](50) NULL,
	[PROVINCIA] [varchar](30) NULL,
	[GENERO] [varchar](2) NULL,
	[EDAD] [smallint] NULL,
	[DPTO. NACIMIENTO] [varchar](50) NULL,
	[DPTO. RESIDENCIA] [varchar](50) NULL,
	[FASE RRHH] [varchar](5) NULL,
	[FFLL LUGAR PERNOCTE] [varchar](80) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [rpt].[ReporteCatalogo]    Script Date: 30/08/2025 13:43:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [rpt].[ReporteCatalogo](
	[iCodReporteCatalogo] [int] IDENTITY(1,1) NOT NULL,
	[cNombreReporte] [varchar](400) NULL,
	[cQueryReporte] [varchar](max) NULL,
	[bFiltroFecha] [bit] NULL,
	[bInactivo] [bit] NULL,
	[cTipo] [varchar](40) NULL,
	[bSeleccion] [bit] NULL,
	[bCapacitacion] [bit] NULL,
	[bGeneral] [bit] NULL,
	[bProcesamiento] [bit] NULL,
	[bFuerzaLaboral] [bit] NULL,
 CONSTRAINT [PK_ReporteCatalogo] PRIMARY KEY CLUSTERED 
(
	[iCodReporteCatalogo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_DNICandidatoInforme]    Script Date: 30/08/2025 13:43:52 ******/
CREATE UNIQUE NONCLUSTERED INDEX [IX_DNICandidatoInforme] ON [dbo].[CandidatoInforme]
(
	[cDNI] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [UQ_PersonaInGrupo]    Script Date: 30/08/2025 13:43:53 ******/
CREATE UNIQUE NONCLUSTERED INDEX [UQ_PersonaInGrupo] ON [dbo].[CapacitacionMatricula]
(
	[iCodCapacitacionGrupo] ASC,
	[iCodCandidatoInforme] ASC
)
WHERE ([iCodCapacitacionGrupo]>(0))
WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [IX_iCodConvocatoria]    Script Date: 30/08/2025 13:43:53 ******/
CREATE UNIQUE NONCLUSTERED INDEX [IX_iCodConvocatoria] ON [dbo].[CuestionarioConvocatoria]
(
	[iCodConvocatoria] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [IX_iCodContrataFuerzaLaboral]    Script Date: 30/08/2025 13:43:53 ******/
CREATE NONCLUSTERED INDEX [IX_iCodContrataFuerzaLaboral] ON [dbo].[FuerzaLaboral]
(
	[iCodContrata] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [UQ_Ocupacion]    Script Date: 30/08/2025 13:43:53 ******/
CREATE UNIQUE NONCLUSTERED INDEX [UQ_Ocupacion] ON [dbo].[TDOcupacion]
(
	[cNomOcupacion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
ALTER TABLE [DataSync].[scope_info_dss] ADD  DEFAULT (newid()) FOR [scope_id]
GO
ALTER TABLE [DataSync].[scope_info_dss] ADD  DEFAULT ((0)) FOR [scope_restore_count]
GO
ALTER TABLE [dbo].[CandidatoInforme] ADD  CONSTRAINT [DF_CandidatoInforme_iPAsertividad]  DEFAULT ((0)) FOR [iPAsertividad]
GO
ALTER TABLE [dbo].[CandidatoInforme] ADD  CONSTRAINT [DF_CandidatoInforme_iPTrabajoEquipo]  DEFAULT ((0)) FOR [iPTrabajoEquipo]
GO
ALTER TABLE [dbo].[CandidatoInforme] ADD  CONSTRAINT [DF_CandidatoInforme_iPComEfectiva]  DEFAULT ((0)) FOR [iPComEfectiva]
GO
ALTER TABLE [dbo].[CandidatoInforme] ADD  CONSTRAINT [DF_CandidatoInforme_iPAdaptabilidad]  DEFAULT ((0)) FOR [iPAdaptabilidad]
GO
ALTER TABLE [dbo].[CandidatoInforme] ADD  CONSTRAINT [DF_CandidatoInforme_iEEstable]  DEFAULT ((0)) FOR [iEEstable]
GO
ALTER TABLE [dbo].[CandidatoInforme] ADD  CONSTRAINT [DF_CandidatoInforme_iEInestable]  DEFAULT ((0)) FOR [iEInestable]
GO
ALTER TABLE [dbo].[CandidatoInforme] ADD  CONSTRAINT [DF_CandidatoInforme_iCCompromiso]  DEFAULT ((0)) FOR [iCCompromiso]
GO
ALTER TABLE [dbo].[CandidatoInforme] ADD  CONSTRAINT [DF_CandidatoInforme_iSRptoNorma]  DEFAULT ((0)) FOR [iSRptoNorma]
GO
ALTER TABLE [dbo].[CandidatoInforme] ADD  CONSTRAINT [DF_CandidatoInforme_iSIperC]  DEFAULT ((0)) FOR [iSIperC]
GO
ALTER TABLE [dbo].[CandidatoInforme] ADD  CONSTRAINT [DF_CandidatoInforme_iSActitud]  DEFAULT ((0)) FOR [iSActitud]
GO
ALTER TABLE [dbo].[CandidatoInforme] ADD  CONSTRAINT [DF_CandidatoInforme_bCasadoMoq]  DEFAULT ((0)) FOR [bCasadoMoq]
GO
ALTER TABLE [dbo].[CapacitacionFirmaDocumento] ADD  DEFAULT ('') FOR [cTitulo]
GO
ALTER TABLE [dbo].[CapacitacionFirmaDocumento] ADD  DEFAULT ('') FOR [cContenido]
GO
ALTER TABLE [dbo].[CapacitacionFirmaDocumento] ADD  DEFAULT ((0)) FOR [bFirmado]
GO
ALTER TABLE [dbo].[CapacitacionFirmaDocumento] ADD  DEFAULT (getdate()) FOR [dFechaFirma]
GO
ALTER TABLE [dbo].[CapacitacionFirmaDocumento] ADD  DEFAULT ('') FOR [cGUIconsentimiento]
GO
ALTER TABLE [dbo].[CapacitacionFirmaDocumento] ADD  DEFAULT ('') FOR [cIPconsentimiento]
GO
ALTER TABLE [dbo].[CapacitacionFirmaDocumento] ADD  DEFAULT ('') FOR [cHostConsentimiento]
GO
ALTER TABLE [dbo].[CapacitacionFirmaDocumento] ADD  DEFAULT ((0)) FOR [iCodUsuario]
GO
ALTER TABLE [dbo].[CapacitacionFirmaDocumento] ADD  DEFAULT (getdate()) FOR [dFechaSis]
GO
ALTER TABLE [dbo].[CapacitacionProgramaCursoDocumentoProceso] ADD  DEFAULT ('') FOR [cFase]
GO
ALTER TABLE [dbo].[CapacitacionProgramaCursoDocumentoProceso] ADD  DEFAULT ((0)) FOR [iCodUsuario]
GO
ALTER TABLE [dbo].[CapacitacionProgramaCursoDocumentoProceso] ADD  DEFAULT (getdate()) FOR [dFechaSis]
GO
ALTER TABLE [dbo].[CorreoEnvio] ADD  CONSTRAINT [DF__CorreoEnv__bEnvi__0E3B7E9A]  DEFAULT ((0)) FOR [bEnviado]
GO
ALTER TABLE [dbo].[CorreoEnvio] ADD  CONSTRAINT [DF__CorreoEnv__bReen__0F2FA2D3]  DEFAULT ((0)) FOR [bReenviado]
GO
ALTER TABLE [dbo].[Cuestionario] ADD  CONSTRAINT [DF__Cuestiona__iTiem__35B2DC69]  DEFAULT ((0)) FOR [iTiempoMinutos]
GO
ALTER TABLE [dbo].[DocumentoGestion] ADD  DEFAULT ('') FOR [cDescripcion]
GO
ALTER TABLE [dbo].[DocumentoGestion] ADD  DEFAULT ('') FOR [cTitulo]
GO
ALTER TABLE [dbo].[DocumentoGestion] ADD  DEFAULT ('') FOR [cContenido]
GO
ALTER TABLE [dbo].[DocumentoGestion] ADD  DEFAULT ('') FOR [cTipoProceso]
GO
ALTER TABLE [dbo].[DocumentoGestion] ADD  DEFAULT ((0)) FOR [bAnulado]
GO
ALTER TABLE [dbo].[DocumentoGestion] ADD  DEFAULT ((0)) FOR [iCodUsuario]
GO
ALTER TABLE [dbo].[DocumentoGestion] ADD  DEFAULT (getdate()) FOR [dFechaSis]
GO
ALTER TABLE [dbo].[EvaluacionArbol] ADD  DEFAULT ((0)) FOR [iNroArbol]
GO
ALTER TABLE [dbo].[EvaluacionArbol] ADD  DEFAULT ((0)) FOR [iCodUsuario]
GO
ALTER TABLE [dbo].[EvaluacionArbol] ADD  DEFAULT (getdate()) FOR [dFechaSis]
GO
ALTER TABLE [dbo].[EvaluacionArbolCombinacion] ADD  DEFAULT ((0)) FOR [iCodArbolPos]
GO
ALTER TABLE [dbo].[EvaluacionArbolCombinacion] ADD  DEFAULT ((0)) FOR [iCodArbolNeg]
GO
ALTER TABLE [dbo].[EvaluacionArbolCombinacion] ADD  DEFAULT ('') FOR [cAptitud]
GO
ALTER TABLE [dbo].[EvaluacionArbolCombinacion] ADD  DEFAULT ((0)) FOR [iCodUsuario]
GO
ALTER TABLE [dbo].[EvaluacionArbolCombinacion] ADD  DEFAULT (getdate()) FOR [dFechaSis]
GO
ALTER TABLE [dbo].[EvaluacionArbolCombinacion] ADD  DEFAULT ((0)) FOR [bAnulado]
GO
ALTER TABLE [dbo].[Persona] ADD  CONSTRAINT [DF__persona__cTipoPe__1B13F4C6]  DEFAULT (NULL) FOR [cTipoPer]
GO
ALTER TABLE [dbo].[Persona] ADD  CONSTRAINT [DF__persona__iCodTip__1C0818FF]  DEFAULT (NULL) FOR [iCodTipoDocumentoIdentidad]
GO
ALTER TABLE [dbo].[Persona] ADD  CONSTRAINT [DF__persona__cNroDoc__1CFC3D38]  DEFAULT (NULL) FOR [cNroDoc]
GO
ALTER TABLE [dbo].[Persona] ADD  CONSTRAINT [DF__persona__cDirecc__1DF06171]  DEFAULT (NULL) FOR [cDireccion]
GO
ALTER TABLE [dbo].[Persona] ADD  CONSTRAINT [DF__persona__bAnulad__1EE485AA]  DEFAULT ((0)) FOR [bAnulado]
GO
ALTER TABLE [dbo].[Persona] ADD  CONSTRAINT [DF__persona__iCodUsu__1FD8A9E3]  DEFAULT (NULL) FOR [iCodUsuario]
GO
ALTER TABLE [dbo].[Persona] ADD  CONSTRAINT [DF__persona__dFechaS__20CCCE1C]  DEFAULT (NULL) FOR [dFechaSis]
GO
ALTER TABLE [dbo].[PersonaJuridica] ADD  CONSTRAINT [DF__personaju__cRazo__2C3E80C8]  DEFAULT (NULL) FOR [cRazonSocial]
GO
ALTER TABLE [dbo].[PersonaJuridica] ADD  CONSTRAINT [DF__personaju__cNomC__2D32A501]  DEFAULT (NULL) FOR [cNomCorto]
GO
ALTER TABLE [dbo].[Usuario] ADD  CONSTRAINT [DF__usuario__cClave__04EFA97D]  DEFAULT (NULL) FOR [cClave]
GO
ALTER TABLE [dbo].[Usuario] ADD  CONSTRAINT [DF__usuario__cTipo__05E3CDB6]  DEFAULT (NULL) FOR [cTipo]
GO
ALTER TABLE [dbo].[Usuario] ADD  CONSTRAINT [DF__usuario__bElimin__06D7F1EF]  DEFAULT ((0)) FOR [bEliminado]
GO
ALTER TABLE [prov].[TipoMedida] ADD  CONSTRAINT [DF__medida__cNomMedi__4CE05A84]  DEFAULT (NULL) FOR [cNomMedida]
GO
ALTER TABLE [prov].[TipoMedida] ADD  CONSTRAINT [DF__medida__cNomCort__4DD47EBD]  DEFAULT (NULL) FOR [cNomCorto]
GO
ALTER TABLE [prov].[TipoMedida] ADD  CONSTRAINT [DF__medida__cCodigoS__4EC8A2F6]  DEFAULT (NULL) FOR [cCodigoSunat]
GO
ALTER TABLE [prov].[TipoMedida] ADD  CONSTRAINT [DF__medida__bSunat__4FBCC72F]  DEFAULT (NULL) FOR [bSunat]
GO
ALTER TABLE [prov].[TipoMedioPago] ADD  CONSTRAINT [DF__tipomedio__cCorr__73C51D7B]  DEFAULT (NULL) FOR [cCorrelativoSunat]
GO
ALTER TABLE [prov].[TipoMedioPago] ADD  CONSTRAINT [DF__tipomedio__cDeta__74B941B4]  DEFAULT (NULL) FOR [cDetalle]
GO
ALTER TABLE [prov].[TipoMoneda] ADD  CONSTRAINT [DF__tipomoned__cCodi__7C5A637C]  DEFAULT (NULL) FOR [cCodigoSunat]
GO
ALTER TABLE [prov].[TipoMoneda] ADD  CONSTRAINT [DF__tipomoned__cDesM__7D4E87B5]  DEFAULT (NULL) FOR [cDesMoneda]
GO
ALTER TABLE [prov].[TipoMoneda] ADD  CONSTRAINT [DF__tipomoned__cNomM__7E42ABEE]  DEFAULT (NULL) FOR [cNomMoneda]
GO
ALTER TABLE [prov].[TipoMoneda] ADD  CONSTRAINT [DF__tipomoned__cPais__7F36D027]  DEFAULT (NULL) FOR [cPais]
GO
ALTER TABLE [dbo].[AnexoAdmision]  WITH CHECK ADD  CONSTRAINT [FK_AnexoAdmision_AnexoAdmisionTipo] FOREIGN KEY([iCodAnexoAdmisionTipo])
REFERENCES [dbo].[AnexoAdmisionTipo] ([iCodAnexoAdmisionTipo])
GO
ALTER TABLE [dbo].[AnexoAdmision] CHECK CONSTRAINT [FK_AnexoAdmision_AnexoAdmisionTipo]
GO
ALTER TABLE [dbo].[AnexoAdmisionDetalle]  WITH CHECK ADD  CONSTRAINT [FK_AnexoAdmisionDetalle_AnexoAdmision] FOREIGN KEY([iCodAnexoAdmision])
REFERENCES [dbo].[AnexoAdmision] ([iCodAnexoAdmision])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[AnexoAdmisionDetalle] CHECK CONSTRAINT [FK_AnexoAdmisionDetalle_AnexoAdmision]
GO
ALTER TABLE [dbo].[AnexoAdmisionDetalle]  WITH CHECK ADD  CONSTRAINT [FK_AnexoAdmisionDetalle_CandidatoInforme] FOREIGN KEY([iCodCandidatoInforme])
REFERENCES [dbo].[CandidatoInforme] ([iCodCandidatoInforme])
GO
ALTER TABLE [dbo].[AnexoAdmisionDetalle] CHECK CONSTRAINT [FK_AnexoAdmisionDetalle_CandidatoInforme]
GO
ALTER TABLE [dbo].[CapacitacionAdmision]  WITH CHECK ADD  CONSTRAINT [FK_CapacitacionAdmision_CandidatoInforme] FOREIGN KEY([iCodCandidatoInforme])
REFERENCES [dbo].[CandidatoInforme] ([iCodCandidatoInforme])
GO
ALTER TABLE [dbo].[CapacitacionAdmision] CHECK CONSTRAINT [FK_CapacitacionAdmision_CandidatoInforme]
GO
ALTER TABLE [dbo].[CapacitacionAdmision]  WITH CHECK ADD  CONSTRAINT [FK_CapacitacionAdmision_CapacitacionProgramaCurso] FOREIGN KEY([iCodCapacitacionProgramaCurso])
REFERENCES [dbo].[CapacitacionProgramaCurso] ([iCodCapacitacionProgramaCurso])
GO
ALTER TABLE [dbo].[CapacitacionAdmision] CHECK CONSTRAINT [FK_CapacitacionAdmision_CapacitacionProgramaCurso]
GO
ALTER TABLE [dbo].[CapacitacionCurso]  WITH CHECK ADD  CONSTRAINT [FK_CapacitacionCurso_CapacitacionCursoModulo] FOREIGN KEY([iCodCapacitacionCursoModulo])
REFERENCES [dbo].[CapacitacionCursoModulo] ([iCodCapacitacionCursoModulo])
GO
ALTER TABLE [dbo].[CapacitacionCurso] CHECK CONSTRAINT [FK_CapacitacionCurso_CapacitacionCursoModulo]
GO
ALTER TABLE [dbo].[CapacitacionFirmaDocumento]  WITH CHECK ADD  CONSTRAINT [FK__Capacitac__iCodC__6B1C5F8F] FOREIGN KEY([iCodCapacitacionAdmision])
REFERENCES [dbo].[CapacitacionAdmision] ([iCodCapacitacionAdmision])
GO
ALTER TABLE [dbo].[CapacitacionFirmaDocumento] CHECK CONSTRAINT [FK__Capacitac__iCodC__6B1C5F8F]
GO
ALTER TABLE [dbo].[CapacitacionFirmaDocumento]  WITH CHECK ADD FOREIGN KEY([iCodCapacitacionMatricula])
REFERENCES [dbo].[CapacitacionMatricula] ([iCodCapacitacionMatricula])
GO
ALTER TABLE [dbo].[CapacitacionFirmaDocumento]  WITH CHECK ADD FOREIGN KEY([iCodCapacitacionProgramaCursoDocumentoProceso])
REFERENCES [dbo].[CapacitacionProgramaCursoDocumentoProceso] ([iCodCapacitacionProgramaCursoDocumentoProceso])
GO
ALTER TABLE [dbo].[CapacitacionGrupo]  WITH CHECK ADD  CONSTRAINT [FK_CapacitacionGrupo_CapacitacionProgramaCurso] FOREIGN KEY([iCodCapacitacionProgramaCurso])
REFERENCES [dbo].[CapacitacionProgramaCurso] ([iCodCapacitacionProgramaCurso])
GO
ALTER TABLE [dbo].[CapacitacionGrupo] CHECK CONSTRAINT [FK_CapacitacionGrupo_CapacitacionProgramaCurso]
GO
ALTER TABLE [dbo].[CapacitacionMatricula]  WITH CHECK ADD  CONSTRAINT [FK_CapacitacionMatricula_CapacitacionAdmision] FOREIGN KEY([iCodCapacitacionAdmision])
REFERENCES [dbo].[CapacitacionAdmision] ([iCodCapacitacionAdmision])
GO
ALTER TABLE [dbo].[CapacitacionMatricula] CHECK CONSTRAINT [FK_CapacitacionMatricula_CapacitacionAdmision]
GO
ALTER TABLE [dbo].[CapacitacionMatriculaProceso]  WITH CHECK ADD  CONSTRAINT [FK_CapacitacionMatriculaProceso_CapacitacionMatricula] FOREIGN KEY([iCodCapacitacionMatricula])
REFERENCES [dbo].[CapacitacionMatricula] ([iCodCapacitacionMatricula])
GO
ALTER TABLE [dbo].[CapacitacionMatriculaProceso] CHECK CONSTRAINT [FK_CapacitacionMatriculaProceso_CapacitacionMatricula]
GO
ALTER TABLE [dbo].[CapacitacionProgramaCurso]  WITH CHECK ADD  CONSTRAINT [FK_CapacitacionProgramaCurso_CapacitacionCurso] FOREIGN KEY([iCodCapacitacionCurso])
REFERENCES [dbo].[CapacitacionCurso] ([iCodCapacitacionCurso])
GO
ALTER TABLE [dbo].[CapacitacionProgramaCurso] CHECK CONSTRAINT [FK_CapacitacionProgramaCurso_CapacitacionCurso]
GO
ALTER TABLE [dbo].[CapacitacionProgramaCurso]  WITH CHECK ADD  CONSTRAINT [FK_CapacitacionProgramaCurso_CapacitacionPrograma] FOREIGN KEY([iCodCapacitacionPrograma])
REFERENCES [dbo].[CapacitacionPrograma] ([iCodCapacitacionPrograma])
GO
ALTER TABLE [dbo].[CapacitacionProgramaCurso] CHECK CONSTRAINT [FK_CapacitacionProgramaCurso_CapacitacionPrograma]
GO
ALTER TABLE [dbo].[CapacitacionProgramaCursoDocumentoProceso]  WITH CHECK ADD FOREIGN KEY([iCodCapacitacionProgramaCurso])
REFERENCES [dbo].[CapacitacionProgramaCurso] ([iCodCapacitacionProgramaCurso])
GO
ALTER TABLE [dbo].[CapacitacionProgramaCursoDocumentoProceso]  WITH CHECK ADD FOREIGN KEY([iCodDocumentoGestion])
REFERENCES [dbo].[DocumentoGestion] ([iCodDocumentoGestion])
GO
ALTER TABLE [dbo].[Cliente]  WITH CHECK ADD  CONSTRAINT [FK_Cliente_Contrata] FOREIGN KEY([iCodContrata])
REFERENCES [dbo].[Contrata] ([iCodContrata])
GO
ALTER TABLE [dbo].[Cliente] CHECK CONSTRAINT [FK_Cliente_Contrata]
GO
ALTER TABLE [dbo].[ClienteCuenta]  WITH CHECK ADD  CONSTRAINT [FK_ClienteCuenta_Cliente] FOREIGN KEY([iCodCliente])
REFERENCES [dbo].[Cliente] ([iCodCliente])
GO
ALTER TABLE [dbo].[ClienteCuenta] CHECK CONSTRAINT [FK_ClienteCuenta_Cliente]
GO
ALTER TABLE [dbo].[ContratistaContrato]  WITH CHECK ADD  CONSTRAINT [FK_ContratistaContrato_Contrata] FOREIGN KEY([iCodContrata])
REFERENCES [dbo].[Contrata] ([iCodContrata])
GO
ALTER TABLE [dbo].[ContratistaContrato] CHECK CONSTRAINT [FK_ContratistaContrato_Contrata]
GO
ALTER TABLE [dbo].[Convocatoria]  WITH CHECK ADD  CONSTRAINT [FK_Convocatoria_ConvocatoriaMain] FOREIGN KEY([iCodConvocatoriaMain])
REFERENCES [dbo].[ConvocatoriaMain] ([iCodConvocatoriaMain])
GO
ALTER TABLE [dbo].[Convocatoria] CHECK CONSTRAINT [FK_Convocatoria_ConvocatoriaMain]
GO
ALTER TABLE [dbo].[ConvocatoriaDetalle]  WITH CHECK ADD  CONSTRAINT [FK_ConvocatoriaDetalle_CandidatoInforme] FOREIGN KEY([iCodCandidatoInforme])
REFERENCES [dbo].[CandidatoInforme] ([iCodCandidatoInforme])
GO
ALTER TABLE [dbo].[ConvocatoriaDetalle] CHECK CONSTRAINT [FK_ConvocatoriaDetalle_CandidatoInforme]
GO
ALTER TABLE [dbo].[ConvocatoriaDetalle]  WITH CHECK ADD  CONSTRAINT [FK_ConvocatoriaDetalle_Convocatoria] FOREIGN KEY([iCodConvocatoria])
REFERENCES [dbo].[Convocatoria] ([iCodConvocatoria])
GO
ALTER TABLE [dbo].[ConvocatoriaDetalle] CHECK CONSTRAINT [FK_ConvocatoriaDetalle_Convocatoria]
GO
ALTER TABLE [dbo].[ConvocatoriaDetalleHistorial]  WITH CHECK ADD  CONSTRAINT [ConvocatoriaDetalleHistorial_fk] FOREIGN KEY([iCodConvocatoriaDetalle])
REFERENCES [dbo].[ConvocatoriaDetalle] ([iCodConvocatoriaDetalle])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[ConvocatoriaDetalleHistorial] CHECK CONSTRAINT [ConvocatoriaDetalleHistorial_fk]
GO
ALTER TABLE [dbo].[ConvocatoriaMain]  WITH CHECK ADD  CONSTRAINT [FK_ConvocatoriaMain_Contrata] FOREIGN KEY([iCodContrata])
REFERENCES [dbo].[Contrata] ([iCodContrata])
GO
ALTER TABLE [dbo].[ConvocatoriaMain] CHECK CONSTRAINT [FK_ConvocatoriaMain_Contrata]
GO
ALTER TABLE [dbo].[DependenciaPersona]  WITH CHECK ADD  CONSTRAINT [dependenciapersona$FK_DP_iCodDependencia] FOREIGN KEY([iCodDependencia])
REFERENCES [dbo].[Dependencia] ([iCodDependencia])
GO
ALTER TABLE [dbo].[DependenciaPersona] CHECK CONSTRAINT [dependenciapersona$FK_DP_iCodDependencia]
GO
ALTER TABLE [dbo].[DependenciaPersona]  WITH CHECK ADD  CONSTRAINT [dependenciapersona$FK_DP_iCodPersona] FOREIGN KEY([iCodPersona])
REFERENCES [dbo].[Persona] ([iCodPersona])
GO
ALTER TABLE [dbo].[DependenciaPersona] CHECK CONSTRAINT [dependenciapersona$FK_DP_iCodPersona]
GO
ALTER TABLE [dbo].[GrupoPrioritarioDetalle]  WITH CHECK ADD  CONSTRAINT [FK_GrupoPrioritarioDetalle_CandidatoInforme] FOREIGN KEY([iCodCandidatoInforme])
REFERENCES [dbo].[CandidatoInforme] ([iCodCandidatoInforme])
GO
ALTER TABLE [dbo].[GrupoPrioritarioDetalle] CHECK CONSTRAINT [FK_GrupoPrioritarioDetalle_CandidatoInforme]
GO
ALTER TABLE [dbo].[GrupoPrioritarioDetalle]  WITH CHECK ADD  CONSTRAINT [FK_GrupoPrioritarioDetalleB_CandidatoInforme] FOREIGN KEY([iCodCandidatoInforme])
REFERENCES [dbo].[CandidatoInforme] ([iCodCandidatoInforme])
GO
ALTER TABLE [dbo].[GrupoPrioritarioDetalle] CHECK CONSTRAINT [FK_GrupoPrioritarioDetalleB_CandidatoInforme]
GO
ALTER TABLE [dbo].[PersonaJuridica]  WITH CHECK ADD  CONSTRAINT [personajuridica$FK_iCodPersonaJuridica] FOREIGN KEY([iCodPersona])
REFERENCES [dbo].[Persona] ([iCodPersona])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[PersonaJuridica] CHECK CONSTRAINT [personajuridica$FK_iCodPersonaJuridica]
GO
ALTER TABLE [dbo].[PersonaNatural]  WITH CHECK ADD  CONSTRAINT [FK_PersonaNatural_Persona] FOREIGN KEY([iCodPersona])
REFERENCES [dbo].[Persona] ([iCodPersona])
GO
ALTER TABLE [dbo].[PersonaNatural] CHECK CONSTRAINT [FK_PersonaNatural_Persona]
GO
ALTER TABLE [dbo].[Usuario]  WITH CHECK ADD  CONSTRAINT [usuario$FK_iCodPersonaUsuario] FOREIGN KEY([iCodPersona])
REFERENCES [dbo].[Persona] ([iCodPersona])
GO
ALTER TABLE [dbo].[Usuario] CHECK CONSTRAINT [usuario$FK_iCodPersonaUsuario]
GO
ALTER TABLE [jobs].[CategoriaPersona]  WITH CHECK ADD  CONSTRAINT [FK_CategoriaPersona_PerfilPuesto] FOREIGN KEY([iCodPerfilPuesto])
REFERENCES [jobs].[PerfilPuesto] ([iCodPerfilPuesto])
GO
ALTER TABLE [jobs].[CategoriaPersona] CHECK CONSTRAINT [FK_CategoriaPersona_PerfilPuesto]
GO
ALTER TABLE [jobs].[DerechoHabiente]  WITH CHECK ADD  CONSTRAINT [FK_DerechoHabiente_Persona1] FOREIGN KEY([iCodPersona])
REFERENCES [jobs].[Persona] ([iCodPersona])
GO
ALTER TABLE [jobs].[DerechoHabiente] CHECK CONSTRAINT [FK_DerechoHabiente_Persona1]
GO
ALTER TABLE [jobs].[EMOConvocatoria]  WITH CHECK ADD  CONSTRAINT [FK_EMOConvocatoria_Empresa] FOREIGN KEY([iCodEmpresaCliente])
REFERENCES [jobs].[Empresa] ([iCodEmpresa])
GO
ALTER TABLE [jobs].[EMOConvocatoria] CHECK CONSTRAINT [FK_EMOConvocatoria_Empresa]
GO
ALTER TABLE [jobs].[EMOConvocatoriaDetalle]  WITH CHECK ADD  CONSTRAINT [FK_EMOConvocatoriaDetalle_EMOConvocatoria] FOREIGN KEY([iCodEMOConvocatoria])
REFERENCES [jobs].[EMOConvocatoria] ([iCodEMOConvocatoria])
GO
ALTER TABLE [jobs].[EMOConvocatoriaDetalle] CHECK CONSTRAINT [FK_EMOConvocatoriaDetalle_EMOConvocatoria]
GO
ALTER TABLE [jobs].[EMOConvocatoriaDetalle]  WITH CHECK ADD  CONSTRAINT [FK_EMOConvocatoriaDetalle_Persona] FOREIGN KEY([iCodPersona])
REFERENCES [jobs].[Persona] ([iCodPersona])
GO
ALTER TABLE [jobs].[EMOConvocatoriaDetalle] CHECK CONSTRAINT [FK_EMOConvocatoriaDetalle_Persona]
GO
ALTER TABLE [jobs].[ExperienciaLaboral]  WITH CHECK ADD  CONSTRAINT [FK_ExperienciaLaboral_Persona] FOREIGN KEY([iCodPersona])
REFERENCES [jobs].[Persona] ([iCodPersona])
GO
ALTER TABLE [jobs].[ExperienciaLaboral] CHECK CONSTRAINT [FK_ExperienciaLaboral_Persona]
GO
ALTER TABLE [jobs].[InduccionGrupo]  WITH CHECK ADD  CONSTRAINT [FK_InduccionConvocatoria_Empresa] FOREIGN KEY([iCodEmpresaCliente])
REFERENCES [jobs].[Empresa] ([iCodEmpresa])
GO
ALTER TABLE [jobs].[InduccionGrupo] CHECK CONSTRAINT [FK_InduccionConvocatoria_Empresa]
GO
ALTER TABLE [jobs].[InduccionGrupoDetalle]  WITH CHECK ADD  CONSTRAINT [FK_InduccionConvocatoriaDetalle_Persona] FOREIGN KEY([iCodPersona])
REFERENCES [jobs].[Persona] ([iCodPersona])
GO
ALTER TABLE [jobs].[InduccionGrupoDetalle] CHECK CONSTRAINT [FK_InduccionConvocatoriaDetalle_Persona]
GO
ALTER TABLE [jobs].[PersonaEMO]  WITH CHECK ADD  CONSTRAINT [FK_CandidatoEMO_Persona] FOREIGN KEY([iCodPersona])
REFERENCES [jobs].[Persona] ([iCodPersona])
GO
ALTER TABLE [jobs].[PersonaEMO] CHECK CONSTRAINT [FK_CandidatoEMO_Persona]
GO
ALTER TABLE [jobs].[PersonaInduccion]  WITH CHECK ADD  CONSTRAINT [FK_CandidatoInduccion_Persona] FOREIGN KEY([iCodPersona])
REFERENCES [jobs].[Persona] ([iCodPersona])
GO
ALTER TABLE [jobs].[PersonaInduccion] CHECK CONSTRAINT [FK_CandidatoInduccion_Persona]
GO
ALTER TABLE [jobs].[Proyecto]  WITH CHECK ADD  CONSTRAINT [FK_Proyecto_Empresa] FOREIGN KEY([iCodEmpresaCliente])
REFERENCES [jobs].[Empresa] ([iCodEmpresa])
GO
ALTER TABLE [jobs].[Proyecto] CHECK CONSTRAINT [FK_Proyecto_Empresa]
GO
ALTER TABLE [jobs].[ProyectoDetalle]  WITH CHECK ADD  CONSTRAINT [FK_ProyectoDetalle_PerfilPuesto] FOREIGN KEY([iCodPerfilPuesto])
REFERENCES [jobs].[PerfilPuesto] ([iCodPerfilPuesto])
GO
ALTER TABLE [jobs].[ProyectoDetalle] CHECK CONSTRAINT [FK_ProyectoDetalle_PerfilPuesto]
GO
ALTER TABLE [jobs].[ProyectoDetalle]  WITH CHECK ADD  CONSTRAINT [FK_ProyectoDetalle_Proyecto] FOREIGN KEY([iCodProyecto])
REFERENCES [jobs].[Proyecto] ([iCodProyecto])
GO
ALTER TABLE [jobs].[ProyectoDetalle] CHECK CONSTRAINT [FK_ProyectoDetalle_Proyecto]
GO
ALTER TABLE [jobs].[ProyectoDetallePersona]  WITH CHECK ADD  CONSTRAINT [FK_ProyectoDetalleCandidato_Persona] FOREIGN KEY([iCodPersona])
REFERENCES [jobs].[Persona] ([iCodPersona])
GO
ALTER TABLE [jobs].[ProyectoDetallePersona] CHECK CONSTRAINT [FK_ProyectoDetalleCandidato_Persona]
GO
ALTER TABLE [jobs].[ProyectoDetallePersona]  WITH CHECK ADD  CONSTRAINT [FK_ProyectoDetalleCandidato_ProyectoDetalle] FOREIGN KEY([iCodProyectoDetalle])
REFERENCES [jobs].[ProyectoDetalle] ([iCodProyectoDetalle])
GO
ALTER TABLE [jobs].[ProyectoDetallePersona] CHECK CONSTRAINT [FK_ProyectoDetalleCandidato_ProyectoDetalle]
GO
ALTER TABLE [jobs].[ReferenciaLaboral]  WITH CHECK ADD  CONSTRAINT [FK_ReferenciaLaboral_ExperienciaLaboral] FOREIGN KEY([iCodExperienciaLaboral])
REFERENCES [jobs].[ExperienciaLaboral] ([iCodExperienciaLaboral])
GO
ALTER TABLE [jobs].[ReferenciaLaboral] CHECK CONSTRAINT [FK_ReferenciaLaboral_ExperienciaLaboral]
GO
ALTER TABLE [jobs].[UnidadMinera]  WITH CHECK ADD  CONSTRAINT [FK_UnidadMinera_Empresa] FOREIGN KEY([iCodEmpresa])
REFERENCES [jobs].[Empresa] ([iCodEmpresa])
GO
ALTER TABLE [jobs].[UnidadMinera] CHECK CONSTRAINT [FK_UnidadMinera_Empresa]
GO
/****** Object:  StoredProcedure [dbo].[SP_ACT_CandidatoExperiencia]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ACT_CandidatoExperiencia] (
	@iCodCandidatoExperienciaLaboral int,
	@cEmpresa varchar(220),
	@cPuesto varchar(100),
	@iCodCandidatoExperienciaNivel varchar(100),
	@cSectorExperiencia varchar(20),
	@cRubroExperiencia varchar(50),
	@iPeriodoInicioMes tinyint,
	@iPeriodoInicioAno smallint,
	@iPeriodoFinMes tinyint,
	@iPeriodoFinAno smallint,
	@dFechaIni date,
	@dFechaFin date,
	@cFuncionesLogros varchar
)
AS
BEGIN
	DECLARE @documentado int;
    SET @documentado = (select bDocumentado from CandidatoExperienciaLaboral where iCodCandidatoExperienciaLaboral=@iCodCandidatoExperienciaLaboral);
    IF @documentado = 0
    	UPDATE CandidatoExperienciaLaboral 
    	SET cEmpresa=@cEmpresa,cPuesto=@cPuesto,iCodCandidatoExperienciaNivel=@iCodCandidatoExperienciaNivel,cSectorExperiencia=@cSectorExperiencia,cRubroExperiencia=@cRubroExperiencia,iPeriodoInicioMes=@iPeriodoInicioMes,iPeriodoInicioAno=@iPeriodoInicioAno,iPeriodoFinMes=@iPeriodoFinMes,iPeriodoFinAno=@iPeriodoFinAno,dFechaIni=@dFechaIni,dFechaFin=@dFechaFin,cFuncionesLogros=@cFuncionesLogros 
    	WHERE iCodCandidatoExperienciaLaboral=@iCodCandidatoExperienciaLaboral
    ELSE
    	UPDATE CandidatoExperienciaLaboral 
    	SET cFuncionesLogros=@cFuncionesLogros
    	WHERE iCodCandidatoExperienciaLaboral=@iCodCandidatoExperienciaLaboral;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTU_AprobarActualizarClienteConvocatoria]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_ACTU_AprobarActualizarClienteConvocatoria]      
@iCodConvocatoriaMain INT,      
@iCodUsuarioAprueba INT      
AS      
BEGIN      
      
	 BEGIN TRY      
	   BEGIN TRAN ACTU_AprobarActualizarCliente      
      
	   UPDATE dbo.ConvocatoriaMain      
	   SET dFechaDesaAprobacionCliente = GETDATE(),      
		   iCodUsuarioDesaAprobacionCliente = @iCodUsuarioAprueba,      
		   bAprobadoCliente = 1,  
		   iEstado = 5     
	   WHERE iCodConvocatoriaMain = @iCodConvocatoriaMain      
         
	   --UPDATE dbo.Convocatoria      
	   --set iEstado = 1      
	   --WHERE iCodConvocatoriaMain = @iCodConvocatoriaMain      
      
	   SELECT 1      
	   COMMIT TRAN ACTU_AprobarActualizarCliente      
         
	 END TRY      
	 BEGIN CATCH      
	   SELECT -1      
	   ROLLBACK TRAN ACTU_AprobarActualizarCliente      
	 END CATCH      
        
END      
      
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTU_BloqueoUsuario]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_ACTU_BloqueoUsuario]
@cNick varchar(40)
AS
BEGIN

	BEGIN TRY
			BEGIN TRAN SP_ACTU_BloqueoUsuario

			UPDATE dbo.Usuario
			SET bBloqueado = 1,
			    dFechaUltimoBloqueo = ( SELECT TOP 1 dFechaBloqueo 
										FROM dbo.SeguridadUsuarioHistorial
										WHERE cNick=@cNick
										ORDER BY iCodSeguridadUsuarioHistorial DESC)
			WHERE cNick = @cNick
			
			SELECT 1
			COMMIT TRAN SP_ACTU_BloqueoUsuario
			
	END TRY
	BEGIN CATCH
			SELECT -1
			ROLLBACK TRAN SP_ACTU_BloqueoUsuario
	END CATCH
		
END

GO
/****** Object:  StoredProcedure [dbo].[SP_ACTU_CalculoPuntajeTotalPorCodEvaluacionDesempeno]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ACTU_CalculoPuntajeTotalPorCodEvaluacionDesempeno]           
    @iCodEvaluacionDesempeno int  
AS     
BEGIN  
    SET NOCOUNT ON;   
    
 DECLARE @SUM_TOTAL AS DECIMAL(10,2);  
  
 SET @SUM_TOTAL = (SELECT SUM(nPuntajeEvaluacion) FROM EvaluacionDesempenoDetalle   
      WHERE iCodEvaluacionDesempeno=@iCodEvaluacionDesempeno)  
  
 UPDATE EvaluacionDesempeno  
 SET nPuntajeTotalEvaluacion=@SUM_TOTAL  
 WHERE iCodEvaluacionDesempeno=@iCodEvaluacionDesempeno  
  
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTU_CandidatoEvaluacionTestConsentimiento]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_ACTU_CandidatoEvaluacionTestConsentimiento](
	@iCodCandidatoInforme INT,
	@dFechaTestPsico DateTime,
	@cGUIDTestPsico varchar(50),
	--@cAptitudTestPsico varchar(50),
	@iArbolSiGusta TinyInt,
	@iArbolNoGusta TinyInt,
	@bEvaluacionEnviada bit,
	@dFechaEnvioEvaluacion datetime,
	@cTipoEvaluacionPsico char(1),
	--@iCodEvaluacionArbolCombinacion int,
	@cObs varchar(max)
)
AS
BEGIN 	
	SET NOCOUNT ON 
	-- INICIO GET ID CONVINACION DE ARBOL ELEGIDO
	DECLARE @iCodEvaluacionArbolCombinacion VARCHAR(20),@cAptitudTestPsico VARCHAR(50);
	SET @iCodEvaluacionArbolCombinacion = dbo.FN_EvaluacionArbolCombinacion(@iArbolSiGusta,@iArbolNoGusta);
	SET @cAptitudTestPsico = dbo.FN_AptitutTestPsico(@iArbolSiGusta,@iArbolNoGusta);
	--PRINT @cAptitudTestPsico;  
	-- FIN
		
		UPDATE CandidatoInformeAdd 
		SET dFechaTestPsico = @dFechaTestPsico, 
		cGUIDTestPsico = @cGUIDTestPsico, 
		cAptitudTestPsico = @cAptitudTestPsico, 
		iArbolSiGusta = @iArbolSiGusta, 
		iArbolSiDibuja = @iArbolSiGusta, 
		iArbolNoGusta = @iArbolNoGusta, 
		iArbolNoDibujar = @iArbolNoGusta, 
		bEvaluacionEnviada = @bEvaluacionEnviada, 
		dFechaEnvioEvaluacion = @dFechaEnvioEvaluacion, 
		cTipoEvaluacionPsico = @cTipoEvaluacionPsico , 
		iCodEvaluacionArbolCombinacion = @iCodEvaluacionArbolCombinacion 
		WHERE iCodCandidatoInforme = @iCodCandidatoInforme;

		--********************************************************************************
		--
		--UPDATE  dbo.CandidatoAdmision SET dFechaAptitud=@dFechaTestPsico,bAptitud=1,iCodUsuarioAptitud=0,cObs=(cObs + @cObs)  
		--WHERE iCodCandidatoInforme=@iCodCandidatoInforme and iCodCandidatoAdmisionTipo=1 and bImprocedente=0;
		
		--TODO REGISTRO NUEVO ASI ESTE IMPROCEDENTE DEBE COMPLETARSE LA TAREA DE EVALUATEST
		UPDATE  dbo.CandidatoAdmision SET dFechaAptitud=@dFechaTestPsico,bAptitud=1,iCodUsuarioAptitud=0,cObs=(cObs + @cObs)  
		WHERE iCodCandidatoInforme=@iCodCandidatoInforme and iCodCandidatoAdmisionTipo=1;
		--********************************************************************************

	IF (UPPER(@cAptitudTestPsico) = 'APTO')
	    BEGIN			
			UPDATE CandidatoInforme 
			SET iPAsertividad = 5,
                iPTrabajoEquipo = 5,
                iPComEfectiva = 5,
                iPAdaptabilidad = 6,
                iEEstable = 80,
                iEInestable = 20,
                iCCompromiso = 5,
                iSRptoNorma = 5,
                iSIperC = 5,
                iSActitud = 6,
				cAptitud = @cAptitudTestPsico,
				dFechaEvaluacion = @dFechaTestPsico,
				bEvaluado = 1
			WHERE iCodCandidatoInforme = @iCodCandidatoInforme;
		END	
	ELSE
		BEGIN	
			IF (UPPER(@cAptitudTestPsico) = 'APTO CAPACITABLE')
				UPDATE CandidatoInforme 
				SET iPAsertividad = 4,
					iPTrabajoEquipo = 4,
					iPComEfectiva = 4,
					iPAdaptabilidad = 3,
					iEEstable = 60,
					iEInestable = 40,
					iCCompromiso = 4,
					iSRptoNorma = 4,
					iSIperC = 3,
					iSActitud = 3,
					cAptitud = @cAptitudTestPsico,
					dFechaEvaluacion = @dFechaTestPsico,
					bEvaluado = 1
				WHERE iCodCandidatoInforme = @iCodCandidatoInforme;
			ELSE
				UPDATE CandidatoInforme 
				SET iPAsertividad = 2,
					iPTrabajoEquipo = 2,
					iPComEfectiva = 2,
					iPAdaptabilidad = 2,
					iEEstable = 30,
					iEInestable = 70,
					iCCompromiso = 2,
					iSRptoNorma = 2,
					iSIperC = 2,
					iSActitud = 2,
					cAptitud = @cAptitudTestPsico,
					dFechaEvaluacion = @dFechaTestPsico,
					bEvaluado = 1
				WHERE iCodCandidatoInforme = @iCodCandidatoInforme;
		END
END;



GO
/****** Object:  StoredProcedure [dbo].[SP_ACTU_ConvocatoriaDetalleHistorial]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ACTU_ConvocatoriaDetalleHistorial]          
	@iCodConvocatoriaDetalleHistorial INT,
	@iCodConvocatoriaDetalle INT,
	@cSeleccinado NVARCHAR(6),
	@cRptaContrata NVARCHAR(200),
	@cObs NVARCHAR(200),
	@iCodUsuarioCreacion INT,
	@dFechaCreacion DATETIME,
	@iCodUsuarioModificacion INT,
	@dFechaModificacion DATETIME
AS          
BEGIN          
	 BEGIN TRY 
	  
	   BEGIN TRAN SP_ACTU_CDHistorial       
       
	   UPDATE dbo.ConvocatoriaDetalleHistorial
	   SET 
	       cSeleccinado = @cSeleccinado,
		   cRptaContrata=@cRptaContrata,
		   cObs = @cObs,
		   iCodUsuarioModificacion = @iCodUsuarioModificacion,
		   dFechaCreacion = @dFechaCreacion
	   WHERE iCodConvocatoriaDetalleHistorial=@iCodConvocatoriaDetalleHistorial

	   --Actualizar con el ultimo feedBack la cabecera principal

	   IF EXISTS(SELECT 1 FROM ConvocatoriaDetalleHistorial 
				 WHERE iCodConvocatoriaDetalle=@iCodConvocatoriaDetalle)
	   BEGIN
				
	           	DECLARE @VAR_iCodConvocatoriaDetalle INT;
				DECLARE @VAR_cSeleccinado NVARCHAR(6);
				DECLARE @VAR_cRptaContrata NVARCHAR(200);
				DECLARE @VAR_cObs NVARCHAR(200);
				DECLARE @VAR_dFechaCreacion DATETIME;

	           SELECT  TOP 1
	           		@VAR_iCodConvocatoriaDetalle = iCodConvocatoriaDetalle,
					@VAR_cSeleccinado = cSeleccinado,
					@VAR_cRptaContrata = cRptaContrata,
					@VAR_cObs = cObs,
					@VAR_dFechaCreacion = dFechaCreacion
			   FROM ConvocatoriaDetalleHistorial
			   WHERE iCodConvocatoriaDetalle=@iCodConvocatoriaDetalle
			   ORDER BY dFechaCreacion DESC

			   UPDATE dbo.ConvocatoriaDetalle
			   SET  
			       cSeleccionado= @VAR_cSeleccinado,
				   cRptaContrata=@VAR_cRptaContrata,
				   cObs = @VAR_cObs,
				   dFechaSis = @VAR_dFechaCreacion,
				   dFechaContactoContrata1=@VAR_dFechaCreacion
			   WHERE iCodConvocatoriaDetalle=@VAR_iCodConvocatoriaDetalle
	   END
	   ELSE	
	   BEGIN

	           UPDATE dbo.ConvocatoriaDetalle
			   SET  
			       cSeleccionado='',
				   cRptaContrata='',
				   cObs = '',
				   dFechaSis = '1900-01-01 00:00:00.000',
				   dFechaContactoContrata1='1900-01-01 00:00:00.000'
			   WHERE iCodConvocatoriaDetalle=@VAR_iCodConvocatoriaDetalle

	   END

	   SELECT 1

	   COMMIT TRAN SP_ACTU_CDHistorial          
	 
	 END TRY   
	  
	 BEGIN CATCH   
	 
	   SELECT -1          
	   ROLLBACK TRAN SP_ACTU_CDHistorial
	   
	 END CATCH                
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTU_ConvocatoriaMainAnulacion]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_ACTU_ConvocatoriaMainAnulacion]      
@iCodConvocatoriaMain INT       
AS      
BEGIN      
      
 BEGIN TRY      
   BEGIN TRAN ACTU_ConvocatoriaMainAnulacion      
       
   DECLARE @iEstado int;    
       
   SELECT @iEstado=iEstado FROM dbo.ConvocatoriaMain      
   WHERE iCodConvocatoriaMain=@iCodConvocatoriaMain    
    
   IF(@iEstado = 1)    
   BEGIN      
		UPDATE dbo.ConvocatoriaMain     
		SET iEstado = 4 --Anulado    
		WHERE iCodConvocatoriaMain=@iCodConvocatoriaMain      
		SELECT 1      
   END      
   ELSE  IF(@iEstado = 4)  --Ya se encuentra anulado
   BEGIN      
		SELECT 2    
   END  
   ELSE
   BEGIN      
		SELECT 0     
   END     
         
   COMMIT TRAN ACTU_ConvocatoriaMainAnulacion      
         
 END TRY      
 BEGIN CATCH      
   SELECT -1      
   ROLLBACK TRAN ACTU_ConvocatoriaMainAnulacion      
 END CATCH      
        
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTU_CuestionarioPostulante]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ACTU_CuestionarioPostulante]         
    @iCodCandidatoInforme int,
	@iCodConvocatoria int,
	@dFechaInicio datetime,
	@dFechaFin datetime,
	@bEnviado bit,
	@dFechaModificacion datetime,
	@iCodUsuarioModificacion int 
AS   
BEGIN
    SET NOCOUNT ON; 
		
	UPDATE CuestionarioPostulante 
	SET dFechaInicio = @dFechaInicio, 
	dFechaFin = @dFechaFin, 
	bEnviado = @bEnviado,
	dFechaModificacion = @dFechaModificacion,
	iCodUsuarioModificacion = @iCodUsuarioModificacion
	OUTPUT INSERTED.iCodCuestionarioPostulante
	WHERE iCodConvocatoria = @iCodConvocatoria and iCodCandidatoInforme = @iCodCandidatoInforme
END    
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTU_DesaprobarActualizarClienteConvocatoria]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_ACTU_DesaprobarActualizarClienteConvocatoria]        
@iCodConvocatoriaMain INT,        
@iCodUsuarioAprueba INT        
AS        
BEGIN        
        
  BEGIN TRY        
    BEGIN TRAN ACTU_DesaprobarActualizarCliente        
        
    UPDATE dbo.ConvocatoriaMain        
    SET dFechaDesaAprobacionCliente = GETDATE(),        
     iCodUsuarioDesaAprobacionCliente = @iCodUsuarioAprueba,        
     bAprobadoCliente = 0,    
     iEstado = 5       
    WHERE iCodConvocatoriaMain = @iCodConvocatoriaMain        
           
    --UPDATE dbo.Convocatoria        
    --set iEstado = 1        
    --WHERE iCodConvocatoriaMain = @iCodConvocatoriaMain        
        
    SELECT 1        
    COMMIT TRAN ACTU_DesaprobarActualizarCliente        
           
  END TRY        
  BEGIN CATCH        
    SELECT -1        
    ROLLBACK TRAN ACTU_DesaprobarActualizarCliente        
  END CATCH        
          
END        
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTU_EnviarConvocatoriaCED]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_ACTU_EnviarConvocatoriaCED]    
@iCodConvocatoriaMain INT,    
@dFechaEnvio datetime,    
@iCodUsuarioEnvio INT    
AS    
BEGIN    
    
 BEGIN TRY    
   BEGIN TRAN SP_ACTU_EnviarConvocatoriaCED    
     
   IF NOT EXISTS(SELECT * FROM dbo.Convocatoria    
             WHERE iCodConvocatoriaMain=@iCodConvocatoriaMain)    
   BEGIN    
         SELECT 0    
   END    
   ELSE    
   BEGIN    
		UPDATE dbo.ConvocatoriaMain    
		 SET dFechaEnvio = @dFechaEnvio,    
			  iCodUsuarioEnvio = @iCodUsuarioEnvio,    
			  iEstado = 2,
			  dEstadoFecha = GETDATE()
		 WHERE iCodConvocatoriaMain = @iCodConvocatoriaMain    
       
		UPDATE dbo.Convocatoria    
		 set iEstado =1    
		 WHERE iCodConvocatoriaMain = @iCodConvocatoriaMain    
    
     SELECT 1    
   END    
   COMMIT TRAN SP_ACTU_EnviarConvocatoriaCED    
       
 END TRY    
 BEGIN CATCH    
   SELECT -1    
   ROLLBACK TRAN SP_ACTU_EnviarConvocatoriaCED    
 END CATCH    
      
END    
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTU_EnviarConvocatoriaMPG]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [dbo].[SP_ACTU_EnviarConvocatoriaMPG]    
@iCodConvocatoriaMain INT,    
@dFechaEnvio datetime,    
@iCodUsuarioEnvio INT    
AS    
BEGIN    
    
 BEGIN TRY    
   BEGIN TRAN SP_ACTU_EnviarConvocatoriaMPG    
     
   IF NOT EXISTS(SELECT * FROM dbo.Convocatoria    
             WHERE iCodConvocatoriaMain=@iCodConvocatoriaMain)    
   BEGIN    
         SELECT 0    
   END    
   ELSE    
   BEGIN    
		UPDATE dbo.ConvocatoriaMain    
		 SET dFechaEnvio = @dFechaEnvio,    
			  iCodUsuarioEnvio = @iCodUsuarioEnvio,    
			  iEstado = 2,
			  dEstadoFecha = GETDATE()
		 WHERE iCodConvocatoriaMain = @iCodConvocatoriaMain    
       
		UPDATE dbo.Convocatoria    
		 set iEstado =1    
		 WHERE iCodConvocatoriaMain = @iCodConvocatoriaMain    
    
     SELECT 1    
   END    
   COMMIT TRAN SP_ACTU_EnviarConvocatoriaMPG    
       
 END TRY    
 BEGIN CATCH    
   SELECT -1    
   ROLLBACK TRAN SP_ACTU_EnviarConvocatoriaMPG    
 END CATCH    
      
END    
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTU_EvaluacionDesempenoDetalle]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ACTU_EvaluacionDesempenoDetalle]      
@iCodEvaluacionDesempenoDetalle int,    
@nPuntajeEvaluacion decimal(18,6),     
@iCodUsuarioModificacion int    
AS      
BEGIN      
      
 BEGIN TRY      
   BEGIN TRAN SP_ACTU_EVALUACIONDETALLE     
      
   IF (1=1)      
   BEGIN      
    
    UPDATE EvaluacionDesempenoDetalle    
 SET nPuntajeEvaluacion=@nPuntajeEvaluacion,     
  iCodUsuarioModificacion=@iCodUsuarioModificacion,    
  dFechaModificacion = GETDATE()    
    WHERE iCodEvaluacionDesempenoDetalle=@iCodEvaluacionDesempenoDetalle   
    
    SELECT 1      
   END      
   ELSE      
   BEGIN      
    SELECT 0      
   END      
         
   COMMIT TRAN SP_ACTU_EVALUACIONDETALLE      
         
 END TRY      
 BEGIN CATCH      
   SELECT -1      
   ROLLBACK TRAN SP_ACTU_EVALUACIONDETALLE      
 END CATCH      
        
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTU_OcupacionYFuerzalaboral]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ACTU_OcupacionYFuerzalaboral]    
@iCodOcupacion INT,
@cNomOcupacion varchar(max),
@cTipo varchar(6),
@iCodUsuarioModificacion INT,
@cObsModificacion varchar(max)

AS    
BEGIN    
    
 BEGIN TRY    
   BEGIN TRAN P_ACTU_OcupacionYFuerzalaboral    
     
   
		UPDATE dbo.TDOcupacion    
		 SET	cNomOcupacion = @cNomOcupacion,
				cTipo=@cTipo,
				iCodUsuarioModificacion = @iCodUsuarioModificacion,    
				dFechaModificacion = GETDATE(), 
				cObsModificacion = @cObsModificacion
		 WHERE iCodOcupacion = @iCodOcupacion    
       
		UPDATE dbo.FuerzaLaboralDetalle    
		set cOcupacion= @cNomOcupacion, cMOCMONC= @cTipo  
		WHERE iCodOcupacion = @iCodOcupacion   
    
     SELECT 1       
   COMMIT TRAN P_ACTU_OcupacionYFuerzalaboral    
       
 END TRY    
 BEGIN CATCH    
   SELECT -1    
   ROLLBACK TRAN P_ACTU_OcupacionYFuerzalaboral    
 END CATCH    
      
END    
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTUW_CesarTrabajador]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ACTUW_CesarTrabajador]
    @dFechaCese                 DATE,
    @cMotivoCese                VARCHAR(50),
    @cObs                       VARCHAR(MAX),
    @iCalificacion              TINYINT,
    @iCodUsuarioModifica        INT,
    @bDevolvioFotocheck         BIT,
    @iCodFuerzaLaboralDetalle   INT
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @hoy DATETIME = GETDATE(); -- Consistencia en la fecha
    DECLARE @returnValue INT = 0; -- Valor de retorno por defecto

    BEGIN TRY
        BEGIN TRAN [TX_CesarTrabajador]; -- Inicio de transacción

        -- 1) Actualizar Fuerzalaboraldetalle
        UPDATE dbo.Fuerzalaboraldetalle
        SET
            bCesado = 1,
            dFechaCese = @dFechaCese,
            cMotivoCese = @cMotivoCese,
            cObs = @cObs,
            iCalificacion = @iCalificacion,
            iCodUsuarioModifica = @iCodUsuarioModifica,
            bDevolvioFotocheck = @bDevolvioFotocheck,
            dFechaModifica = @hoy
        WHERE iCodFuerzaLaboralDetalle = @iCodFuerzaLaboralDetalle;

        --2) Obtener condición detalle
        DECLARE @VAR_COND_DETA VARCHAR(MAX);
        SELECT @VAR_COND_DETA = dbo.fnObtenerCondicionDetalle(
            com.cTipoAreaInfluencia,
            u.cUbigeo
        )
        FROM CandidatoInforme ci
        LEFT JOIN CandidatoInformeCondicion cond ON ci.iCodCandidatoInforme = cond.iCodCandidatoInforme
        LEFT JOIN TDUbigeo u ON ci.cUbigeo = u.cUbigeo
        LEFT JOIN Comunidad com ON com.iCodComunidad = cond.iCodComunidad AND com.iCodComunidad > 1
        WHERE cond.iCodCandidatoInformeCondicion = (
            SELECT MAX(cond9.iCodCandidatoInformeCondicion)
            FROM CandidatoInformeCondicion cond9
            WHERE cond9.iCodCandidatoInforme = ci.iCodCandidatoInforme
        )
        AND ci.iCodCandidatoInforme = (
            SELECT iCodCandidatoInforme
            FROM FuerzaLaboralDetalle
            WHERE iCodFuerzaLaboralDetalle = @iCodFuerzaLaboralDetalle
        );

        --3) Validar condición y llamar evaluación si corresponde
        IF @VAR_COND_DETA IN ('AID', 'AIO')
        BEGIN
            EXEC dbo.SP_INSER_GenerarEvaluacionDesempenoPorFLD
                @iCodFuerzaLaboralDetalle = @iCodFuerzaLaboralDetalle,
                @cTipoEvaluacion = 'CE',
                @dFechaSolicitud = @hoy,
                @iCodUsuarioCreacion = @iCodUsuarioModifica,
                @dFechaCreacion = @hoy;
        END

        -- Confirmar transacción
        SET @returnValue = 1;
        COMMIT TRAN [TX_CesarTrabajador];

        SELECT @returnValue AS Resultado;

    END TRY
    BEGIN CATCH
        -- En caso de error, rollback y devolver fallo
        IF XACT_STATE() <> 0
        BEGIN
            ROLLBACK TRAN [TX_CesarTrabajador];
        END

        -- Opcional: Propagar el error para diagnóstico
        -- THROW;

        SET @returnValue = 0;
        SELECT @returnValue AS Resultado;
    END CATCH
END
GO
/****** Object:  StoredProcedure [dbo].[SP_APP_CREARACTUALIZAR_USUARIO]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_APP_CREARACTUALIZAR_USUARIO](
	@cNick as varchar(20),
	@iCodCandidatoInforme as int 
)
AS
--BEGIN
--	SELECT us.iCodUsuarioApp as idUsuario,ci.iCodCandidatoInforme AS idCandidato,ci.cDNI, concat(ci.cNombres,' ',ci.cApellidos) AS cNombre ,dbo.fnLeeClave(us.cClave) AS cClave,ci.cCorreo
--	FROM CandidatoInforme AS ci
--	INNER JOIN UsuarioApp AS us ON us.iCodCandidatoInforme = ci.iCodCandidatoInforme
--	WHERE ci.cDNI = @dni	
--END


BEGIN
	BEGIN TRY
			BEGIN TRAN VerificarUsuarioExiste

			/*Si existe usuario, Retorna el iCodUsuario*/
			IF EXISTS ( SELECT * FROM dbo.UsuarioApp WHERE cNick = @cNick) 
			BEGIN
				-- VA A ACTUALIZAR
				  UPDATE  dbo.Usuarioapp SET cClave=dbo.fnColocaClave(@cNick)  WHERE iCodCandidatoInforme=@iCodCandidatoInforme
				   --SELECT 0
			END
			ELSE
			BEGIN
				-- VA A CREAR

				INSERT into dbo.Usuarioapp VALUES(@iCodCandidatoInforme,@cNick,dbo.fnColocaClave(@cNick),'1900-01-01',0)
				--SELECT 0 --Usuario No Existe
			END
			COMMIT TRAN VerificarUsuarioExiste
			
	END TRY
	BEGIN CATCH
			SELECT -1
			ROLLBACK TRAN VerificarUsuarioExiste
	END CATCH
END


GO
/****** Object:  StoredProcedure [dbo].[SP_APP_GetUsuarioPersona]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











CREATE PROCEDURE [dbo].[SP_APP_GetUsuarioPersona] @cNick varchar(50),@cClave varchar(50)  
AS
SELECT u.iCodUsuarioApp,
isnull(ci.iCodCandidatoInforme,0) as  iCodCandidatoInforme,
ci.cDNI,
ci.cApellidos + ' ' + ci.cNombres as cNomCompleto  ,
ci.cCorreo,
ci.cFono,
'OK' as cResult,

case 
when cast(dLastLogin as date)<='2000-01-01' then 'SI' 
else 'NO' 
end as cPrimerLogin 
,
 case  
 when ci.bCargaBox=1 then 'SI' 
 else 'NO' end as cExpediente  
from dbo.usuarioApp u 
left join dbo.candidatoinforme ci on u.iCodCandidatoInforme=ci.iCodCandidatoInforme  
where u.cNick=@cNick and dbo.fnLeeClave(u.cClave)=@cClave and u.bAnulado=0 
 and ci.cCondicion in('LOCAL','RESIDENTE','COMUNIDAD') and ci.bSustentoCV=1 













GO
/****** Object:  StoredProcedure [dbo].[SP_COND_VerificarBloqueoPorUsuario]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_COND_VerificarBloqueoPorUsuario]
@cNick varchar(40)
AS
BEGIN

	BEGIN TRY
			BEGIN TRAN VerificarBloqueoPorUsuario

			/*Obtengo el USUARIO*/

			IF EXISTS ( SELECT * FROM dbo.Usuario
						WHERE cNick= @cNick
						AND bBloqueado = 1) 
			BEGIN
				   DECLARE @TiempoTranscurridominutos int

				   SELECT @TiempoTranscurridominutos = DATEDIFF(minute,dFechaUltimoBloqueo,GETDATE()) FROM dbo.Usuario
				   --SELECT dFechaUltimoBloqueo,* FROM dts.Usuario
				   WHERE cNick= @cNick

				   IF (@TiempoTranscurridominutos>=60)
				   BEGIN
						UPDATE dbo.Usuario
						SET bBloqueado = NULL,dFechaUltimoBloqueo=NULL
						WHERE cNick= @cNick
						SELECT 0 --Usuario No Bloqueado
				   END
				   ELSE
				   BEGIN
						SELECT 1 --Usuario Bloqueado
				   END
			END
			ELSE
			BEGIN
				SELECT 0 --Usuario No Bloqueado
			END
			COMMIT TRAN VerificarBloqueoPorUsuario
			
	END TRY
	BEGIN CATCH
			SELECT -1
			ROLLBACK TRAN VerificarBloqueoPorUsuario
	END CATCH
		
END

GO
/****** Object:  StoredProcedure [dbo].[SP_COND_VerificarOcupacionExistaEnCatalogo]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_COND_VerificarOcupacionExistaEnCatalogo]      
@cNomOcupacion VARCHAR(MAX)    
AS              
BEGIN              
  BEGIN TRY              
   BEGIN TRAN SP_FL_VerificarOcupacionExista           
        
  
    IF EXISTS ( SELECT * FROM TDOcupacion  
    WHERE cNomOcupacion=@cNomOcupacion)             
    BEGIN          
         SELECT 1 --Existe Ocupacion           
    END          
    ELSE     
    BEGIN    
   SELECT 0 --No existe Ocupacion       
    END    
    
 COMMIT TRAN SP_FL_VerificarOcupacionExista        
     
  END TRY              
  BEGIN CATCH              
 SELECT -1              
 ROLLBACK TRAN SP_FL_VerificarOcupacionExista              
  END CATCH              
                
END
GO
/****** Object:  StoredProcedure [dbo].[SP_COND_VerificarUsuarioExiste]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_COND_VerificarUsuarioExiste]
@cNick varchar(50)
AS
BEGIN
	BEGIN TRY
			BEGIN TRAN VerificarUsuarioExiste

			/*Si existe usuario, Retorna el iCodUsuario*/
			IF EXISTS ( SELECT * FROM dbo.Usuario WHERE cNick = @cNick) 
			BEGIN

				   SELECT iCodUsuario FROM dbo.Usuario
				   WHERE cNick= @cNick
				   --SELECT 0
			END
			ELSE
			BEGIN
				SELECT 0 --Usuario No Existe
			END
			COMMIT TRAN VerificarUsuarioExiste
			
	END TRY
	BEGIN CATCH
			SELECT -1
			ROLLBACK TRAN VerificarUsuarioExiste
	END CATCH
END
GO
/****** Object:  StoredProcedure [dbo].[SP_CONDW_VerificarTienePermisoPorNombrePagina]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_CONDW_VerificarTienePermisoPorNombrePagina]
    @iCodUsuario int,
    @cNombrePagina varchar(max)
AS
BEGIN
    DECLARE @resultado int;

    BEGIN TRY
        BEGIN TRAN VerificarPermisoPorNomPag

        -- Usar EXISTS para verificar la existencia
        SELECT @resultado = CASE 
            WHEN EXISTS (
                SELECT *
                FROM UsuarioPermiso up
                LEFT JOIN UFormulario f ON up.iCodUFormulario = f.iCodUFormulario
                WHERE f.cGrupo = 'Web Contratista'
                  AND up.iCodUsuarioSistema = @iCodUsuario
                  AND f.cNomCortoFormulario = @cNombrePagina
				  AND bVisualizar=1
            ) THEN 1 ELSE 0
        END

        COMMIT TRAN VerificarPermisoPorNomPag
    END TRY
    BEGIN CATCH
        SET @resultado = 0
        ROLLBACK TRAN VerificarPermisoPorNomPag
    END CATCH

    -- Retornamos el resultado
    SELECT @resultado AS TienePermiso
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DHSB_FFLLIngresoCese]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

 

CREATE PROCEDURE [dbo].[SP_DHSB_FFLLIngresoCese] 
AS
SET NOCOUNT ON;

 DECLARE @cAnio as smallint;
 DECLARE @cMes as tinyint;
 SET @cAnio=YEAR(GETDATE());
 SET @cMes=MONTH(GETDATE()); 

 select --fld.iCodFuerzaLaboralDetalle,
fl.iperiodo as [Año],
 fl.imes [Nro Mes], 
   case  fl.imes 
 when 1 then 'ENERO' 
 when 2 then 'FEBRERO' 
 when 3 then 'MARZO' 
 when 4 then 'ABRIL' 
 when 5 then 'MAYO' 
 when 6 then 'JUNIO' 
 when 7 then 'JULIO' 
 when 8 then 'AGOSTO' 
 when 9 then 'SETIEMBRE' 
 when 10 then 'OCTUBRE' 
 when 11 then 'NOVIEMBRE' 
 when 12 then 'DICIEMBRE'  
 END AS [Mes],
co.cNomContrata AS [Empresa], 
cto.cfase as [Fase],
--fld.cMOCMONC as [TIPO MMOO],
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as [Condición] ,

case 
when fld.bCesado=1 then 'CESADO'  
when fld.cnivel='A' then 'REGISTRADO' 
when fld.cnivel ='N' then 'NUEVO ' 
else 'SD' end as [Tipo Registro],
case fld.bcesado
when 1 then 'CESADO' 
when 0 then 'ACTIVO' 
end as [Status] ,
case  
when fld.cnivel='A' then 'REGISTRADO' 
when fld.cnivel ='N' then 'NUEVO ' end as [Stat Inicial],
 cast(fl.iperiodo as varchar(6))+'-'+FORMAT( fl.imes  ,'00') as [Año-Mes],
 cast(fl.iperiodo as varchar(6))  +'-'+
    case  fl.imes 
 when 1 then 'EN' 
 when 2 then 'FEB' 
 when 3 then 'MAR' 
 when 4 then 'ABR' 
 when 5 then 'MAY' 
 when 6 then 'JUN' 
 when 7 then 'JUL' 
 when 8 then 'AGO' 
 when 9 then 'SET' 
 when 10 then 'OCT' 
 when 11 then 'NOV' 
 when 12 then 'DIC'  
 END  
 as [Periodo]
 ,
 COUNT(fld.iCodCandidatoInforme) as CANT

 
from FuerzaLaboral fl 
inner join fuerzalaboraldetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral 
inner join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata 
inner join contrata co on fl.iCodContrata=co.iCodContrata 
 left join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato 
--left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
--left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
where  (fl.iperiodo=(@cAnio-1) and fl.imes >@cMes ) or (fl.iperiodo=@cAnio and fl.imes<=@cMes) 
GROUP BY fl.iMes, fl.iPeriodo, co.cNomContrata ,ci.bSustentoCV,cto.cFase  ,ci.cCondicion ,fld.bCesado,fld.cNivel  
 order by fl.iperiodo asc,fl.imes asc 
 

 
 
 
 
 
 














GO
/****** Object:  StoredProcedure [dbo].[SP_DHSB_FFLLResumen]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

 

CREATE PROCEDURE [dbo].[SP_DHSB_FFLLResumen] 
AS
SET NOCOUNT ON;

 DECLARE @cAnio as smallint;
 DECLARE @cMes as tinyint;
 SET @cAnio=YEAR(GETDATE());
 SET @cMes=MONTH(GETDATE()); 
SELECT 
-- fl.iCodFuerzaLaboral, 
co.cNomContrata, 
CASE fl.iMes 
WHEN 1 THEN 'ENERO'  
WHEN 2 THEN 'FEBRERO'  
 WHEN 3 THEN 'MARZO'  
 WHEN 4 THEN 'ABRIL'  
 WHEN 5 THEN 'MAYO'  
 WHEN 6 THEN 'JUNIO'  
 WHEN 7 THEN 'JULIO'  
 WHEN 8 THEN 'AGOSTO'  
 WHEN 9 THEN 'SETIEMBRE'  
 WHEN 10 THEN 'OCTUBRE'  
 WHEN 11 THEN 'NOVIEMBRE'  
 WHEN 12 THEN 'DICIEMBRE'  
 ELSE '' END AS cMes,
--CASE fl.iMes 
--WHEN 1 THEN 'ENERO - ' + CAST(fl.iPeriodo AS varchar(4)) 
--WHEN 2 THEN 'FEBRERO - ' + CAST(fl.iPeriodo AS varchar(4)) 
-- WHEN 3 THEN 'MARZO - ' + CAST(fl.iPeriodo AS varchar(4)) 
-- WHEN 4 THEN 'ABRIL - ' + CAST(fl.iPeriodo AS varchar(4)) 
-- WHEN 5 THEN 'MAYO - ' + CAST(fl.iPeriodo AS varchar(4)) 
-- WHEN 6 THEN 'JUNIO - ' + CAST(fl.iPeriodo AS varchar(4)) 
-- WHEN 7 THEN 'JULIO - ' + CAST(fl.iPeriodo AS varchar(4)) 
-- WHEN 8 THEN 'AGOSTO - ' + CAST(fl.iPeriodo AS varchar(4)) 
-- WHEN 9 THEN 'SETIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4)) 
-- WHEN 10 THEN 'OCTUBRE - ' + CAST(fl.iPeriodo AS varchar(4)) 
-- WHEN 11 THEN 'NOVIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4)) 
-- WHEN 12 THEN 'DICIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4)) 
-- ELSE '' END AS cMesPeriodo,

 COUNT(fld.iCodFuerzaLaboralDetalle) AS iCant, 
 sum(case 
when fld.bCesado=1 then 1
else 0 end) as iCesados,
sum(case 
when fld.bCesado=0 then 1
else 0 end) as iActivos,
sum(case 
when fld.cNivel='A' then 1 
else 0 end) as iAnteriores, 
sum(case 
when fld.cNivel='N' then 1 
else 0 end) as iNuevos, 
 sum( 
 case
 when fld.cMOCMONC='MOC' and fld.bCesado=0  then 1
 else 0 end ) as iMOC,
  sum( 
 case
 when fld.cMOCMONC='MONC' and fld.bCesado=0  then 1
 else 0 end ) as iMONC,
 sum(case 
when ci.bSustentoCV=1 then 
 case when (ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD')  and fld.bCesado=0 then 1 
else 0 end
else 0
 end) as iLocal,
 sum( 
 case 
when ci.bSustentoCV=1 then 
case 
when (ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD') and fld.bCesado=0  then 0 
		else 
			case 
			when fld.bCesado=0 then 1 
			else 0
			end
		end
else 
	case 
			when fld.bCesado=0 then 1 
			else 0
	end
 end ) as iForaneo,
sum(case 
when ci.cSexo='M' and fld.bCesado=0 then 1
else 0 end) as iMasculino,
sum(case 
when ci.cSexo='F'  and fld.bCesado=0  then 1
else 0
end) as iFemenino,
 fl.iMes, fl.iPeriodo,
 cast(fl.iperiodo as varchar(6))+'-'+FORMAT( fl.imes  ,'00') as cPeriodo
 --, fl.iPeriodo+fl.iMes as iPeriodoGrupo 
FROM  dbo.FuerzaLaboral AS fl 
 INNER JOIN dbo.FuerzaLaboralDetalle AS fld ON fl.iCodFuerzaLaboral = fld.iCodFuerzaLaboral 
 INNER JOIN dbo.Contrata AS co ON fl.iCodContrata = co.iCodContrata 
 INNER JOIN dbo.CandidatoInforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme 
 where (fl.iperiodo=(@cAnio-1) and fl.imes >@cMes ) or (fl.iperiodo=@cAnio and fl.imes<=@cMes) 
GROUP BY fl.iMes, fl.iPeriodo, co.cNomContrata 
 order by fl.iperiodo asc,fl.imes asc 
 
 
 
 
 














GO
/****** Object:  StoredProcedure [dbo].[SP_DHSB_FFLLResumenPorContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DHSB_FFLLResumenPorContrata]
@iCodContrata int
AS  
SET NOCOUNT ON;  
BEGIN
	DECLARE @cAnio as smallint;  
	DECLARE @cMes as tinyint;  
	SET @cAnio=YEAR(GETDATE());  
	SET @cMes=MONTH(GETDATE());   
	SELECT   
	-- fl.iCodFuerzaLaboral,   
	co.cNomContrata,   
	CASE fl.iMes   
	WHEN 1 THEN 'ENERO'    
	WHEN 2 THEN 'FEBRERO'    
	 WHEN 3 THEN 'MARZO'    
	 WHEN 4 THEN 'ABRIL'    
	 WHEN 5 THEN 'MAYO'    
	 WHEN 6 THEN 'JUNIO'    
	 WHEN 7 THEN 'JULIO'    
	 WHEN 8 THEN 'AGOSTO'    
	 WHEN 9 THEN 'SETIEMBRE'    
	 WHEN 10 THEN 'OCTUBRE'    
	 WHEN 11 THEN 'NOVIEMBRE'    
	 WHEN 12 THEN 'DICIEMBRE'    
	 ELSE '' END AS cMes,  
	--CASE fl.iMes   
	--WHEN 1 THEN 'ENERO - ' + CAST(fl.iPeriodo AS varchar(4))   
	--WHEN 2 THEN 'FEBRERO - ' + CAST(fl.iPeriodo AS varchar(4))   
	-- WHEN 3 THEN 'MARZO - ' + CAST(fl.iPeriodo AS varchar(4))   
	-- WHEN 4 THEN 'ABRIL - ' + CAST(fl.iPeriodo AS varchar(4))   
	-- WHEN 5 THEN 'MAYO - ' + CAST(fl.iPeriodo AS varchar(4))   
	-- WHEN 6 THEN 'JUNIO - ' + CAST(fl.iPeriodo AS varchar(4))   
	-- WHEN 7 THEN 'JULIO - ' + CAST(fl.iPeriodo AS varchar(4))   
	-- WHEN 8 THEN 'AGOSTO - ' + CAST(fl.iPeriodo AS varchar(4))   
	-- WHEN 9 THEN 'SETIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4))   
	-- WHEN 10 THEN 'OCTUBRE - ' + CAST(fl.iPeriodo AS varchar(4))   
	-- WHEN 11 THEN 'NOVIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4))   
	-- WHEN 12 THEN 'DICIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4))   
	-- ELSE '' END AS cMesPeriodo,  
  
	 COUNT(fld.iCodFuerzaLaboralDetalle) AS iCant,   
	 sum(case   
	when fld.bCesado=1 then 1  
	else 0 end) as iCesados,  
	sum(case   
	when fld.bCesado=0 then 1  
	else 0 end) as iActivos,  
	sum(case   
	when fld.cNivel='A' then 1   
	else 0 end) as iAnteriores,   
	sum(case   
	when fld.cNivel='N' then 1   
	else 0 end) as iNuevos,   
	 sum(   
	 case  
	 when fld.cMOCMONC='MOC' and fld.bCesado=0  then 1  
	 else 0 end ) as iMOC,  
	  sum(   
	 case  
	 when fld.cMOCMONC='MONC' and fld.bCesado=0  then 1  
	 else 0 end ) as iMONC,  
	 sum(case   
	when ci.bSustentoCV=1 then   
	 case when (ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD')  and fld.bCesado=0 then 1   
	else 0 end  
	else 0  
	 end) as iLocal,  
	 sum(   
	 case   
	when ci.bSustentoCV=1 then   
	case   
	when (ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD') and fld.bCesado=0  then 0   
	  else   
	   case   
	   when fld.bCesado=0 then 1   
	   else 0  
	   end  
	  end  
	else   
	 case   
	   when fld.bCesado=0 then 1   
	   else 0  
	 end  
	 end ) as iForaneo,  
	sum(case   
	when ci.cSexo='M' and fld.bCesado=0 then 1  
	else 0 end) as iMasculino,  
	sum(case   
	when ci.cSexo='F'  and fld.bCesado=0  then 1  
	else 0  
	end) as iFemenino,  
	 fl.iMes, fl.iPeriodo,  
	 cast(fl.iperiodo as varchar(6))+'-'+FORMAT( fl.imes  ,'00') as cPeriodo  
	 --, fl.iPeriodo+fl.iMes as iPeriodoGrupo   
	FROM  dbo.FuerzaLaboral AS fl   
	 INNER JOIN dbo.FuerzaLaboralDetalle AS fld ON fl.iCodFuerzaLaboral = fld.iCodFuerzaLaboral   
	 INNER JOIN dbo.Contrata AS co ON fl.iCodContrata = co.iCodContrata   
	 INNER JOIN dbo.CandidatoInforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme   
	 where (fl.iperiodo=(@cAnio-1) and fl.imes >@cMes and fl.iCodContrata=@iCodContrata) or (fl.iperiodo=@cAnio and fl.imes<=@cMes and fl.iCodContrata=@iCodContrata) 
	  
	GROUP BY fl.iMes, fl.iPeriodo, co.cNomContrata   
	 order by fl.iperiodo asc,fl.imes asc   
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoAdmisionNotas]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO















 


CREATE PROCEDURE [dbo].[SP_DT_CandidatoAdmisionNotas]	 @iCodCandidatoAdmision int
AS

SELECT 
can.iCodCandidatoAdmisionNotas,
convert(varchar, can.dFechaSis, 20) as dFechaSis,
u.cNick,
can.cUrlImagen 


FROM CandidatoAdmisionNotas can 
inner join usuario u on can.iCodUsuario=u.iCodUsuario  
where can.iCodCandidatoAdmision=@iCodCandidatoAdmision   

order by can.dFechaSis DESC  





GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoAptitudPsicoLaboral]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO















 


CREATE PROCEDURE [dbo].[SP_DT_CandidatoAptitudPsicoLaboral]		@dFechaIni date,
																@dFechaFin date ,
																@cDNI varchar(15),
																@cTipo varchar(2) 
AS

if (@cTipo='F' ) -- POR FECHAS
BEGIN
------------------------------------------------------------------------
SELECT   
 cad.iCodCandidatoAdmision,

  ci.iCodCandidatoInforme,
  cat.iCodCandidatoAdmisionCatalogo,
  case 
  when cad.cEstado='E' then cast(0 as bit)
  when cad.cEstado='R' then cast(1 as bit)
    when cad.cEstado='I' then cast(1 as bit) 

	when cad.cEstado='O' then cast(1 as bit)
  else cast(0 as bit) end  as bAtendido,
 -- cad.bCheckList ,
  cad.dFechaRegistro , 
cat.cDesTipoAdmision AS cCandidatoAdmisionTipo, 
 
  ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,
  case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end 
  as cCondicion ,
   case
 when ci.cOcupacion IS null then cast(0 as bit) 
 when ci.cOcupacion='' then cast(0 as bit) 
  when ci.cOcupacion='NO CATALOGADO' then cast(0 as bit) 
  else cast(1 as bit) end bTieneAptitudLaboral, 
 CASE WHEN 
 ci.cOcupacion IS NULL THEN '' 
 ELSE ci.cOcupacion + 
 case 
 when ci.cOcupacion2 IS null then '' 
 when ci.cOcupacion2='' then '' 
 else ' - ' + ci.cOcupacion2 end 
 END AS cOcupacion, 
 ci.bEvaluado,
  ci.cAptitud,
case
when ci.dFechaEvaluacion='1900-01-01' then NULL 
else ci.dFechaEvaluacion end as dFechaEvaluacion,
cad.bImprocedente ,
isnull(cid.cTipoEvaluacionPsico ,'') as cTipoEvaluacionPsico,
isnull(cad.iResultadoTramite,0) as iResultadoTramite ,
cad.cEstado 

 
 
FROM         dbo.CandidatoInforme ci   
left join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme 
inner join CandidatoAdmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  
inner join dbo.CandidatoAdmisionCatalogo AS cat ON cad.iCodCandidatoAdmisionTipo = cat.iCodCandidatoAdmisionCatalogo 
where ci.cCondicion in('LOCAL','RESIDENTE','COMUNIDAD') 
and cad.dFechaRegistro >=@dFechaIni and cad.dFechaRegistro<=@dFechaFin  
and cad.iCodCandidatoAdmisionTipo in(1,3,4) 
order by cad.dFechaRegistro desc 
 ------------------------------------------------------------------------
 END
 ELSE IF (@cTipo='D' ) -- POR DNI
 BEGIN
 ------------------------------------------------------------------------
 SELECT   
 cad.iCodCandidatoAdmision,

  ci.iCodCandidatoInforme,
  cat.iCodCandidatoAdmisionCatalogo,
  case 
  when cad.cEstado='E' then cast(0 as bit)
  when cad.cEstado='R' then cast(1 as bit)
    when cad.cEstado='I' then cast(1 as bit) 
	when cad.cEstado='O' then cast(1 as bit)
  else cast(0 as bit) end  as bAtendido,
 -- cad.bCheckList ,
  cad.dFechaRegistro , 
cat.cDesTipoAdmision AS cCandidatoAdmisionTipo, 
 
  ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,
  case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end 
  as cCondicion ,
   case
 when ci.cOcupacion IS null then cast(0 as bit) 
 when ci.cOcupacion='' then cast(0 as bit) 
  when ci.cOcupacion='NO CATALOGADO' then cast(0 as bit) 
  else cast(1 as bit) end bTieneAptitudLaboral, 
 CASE WHEN 
 ci.cOcupacion IS NULL THEN '' 
 ELSE ci.cOcupacion + 
 case 
 when ci.cOcupacion2 IS null then '' 
 when ci.cOcupacion2='' then '' 
 else ' - ' + ci.cOcupacion2 end 
 END AS cOcupacion, 
 ci.bEvaluado,
  ci.cAptitud,
case
when ci.dFechaEvaluacion='1900-01-01' then NULL 
else ci.dFechaEvaluacion end as dFechaEvaluacion,
cad.bImprocedente ,
isnull(cid.cTipoEvaluacionPsico ,'') as cTipoEvaluacionPsico,
isnull(cad.iResultadoTramite,0) as iResultadoTramite ,
cad.cEstado 

 
 
FROM         dbo.CandidatoInforme ci   
left join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme 
inner join CandidatoAdmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  
inner join dbo.CandidatoAdmisionCatalogo AS cat ON cad.iCodCandidatoAdmisionTipo = cat.iCodCandidatoAdmisionCatalogo 
where ci.cDNI=@cDNI 
order by cad.dFechaRegistro desc 
------------------------------------------------------------------------
 END
 ELSE IF (@cTipo='P' ) --TODOS LOS PENDIENTES
 BEGIN
 ------------------------------------------------------------------------
SELECT   
 cad.iCodCandidatoAdmision,

  ci.iCodCandidatoInforme,
  cat.iCodCandidatoAdmisionCatalogo,
  case 
  when cad.cEstado='E' then cast(0 as bit)
  when cad.cEstado='R' then cast(1 as bit)
    when cad.cEstado='I' then cast(1 as bit) 

	when cad.cEstado='O' then cast(1 as bit)
  else cast(0 as bit) end  as bAtendido,
 -- cad.bCheckList ,
  cad.dFechaRegistro , 
cat.cDesTipoAdmision AS cCandidatoAdmisionTipo, 
 
  ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,
  case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end 
  as cCondicion ,
   case
 when ci.cOcupacion IS null then cast(0 as bit) 
 when ci.cOcupacion='' then cast(0 as bit) 
  when ci.cOcupacion='NO CATALOGADO' then cast(0 as bit) 
  else cast(1 as bit) end bTieneAptitudLaboral, 
 CASE WHEN 
 ci.cOcupacion IS NULL THEN '' 
 ELSE ci.cOcupacion + 
 case 
 when ci.cOcupacion2 IS null then '' 
 when ci.cOcupacion2='' then '' 
 else ' - ' + ci.cOcupacion2 end 
 END AS cOcupacion, 
 ci.bEvaluado,
  ci.cAptitud,
case
when ci.dFechaEvaluacion='1900-01-01' then NULL 
else ci.dFechaEvaluacion end as dFechaEvaluacion,
cad.bImprocedente ,
isnull(cid.cTipoEvaluacionPsico ,'') as cTipoEvaluacionPsico,
isnull(cad.iResultadoTramite,0) as iResultadoTramite ,
cad.cEstado 

 
 
FROM         dbo.CandidatoInforme ci   
left join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme 
inner join CandidatoAdmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  
inner join dbo.CandidatoAdmisionCatalogo AS cat ON cad.iCodCandidatoAdmisionTipo = cat.iCodCandidatoAdmisionCatalogo 
where ci.cCondicion in('LOCAL','RESIDENTE','COMUNIDAD') 
and cEstado='E'  
and cad.iCodCandidatoAdmisionTipo in(1,3,4) 
order by cad.dFechaRegistro desc 

 ------------------------------------------------------------------------
 END

  







GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByDNI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoByDNI] @cDNI varchar(15)   
AS  
BEGIN
		SELECT  ci.iCodCandidatoInforme,   
				ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,   
				ci.cUbigeo  AS cDepartamento,
				--ci.cCondicion AS cCondicion,
				/* COMENTE 15_11_2024
case   
when ci.bCargaBox=1 then   
 case ci.cCondicion   
 when 'LOCAL' then 'LOCAL'   
 when 'RESIDENTE' then 'LOCAL'   
 when 'COMUNIDAD' then 'LOCAL'   
 else   
  case   
   when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN'  
  else    
   CASE  
    when ci.bSustentoCV=1 then   
     case ci.cCondicion   
      when 'LOCAL' then 'LOCAL SIN CV'   
      when 'RESIDENTE' then 'LOCAL SIN CV'   
      when 'COMUNIDAD' then 'LOCAL SIN CV'   
      when 'FORANEO' then 'FORANEO'   
      else 'FORANEO'   
     end  
    else 'FORANEO'  
   end  
  end   
 end  
else   
 case   
 when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN'  
 else    
  CASE  
  when ci.bSustentoCV=1 then   
   case ci.cCondicion   
   when 'LOCAL' then 'LOCAL SIN CV'   
   when 'RESIDENTE' then 'LOCAL SIN CV'   
   when 'COMUNIDAD' then 'LOCAL SIN CV'   
   when 'FORANEO' then 'FORANEO'   
   else 'FORANEO'   
   end  
  else 'FORANEO'  
  end  
 end   
end as cCondicion,  
*/
/*  
case ci.bSustentoCV  
when 1 then  
 case ci.cCondicion   
  when 'LOCAL' then 'LOCAL'   
  when 'RESIDENTE' then 'LOCAL'   
  when 'COMUNIDAD' then 'LOCAL'   
  when 'FORANEO' then 'FORANEO'   
  else 'FORANEO'   
 end  
else   
 'FORANEO'  
end as cCondicion ,*/  

CASE
		 WHEN ISNULL(com.cTipoAreaInfluencia, '')='AID' THEN 'LOCAL'
		 WHEN ISNULL(com.cTipoAreaInfluencia, '')='AIO' THEN 'LOCAL'
		 WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'LOCAL'
		 WHEN ltrim(rtrim(u.cUbigeo))='140902' THEN 'LOCAL'
		 WHEN ltrim(rtrim(u.cUbigeo))='090409' THEN 'LOCAL'
		 WHEN ltrim(rtrim(u.cUbigeo))='090401' THEN 'LOCAL'
		 ELSE 'FORANEO'
	 END AS [CONDICION],
	 CASE
		 WHEN ISNULL(com.cTipoAreaInfluencia, '')='AID' THEN 'AID'
		 WHEN ISNULL(com.cTipoAreaInfluencia, '')='AIO' THEN 'AIO'
		 WHEN LTRIM(RTRIM(u.cUbigeo))='020805'
			  OR LTRIM(RTRIM(u.cUbigeo))='020813'
			  OR LTRIM(RTRIM(u.cUbigeo))='021901'
			  OR LTRIM(RTRIM(u.cUbigeo))='020814' THEN 'AID'
		 WHEN LTRIM(RTRIM(u.cUbigeo))='021901'
			  OR LTRIM(RTRIM(u.cUbigeo))='020301'
			  OR LTRIM(RTRIM(u.cUbigeo))='020304'
			  OR LTRIM(RTRIM(u.cUbigeo))='020305'
			  OR LTRIM(RTRIM(u.cUbigeo))='020310'
			  OR LTRIM(RTRIM(u.cUbigeo))='020321'
			  OR LTRIM(RTRIM(u.cUbigeo))='020323'
			  OR LTRIM(RTRIM(u.cUbigeo))='020325'
			  OR LTRIM(RTRIM(u.cUbigeo))='020803'
			  OR LTRIM(RTRIM(u.cUbigeo))='021204'
			  OR LTRIM(RTRIM(u.cUbigeo))='021205'
			  OR LTRIM(RTRIM(u.cUbigeo))='021206'
			  OR LTRIM(RTRIM(u.cUbigeo))='021209'
			  OR LTRIM(RTRIM(u.cUbigeo))='021210'
			  OR LTRIM(RTRIM(u.cUbigeo))='090401'
			  OR LTRIM(RTRIM(u.cUbigeo))='090409'
			  OR LTRIM(RTRIM(u.cUbigeo))='140902' THEN 'AIO'
		 WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN --REGIONAL
	 'REGIONAL'
		 ELSE 'FORANEO'
	 END AS cCondicion,
CASE WHEN ci.cOcupacion IS NULL   
 THEN '' ELSE ci.cOcupacion end as cOcupacion,  
--CASE WHEN ci.cOcupacion IS NULL   
-- THEN '' ELSE ci.cOcupacion + CASE WHEN ci.cOcupacion2 IS NULL THEN '' WHEN ci.cOcupacion2 = '' THEN '' ELSE ' - ' + ci.cOcupacion2 END END AS cOcupacion,   
 ci.bEvaluado,   
   case   
 when  ci.dFechaEvaluacion='1900-01-01' then ''   
 else convert(varchar,  ci.dFechaEvaluacion, 103)  end  as dFechaEvaluacion,  
 'APTO' as cAptitud,   
 ci.dFechaVerificativa,   
 ci.bVerificativa,   
 CASE ci.iEstadoVerificativa   
 WHEN 0 THEN '-'   
 WHEN 1 THEN '-'   
 WHEN 2 THEN 'E'   
 WHEN 3 THEN 'R'   
 END AS cEstadoVerificativa,   
 ci.dFechaCargaBox, ci.bCargaBox,   
  case isnull(fld.iCodFuerzaLaboralDetalle,0)  
 when 0 then cast( 0 as bit)   
 else cast(1 as bit)    
 end as bContratado , ci.dFechaSis AS dFechaRegistro,  
isnull(co.cNomContrata,'')  as [EmpresaTrabaja],  
 ci.cFono as Fono ,'' as VC  
FROM            dbo.CandidatoInforme AS ci    
 left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0   
 left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral   
left join contrata co on fl.iCodContrata=co.iCodContrata   
 LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo
LEFT JOIN CandidatoInformeCondicion cond ON ci.iCodCandidatoInforme=cond.iCodCandidatoInforme
	LEFT JOIN TDCondicionSustento tdco ON cond.iCodTDCondicionSustentoNueva=tdco.iCodTDCondicionSustento
	AND tdco.iCodUsuario=1
LEFT JOIN Comunidad com ON com.iCodComunidad=cond.iCodComunidad
	AND com.iCodComunidad>1
 --left join candidatoadmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and icodcandidatoadmisiontipo=1    
 --and cad.bImprocedente=0   
where  ci.cDNI=@cDNI   
and cond.iCodCandidatoInformeCondicion=
		(SELECT MAX(cond9.iCodCandidatoInformeCondicion)
		 FROM CandidatoInformeCondicion cond9
		 WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme) 
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByDNIStat]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











 


CREATE PROCEDURE [dbo].[SP_DT_CandidatoByDNIStat] @cDNI varchar(15),@cTipoDoc varchar(6)  
AS
 SELECT        ci.iCodCandidatoInforme, 
ci.cDNI, ci.cApellidos,ci.cNombres, 
ci.cUbigeo, 
ci.cCondicion as cCondicionDes, 
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as cCondicion ,
ci.cOcupacion,
 case ci.bEvaluado 
 when 1 then '' 
 when 0 then '' 
 end as cEvaluado, 
 case ci.bCargaBox 
 when 1 then 'SI' 
 when 0 then 'NO' 
 end as cExpediente, 
 case ci.bContratado 
 when 1 then 'SI' 
 when 0 then 'NO' 
 end as cFFLL,ci.cTipoDoc ,ci.cMOCMONC ,ci.cSexo,ci.cPaisNacimiento 
FROM            dbo.CandidatoInforme AS ci  
where  ci.cDNI=@cDNI and ci.cTipoDoc=@cTipoDoc
 











GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByDNIStatFL]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








 


CREATE PROCEDURE [dbo].[SP_DT_CandidatoByDNIStatFL] @cDNI varchar(15),@cTipoDoc varchar(6)  
AS
 SELECT        ci.iCodCandidatoInforme, 
ci.cDNI, ci.cApellidos,ci.cNombres, 
ci.cUbigeo, 
ci.cCondicion as cCondicionDes, 
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as cCondicion ,
ci.cOcupacion,
 case ci.bEvaluado 
 when 1 then '' 
 when 0 then '' 
 end as cEvaluado, 
  case ci.bCargaBox  
 when 1 then 'SI' 
 when 0 then 'NO' 
 end as cExpediente, 
 case ci.bContratado 
 when 1 then 'SI' 
 when 0 then 'NO' 
 end as cFFLL,ci.cTipoDoc ,ci.cMOCMONC ,ci.cSexo,ci.cPaisNacimiento,
 case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then 'NO' 
 else 'SI' 
 end as cFFLLGlobal ,
 case isnull(fld.iCodFuerzaLaboralDetalle,0) 
 when 0 then ''
 else 
	case 
	when co.iCodContrata=sco.iCodContrata then   isnull(co.cNomContrata,'NINGUNA') 
	else isnull(co.cNomContrata,'NINGUNA') + ' - ' + isnull(sco.cNomContrata,'NINGUNA') 
	end 
end as cEmpresaTrabaja,
 isnull(fld.iCodFuerzaLaboralDetalle,0) as  iCodFuerzaLaboralDetalle ,
  case ci.bSustentoCV 
 when 1 then 'SI' 
 when 0 then 'NO' 
 end as cSustento ,
   case ci.bSustentoCV 
 when 1 then 'SI' 
 when 0 then 'NO' 
 end as cDoc ,
 CASE 
 WHEN isnull(cid.bBlue,0)=1 then 
	CASE 
	WHEN cid.dFechaIniBlue>GETDATE() then
      '"A**'+ convert(varchar,DATEADD(DAY,10,CAST(GETDATE() as date)),103) +'    ---' 
	  else
	  'V' 
	 END
 ELSE 
	 isnull(
	 (
	-- select top 1
	--case 
	--when aa.bAnulado=1 then 'N' 
	--else 
	--	case 
	--	when DATEADD(DAY,10,CAST(a.dFechaAprobacion as date))>=CAST(GETDATE() AS DATE) 
	--	then aa.cProcesoEtapa +'**' + convert(varchar,DATEADD(DAY,10,CAST(a.dFechaAprobacion as date)),103) + '    ' + emp.cNomContrata   
	--	when aa.cProcesoEtapa='R' then 'V' 
	--	else 'V' 
	--	end  
	--end
	-- from anexoadmision a 
	--inner join AnexoAdmisionDetalle aa on a.iCodAnexoAdmision=aa.iCodAnexoAdmision 
	--left join Contrata emp on a.iCodContrata=emp.iCodContrata 
	-- where aa.iCodCandidatoInforme=ci.iCodCandidatoInforme 
	--  and DATEADD(DAY,10,CAST(a.dFechaAprobacion as date))>=CAST(GETDATE() AS DATE) 
	--  order by iCodAnexoAdmisionDetalle desc
	--*****************************************************
	select top 1
	case 
	when aa.bAnulado=1 then 'N' 
	else 
		case 

		when DATEADD(DAY,10,CAST(aa.dFechaSis as date))<=CAST(GETDATE() AS DATE) then 'V'
		else
			case
			when DATEADD(DAY,10,CAST(aa.dFechaSis as date))>=CAST(GETDATE() AS DATE) 
			then aa.cProcesoEtapa +'**' + convert(varchar,DATEADD(DAY,10,CAST(aa.dFechaSis as date)),103) + '    ' + emp.cNomContrata   
			else 'V' 
			end  
		end
	end
	 from anexoadmision a 
	inner join AnexoAdmisionDetalle aa on a.iCodAnexoAdmision=aa.iCodAnexoAdmision 
	left join Contrata emp on a.iCodContrata=emp.iCodContrata 
	 where aa.iCodCandidatoInforme=ci.iCodCandidatoInforme  
	   -- and DATEADD(DAY,10,CAST(a.dFechaRegistro as date))>=CAST(GETDATE() AS DATE) 
	  and DATEADD(DAY,10,CAST(aa.dFechaSis as date))>=CAST(GETDATE() AS DATE) 
	  order by iCodAnexoAdmisionDetalle desc
	  )
	  ,'N') 
  --fin case
END as cEstadoPGI 

FROM            dbo.CandidatoInforme AS ci  
left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 
left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
left join contrata co on fl.iCodContrata=co.iCodContrata 
left join Contrata sco on fld.iCodSubContrata=sco.iCodContrata 
--left join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato 
left join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme 
where  ci.cDNI=@cDNI and ci.cTipoDoc=@cTipoDoc 
--and cto.cFase<>'NA' 
order by fld.iCodFuerzaLaboralDetalle desc 
 









GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByDNIWeb_Bckp]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO














 


CREATE PROCEDURE [dbo].[SP_DT_CandidatoByDNIWeb_Bckp] @cDNI varchar(15) 
AS


 SELECT       cast(ci.iCodCandidatoInforme as varchar) as iCodCandidatoInforme, 
ci.cDNI, ci.cApellidos ,ci.cNombres,  
case 
when ci.bCargaBox=1 then 
	case ci.cCondicion 
	when 'LOCAL' then 'LOCAL' 
	when 'RESIDENTE' then 'LOCAL' 
	when 'COMUNIDAD' then 'LOCAL' 
	else 
		case 
			when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN DOCUMENTARIA'
		else  
			CASE
				when ci.bSustentoCV=1 then 
					case ci.cCondicion 
						when 'LOCAL' then 'LOCAL SIN CV' 
						when 'RESIDENTE' then 'LOCAL SIN CV' 
						when 'COMUNIDAD' then 'LOCAL SIN CV' 
						when 'FORANEO' then 'NO LOCAL' 
						else 'NO LOCAL' 
					end
				else 'NO LOCAL'
			end
		end 
	end
else 
	case 
	when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN DOCUMENTARIA'
	else  
		CASE
		when ci.bSustentoCV=1 then 
			case ci.cCondicion 
			when 'LOCAL' then 'LOCAL SIN CV' 
			when 'RESIDENTE' then 'LOCAL SIN CV' 
			when 'COMUNIDAD' then 'LOCAL SIN CV' 
			when 'FORANEO' then 'NO LOCAL' 
			else 'NO LOCAL' 
			end
		else 'NO LOCAL'
		end
	end 
end as cCondicionStat,
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'NO LOCAL' 
		else 'NO LOCAL' 
	end
else 
	'NO LOCAL'
end as cCondicion , 
case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'NO LOCAL' 
		else 'NO LOCAL' 
	end as cCondicionIni,
(CASE WHEN ci.cOcupacion IS NULL 
 THEN '' ELSE ci.cOcupacion end) 
 + (case 
  when isnull(cap.iCodCapacitacionAdmisionPrevia,0)>0 then 
	case 
	when cap.cGUID='0000' then '<br/><p style="color:orangered;">Ud. ya se registró en un curso de capacitación en caso de continuar el sistema no lo registrará.</p>' 
	else '' 
	end 
else '' end  ) as cOcupacion,
  ci.bCargaBox ,
  case
  when isnull(cad.iCodCandidatoAdmision,0) >0 then 'S'
  else 'N' 
  end as cProcesoReg ,
--select  cap.iCodCapacitacionAdmisionPrevia from CapacitacionAdmisionPrevia cap  
--where cDNI
case 
  when isnull(cap.iCodCapacitacionAdmisionPrevia,0)>0 then 
	case 
	when cap.cGUID='0000' then 'RC' 
	else 'NR' 
	end 
else 'NR' end as cRegPrevio 
FROM            dbo.CandidatoInforme AS ci  
 
 left join candidatoadmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and icodcandidatoadmisiontipo=1  
 and cad.bImprocedente=0 
 left join CapacitacionAdmisionPrevia cap on ci.iCodCandidatoInforme=cap.iCodCandidatoInforme and cap.cGUID='0000' 
where   ci.cDNI=@cDNI 
 
  







GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByDNIWebAppRegistro]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoByDNIWebAppRegistro]
@cDNI varchar(15)  
AS  
BEGIN   

	SET NOCOUNT ON  
	insert into logvisita values('POSTULACION WEB',@cDNI,0,0,GETDATE(),'POSTWEB');  
  
	SELECT	cast(ci.iCodCandidatoInforme as varchar) as iCodCandidatoInforme,   
			ci.cDNI, ci.cApellidos ,ci.cNombres,  ci.cCorreo,ci.cFono,ci.dFechaNac,  
			case  when ci.bCargaBox=1 then   
						case ci.cCondicion   
						when 'LOCAL' then 'LOCAL'   
						when 'RESIDENTE' then 'LOCAL'   
						when 'COMUNIDAD' then 'LOCAL'   
				        else   
				        case when isnull(cad.iCodCandidatoAdmision,0)>0 
						then 'EN REVISIÓN DOCUMENTARIA'  
				        else 
						  CASE  when ci.bSustentoCV=1 then   
					            case ci.cCondicion   
								when 'LOCAL' then 'LOCAL SIN CV'   
								when 'RESIDENTE' then 'LOCAL SIN CV'   
								when 'COMUNIDAD' then 'LOCAL SIN CV'   
								when 'FORANEO' then 'NO LOCAL'   
						 else 'NO LOCAL'   
					 end  
					else 'NO LOCAL'  
				   end  
				  end   
				 end  
				else   
				 case   
				 when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN DOCUMENTARIA'  
				 else    
				  CASE  
				  when ci.bSustentoCV=1 then   
				   case ci.cCondicion   
				   when 'LOCAL' then 'LOCAL SIN CV'   
				   when 'RESIDENTE' then 'LOCAL SIN CV'   
				   when 'COMUNIDAD' then 'LOCAL SIN CV'   
				   when 'FORANEO' then 'NO LOCAL'   
				   else 'NO LOCAL'   
				   end  
				  else 'NO LOCAL'  
				  end  
				 end   
				end as cCondicionStat,  
				case ci.bSustentoCV  
				when 1 then  
				 case ci.cCondicion   
				  when 'LOCAL' then 'LOCAL'   
				  when 'RESIDENTE' then 'LOCAL'   
				  when 'COMUNIDAD' then 'LOCAL'   
				  when 'FORANEO' then 'NO LOCAL'   
				  else 'NO LOCAL'   
				 end  
				else   
				 'NO LOCAL'  
				end as cCondicion ,   
				 CASE WHEN ci.cOcupacion IS NULL   
				 THEN '' ELSE ci.cOcupacion   
				  end as cOcupacion,  
				  ci.bCargaBox ,  
   
				-- case   
    
				--  when isnull(cd.iCodConvocatoriaDetalle,0)>0 then cast(1 as bit)   
    
				--else cast(0 as bit)  end as bRegPrevio ,  
				cast(0 as bit) as bRegPrevio , 
				'' as cMetaData  
  
		 FROM dbo.CandidatoInforme AS ci    
		 left join candidatoadmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and icodcandidatoadmisiontipo=1    
		 and cad.bImprocedente=0   
 		 where  ci.cDNI=@cDNI   
		 and ccondicion in('LOCAL','RESIDENTE','COMUNIDAD')   
		 and bCargaBox=1   
   
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByDNIwebCandidato]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoByDNIwebCandidato]
	@cDNI varchar(15)
AS  
BEGIN  
	SELECT cast(ci.iCodCandidatoInforme as varchar) as [iCodCandidatoInforme],
	ci.cDNI as [cDNI],ci.cApellidos as [cApellidos],ci.cNombres as [cNombres],ci.cSexo as [cSexo],
	ci.cCorreo as [cCorreo],ci.cFono as [cFono],CONVERT(varchar,ci.dFechaNac,103) as [dFechaNac], cast(ci.bCargaBox as varchar) as [bCargaBox] 
	FROM dbo.CandidatoInforme AS ci 
	LEFT JOIN dbo.CandidatoInformeAdd AS ciad ON ci.iCodCandidatoInforme=ciad.iCodCandidatoInforme  
	where ci.cDNI = @cDNI	
	and ci.cCondicion in('LOCAL','RESIDENTE','COMUNIDAD')
	and (ci.iTipoIngreso = 1 or (ci.bSustentoCV = 1 and ci.bCargaBox=1 )) 
	and ciad.bAnulado=0 
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByDNIWebCapacitacion]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoByDNIWebCapacitacion] @cDNI varchar(15),@dFechaNac varchar(15) 
AS

 SET NOCOUNT ON
  insert into logvisita values('BECAS 2023',@cDNI,0,0,GETDATE(),'BECAS2023_REGISTRO');

 SELECT       cast(ci.iCodCandidatoInforme as varchar) as iCodCandidatoInforme, 
ci.cDNI, ci.cApellidos ,ci.cNombres,  ci.cCorreo,ci.cFono,CONVERT(varchar,ci.dFechaNac,103)as dFechaNac,
case 
when ci.bCargaBox=1 then 
	case ci.cCondicion 
	when 'LOCAL' then 'LOCAL' 
	when 'RESIDENTE' then 'LOCAL' 
	when 'COMUNIDAD' then 'LOCAL' 
	else 
		case 
			when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN DOCUMENTARIA'
		else  
			CASE
				when ci.bSustentoCV=1 then 
					case ci.cCondicion 
						when 'LOCAL' then 'LOCAL SIN CV' 
						when 'RESIDENTE' then 'LOCAL SIN CV' 
						when 'COMUNIDAD' then 'LOCAL SIN CV' 
						when 'FORANEO' then 'NO LOCAL' 
						else 'NO LOCAL' 
					end
				else 'NO LOCAL'
			end
		end 
	end
else 
	case 
	when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN DOCUMENTARIA'
	else  
		CASE
		when ci.bSustentoCV=1 then 
			case ci.cCondicion 
			when 'LOCAL' then 'LOCAL SIN CV' 
			when 'RESIDENTE' then 'LOCAL SIN CV' 
			when 'COMUNIDAD' then 'LOCAL SIN CV' 
			when 'FORANEO' then 'NO LOCAL' 
			else 'NO LOCAL' 
			end
		else 'NO LOCAL'
		end
	end 
end as cCondicionStat,
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'NO LOCAL' 
		else 'NO LOCAL' 
	end
else 
	'NO LOCAL'
end as cCondicion , 
 CASE WHEN ci.cOcupacion IS NULL 
 THEN '' ELSE ci.cOcupacion 
  end as cOcupacion,
  ci.bCargaBox ,
  case
  when isnull(cad.iCodCandidatoAdmision,0) >0 then 'S'
  else 'N' 
  end as cProcesoReg ,
case 
	--WHEN isnull(cmat.iEstadoProceso,0)=1 then  cast(1 as bit) SOLO VA CUANDO SON VARIAS FASES
	when isnull(cap.iCodCapacitacionAdmisionPrevia,0)>0 then 
	case 
	when cap.cGUID='0000' then  cast(1 as bit) 
	else cast(0 as bit) 
	end 
else cast(0 as bit) end as bRegPrevio ,
'' as cMetaData ,
(isnull( (SELECT TOP 1 
 case 
 when cads.dFechaSolicitud='1900-01-01' then 
	 convert(varchar, ci.dFechaCargaBox, 103) 
 else convert(varchar, cads.dFechaSolicitud, 103) 
  end   
 FROM CandidatoAdmision cads 
WHERE cads.iCodCandidatoInforme=ci.iCodCandidatoInforme 
AND cads.iCodCandidatoAdmisionTipo in(3,4) and cads.bImprocedente=0  ORDER BY cads.dFechaSolicitud DESC),convert(varchar, ci.dFechaCargaBox, 103) ) ) 
AS  cUltimoUpdate 

FROM dbo.CandidatoInforme AS ci  
LEFT JOIN candidatoadmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and icodcandidatoadmisiontipo=1 and cad.bImprocedente=0 
LEFT JOIN CapacitacionAdmisionPrevia cap on ci.iCodCandidatoInforme=cap.iCodCandidatoInforme and cap.cGUID='0000' and cap.iCodCapacitacionProgramaCurso>=111
--LEFT JOIN dbo.CapacitacionMatricula cmat on cmat.iCodCandidatoInforme =ci.iCodCandidatoInforme  and cmat.iCodCapacitacionProgramaCurso>=48 and   cmat.iCodCapacitacionProgramaCurso<=81 
 
 where   ci.cDNI=@cDNI 
 --and CONVERT(varchar,ci.dFechaNac,23) = @dFechaNac --'99GEL' 
	and ccondicion in('LOCAL','RESIDENTE','COMUNIDAD') 
	and bCargaBox=1 
	and ci.bSustentoCV=1 
	
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByDNIWebCapacitacion_Beta]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoByDNIWebCapacitacion_Beta] 
	@iCodCandidatoInforme INT
AS
 --SET NOCOUNT ON
 --insert into logvisita values('BECAS 2023',@cDNI,0,0,GETDATE(),'BECAS2023_REGISTRO');
BEGIN
	SELECT  cast(ci.iCodCandidatoInforme as varchar) as iCodCandidatoInforme, 
	ci.cDNI,ci.cCUI,ci.cApellidos ,ci.cNombres,  ci.cCorreo,ci.cFono,CONVERT(varchar,ci.dFechaNac,103)as dFechaNac,
	case 
	when ci.bCargaBox=1 then 
		case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		else 
			case 
				when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN DOCUMENTARIA'
			else  
				CASE
					when ci.bSustentoCV=1 then 
						case ci.cCondicion 
							when 'LOCAL' then 'LOCAL SIN CV' 
							when 'RESIDENTE' then 'LOCAL SIN CV' 
							when 'COMUNIDAD' then 'LOCAL SIN CV' 
							when 'FORANEO' then 'NO LOCAL' 
							else 'NO LOCAL' 
						end
					else 'NO LOCAL'
				end
			end 
		end
	else 
		case 
		when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN DOCUMENTARIA'
		else  
			CASE
			when ci.bSustentoCV=1 then 
				case ci.cCondicion 
				when 'LOCAL' then 'LOCAL SIN CV' 
				when 'RESIDENTE' then 'LOCAL SIN CV' 
				when 'COMUNIDAD' then 'LOCAL SIN CV' 
				when 'FORANEO' then 'NO LOCAL' 
				else 'NO LOCAL' 
				end
			else 'NO LOCAL'
			end
		end 
	end as cCondicionStat,
	case ci.bSustentoCV
	when 1 then
		case ci.cCondicion 
			when 'LOCAL' then 'LOCAL' 
			when 'RESIDENTE' then 'LOCAL' 
			when 'COMUNIDAD' then 'LOCAL' 
			when 'FORANEO' then 'NO LOCAL' 
			else 'NO LOCAL' 
		end
	else 
		'NO LOCAL'
	end as cCondicion , 
	 CASE WHEN ci.cOcupacion IS NULL 
	 THEN '' ELSE ci.cOcupacion 
	  end as cOcupacion,
	  ci.bCargaBox ,
	  case
	  when isnull(cad.iCodCandidatoAdmision,0) >0 then 'S'
	  else 'N' 
	  end as cProcesoReg ,
	case 
		--WHEN isnull(cmat.iEstadoProceso,0)=1 then  cast(1 as bit) SOLO VA CUANDO SON VARIAS FASES
		when isnull(cap.iCodCapacitacionAdmisionPrevia,0)>0 then 
		case 
		when cap.cGUID='0000' then  cast(1 as bit) 
		else cast(0 as bit) 
		end 
	else cast(0 as bit) end as bRegPrevio ,
	'' as cMetaData ,
	(isnull( (SELECT TOP 1 
	 case 
	 when cads.dFechaSolicitud='1900-01-01' then 
		 convert(varchar, ci.dFechaCargaBox, 103) 
	 else convert(varchar, cads.dFechaSolicitud, 103) 
	  end   
	 FROM CandidatoAdmision cads 
	WHERE cads.iCodCandidatoInforme=ci.iCodCandidatoInforme 
	AND cads.iCodCandidatoAdmisionTipo in(3,4) and cads.bImprocedente=0  ORDER BY cads.dFechaSolicitud DESC),convert(varchar, ci.dFechaCargaBox, 103) ) ) 
	AS  cUltimoUpdate
	FROM dbo.CandidatoInforme AS ci  
	LEFT JOIN candidatoadmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and icodcandidatoadmisiontipo=1 and cad.bImprocedente=0 
	LEFT JOIN CapacitacionAdmisionPrevia cap on ci.iCodCandidatoInforme=cap.iCodCandidatoInforme and cap.cGUID='0000' and cap.iCodCapacitacionProgramaCurso>=111
	--LEFT JOIN dbo.CapacitacionMatricula cmat on cmat.iCodCandidatoInforme =ci.iCodCandidatoInforme  and cmat.iCodCapacitacionProgramaCurso>=48 and   cmat.iCodCapacitacionProgramaCurso<=81 	 
	where ci.iCodCandidatoInforme = @iCodCandidatoInforme
	--and CONVERT(varchar,ci.dFechaNac,23) = @dFechaNac --'99GEL' 
	and ccondicion in('LOCAL','RESIDENTE','COMUNIDAD') 
	and bCargaBox=1 
	and ci.bSustentoCV=1 
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByDNIWebLogin]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[SP_DT_CandidatoByDNIWebLogin]
@cDNI varchar(15),
@dDATE varchar(15)
AS  
BEGIN   	
	SET NOCOUNT ON    
	SELECT	cast(ci.iCodCandidatoInforme as varchar) as iCodCandidatoInforme,   
			ci.cDNI, ci.cApellidos ,ci.cNombres,  ci.cCorreo,ci.cFono,ci.dFechaNac
		 FROM dbo.CandidatoInforme AS ci    		
 		 where  ci.cDNI = @cDNI and CONVERT(varchar,ci.dFechaNac,103) = CONVERT(varchar,@dDATE,103)
		 and ci.cCondicion in('LOCAL','RESIDENTE','COMUNIDAD')
		 and (ci.iTipoIngreso = 1 or (ci.bSustentoCV = 1 and ci.bCargaBox=1 ))  		 
END

SELECT cast(ci.iCodCandidatoInforme as varchar) as iCodCandidatoInforme,
ci.cDNI,ci.cApellidos,ci.cNombres,ci.cCorreo,ci.cFono,
CONVERT(varchar,ci.dFechaNac,103) as dFechaNac 
FROM dbo.CandidatoInforme AS ci 
where ci.cDNI = '70211642'
and ci.cCondicion in('LOCAL','RESIDENTE','COMUNIDAD')
and (ci.iTipoIngreso = 1 or (ci.bSustentoCV = 1 and ci.bCargaBox=1 ))


select concat(ci.cApellidos,', ',ci.cNombres) as nombres,ci.cDNI,ci.cCUI,CONVERT(varchar,ci.dFechaNac,103) as dFechaNac,
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as [CONDICION]
from CandidatoInforme as ci
where ci.dFechaNac = '01/01/1900'
and ci.cCondicion in('LOCAL','RESIDENTE','COMUNIDAD')
and (ci.iTipoIngreso = 1 and (ci.bSustentoCV = 1 and ci.bCargaBox=1 ))
order by ci.dFechaSis desc
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByDNIWebOAEL]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoByDNIWebOAEL] 
@cDNI varchar(15) AS
BEGIN
	SET NOCOUNT ON 
	SELECT ci.iCodCandidatoInforme,
		   ci.cDNI,
		   ci.cApellidos,
		   ci.cNombres,
		   ci.cUbigeo + ' - ' +  isnull(u.cDepartamento, '')  + ' ' +     
           isnull(u.cProvincia, '')  + ' ' + isnull(u.cDistrito, '')  as cUbigeo, 
		   ci.cCorreo,
		   ci.cFono,
		   convert(varchar, ci.dFechaNac, 103) AS dFechaNac,
			CASE      
			   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AID' THEN 'LOCAL AID'      
			   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AIO' THEN 'LOCAL AIO'      
			   WHEN LTRIM(RTRIM(u.cUbigeo))='020805'      
				 OR LTRIM(RTRIM(u.cUbigeo))='020813'      
				 OR LTRIM(RTRIM(u.cUbigeo))='021901'      
				 OR LTRIM(RTRIM(u.cUbigeo))='020814' THEN 'LOCAL AID'      
			   WHEN LTRIM(RTRIM(u.cUbigeo))='021901'      
				 OR LTRIM(RTRIM(u.cUbigeo))='020301'      
				 OR LTRIM(RTRIM(u.cUbigeo))='020304'      
				 OR LTRIM(RTRIM(u.cUbigeo))='020305'      
				 OR LTRIM(RTRIM(u.cUbigeo))='020310'      
				 OR LTRIM(RTRIM(u.cUbigeo))='020321'      
				 OR LTRIM(RTRIM(u.cUbigeo))='020323'      
				 OR LTRIM(RTRIM(u.cUbigeo))='020325'      
				 OR LTRIM(RTRIM(u.cUbigeo))='020803'      
				 OR LTRIM(RTRIM(u.cUbigeo))='021204'      
				 OR LTRIM(RTRIM(u.cUbigeo))='021205'      
				 OR LTRIM(RTRIM(u.cUbigeo))='021206'      
				 OR LTRIM(RTRIM(u.cUbigeo))='021209'      
				 OR LTRIM(RTRIM(u.cUbigeo))='021210'      
				 OR LTRIM(RTRIM(u.cUbigeo))='090401'      
				 OR LTRIM(RTRIM(u.cUbigeo))='090409'      
				 OR LTRIM(RTRIM(u.cUbigeo))='140902' THEN 'LOCAL AIO'      
			   WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN --REGIONAL      
			  'REGIONAL'      
			   ELSE 'FORANEO'       
		   END AS cCondicionStat,
		   CASE      
			   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AID' THEN 'LOCAL'      
			   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AIO' THEN 'LOCAL'      
			   WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'LOCAL'      
			   WHEN ltrim(rtrim(u.cUbigeo))='140902' THEN 'LOCAL'      
			   WHEN ltrim(rtrim(u.cUbigeo))='090409' THEN 'LOCAL'      
			   WHEN ltrim(rtrim(u.cUbigeo))='090401' THEN 'LOCAL'      
			   ELSE 'FORANEO'  
		   END AS cCondicion,
		   CASE
			   WHEN ci.cOcupacion IS NULL THEN ''
			   ELSE ci.cOcupacion
		   END AS cOcupacion,
		   ci.bCargaBox
	FROM dbo.CandidatoInforme AS ci
	LEFT JOIN CandidatoInformeAdd cid ON ci.iCodCandidatoInforme=cid.iCodCandidatoInforme      
	 LEFT JOIN TDOcupacion tdo1 ON cid.iCodOcupacion=tdo1.iCodOcupacion      
	 LEFT JOIN TDOcupacion tdo2 ON cid.iCodOcupacion2=tdo2.iCodOcupacion      
	 LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo      
	 LEFT JOIN TDUbigeo ur ON ci.cUbigeoResidencia=ur.cUbigeo      
	 LEFT JOIN CandidatoInformeCondicion cond ON ci.iCodCandidatoInforme=cond.iCodCandidatoInforme      
	 LEFT JOIN TDCondicionSustento tdco ON cond.iCodTDCondicionSustentoNueva=tdco.iCodTDCondicionSustento      
	 AND tdco.iCodUsuario=1      
	 LEFT JOIN Comunidad com ON com.iCodComunidad=cond.iCodComunidad      
	 AND com.iCodComunidad>1      
	 WHERE cond.iCodCandidatoInformeCondicion=      
	  (SELECT MAX(cond9.iCodCandidatoInformeCondicion)      
	   FROM CandidatoInformeCondicion cond9      
	   WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme)      
	AND ci.cDNI=@cDNI
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByDNIWebPostulacion]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[SP_DT_CandidatoByDNIWebPostulacion] @cDNI varchar(15) ,@iCodConvocatoria int
AS

 SET NOCOUNT ON
  insert into logvisita values('POSTULACION WEB',@cDNI,0,0,GETDATE(),'POSTWEB');

 SELECT       cast(ci.iCodCandidatoInforme as varchar) as iCodCandidatoInforme, 
ci.cDNI, ci.cApellidos ,ci.cNombres,  ci.cCorreo,ci.cFono,ci.dFechaNac,
case 
when ci.bCargaBox=1 then 
	case ci.cCondicion 
	when 'LOCAL' then 'LOCAL' 
	when 'RESIDENTE' then 'LOCAL' 
	when 'COMUNIDAD' then 'LOCAL' 
	else 
		case 
			when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN DOCUMENTARIA'
		else  
			CASE
				when ci.bSustentoCV=1 then 
					case ci.cCondicion 
						when 'LOCAL' then 'LOCAL SIN CV' 
						when 'RESIDENTE' then 'LOCAL SIN CV' 
						when 'COMUNIDAD' then 'LOCAL SIN CV' 
						when 'FORANEO' then 'NO LOCAL' 
						else 'NO LOCAL' 
					end
				else 'NO LOCAL'
			end
		end 
	end
else 
	case 
	when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN DOCUMENTARIA'
	else  
		CASE
		when ci.bSustentoCV=1 then 
			case ci.cCondicion 
			when 'LOCAL' then 'LOCAL SIN CV' 
			when 'RESIDENTE' then 'LOCAL SIN CV' 
			when 'COMUNIDAD' then 'LOCAL SIN CV' 
			when 'FORANEO' then 'NO LOCAL' 
			else 'NO LOCAL' 
			end
		else 'NO LOCAL'
		end
	end 
end as cCondicionStat,
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'NO LOCAL' 
		else 'NO LOCAL' 
	end
else 
	'NO LOCAL'
end as cCondicion , 
 CASE WHEN ci.cOcupacion IS NULL 
 THEN '' ELSE ci.cOcupacion 
  end as cOcupacion,
  ci.bCargaBox ,
 
 case 
	 
  when isnull(cd.iCodConvocatoriaDetalle,0)>0 then cast(1 as bit) 
	 
else cast(0 as bit)  end as bRegPrevio ,
'' as cMetaData ,
(isnull( (SELECT TOP 1 
 case 
 when cads.dFechaSolicitud='1900-01-01' then 
	 convert(varchar, ci.dFechaCargaBox, 103) 
 else convert(varchar, cads.dFechaSolicitud, 103) 
  end   
 FROM CandidatoAdmision cads 
WHERE cads.iCodCandidatoInforme=ci.iCodCandidatoInforme 
AND cads.iCodCandidatoAdmisionTipo in(3,4) and cads.bImprocedente=0  ORDER BY cads.dFechaSolicitud DESC),convert(varchar, ci.dFechaCargaBox, 103) ) ) 
AS  cUltimoUpdate 

FROM dbo.CandidatoInforme AS ci  
 left join candidatoadmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and icodcandidatoadmisiontipo=1  
 and cad.bImprocedente=0 
 left join convocatoriadetalle cd on ci.iCodCandidatoInforme=cd.iCodCandidatoInforme and cd.iCodConvocatoria=@iCodConvocatoria 
  
 where   ci.cDNI=@cDNI 
	and ccondicion in('LOCAL','RESIDENTE','COMUNIDAD') 
	and bCargaBox=1 
	














GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByDNIWebSeguimiento]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO














 


CREATE PROCEDURE [dbo].[SP_DT_CandidatoByDNIWebSeguimiento] @cDNI varchar(15) 
AS

 
 SELECT  ci.cDNI,lower( ci.cApellidos + ' ' + ci.cNombres) AS cNomCompleto, 
 case 
when ci.bCargaBox=1 then 
	case ci.cCondicion 
	when 'LOCAL' then 'LOCAL' 
	when 'RESIDENTE' then 'LOCAL' 
	when 'COMUNIDAD' then 'LOCAL' 
	else 
		case 
			when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN DOCUMENTARIA'
		else  
			CASE
				when ci.bSustentoCV=1 then 
					case ci.cCondicion 
						when 'LOCAL' then 'LOCAL SIN CV' 
						when 'RESIDENTE' then 'LOCAL SIN CV' 
						when 'COMUNIDAD' then 'LOCAL SIN CV' 
						when 'FORANEO' then 'FORANEO' 
						else 'FORANEO' 
					end
				else 'FORANEO'
			end
		end 
	end
else 
	case 
	when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN DOCUMENTARIA'
	else  
		CASE
		when ci.bSustentoCV=1 then 
			case ci.cCondicion 
			when 'LOCAL' then 'LOCAL SIN CV' 
			when 'RESIDENTE' then 'LOCAL SIN CV' 
			when 'COMUNIDAD' then 'LOCAL SIN CV' 
			when 'FORANEO' then 'FORANEO' 
			else 'FORANEO' 
			end
		else 'FORANEO'
		end
	end 
end as cCondicion,
 
(CASE WHEN ci.cOcupacion IS NULL 
 THEN '' ELSE ci.cOcupacion END ) + 
 (case 
 when ci.cOcupacion2<>'' then ' - ' + ci.cOcupacion2 
 else ''  
 end) as cOcupacion,
 case 
 when isnull(cad.iCodCandidatoAdmision,0)>0 then --si tiene un tramite en gestion
	case ci.bEvaluado 
	when 1 then 'SI' 
	when 0 then 'NO - complete el Evaluatest y remita la evidencia(imágen).' 
	end 
 else
	 case 
	 when ci.bCargaBox=1 then 'SI'
	 else 'NO - Se recomienda insribirse en la OAEL.' 
	 end 
 end as cEvaluado,
 --case 
 --when isnull(cad.iCodCandidatoAdmision,0)>0 then --si tiene un tramite en gestion
	--case isnull(ciad.bConsentimiento,0)
	--when 1 then 'SI' 
	--when 0 then 'NO - complete el consentimiento de datos enviado a su correo.' 
	--end 
 --else
	-- case 
	-- when ci.bCargaBox=1 then 'SI'
	-- else 'NO - Se recomienda insribirse en la OAEL.' 
	-- end 
 --end as cConsentimiento,
  case 
  when ci.bCargaBox=1 then 
	'SI'
  when ci.bCargabox=0 then 
	case
	when isnull(cad.iCodCandidatoAdmision,0)>0 then --si tiene un tramite en gestion
		case isnull(ciad.bConsentimiento,0)
		when 1 then 'SI' 
		when 0 then 'NO - complete el consentimiento de datos enviado a su correo.' 
		end 
	else 'NO - Se recomienda insribirse en la OAEL.' 
	end
  end
  as cConsentimiento,
   case 
 when  ci.dFechaRegistro='1900-01-01' then '' 
 else convert(varchar,  ci.dFechaRegistro, 103)  end  as dFechaRegistro,
 isnull(co.cNomContrata,'')  as [EmpresaTrabaja] ,

 (

 isnull( (SELECT TOP 1 

 case 
 when cads.bExpediente=1 then 'COMPLETADA - ' + convert(varchar, cads.dFechaExpediente, 103) 
 when cads.bExpediente=0 then 'EN PROCESO (esto puede tardar hasta 03 días hábiles).' 
 end 

 FROM CandidatoAdmision cads 
WHERE cads.iCodCandidatoInforme=ci.iCodCandidatoInforme 
AND cads.iCodCandidatoAdmisionTipo in(3,4) and cads.bImprocedente=0  ORDER BY cads.dFechaSolicitud DESC), 
	case 
	when ci.bCargaBox=0 then 'NO CUENTA CON EXPEDIENTE OAEL' 
	else 'COMPLETADA - ' + convert(varchar, ci.dFechaCargaBox, 103) 
	end 
	) --fin null
) 
AS  cUltimoUpdate 
FROM            dbo.CandidatoInforme AS ci  
 left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 
 left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
left join contrata co on fl.iCodContrata=co.iCodContrata 
 left join candidatoadmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and icodcandidatoadmisiontipo=1  
 and cad.bImprocedente=0 
 left join CandidatoInformeAdd ciad on ci.iCodCandidatoInforme=ciad.iCodCandidatoInforme  
where  ci.cDNI=@cDNI 
 
  







GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByDNIWebTracking]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[SP_DT_CandidatoByDNIWebTracking] @cDNI varchar(15) 
AS
 SELECT  ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
 case 
when ci.bCargaBox=1 then 
	case ci.cCondicion 
	when 'LOCAL' then 'LOCAL' 
	when 'RESIDENTE' then 'LOCAL' 
	when 'COMUNIDAD' then 'LOCAL' 
	else 
		case 
			when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN DOCUMENTARIA'
		else  
			CASE
				when ci.bSustentoCV=1 then 
					case ci.cCondicion 
						when 'LOCAL' then 'LOCAL SIN CV' 
						when 'RESIDENTE' then 'LOCAL SIN CV' 
						when 'COMUNIDAD' then 'LOCAL SIN CV' 
						when 'FORANEO' then 'FORANEO' 
						else 'FORANEO' 
					end
				else 'FORANEO'
			end
		end 
	end
else 
	case 
	when isnull(cad.iCodCandidatoAdmision,0)>0 then 'EN REVISIÓN DOCUMENTARIA'
	else  
		CASE
		when ci.bSustentoCV=1 then 
			case ci.cCondicion 
			when 'LOCAL' then 'LOCAL SIN CV' 
			when 'RESIDENTE' then 'LOCAL SIN CV' 
			when 'COMUNIDAD' then 'LOCAL SIN CV' 
			when 'FORANEO' then 'FORANEO' 
			else 'FORANEO' 
			end
		else 'FORANEO'
		end
	end 
end as cCondicion,
 --(
 --CASE 
 --WHEN ci.cPuestoEspecialidad<>'' then ci.cPuestoEspecialidad 
 --ELSE ''
 --END 
 --)
 --+ ' - ' + 
(CASE 
WHEN ci.cOcupacion IS NULL THEN ''  
WHEN ci.cOcupacion='NO CATALOGADO' THEN '' 
 ELSE ci.cOcupacion END ) 
 + 
 (case 
 WHEN ci.cOcupacion2='NO CATALOGADO' THEN '' 
 when ci.cOcupacion2<>'' then ' - ' + ci.cOcupacion2 
 else ''  
 end) as cOcupacion,
 case 
 when isnull(cad.iCodCandidatoAdmision,0)>0 then --si tiene un tramite en gestion
	case ci.bEvaluado 
	when 1 then 'SI' 
	when 0 then 'NO - complete el Evaluatest y remita la evidencia(imágen).' 
	end 
 else
	 case 
	 when ci.bCargaBox=1 then 'SI'
	 else 'NO - Se recomienda insribirse en la OAEL.' 
	 end 
 end as cEvaluado,
 --case 
 --when isnull(cad.iCodCandidatoAdmision,0)>0 then --si tiene un tramite en gestion
	--case isnull(ciad.bConsentimiento,0)
	--when 1 then 'SI' 
	--when 0 then 'NO - complete el consentimiento de datos enviado a su correo.' 
	--end 
 --else
	-- case 
	-- when ci.bCargaBox=1 then 'SI'
	-- else 'NO - Se recomienda insribirse en la OAEL.' 
	-- end 
 --end as cConsentimiento,
  case 
  when ci.bCargaBox=1 then 
	'SI'
  when ci.bCargabox=0 then 
	case
	when isnull(cad.iCodCandidatoAdmision,0)>0 then --si tiene un tramite en gestion
		case isnull(ciad.bConsentimiento,0)
		when 1 then 'SI' 
		when 0 then 'NO - complete el consentimiento de datos enviado a su correo.' 
		end 
	else 'NO - Se recomienda insribirse en la OAEL.' 
	end
  end
  as cConsentimiento,
   case 
 when  ci.dFechaRegistro='1900-01-01' then '' 
 else convert(varchar,  ci.dFechaRegistro, 103)  end  as dFechaRegistro,
 isnull(co.cNomContrata,'')  as [EmpresaTrabaja] ,
 (
 isnull( (SELECT TOP 1 

 case 
 when cads.bExpediente=1 then 'COMPLETADA - ' + convert(varchar, cads.dFechaExpediente, 103) 
 when cads.bExpediente=0 then 'EN PROCESO (esto puede tardar hasta 03 días hábiles).' 
 end 

 FROM CandidatoAdmision cads 
 WHERE cads.iCodCandidatoInforme=ci.iCodCandidatoInforme 
 AND cads.iCodCandidatoAdmisionTipo in(3,4) and cads.bImprocedente=0  ORDER BY cads.dFechaSolicitud DESC), 
	case 
	when ci.bCargaBox=0 then 'NO CUENTA CON EXPEDIENTE OAEL' 
	else 'COMPLETADA - ' + convert(varchar, ci.dFechaCargaBox, 103) 
	end 
	) --fin null
) 
AS  cUltimoUpdate ,
--ci.cPuestoEspecialidad,
 isnull((select top 1 cedu.cCarrera from CandidatoEstudios cedu 
inner join catalogo cat on cedu.iGradoInstruccion=cat.cValueMember and cat.cTabla='Estudios' and cat.cNombreGrupo='iGradoInstruccion' 
where cedu.iCodCandidatoInforme=ci.iCodCandidatoInforme  order by cat.iOrden  desc),ci.cPuestoEspecialidad) 
as cPuestoEspecialidad,
ci.cFono,lower(ci.cCorreo) as cCorreo
FROM dbo.CandidatoInforme AS ci  
 left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 
 left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
left join contrata co on fl.iCodContrata=co.iCodContrata 
 left join candidatoadmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and icodcandidatoadmisiontipo=1  
 and cad.bImprocedente=0 
 left join CandidatoInformeAdd ciad on ci.iCodCandidatoInforme=ciad.iCodCandidatoInforme  
where  ci.cDNI=@cDNI 
 
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoByTipoDocYNroDoc]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoByTipoDocYNroDoc]        
  @cTipoDoc varchar(6),    
  @cNroDoc varchar(15)    
AS        
BEGIN        
     
   SELECT  
   ci.iCodCandidatoInforme,  
   ci.cTipoDoc,  
   ci.cDNI,        
   ci.cApellidos,        
   ci.cNombres,   
   ci.cSexo,  
   ci.cFono,  
   ci.cCorreo,  
   ci.cUbigeo,  
   ci.dFechaNac,  
   ci.cDireccion,  
   ci.cCondicion,       
   Ci.cUbigeo,               
   Ci.cUbigeoResidencia,                    
   ci.cComunidad,        
   ci.cOcupacion,           
   case ci.bCargaBox        
     when 1 then 'SI'        
     when 0 then 'NO'        
   end as cExpediente,              
   ci.cMOCMONC 
   FROM dbo.CandidatoInforme AS ci        
   WHERE ci.cDNI = @cNroDoc AND ci.cTipoDoc = @cTipoDoc        
    
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoExperienciaLaboral]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO














 


CREATE PROCEDURE [dbo].[SP_DT_CandidatoExperienciaLaboral] @iCodCandidatoInforme int 
AS

 
 SELECT iCodCandidatoExperienciaLaboral,cSectorExperiencia,cEmpresa,cPuesto,dFechaIni,dFechaFin,bDocumentado
 --,cDestacariasEmpresa  
 FROM   
 CandidatoExperienciaLaboral
where  iCodCandidatoInforme=@iCodCandidatoInforme 
order by dFechaIni desc 
 
  









GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoHistorialActualizacion]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--::::: GET HISTORIAL REGISTRO / ACTUALIZACION
CREATE PROCEDURE [dbo].[SP_DT_CandidatoHistorialActualizacion]
	@iCodCandidatoInforme int
AS
BEGIN
	SELECT SUBSTRING(cCandidatoAdmisionTipo, 1, 1) as [cTipoProceso],
	CASE SUBSTRING(cCandidatoAdmisionTipo, 1, 1)
		WHEN 'R' THEN 'Registro Nuevo'
		WHEN 'A' THEN 'Actualización'
		WHEN 'P' THEN 'Postulación'
	END AS [cTipoDescipcion],
	--dbo.fnCapitalizarTexto(cCandidatoAdmisionTipo) as [cTipoDescipcion],
	dbo.fnFormatoFecha(dFechaSolicitud) as [dFechaSolicitud],
	CASE SUBSTRING(cCandidatoAdmisionTipo, 1, 1)
		WHEN 'R' THEN 'Registro en la OAEL'
		WHEN 'A' THEN 'Actualización de CV'
		WHEN 'P' THEN cNomContrata
	END AS [cDescripcion],
	cPerfil,
	CASE bAtendido
		WHEN 1 THEN
			CASE SUBSTRING(cCandidatoAdmisionTipo, 1, 1)
				WHEN 'R' THEN 'Atendido'
				WHEN 'A' THEN 'Atendido'
				WHEN 'P' THEN 'Finalizado'
			END
		WHEN 0 THEN 'En Proceso' 
	END AS [bEstado]
	FROM dbo.m_CandidatoAdmisionSolicitud 
	WHERE iCodCandidatoInforme = @iCodCandidatoInforme
	AND SUBSTRING(cCandidatoAdmisionTipo, 1, 1) IN('A','R')
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoInformeListaConocimiento]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoInformeListaConocimiento] 
	@iCodCandidatoInforme int   
AS
SET NOCOUNT ON
 SELECT cast(con.iCodConocimiento as varchar(40)) as cCodConocimiento,con.iCodCandidatoInforme, catcon.cDescripcion as cNomConocimiento,
 catniv.cDisplayMember  as cNivelConocimiento ,catcon.cTipoConocimiento 
  FROM Conocimiento as con  
  INNER JOIN Catalogo as catniv on con.iNivelConocimiento=catniv.cValueMember AND catniv.cTabla='Conocimiento' AND catniv.cNombreGrupo = 'iNivelConocimiento'  
  INNER JOIN CatalogoConocimiento as catcon on con.iCodCatalogoConocimiento=catcon.iCodCatalogoConocimiento
  where con.iCodCandidatoInforme = @iCodCandidatoInforme and con.bActivo = 1
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoInformeListaEstudios]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[SP_DT_CandidatoInformeListaEstudios] 
	@iCodCandidatoInforme int   
AS
BEGIN
	SET NOCOUNT ON
	 -- POR PUESTO 
	SELECT	cast(e.iCodCandidatoEstudios as varchar) as iCodCandidatoEstudios,
			e.cCentroEstudios,
			e.cCarrera,
			e.iCicloAcademico,
			catgradins.cDisplayMember  as cGradoInstruccion,
			catsitacad.cDisplayMember  as cSituacionAcademica,
			catrank.cDisplayMember as cRankingAcademico,
			catgradacad.cDisplayMember  as cGradoAcademico,
			case 
				when isnull( catsitacad.cDisplayMember,'') = 'EN CURSO' then 'EN CURSO'
				else cast(iPeriodoFinAno as varchar(10)) 
			end as cPeriodoFin  
	from CandidatoEstudios as e 
	left JOIN Catalogo as catgradins on e.iGradoInstruccion=catgradins.cValueMember AND catgradins.cTabla='Estudios' AND catgradins.cNombreGrupo = 'iGradoInstruccion' 
	left JOIN Catalogo as catsitacad on e.iSituacionAcademica=catsitacad.cValueMember AND catsitacad.cTabla='Estudios' AND catsitacad.cNombreGrupo = 'iSituacionAcademica'
	left JOIN Catalogo as catrank on e.iRankingAcademico=catrank.cValueMember AND catrank.cTabla='Estudios' AND catrank.cNombreGrupo = 'iRankingAcademico'  
	left JOIN Catalogo as catgradacad on e.iGradoAcademico=catgradacad.cValueMember AND catgradacad.cTabla='Estudios' AND catgradacad.cNombreGrupo = 'iGradoAcademico'
	where e.iCodCandidatoInforme = @iCodCandidatoInforme 
	--and e.bActivo = 1
end
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoInformeListaExperienciaLaboral]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoInformeListaExperienciaLaboral] 
	@iCodCandidatoInforme int   
AS
SET NOCOUNT ON
SET LANGUAGE Spanish
	select cast(ex.iCodCandidatoExperienciaLaboral as varchar) as iCodCandidatoExperienciaLaboral,
	ex.cEmpresa,
	ex.cPuesto ,
	substring(datename(month,convert(date,cast(ex.iPeriodoInicioAno as varchar(4))+'-'+cast(ex.iPeriodoInicioMes as varchar(4))+'-01')),0,4) + 
	' ' + cast(ex.iPeriodoInicioAno as varchar(4))   as cPeriodoIni ,
	case 
	when ex.bActualmenteTrabajado=1 then
		'ACTUALIDAD' 
	else 
	substring(datename(month,convert(date,cast(ex.iPeriodoFinAno as varchar(4))+'-'+cast(ex.iPeriodoFinMes as varchar(4))+'-01')),0,4) + 
	' ' + cast(ex.iPeriodoFinAno as varchar(4)) 
	end as cPeriodoFin  ,
	ex.bActualmenteTrabajado,ex.bDocumentado
	from CandidatoExperienciaLaboral ex 
	where ex.iCodCandidatoInforme = @iCodCandidatoInforme and ex.bActivo = 1 
	ORDER BY ex.iPeriodoInicioAno desc,ex.iPeriodoInicioMes desc

GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoListaFamilia]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO















 


 CREATE PROCEDURE [dbo].[SP_DT_CandidatoListaFamilia] @iCodCandidatoInformeTitular int 
 AS

 
 SELECT   cf.iCodCandidatoFamiliar,cf.cVinculoFamiliar , 
 ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
case 
when ci.bCargaBox=1 then 
	case ci.cCondicion 
	when 'LOCAL' then 'LOCAL' 
	when 'RESIDENTE' then 'LOCAL' 
	when 'COMUNIDAD' then 'LOCAL' 
	else 
		 'FORANEO'
	end
 ELSE 'FORANEO' 
end as cCondicion , --MODIFICA DE ACUERDO A TU MODELO DE NEGOCIO
ci.cComunidad,
case 
when ci.bCargaBox=1 then 'SI'
else 'NO' 
end as cExpediente ,
ci.iCodCandidatoInforme 
 
 
  
FROM    CandidatoFamiliar cf 
inner join dbo.CandidatoInforme ci on cf.iCodCandidatoInformeFamiliar=ci.iCodCandidatoInforme  

where  cf.iCodCandidatoInformeTitular=@iCodCandidatoInformeTitular 







GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoSeguimientoWebActualizacion]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoSeguimientoWebActualizacion] 
	@iCodCandidatoAdmision int
AS
BEGIN
	SELECT CAST(ca.iCodCandidatoAdmision as varchar) as [iCodOperacion], 
	CASE ca.iCodCandidatoAdmisionTipo 		
		WHEN 3 THEN 'A' --Actualización
	END as [cTipoOperacion],
	CASE ca.iCodCandidatoAdmisionTipo 		
		WHEN 3 THEN 'Actualización de CV'
		ELSE ''
	END as [cTituloOperacion],
	--CASE ca.bImprocedente
	--	WHEN 1 THEN 'Se presentaron inconsistencias al validar la documentación enviada, para más información revise su correo electrónico.'
	--	ELSE ''										
	--END as [cRevision],
	CASE
	WHEN ca.iResultadoTramite=0 THEN 'En revisión' 
	WHEN ca.iResultadoTramite>=1 AND ca.iResultadoTramite<90 THEN 
		CASE ca.bImprocedente
		WHEN 1 THEN 'Se presentaron inconsistencias al validar la documentación enviada, para más información revise su correo electrónico.'
		ELSE 'Trámite validado.'										
		END  
	WHEN ca.iResultadoTramite=90 THEN 
		CASE ca.bImprocedente
		WHEN 1 THEN 'Se presentaron inconsistencias al validar la documentación enviada, para más información revise su correo electrónico.'
		ELSE ''										
		END 
	WHEN ca.iResultadoTramite=91 THEN 'El trámite no procede debido a que usted ha presentado el mismo CV que obra en nuestro archivo.' 
	WHEN ca.iResultadoTramite=92 OR ca.iResultadoTramite=93 THEN 'Trámite observado, se presentaron inconsistencias al validar la documentación enviada.'  
	WHEN ca.iResultadoTramite=101 THEN 'El trámite no es factible debido a que usted no se encuentra registrado como No Local.'
	WHEN ca.iResultadoTramite=102 THEN 'Usted tiene un trámite previo en proceso.'
	WHEN ca.iResultadoTramite=103 THEN 'Usted no cuenta con expediente OAEL, recién puede tramitar una actualización en cuanto tenga expediente completo.'
	ELSE ''
	END AS  [cRevision],
	CASE ca.iCodCandidatoAdmisionTipo 		
		WHEN 3 THEN  --Actualización
			(CASE ca.bExpediente
				WHEN 0 THEN 				
							(CASE ca.bImprocedente
								WHEN 1 THEN 'Observado'
								ELSE 'En Proceso'										
							END)
				WHEN 1 THEN 'Finalizado'
				ELSE ''
			 END)
	END as [cEstado],
	dbo.fnFormatoFechaUX(ca.dFechaRegistro) as [cFecha]
	from CandidatoAdmision as ca
	LEFT JOIN CandidatoAdmisionCatalogo as ac on ac.iCodCandidatoAdmisionCatalogo = ca.iCodCandidatoAdmisionTipo
	LEFT JOIN CandidatoInforme as ci on ci.iCodCandidatoInforme = ca.iCodCandidatoInforme
	where ca.iCodCandidatoAdmisionTipo in(1,3) and ca.iCodCandidatoAdmision  = @iCodCandidatoAdmision
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoSeguimientoWebCapacitacion]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoSeguimientoWebCapacitacion] 
	@iCodCapacitacionAdmision int
AS
BEGIN
	SELECT
	cast(isnull(ca.iCodCapacitacionAdmision,0) as varchar) as [iCodOperacion],'C' as [cTipoOperacion],UPPER('Capacitación') AS [cTituloOperacion],
	isnull(ccm.cNomCursoModulo,'') AS [cNombreCursoModulo],isnull(cc.cNombreCurso,'') AS [cNombreCurso],
	cpc.iVacantes as [iVacantes],CONCAT(cpc.iDias,' días') as [cDias],--ct.cNomContrata as [cContrata],ct.cNomCorto as [cNomCorto],
	dbo.fnFormatoFechaUX(ca.dFechaRegistro) as [cFecha],ca.dFechaRegistro as [dFechaRegistro],isnull(cap.ccodigoRegistro,'') as [cCodigoRegistro], 
	--isnull((SELECT '*' + cRequisito +' <br> 'FROM CapacitacionProgramaCursoRequisito where iCodCapacitacionProgramaCurso = cpc.iCodCapacitacionProgramaCurso FOR XML PATH ('')),'') as [cRequisito]			
	--isnull((SELECT STRING_AGG(concat('- ',cRequisito), ' <br> ') FROM CapacitacionProgramaCursoRequisito where iCodCapacitacionProgramaCurso = cpc.iCodCapacitacionProgramaCurso),'') as [cRequisito],
	CASE (case --::: FASE 1.- EVALUACION CURRICULAR
			when isnull(ca.iCodPersonaEvaluaCV,0) > 0 then -- EVALUADO
				case ca.bApto
					when 1 then 1--En Progreso: aptop para evaluación técnica						
					else 3 --Finalizado: no aptop
				end
			else 1 -- En Progreso: en proceso de evaluación
		 end +
		 case ca.bApto --::: FASE 2.- EVALUACION TECNICA			
			when 1 then --En Progreso: aptop para evaluación técnica
				case ca.cTipoAlumno --::: EVALUACION TECNICA
					when 'S' then 1 --En Progreso:'SELECCIONADO - CONFIRMAR MATRÍCULA'
					when 'A' then 2 --Finalizado:'ACCESITARIO'
					when 'NS' then 2 --Finalizado:'NO SELECCIONADO'
					when 'NP' then 2 --Finalizado:'NO SE PRESENTO A LA EVALUACIÓN'
					when 'D' then 2 --Finalizado:'DESCALIFICADO - INCUMPLE NORMAS DE EVALUACIÓN'
					when 'CDES' then 2 --Finalizado:'CURSO DECLARADO DESIERTO'
					when '' then 1 --En Progreso:'EN EVALUACIÓN'
					else 2 --Finalizado:'NO SELECCIONADO'							
				end  
			else 0 --Finalizado: no aptop		
		 end +
		 case --::: FASE 3.- MATRICULA
			when isnull(cm.iCodCapacitacionAdmision,0) > 0 then 1
			else 0
		 end) 
		WHEN 1 THEN 'En Progreso'
		WHEN 2 THEN 'En Progreso'
		WHEN 3 THEN 'Finalizado'
	END as [cEstado],
	case cpc.cModalidad
		when 'P' then 'Presencial'
		when 'V' then 'Virtual'
		when 'H' then 'Mixto'
		else ''
	end as [cModalidad],
	--::: FASE 1.- EVALUACION CURRICULAR
	case
		when ca.bApto = 1 then 'Apto'
		else 'No apto'
	end  as [cEvalCurricular],	
	case
		when ca.bApto = 0 then --when res.ReqValor = 2 then
				(select '[ '+ cast( ROW_NUMBER() OVER(ORDER BY vcpr.iOrden ASC) as varchar(5)) + ' ] Requisito :'+ vcpr.cRequisito as b,
				 '    Evaluación : '+ 
				 case 
					when vca.iCodCapacitacionProgramaCursoRequisitoValor=0 then 'No presenta' 
					else  vcpval.cDetalleValor 
				 end +' ' as br   
				 from  
				 CapacitacionAdmisionRequisitoValor vca 
				 left join CapacitacionProgramaCursoRequisito vcpr on vca.iCodCapacitacionProgramaCursoRequisito=vcpr.iCodCapacitacionProgramaCursoRequisito  
				 left join CapacitacionProgramaCursoRequisitoValor vcpval on vca.iCodCapacitacionProgramaCursoRequisitoValor=vcpval.iCodCapacitacionProgramaCursoRequisitoValor 
				 Where vca.iCodCapacitacionAdmision=ca.iCodCapacitacionAdmision 
				 Order by vcpr.iOrden
			     FOR XML PATH('')  
				) --fin select parte when
		else 'Apto para evaluación técnica'
	end as [cEvalCurricularDet],
	--::: FASE 2.- EVALUACION TECNICA
	case 
		when ca.bApto = 1 then --when res.ReqValor = 2 then
			(case
				when ca.cTipoAlumno = 'S' then 'Seleccionado'
				when ca.cTipoAlumno	= 'A' then 'Accesitario'
				when ca.cTipoAlumno	= 'NS' then 'No seleccionado'
				when ca.cTipoAlumno	= 'NP' then 'No seleccionado'
				when ca.cTipoAlumno	= 'D' then 'Descalificado'
				when ca.cTipoAlumno	= 'CDES' then 'No seleccionado'
				when ca.cTipoAlumno	= '' then 'En evaluación'
				else 'No seleccionado'
			end)
		else ''		
	end as [cEvalTecnica],
	case
		when ca.bApto = 1 then --when res.ReqValor = 2 then
			(case
				when ca.cTipoAlumno = 'S' then 'Confirmar matrícula'
				when ca.cTipoAlumno	= 'A' then 'Acessitario'
				when ca.cTipoAlumno	= 'NS' then 'No seleccionado'
				when ca.cTipoAlumno	= 'NP' then 'No se presentó a la evaluación'
				when ca.cTipoAlumno	= 'D' then 'Incumple normas de evaluación'
				when ca.cTipoAlumno	= 'CDES' then 'Curso declarado desierto'
				when ca.cTipoAlumno	= '' then 'En evaluación'
				else 'No seleccionado'
			end)
		else ''
	end as [cEvalTecnicaDet],
	--::: FASE 3.- MATRICULA
	case 
		when ca.bApto = 1 then
			case
				when isnull(cm.iCodCapacitacionAdmision,0) > 0 then 'Matriculado'
				else 'No matriculado'
			end
		else ''		
	end	as [cMatricula],	
	case 
		when ca.bApto = 1 then
			case
				when isnull(cm.iCodCapacitacionAdmision,0) > 0 then 'Tu registro de matrícula está validada'
				else 'Seguir con el procedimiento para completar la matrícula'
			end
		else ''		
	end	as [cMatriculaDet]	
	FROM dbo.CandidatoInforme AS ci 
	--LEFT JOIN CandidatoAdmision cad on ci.iCodCandidatoInforme = cad.iCodCandidatoInforme  --and icodcandidatoadmisiontipo=1 and cad.bImprocedente=0 
	LEFT JOIN CapacitacionAdmision ca on ci.iCodCandidatoInforme = ca.iCodCandidatoInforme 
	LEFT JOIN CapacitacionProgramaCurso as cpc on cpc.iCodCapacitacionProgramaCurso = ca.iCodCapacitacionProgramaCurso
	left join CapacitacionCurso as cc on cc.iCodCapacitacionCurso =  cpc.iCodCapacitacionCurso	
	left join CapacitacionCursoModulo as ccm on ccm.iCodCapacitacionCursoModulo = cc.iCodCapacitacionCursoModulo
	left join CapacitacionPrograma as cp on cp.iCodCapacitacionPrograma = ccm.iCodCapacitacionPrograma
	left join Contrata as ct on ct.iCodContrata = cpc.iCodContrataCapacita
	LEFT JOIN CapacitacionAdmisionPrevia as cap on cap.iCodCapacitacionAdmisionPrevia = ca.iCodCapacitacionAdmisionPrevia 
	LEFT JOIN cap_AdmisionPostulantesProcesoWeb as res on res.iCodCapacitacionAdmision = ca.iCodCapacitacionAdmision
	left join CapacitacionMatricula as cm on cm.iCodCapacitacionAdmision = ca.iCodCapacitacionAdmision
	WHERE ca.iCodCapacitacionAdmision = @iCodCapacitacionAdmision
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoSeguimientoWebPostulacion]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoSeguimientoWebPostulacion] 
	@iCodConvocatoriaDetalle int
AS
BEGIN
	SELECT
	case cd.iTipoPostulacion 
		when 1 then 'OAEL' 
		when 2 then 'SISTEMA' 
		when 3 then '---'  
		when 4 then 'PREFERENCIAL' 
		when 5 then 'SOLICITADO'  
		when 6 then 'VIRTUAL'  
		WHEN 7 THEN 'STAKEHOLDER'  
		else 'SIN POSTULACION' 
	end as [cTipoPostulacion],
	LTRIM(RTRIM(ISNULL(co.cNomContrata, '') + ' ' + ISNULL(cm.cSubContrata, ''))) AS [cContrataPostula],
	isnull(cv.cPerfil,'') as [cPerfil],isnull(cd.bCumplePerfil,0) as [bCumplePerfil],
	CASE 
		WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS bit) 
		WHEN cd.dFechaCargaCV IS NULL THEN CAST(0 AS bit) ELSE CAST(1 AS bit) 
	END AS [bCVCargado], 
	CASE 
		WHEN cd.dFechaCargaCV='1900-01-01' THEN '' 
		ELSE dbo.fnFormatoFechaUX(cd.dFechaCargaCV) --convert(varchar, cd.dFechaCargaCV, 103)  
	END AS [dFechaCargaCV],
	CASE 
		WHEN cd.dFechaContactoContrata1='1900-01-01' THEN '' 
		ELSE dbo.fnFormatoFechaUX(cd.dFechaContactoContrata1) --convert(varchar, cd.dFechaContactoContrata1, 103)  
	END  AS [dFechaRespuesta],
	ISNULL(cd.cRptaContrata,'') as [cRptaContrata] ,ISNULL(cd.cObs,'') as [cObservacion],
	(CASE
		when ISNULL(co.cNomContrata ,'') != '' then 30
		else 0
		end +
		case
		when cd.dFechaCargaCV != '1900-01-01' then 30
		else 0
		end +
		case
		when cd.dFechaContactoContrata1 != '1900-01-01' then 40
		else 0
		END) as [iProgreso],
	CASE (CASE
			when ISNULL(co.cNomContrata ,'') != '' then 1
			else 0
		  end +
		  case
			when cd.dFechaCargaCV != '1900-01-01' then 1
			else 0
		  end +
		  case
			when cd.dFechaContactoContrata1 != '1900-01-01' then 1
			else 0
		  END)
		 WHEN 1 THEN 'En Progreso'
		 WHEN 2 THEN 'En Progreso'
		 WHEN 3 THEN 'Finalizado'
		 ELSE ''
	END as [cEstado]		
	FROM dbo.CandidatoInforme AS ci 
	LEFT OUTER JOIN dbo.ConvocatoriaDetalle AS cd ON ci.iCodCandidatoInforme = cd.iCodCandidatoInforme 
	LEFT OUTER JOIN	dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria  
	LEFT JOIN dbo.ConvocatoriaMain cm on cv.iCodConvocatoriaMain = cm.iCodConvocatoriaMain 
	LEFT JOIN dbo.Contrata AS co ON cm.iCodContrata = co.iCodContrata 
	WHERE cd.iCodConvocatoriaDetalle = @iCodConvocatoriaDetalle --AND ci.iCodCandidatoInforme= @iCodCandidatoInforme
	and cd.cEstado='D'  
	--and cm.iTipo in (1,3)   
	ORDER BY cd.iCodConvocatoriaDetalle DESC;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoSeguimientoWebRegistro]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoSeguimientoWebRegistro] 
	@iCodCandidatoAdmision int
AS
BEGIN
	SELECT CAST(ca.iCodCandidatoAdmision as varchar) as [iCodOperacion], 
	CASE ca.iCodCandidatoAdmisionTipo 		
		WHEN 1 THEN 'R' --Registro
	END as [cTipoOperacion],
	CASE ca.iCodCandidatoAdmisionTipo 		
		WHEN 1 THEN 'Registro nuevo'
		ELSE ''
	END as [cTituloOperacion],
	'' as [cRevision],
	CASE ca.iCodCandidatoAdmisionTipo 		
		WHEN 1 THEN  --Registro
			(CASE ci.bCargaBox
				WHEN 0 THEN 'En Proceso'
				WHEN 1 THEN 'Finalizado'
				ELSE ''
			 END)
	END as [cEstado],
	dbo.fnFormatoFechaUX(ca.dFechaRegistro) as [cFecha]
	from CandidatoAdmision as ca
	LEFT JOIN CandidatoAdmisionCatalogo as ac on ac.iCodCandidatoAdmisionCatalogo = ca.iCodCandidatoAdmisionTipo
	LEFT JOIN CandidatoInforme as ci on ci.iCodCandidatoInforme = ca.iCodCandidatoInforme
	where ca.iCodCandidatoAdmisionTipo in(1,3) and ca.iCodCandidatoAdmision  = @iCodCandidatoAdmision
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoSustentosHistorial]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoSustentosHistorial] @iCodCandidatoInforme int 
AS
select cast(cic.dFechaSis as date) as dFechaSistema,
cic.iCodTDCondicionSustentoAnterior,
cic.cCondicionAnterior,
cic.iCodTDCondicionSustentoNueva,
cic.cCondicionNueva,
cic.cCondicionSustento,
isnull(co.cComunidad,'') as    cComunidad   
  from CandidatoInformeCondicion cic
  left join Comunidad co on cic.iCodComunidad=co.iCodComunidad  
  where cic.iCodCandidatoInforme=@iCodCandidatoInforme  
  order by dFechaSis desc 
 
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoWebCapacitacionCursoDetalle_Beta]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_DT_CandidatoWebCapacitacionCursoDetalle_Beta]	
	@iCodCandidatoInforme int,
	@iCodCapacitacionMatricula int
AS
BEGIN
	SELECT cast(mt.iCodCapacitacionMatricula as varchar) as [cCodCapacitacionMatricula],
	cast(pc.iCodCapacitacionProgramaCurso as varchar) as [iCodCapacitacionProgramaCurso],
	pc.iCodCapacitacionPrograma AS [iCodCapacitacionPrograma],
	cm.iCodCapacitacionCursoModulo as [iCodCapacitacionCursoModulo],
	cm.cNomCursoModulo as [cModulo],
	cc.iCodCapacitacionCurso as [idCurso],
	(( cc.cNombreCurso) + case 
							when pc.cNivel='BA' then ' BÁSICO' 
							when pc.cNivel='IN' then ' INTERMEDIO' 
							when pc.cNivel='AV' then ' AVANZADO' 
							else '' 
						  end) as [cCurso],
	isnull(ct.cNomContrata,'-') as [cContratista],
	case pc.cModalidad 
		when 'H' then 'Híbrido' 
		when 'P' then 'Presencial'
		when 'V' then 'Virtual'
		else ''
	end as [cModalidad],pc.iDias as [iDias],pc.iHoras as [iHoras],
	case 
		when isnull(pc.cUrlFoto,'') = '' then 'default.png'  		 
		else pc.cUrlFoto 
	end as [cUrlFoto],
	case 
		when isnull(pc.cUrlPDF,'') = '' then '#'  		 
		else pc.cUrlPDF 
	end as [cUrlPDF],		
	case mt.iSituacionMatricula
		when 0 then 'Pendiente'
		when 1 then 'Matriculado'
		when 2 then 'No se presentó'
		when 3 then 'Renuncia'
		when 4 then 'Penalizado'
		else '-'
	end as [cSituacionMatricula],	
	case mt.iSituacionMatricula
		when 0 then 'True'
		when 1 then 'False'
		when 2 then 'False'
		when 3 then 'False'
		when 4 then 'False'
		else '-'
	end as [bSituacionMatricula],
	case mt.iSituacionMatricula
		when 0 then 'gray' --Pendiente
		when 1 then 'success' --Matriculado
		when 2 then 'danger' --NSP
		when 3 then 'danger' --Renuncia
		when 4 then 'danger' --Penalizado
		else 'gray'
	end as [cColor],
	--::: CERTIFICADO
	mt.bCertificado as [bCertificado],
	'30' as [iNroClases],'28' as [iAsistencia],'2' as [iInasistencia],		
	mt.nNotaFinal as [nNotaFinal],
	mt.iEstadoProcesoResultado as [iEstadoResultado],
	case mt.iEstadoProcesoResultado
		when 1 then 'Sin resultado'
		when 2 then 'Egresado'
		when 3 then 'Aprobado'
		when 4 then 'Desaprobado'
		else '-'
	end as [cEstadoResultado],
	case mt.iEstadoProcesoResultado
		when 1 then 'gray' --sin resultado
		when 2 then 'info' --egresado
		when 3 then 'success' --aprobado
		when 4 then 'danger' --desaprobado
		else 'gray'
	end as [cColorEstadoResultado],
	case mt.iEstadoProcesoResultado
		when 1 then '<div class="example-alert">
					    <div class="alert alert-gray alert-icon">
					        <em class="icon ni ni-alert-circle"></em> Estimado candidato, el presente curso aún <strong>no ha culminado</strong> , mantenga su continuidad.
					    </div>
					</div>'
		when 2 then '<div class="example-alert">
					    <div class="alert alert-gray alert-icon">
					        <em class="icon ni ni-check-circle"></em> Estimado candidato, el presente curso con <strong>ha culminado</strong> , está pendiente su certificado, agadecemos la paciencia.
					    </div>
					</div>'
		when 3 then '<div class="example-alert">
					    <div class="alert alert-success alert-icon">
					        <em class="icon ni ni-check-circle"></em> Estimado candidato, el presente curso culminó con <strong>nota aprobatoria</strong> , puede proceder a <u><b>descargar</b></u> su certificado.
					    </div>
					</div>'
		when 4 then '<div class="example-alert">
					    <div class="alert alert-danger alert-icon">
					        <em class="icon ni ni-cross-circle"></em> Estimado candidato, el presente curso se culminó con <strong>nota desaprobatoria</strong> , no podrá <u><b>descargar</b></u> su certificado.
					    </div>
					</div>'
	end as [cMsgEstadoResultado],
	case mt.iEstadoProcesoResultado
		when 1 then '#' --sin resultado
		when 2 then '#' --egresado
		when 3 then 'https://www.santafe.gov.ar/index.php/educacion/content/download/191055/930589/file/Modelo%20de%20certificado-1.pdf' --aprobado
		when 4 then '#' --desaprobado
	end as [cUrlCertificado],
	'CERT-'+UPPER(CONCAT(ci.cDNI,'-',ci.cNombres,' ',ci.cApellidos))+'.pdf' as [cRotuloCertificado]
	--ci.iCodCandidatoInforme as [iCodCandidatoInforme],ci.cDNI as [cDNI],ci.cCUI as [cCUI],upper(concat(ci.cApellidos,', ',ci.cNombres)) as [cNombres],CONVERT(varchar,ci.dFechaNac,103) as [dFechaNac]	
    FROM CapacitacionMatricula as mt 
	left join CapacitacionAdmision as ca on ca.iCodCapacitacionAdmision = mt.iCodCapacitacionAdmision
	left join CapacitacionGrupo as cg on cg.iCodCapacitacionGrupo = mt.iCodCapacitacionGrupo
	left join Contrata as ct on ct.iCodContrata = cg.iCodContrataCapacita
	left join CandidatoInforme as ci on ci.iCodCandidatoInforme = ca.iCodCandidatoInforme
	left join CapacitacionProgramaCurso as pc on pc.iCodCapacitacionProgramaCurso = ca.iCodCapacitacionProgramaCurso
    left join CapacitacionCurso as cc on cc.iCodCapacitacionCurso = pc.iCodCapacitacionCurso
    left join CapacitacionCursoModulo as cm on pc.iCodCapacitacionCursoModulo  = cm.iCodCapacitacionCursoModulo	
	where ci.iCodCandidatoInforme = @iCodCandidatoInforme 
	and mt.iCodCapacitacionMatricula = @iCodCapacitacionMatricula
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoWebCapacitacionGrupoMatricula_Beta]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoWebCapacitacionGrupoMatricula_Beta]	
	@iCodCandidatoInforme int,
	@iCodCapacitacionMatricula int,
	@iCodCapacitacionGrupo int
AS
BEGIN
	UPDATE CapacitacionMatricula 
	SET iCodCapacitacionGrupo = @iCodCapacitacionGrupo , iSituacionMatricula = 1
	WHERE iCodCapacitacionMatricula = @iCodCapacitacionMatricula and iCodCandidatoInforme = @iCodCandidatoInforme;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoWebCapacitacionGrupoRenuncia_Beta]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoWebCapacitacionGrupoRenuncia_Beta]	
	@iCodCandidatoInforme int,
	@iCodCapacitacionMatricula int,
	@iCodCapacitacionProgramaCurso int,
	@cObservacion varchar(250)	
AS
BEGIN
	UPDATE CapacitacionMatricula
	SET iSituacionMatricula = 3, cObs = @cObservacion -- 3 RENUNCIA
	where iCodCapacitacionMatricula = @iCodCapacitacionMatricula --2860 
	and iCodCandidatoInforme = @iCodCandidatoInforme --3573 
	and iCodCapacitacionMatricula = @iCodCapacitacionMatricula	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoWebCapacitacionGrupos_Beta]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoWebCapacitacionGrupos_Beta]	
	@iCodCandidatoInforme int,
	@iCodCapacitacionProgramaCurso int
AS
BEGIN
	SELECT cast(cg.iCodCapacitacionGrupo as varchar) as [cCodCapacitacionGrupo],
	cg.iCodCapacitacionProgramaCurso,iNro,concat('Grupo ',cg.iNro) as [cGrupo],
	cg.cNomCorto,dbo.fnFormatoFechaUX(cg.dFechaIni) as [dFechaIni],dbo.fnFormatoFechaUX(dFechaFin) as [dFechaFin],
	cg.cLugar,cg.cHorario,cg.iTope as [iVacantes],cg.TotalMatr AS [iTotalMatriculados],cg.iRestante as [iRestantes],
	cm.iCodCapacitacionGrupo as [iSeleccionGrupo]		
	FROM cap_CapacitacionGruposMatriculados as cg 
	left join CapacitacionMatricula as cm on cm.iCodCapacitacionProgramaCurso = cg.iCodCapacitacionProgramaCurso
	where cg.iCodCapacitacionProgramaCurso = @iCodCapacitacionProgramaCurso	
	and cm.iCodCandidatoInforme = @iCodCandidatoInforme
	and cg.iRestante > 0 order by cg.iNro asc
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoWebCapacitacionListado_Beta]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoWebCapacitacionListado_Beta]	
	@iCodCandidatoInforme int
AS
BEGIN
	SELECT cast(mt.iCodCapacitacionMatricula as varchar) as [cCodCapacitacionMatricula],
	cast(pc.iCodCapacitacionProgramaCurso as varchar) as [iCodCapacitacionProgramaCurso],
	--pc.iCodCapacitacionPrograma AS [iCodCapacitacionPrograma],
    --cm.iCodCapacitacionCursoModulo as [iCodCapacitacionCursoModulo],
    cm.cNomCursoModulo as [cModulo],
    cc.iCodCapacitacionCurso as [idCurso],
	(( cc.cNombreCurso) +
						  case 
							when pc.cNivel='BA' then ' BÁSICO' 
							when pc.cNivel='IN' then ' INTERMEDIO' 
							when pc.cNivel='AV' then ' AVANZADO' 
							else '' 
						  end) as [cCurso],
	isnull(ct.cNomContrata,'') as [cContratista],
	case pc.cModalidad 
		when 'H' then 'Híbrido' 
		when 'P' then 'Presencial'
		when 'V' then 'Virtual'
		else ''
	end as [cModalidad],
	case 
		when isnull(pc.cUrlFoto,'') = '' then 'default.png'  		 
		else pc.cUrlFoto 
	end as [cUrlFoto],		
	case mt.iSituacionMatricula
		when 0 then 'Pendiente'
		when 1 then 'Matriculado'
		when 2 then 'NSP'
		when 3 then 'Renuncia'
		when 4 then 'Penalizado'
		else '-'
	end as [cSituacionMatricula],
	case mt.iSituacionMatricula
		when 0 then 'gray' --Pendiente
		when 1 then 'success' --Matriculado
		when 2 then 'danger' --NSP
		when 3 then 'danger' --Renuncia
		when 4 then 'danger' --Penalizado
		else 'gray'
	end as [cColor],
	mt.iEstadoProcesoResultado as [iEstadoResultado]
    FROM CapacitacionMatricula as mt 
	left join CapacitacionAdmision as ca on ca.iCodCapacitacionAdmision = mt.iCodCapacitacionAdmision
	left join CapacitacionGrupo as cg on cg.iCodCapacitacionGrupo = mt.iCodCapacitacionGrupo
	left join Contrata as ct on ct.iCodContrata = cg.iCodContrataCapacita --cg.iCodCapacitacionGrupo
	left join CandidatoInforme as ci on ci.iCodCandidatoInforme = ca.iCodCandidatoInforme
	left join CapacitacionProgramaCurso as pc on pc.iCodCapacitacionProgramaCurso = ca.iCodCapacitacionProgramaCurso
    left join CapacitacionCurso as cc on cc.iCodCapacitacionCurso = pc.iCodCapacitacionCurso
    left join CapacitacionCursoModulo as cm on pc.iCodCapacitacionCursoModulo  = cm.iCodCapacitacionCursoModulo	
	where ci.iCodCandidatoInforme = @iCodCandidatoInforme
	order by mt.dFechaSis desc
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CandidatoWebCapacitacionValidacion_Beta]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CandidatoWebCapacitacionValidacion_Beta]
	@iCodCapacitacionProgramaCurso INT,
	@iCodCandidatoInforme INT
AS
BEGIN
	declare @registros int = (select count(cap.iCodCapacitacionAdmisionPrevia) 
								from CapacitacionAdmisionPrevia as cap 
								left join CandidatoInforme AS ci on ci.iCodCandidatoInforme = cap.iCodCandidatoInforme 
								where ci.iCodCandidatoInforme = @iCodCandidatoInforme	
								--and cap.iCodCapacitacionProgramaCurso = @iCodCapacitacionProgramaCurso									 
							 );
	Select ci.iCodCandidatoInforme,
	@registros as [bEstado],
	case 
		when @registros > 0 then 
			'<div class="example-alert mt-3">
			     <div class="alert alert-success alert-icon">
			         <em class="icon ni ni-check-circle"></em> Estimado(a) <strong>'+ concat(ci.cNombres,', ',ci.cApellidos)+'</strong>. Ya se encuentra registrado en el curso de <strong>'+ cc.cNombreCurso +'</strong>. Solo puede registrarse en un (01) curso. 
			     </div>
			 </div>'
		else ''
	end as [cMensaje]
	FROM dbo.CandidatoInforme as ci
	LEFT JOIN CandidatoAdmision as cad on ci.iCodCandidatoInforme = cad.iCodCandidatoInforme
	LEFT JOIN CapacitacionAdmisionPrevia as cap on ci.iCodCandidatoInforme=cap.iCodCandidatoInforme and cap.cGUID='0000'
	left join CapacitacionProgramaCurso as pc  on pc.iCodCapacitacionProgramaCurso = cap.iCodCapacitacionProgramaCurso  
    left join CapacitacionCurso as cc on cc.iCodCapacitacionCurso = pc.iCodCapacitacionCurso
    left join CapacitacionCursoModulo as cm on pc.iCodCapacitacionCursoModulo  = cm.iCodCapacitacionCursoModulo	
	where ci.iCodCandidatoInforme = @iCodCandidatoInforme 
	--and pc.iCodCapacitacionProgramaCurso = @iCodCapacitacionProgramaCurso 
	--and CONVERT(varchar,ci.dFechaNac,23) = @dFechaNac --'99GEL' 
	--and ccondicion in('LOCAL','RESIDENTE','COMUNIDAD') 
	--and bCargaBox=1 
	--and ci.bSustentoCV=1 
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CantidatoSeguimientoHistorial]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CantidatoSeguimientoHistorial]
	@iPagina int,  
	@iPaginaTamano int,
	@iCodCandidatoInforme int
AS
BEGIN
	
	DECLARE @totalConvocatorias INT = ( SELECT COUNT(cm.iCodConvocatoriaMain) 
							FROM dbo.CandidatoInforme AS ci LEFT OUTER JOIN 
							dbo.ConvocatoriaDetalle AS cd ON ci.iCodCandidatoInforme = cd.iCodCandidatoInforme LEFT OUTER JOIN
							dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria  
							LEFT JOIN ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
							LEFT JOIN dbo.Contrata AS co ON cm.iCodContrata = co.iCodContrata 
							WHERE ci.iCodCandidatoInforme = @iCodCandidatoInforme
							AND cd.cEstado ='D');
	DECLARE @totalAdmision INT = ( select COUNT(ca.iCodCandidatoAdmision) 
						   from CandidatoAdmision as ca
						   LEFT JOIN CandidatoAdmisionCatalogo as ac on ac.iCodCandidatoAdmisionCatalogo = ca.iCodCandidatoAdmisionTipo
						   LEFT JOIN CandidatoInforme as ci on ci.iCodCandidatoInforme = ca.iCodCandidatoInforme
						   where ca.iCodCandidatoAdmisionTipo in(1,3) and ca.iCodCandidatoInforme = @iCodCandidatoInforme);
	DECLARE @totalFilas INT = (@totalConvocatorias + @totalAdmision);	

	with resultset1 as (--:::::::: INICIO TABLA 1
						SELECT
						cast(isnull(cd.iCodConvocatoriaDetalle,0) as varchar) as [iCodOperacion],'P' as [cTipoOperacion],UPPER('Postulación') AS [cTituloOperacion],
						isnull(cv.cPerfil,'') AS [cTituloDetalle],
						CASE (case
								when isnull(co.cNomContrata ,'') != '' then 1
								else 0
							 end +
							 case
								when cd.dFechaCargaCV != '1900-01-01' then 1
								else 0
							 end +
							 case
								when cd.dFechaContactoContrata1 != '1900-01-01' then 1
								else 0
							 end)
							WHEN 1 THEN 'En Progreso'
							WHEN 2 THEN 'En Progreso'
							WHEN 3 THEN 'Finalizado'
						END as [cEstado],
						dbo.fnFormatoFechaUX(cd.dFechaMintra) as [cFecha],cd.dFechaMintra as [dFechaRegistro]					
						FROM dbo.CandidatoInforme AS ci LEFT OUTER JOIN 
						dbo.ConvocatoriaDetalle AS cd ON ci.iCodCandidatoInforme = cd.iCodCandidatoInforme LEFT OUTER JOIN
						dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria  
						LEFT JOIN ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
						LEFT JOIN dbo.Contrata AS co ON cm.iCodContrata = co.iCodContrata 
						WHERE ci.iCodCandidatoInforme = @iCodCandidatoInforme
						AND cd.cEstado ='D'
						--:::::::: FIN TABLA 1
						--::::::::::::::::::::::::::::::::::::::::::::::::::::::::
						UNION ALL --::::::::: UNION DE TABLAS
						--::::::::::::::::::::::::::::::::::::::::::::::::::::::::
						--:::::::: INICIO TABLA 2
						select cast(isnull(ca.iCodCandidatoAdmision,0) as varchar) as [iCodOperacion], 
						CASE ca.iCodCandidatoAdmisionTipo 
							WHEN 1 THEN 'R' --Registro
							WHEN 3 THEN 'A' --Actualización
						END as [cTipoOperacion],
						CASE ca.iCodCandidatoAdmisionTipo 
							WHEN 1 THEN UPPER('Registro Nuevo')
							WHEN 3 THEN UPPER('Actualización')
							ELSE ''
						END as [cTituloOperacion],
						CASE ca.iCodCandidatoAdmisionTipo 
							WHEN 1 THEN 'Registro en la OAEL'
							WHEN 3 THEN 'Actualización de CV'
							ELSE ''
						END as [cTituloDetalle],
						CASE ca.iCodCandidatoAdmisionTipo 
							WHEN 1 THEN  --Registro
								(CASE ci.bCargaBox
									WHEN 0 THEN 'En Proceso'
									WHEN 1 THEN 'Finalizado'
									ELSE ''
								 END)
							WHEN 3 THEN  --Actualización
								(CASE ca.bExpediente
									WHEN 0 THEN 
												(CASE ca.bImprocedente
													WHEN 1 THEN 'Observado'
													ELSE 'En Proceso'											
												END)
									WHEN 1 THEN 'Finalizado'
									ELSE ''										
								 END)
							ELSE ''
						END as [cEstado],
						dbo.fnFormatoFechaUX(ca.dFechaRegistro) as [cFecha],ca.dFechaRegistro as [dFechaRegistro] 
						from CandidatoAdmision as ca
						LEFT JOIN CandidatoAdmisionCatalogo as ac on ac.iCodCandidatoAdmisionCatalogo = ca.iCodCandidatoAdmisionTipo
						LEFT JOIN CandidatoInforme as ci on ci.iCodCandidatoInforme = ca.iCodCandidatoInforme
						where ca.iCodCandidatoAdmisionTipo in(1,3) and ca.iCodCandidatoInforme = @iCodCandidatoInforme
						--:::::::: FIN TABLA 2
						), resultset2 as (SELECT iCodOperacion,cTipoOperacion,cTituloOperacion,cTituloDetalle,cEstado,cFecha,cast(ROW_NUMBER() OVER (ORDER BY dFechaRegistro desc) as varchar) Row, cast(@totalFilas as varchar) as iTotal from resultset1) 
						select * from resultset2 WHERE Row > (@iPagina - 1) * @iPaginaTamano and Row <= (@iPagina - 1) * @iPaginaTamano + @iPaginaTamano
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CantidatoSeguimientoHistorial_Beta]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CantidatoSeguimientoHistorial_Beta]
	@iPagina int,  
	@iPaginaTamano int,
	@iCodCandidatoInforme int
AS
BEGIN
	
	DECLARE @totalConvocatorias INT = ( SELECT COUNT(cm.iCodConvocatoriaMain) 
										FROM dbo.CandidatoInforme AS ci LEFT OUTER JOIN 
										dbo.ConvocatoriaDetalle AS cd ON ci.iCodCandidatoInforme = cd.iCodCandidatoInforme LEFT OUTER JOIN
										dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria  
										LEFT JOIN ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
										LEFT JOIN dbo.Contrata AS co ON cm.iCodContrata = co.iCodContrata 
										WHERE ci.iCodCandidatoInforme = @iCodCandidatoInforme
										AND cd.cEstado ='D');
	DECLARE @totalAdmision INT = ( select COUNT(ca.iCodCandidatoAdmision) 
								   from CandidatoAdmision as ca
								   LEFT JOIN CandidatoAdmisionCatalogo as ac on ac.iCodCandidatoAdmisionCatalogo = ca.iCodCandidatoAdmisionTipo
								   LEFT JOIN CandidatoInforme as ci on ci.iCodCandidatoInforme = ca.iCodCandidatoInforme
								   where ca.iCodCandidatoAdmisionTipo in(1,3) and ca.iCodCandidatoInforme = @iCodCandidatoInforme);

	DECLARE @totalCapacitacion INT = ( select COUNT(isnull(ca.iCodCapacitacionAdmision,0)) 
								   from CapacitacionAdmision as ca								  
								   LEFT JOIN CandidatoInforme as ci on ci.iCodCandidatoInforme = ca.iCodCandidatoInforme
								   LEFT JOIN capacitacionadmisionprevia as cap on cap.iCodCapacitacionAdmisionPrevia = ca.iCodCapacitacionAdmisionPrevia
								   LEFT JOIN cap_AdmisionPostulantesProcesoWeb as res on res.iCodCapacitacionAdmision = ca.iCodCapacitacionAdmision
								   LEFT JOIN CapacitacionMatricula as cm on cm.iCodCapacitacionAdmision = ca.iCodCapacitacionAdmision	
								   WHERE ci.iCodCandidatoInforme = @iCodCandidatoInforme);

	DECLARE @totalFilas INT = (@totalConvocatorias + @totalAdmision + @totalCapacitacion);	

	with resultset1 as (--:::::::: INICIO TABLA CAPACITACION (CURSOS)
						SELECT
						cast(isnull(ca.iCodCapacitacionAdmision,0) as varchar) as [iCodOperacion],'C' as [cTipoOperacion],UPPER('Capacitación') AS [cTituloOperacion],
						isnull(cc.cNombreCurso,'') AS [cTituloDetalle],
						CASE (case  --::: FASE 1.- EVALUACION CURRICULAR
								when isnull(ca.iCodPersonaEvaluaCV,0) > 0 then -- EVALUADO
									case ca.bApto
										when 1 then 1--En Progreso: aptop para evaluación técnica						
										else 3 --Finalizado: no aptop
									end
								else 1 -- En Progreso: en proceso de evaluación
							 end +
							 case ca.bApto --::: FASE 2.- EVALUACION TECNICA			
								when 1 then --En Progreso: aptop para evaluación técnica
									case ca.cTipoAlumno --::: EVALUACION TECNICA
										when 'S' then 1 --En Progreso:'SELECCIONADO - CONFIRMAR MATRÍCULA'
										when 'A' then 2 --Finalizado:'ACCESITARIO'
										when 'NS' then 2 --Finalizado:'NO SELECCIONADO'
										when 'NP' then 2 --Finalizado:'NO SE PRESENTO A LA EVALUACIÓN'
										when 'D' then 2 --Finalizado:'DESCALIFICADO - INCUMPLE NORMAS DE EVALUACIÓN'
										when 'CDES' then 2 --Finalizado:'CURSO DECLARADO DESIERTO'
										when '' then 1 --En Progreso:'EN EVALUACIÓN'
										else 2 --Finalizado:'NO SELECCIONADO'							
									end  
								else 0 --Finalizado: no aptop		
							 end +
							 case --::: FASE 3.- MATRICULA
								when isnull(cm.iCodCapacitacionAdmision,0) > 0 then 1
								else 0
							 end) 
							WHEN 1 THEN 'En Progreso'
							WHEN 2 THEN 'En Progreso'
							WHEN 3 THEN 'Finalizado'
						END as [cEstado],
						dbo.fnFormatoFechaUX(ca.dFechaRegistro) as [cFecha],ca.dFechaRegistro as [dFechaRegistro]					
						FROM dbo.CandidatoInforme AS ci
						--LEFT JOIN CandidatoAdmision cad on ci.iCodCandidatoInforme = cad.iCodCandidatoInforme  --and icodcandidatoadmisiontipo=1 and cad.bImprocedente=0 
						LEFT JOIN CapacitacionAdmision as ca on ci.iCodCandidatoInforme = ca.iCodCandidatoInforme 
						LEFT JOIN CapacitacionProgramaCurso as cpc on cpc.iCodCapacitacionProgramaCurso = ca.iCodCapacitacionProgramaCurso
						LEFT JOIN CapacitacionCurso as cc on cc.iCodCapacitacionCurso =  cpc.iCodCapacitacionCurso
						LEFT JOIN capacitacionadmisionprevia as cap on cap.iCodCapacitacionAdmisionPrevia = ca.iCodCapacitacionAdmisionPrevia
						LEFT JOIN cap_AdmisionPostulantesProcesoWeb as res on res.iCodCapacitacionAdmision = ca.iCodCapacitacionAdmision
						LEFT JOIN CapacitacionMatricula as cm on cm.iCodCapacitacionAdmision = ca.iCodCapacitacionAdmision	
						WHERE ci.iCodCandidatoInforme = @iCodCandidatoInforme
						--:::::::: FIN TABLA CAPACITACION
						--::::::::::::::::::::::::::::::::::::::::::::::::::::::::
						UNION --::::::::: UNION DE TABLAS
						--::::::::::::::::::::::::::::::::::::::::::::::::::::::::
						--:::::::: INICIO TABLA CONVOCATORIA (POSTULACION)
						SELECT
						cast(isnull(cd.iCodConvocatoriaDetalle,0) as varchar) as [iCodOperacion],'P' as [cTipoOperacion],UPPER('Postulación') AS [cTituloOperacion],
						isnull(cv.cPerfil,'') AS [cTituloDetalle],
						CASE (case
								when isnull(co.cNomContrata ,'') != '' then 1
								else 0
							 end +
							 case
								when cd.dFechaCargaCV != '1900-01-01' then 1
								else 0
							 end +
							 case
								when cd.dFechaContactoContrata1 != '1900-01-01' then 1
								else 0
							 end)
							WHEN 1 THEN 'En Progreso'
							WHEN 2 THEN 'En Progreso'
							WHEN 3 THEN 'Finalizado'
						END as [cEstado],
						dbo.fnFormatoFechaUX(cd.dFechaMintra) as [cFecha],cd.dFechaMintra as [dFechaRegistro]					
						FROM dbo.CandidatoInforme AS ci LEFT OUTER JOIN 
						dbo.ConvocatoriaDetalle AS cd ON ci.iCodCandidatoInforme = cd.iCodCandidatoInforme LEFT OUTER JOIN
						dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria  
						LEFT JOIN ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
						LEFT JOIN dbo.Contrata AS co ON cm.iCodContrata = co.iCodContrata 
						WHERE ci.iCodCandidatoInforme = @iCodCandidatoInforme
						AND cd.cEstado ='D'
						--:::::::: FIN TABLA CONVOCATORIA
						--::::::::::::::::::::::::::::::::::::::::::::::::::::::::
						UNION ALL --::::::::: UNION DE TABLAS
						--::::::::::::::::::::::::::::::::::::::::::::::::::::::::
						--:::::::: INICIO TABLA ADMISION (REGISTRO-ACTUALIZACION)
						select cast(isnull(ca.iCodCandidatoAdmision,0) as varchar) as [iCodOperacion], 
						CASE ca.iCodCandidatoAdmisionTipo 
							WHEN 1 THEN 'R' --Registro
							WHEN 3 THEN 'A' --Actualización
						END as [cTipoOperacion],
						CASE ca.iCodCandidatoAdmisionTipo 
							WHEN 1 THEN UPPER('Registro Nuevo')
							WHEN 3 THEN UPPER('Actualización')
							ELSE ''
						END as [cTituloOperacion],
						CASE ca.iCodCandidatoAdmisionTipo 
							WHEN 1 THEN 'Registro en la OAEL'
							WHEN 3 THEN 'Actualización de CV'
							ELSE ''
						END as [cTituloDetalle],
						CASE ca.iCodCandidatoAdmisionTipo 
							WHEN 1 THEN  --Registro
								(CASE ci.bCargaBox
									WHEN 0 THEN 'En Proceso'
									WHEN 1 THEN 'Finalizado'
									ELSE cast(ca.iCodCandidatoAdmisionTipo as varchar) + ''
								 END)
							WHEN 3 THEN  --Actualización
								(CASE ca.bExpediente
									WHEN 0 THEN 
										(CASE ca.bImprocedente
											WHEN 1 THEN 'Observado'
											ELSE 'En Proceso'											
										END)
									WHEN 1 THEN 'Finalizado'
									ELSE ''										
								 END)
							ELSE ''
						END as [cEstado],
						dbo.fnFormatoFechaUX(ca.dFechaRegistro) as [cFecha],ca.dFechaRegistro as [dFechaRegistro] 
						from CandidatoAdmision as ca
						LEFT JOIN CandidatoAdmisionCatalogo as ac on ac.iCodCandidatoAdmisionCatalogo = ca.iCodCandidatoAdmisionTipo
						LEFT JOIN CandidatoInforme as ci on ci.iCodCandidatoInforme = ca.iCodCandidatoInforme
						where ca.iCodCandidatoAdmisionTipo in(1,3) and ca.iCodCandidatoInforme = @iCodCandidatoInforme
						--:::::::: FIN TABLA ADMISION
						), resultset2 as (SELECT iCodOperacion,cTipoOperacion,cTituloOperacion,cTituloDetalle,cEstado,cFecha,cast(ROW_NUMBER() OVER (ORDER BY dFechaRegistro desc) as varchar) Row, cast(@totalFilas as varchar) as iTotal from resultset1) 
						select * from resultset2 WHERE Row > (@iPagina - 1) * @iPaginaTamano and Row <= (@iPagina - 1) * @iPaginaTamano + @iPaginaTamano
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionAdmisionRegistrados]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_DT_CapacitacionAdmisionRegistrados] @iCodCapacitacionProgramaCurso int 
AS
        
SELECT        ca.iCodCapacitacionAdmision,
 cc.cNombreCurso, 
 cpc.iCodCapacitacionProgramaCurso, 
 ca.dFechaRegistro, 
ci.cDNI, 
 ci.cApellidos + ' '+ ci.cNombres as cNomCompleto, 
 case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as cCondicion ,  
ci.cUbigeoResidencia,  
 ci.bCargaBox, 
ci.iCodCandidatoInforme  ,
isnull(cmat.iCodCapacitacionMatricula,0)  as iCodCapacitacionMatricula ,
case 
when isnull(cmat.iCodCapacitacionMatricula,0)>0 then cast(1 as bit)
else cast(0 as bit) end as bMatriculado ,
cpc.cTipoProceso  
FROM   CapacitacionAdmision ca 
inner join CapacitacionProgramaCurso cpc on ca.iCodCapacitacionProgramaCurso=cpc.iCodCapacitacionProgramaCurso 
inner join CapacitacionCurso cc on cpc.iCodCapacitacionCurso=cc.iCodCapacitacionCurso 
inner join CandidatoInforme ci ON ca.iCodCandidatoInforme = ci.iCodCandidatoInforme   
LEFT JOIN  dbo.CapacitacionMatricula cmat on cmat.iCodCapacitacionAdmision  =ca.iCodCapacitacionAdmision  
 where ca.iCodCapacitacionProgramaCurso=@iCodCapacitacionProgramaCurso 
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionCandidatoByDNI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CapacitacionCandidatoByDNI] @cDNI varchar(15) 
AS
 SET NOCOUNT ON
  insert into logvisita values('RELINING 2023',@cDNI,0,0,GETDATE(),'RELINING2023_CONSULTA');
--https://bit.ly/3gGT61F
  select cc.cNombreCurso,
  isnull(cap.ccodigoRegistro,'') as [cCodigoRegistro],   
--************* EVALUACION RESULTADOS  ***********************************************************
  '<span style="font-size:1.2em;display:block;background:#F0F0F0;padding:10px 8px; text-align:center;margin-bottom:10px;"><span style="font-weight:bold;">Resultado Evaluación de Requisitos </span> </span>'
  +
  case
	when res.ReqValor=2 then 'APTO'
	else 'NO APTO'
  end  as [cValor1],
(
 case
	when res.ReqValor < 2 then 
			(select '[ '+ cast( ROW_NUMBER() OVER(ORDER BY vcpr.iOrden ASC) as varchar(5)) + ' ] REQUISITO :'+ vcpr.cRequisito as b,
			 '    Evaluación : '+ 
			 case 
				when vca.iCodCapacitacionProgramaCursoRequisitoValor=0 then 'NO PRESENTA' 
				else  vcpval.cDetalleValor 
			 end +' ' as br   
			 from  
			 CapacitacionAdmisionRequisitoValor vca 
			 left join CapacitacionProgramaCursoRequisito vcpr on vca.iCodCapacitacionProgramaCursoRequisito=vcpr.iCodCapacitacionProgramaCursoRequisito  
			 left join CapacitacionProgramaCursoRequisitoValor vcpval on vca.iCodCapacitacionProgramaCursoRequisitoValor=vcpval.iCodCapacitacionProgramaCursoRequisitoValor 
			 Where vca.iCodCapacitacionAdmision=cad.iCodCapacitacionAdmision 
			 Order by vcpr.iOrden
		     FOR XML PATH('')  
			) --fin select parte when
	else ''
 end ) as [cValor2] ,
 case
  when res.ReqValor = 2 then --''
		'<span style="font-size:1.2em;display:block;background:#F0F0F0;padding:10px 8px; text-align:center;margin-bottom:10px;"><span style="font-weight:bold;">Resultado Evaluación de Expediente</span> </span>'
		+
		(case 
			when cad.cTipoAlumno='S' then  
				'<span style="font-size:1.5em;display:block;color:#223d71;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				SELECCIONADO - CONFIRMAR MATRÍCULA</span>' + 
				'<br>¡Felicidades! has cumplido los requisitos y tu expediente ha sido seleccionado, la entidad
				  capacitadora se comunicará contigo para saber los siguientes pasos.'
			when cad.cTipoAlumno='A' then
			'<span style="font-size:1.5em;display:block;color:#223d71;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				ACCESITARIO</span>' + 
				'<br>De acuerdo a tu evaluación se te ha considerado como ACCESITARIO, esto quiere decir que en caso
				una persona abandone el curso pasarás a ser seleccionado.'
			when cad.cTipoAlumno='NS' then 
			'<span style="font-size:1.5em;display:block;color:#E52657;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				NO SELECCIONADO</span>' + 
				'<br>Hemos evaluado tu expediente pero lamentablemente tu expediente no ha cumplido los requisitos'
			when cad.cTipoAlumno='NP' then
			'<span style="font-size:1.5em;display:block;color:#E52657;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				NO SE PRESENTO A LA EVALUACIÓN</span>' 
			when cad.cTipoAlumno='D' then
			'<span style="font-size:1.5em;display:block;color:#E52657;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				DESCALIFICADO - INCUMPLE NORMAS DE EVALUACIÓN</span>' 
			when cad.cTipoAlumno='CDES' then
			'<span style="font-size:1.5em;display:block;color:#E52657;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				CURSO DECLARADO DESIERTO</span>' 
			when cad.cTipoAlumno='' then 
			'<span style="font-size:1.5em;display:block;color:#223d71;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				EN EVALUACIÓN</span>'+
			'<br><span style="display:block;background:#f8fae7;padding:5px 12px;">Aún estamos evaluando tu expediente.</span>'
			else 
			'<span style="font-size:1.5em;display:block;color:#E52657;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				NO SELECCIONADO</span>'+
			'<br><span style="display:block;background:#f3f9c4;">Hemos evaluado tu expediente pero lamentablemente tu expediente no ha cumplido los requisitos.</span>'
		end )
  
  else 
  '<br>La OAEL agradece su participación del presente proceso, pero lamentamos informarte que de acuerdo al CV que 
  tenemos en nuestro sistema no has cumplido alguno de los requisitos.' 
  end 
  as [cValor3] ,
----************************************************************************
--'' as cValor1,
--'' as cValor2,
--'' as cValor3,
  cad.iCodCandidatoInforme,ci.cApellidos,ci.cNombres
  from   CapacitacionCurso as cc 
  INNER JOIN CapacitacionProgramaCurso as cpc ON cc.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso 
  INNER JOIN CapacitacionAdmision  as cad ON cpc.iCodCapacitacionProgramaCurso = cad.iCodCapacitacionProgramaCurso 
  INNER JOIN CandidatoInforme as ci ON cad.iCodCandidatoInforme = ci.iCodCandidatoInforme 
  INNER JOIN CapacitacionCursoModulo  as ccm ON cc.iCodCapacitacionCursoModulo = ccm.iCodCapacitacionCursoModulo 
  LEFT JOIN capacitacionadmisionprevia as cap on cad.iCodCapacitacionAdmisionPrevia=cap.iCodCapacitacionAdmisionPrevia 
inner JOIN cap_AdmisionPostulantesProcesoWeb as res on cad.iCodCapacitacionAdmision=res.iCodCapacitacionAdmision   
--where   cap.cDNI=@cDNI
where cpc.iCodCapacitacionPrograma=11 and ci.cDNI=@cDNI 
and cap.cguid='0000'
 order by cad.iCodCapacitacionAdmision desc 
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionCandidatoByDNI_Beta]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CapacitacionCandidatoByDNI_Beta] 
	@iCodCandidatoInforme INT
AS
 --SET NOCOUNT ON
 -- insert into logvisita values('RELINING 2023',@cDNI,0,0,GETDATE(),'RELINING2023_CONSULTA');
--https://bit.ly/3gGT61F
  select cc.cNombreCurso,
  isnull(cap.ccodigoRegistro,'') as [cCodigoRegistro],   
--************* EVALUACION RESULTADOS  ***********************************************************
  '<span style="font-size:1.2em;display:block;background:#F0F0F0;padding:10px 8px; text-align:center;margin-bottom:10px;"><span style="font-weight:bold;">Resultado Evaluación de Requisitos </span> </span>'
  +
  case
	when res.ReqValor=2 then 'APTO'
	else 'NO APTO'
  end  as [cValor1],
(
 case
	when res.ReqValor < 2 then 
			(select '[ '+ cast( ROW_NUMBER() OVER(ORDER BY vcpr.iOrden ASC) as varchar(5)) + ' ] REQUISITO :'+ vcpr.cRequisito as b,
			 '    Evaluación : '+ 
			 case 
				when vca.iCodCapacitacionProgramaCursoRequisitoValor=0 then 'NO PRESENTA' 
				else  vcpval.cDetalleValor 
			 end +' ' as br   
			 from  
			 CapacitacionAdmisionRequisitoValor vca 
			 left join CapacitacionProgramaCursoRequisito vcpr on vca.iCodCapacitacionProgramaCursoRequisito=vcpr.iCodCapacitacionProgramaCursoRequisito  
			 left join CapacitacionProgramaCursoRequisitoValor vcpval on vca.iCodCapacitacionProgramaCursoRequisitoValor=vcpval.iCodCapacitacionProgramaCursoRequisitoValor 
			 Where vca.iCodCapacitacionAdmision=cad.iCodCapacitacionAdmision 
			 Order by vcpr.iOrden
		     FOR XML PATH('')  
			) --fin select parte when
	else ''
 end ) as [cValor2] ,
 case
  when res.ReqValor = 2 then --''
		'<span style="font-size:1.2em;display:block;background:#F0F0F0;padding:10px 8px; text-align:center;margin-bottom:10px;"><span style="font-weight:bold;">Resultado Evaluación de Expediente</span> </span>'
		+
		(case 
			when cad.cTipoAlumno='S' then  
				'<span style="font-size:1.5em;display:block;color:#223d71;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				SELECCIONADO - CONFIRMAR MATRÍCULA</span>' + 
				'<br>¡Felicidades! has cumplido los requisitos y tu expediente ha sido seleccionado, la entidad
				  capacitadora se comunicará contigo para saber los siguientes pasos.'
			when cad.cTipoAlumno='A' then
			'<span style="font-size:1.5em;display:block;color:#223d71;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				ACCESITARIO</span>' + 
				'<br>De acuerdo a tu evaluación se te ha considerado como ACCESITARIO, esto quiere decir que en caso
				una persona abandone el curso pasarás a ser seleccionado.'
			when cad.cTipoAlumno='NS' then 
			'<span style="font-size:1.5em;display:block;color:#E52657;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				NO SELECCIONADO</span>' + 
				'<br>Hemos evaluado tu expediente pero lamentablemente tu expediente no ha cumplido los requisitos'
			when cad.cTipoAlumno='NP' then
			'<span style="font-size:1.5em;display:block;color:#E52657;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				NO SE PRESENTO A LA EVALUACIÓN</span>' 
			when cad.cTipoAlumno='D' then
			'<span style="font-size:1.5em;display:block;color:#E52657;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				DESCALIFICADO - INCUMPLE NORMAS DE EVALUACIÓN</span>' 
			when cad.cTipoAlumno='CDES' then
			'<span style="font-size:1.5em;display:block;color:#E52657;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				CURSO DECLARADO DESIERTO</span>' 
			when cad.cTipoAlumno='' then 
			'<span style="font-size:1.5em;display:block;color:#223d71;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				EN EVALUACIÓN</span>'+
			'<br><span style="display:block;background:#f8fae7;padding:5px 12px;">Aún estamos evaluando tu expediente.</span>'
			else 
			'<span style="font-size:1.5em;display:block;color:#E52657;padding:10px 8px 0px 8px; text-align:center;font-weight:700;margin-bottom:12px;">
				NO SELECCIONADO</span>'+
			'<br><span style="display:block;background:#f3f9c4;">Hemos evaluado tu expediente pero lamentablemente tu expediente no ha cumplido los requisitos.</span>'
		end )
  
  else 
  '<br>La OAEL agradece su participación del presente proceso, pero lamentamos informarte que de acuerdo al CV que 
  tenemos en nuestro sistema no has cumplido alguno de los requisitos.' 
  end 
  as [cValor3] ,
----************************************************************************
--'' as cValor1,
--'' as cValor2,
--'' as cValor3,
  cad.iCodCandidatoInforme,ci.cApellidos,ci.cNombres
  from  CapacitacionCurso as cc 
  INNER JOIN CapacitacionProgramaCurso as cpc ON cc.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso 
  INNER JOIN CapacitacionAdmision  as cad ON cpc.iCodCapacitacionProgramaCurso = cad.iCodCapacitacionProgramaCurso 
  INNER JOIN CandidatoInforme as ci ON cad.iCodCandidatoInforme = ci.iCodCandidatoInforme 
  INNER JOIN CapacitacionCursoModulo  as ccm ON cc.iCodCapacitacionCursoModulo = ccm.iCodCapacitacionCursoModulo 
  LEFT JOIN capacitacionadmisionprevia as cap on cad.iCodCapacitacionAdmisionPrevia=cap.iCodCapacitacionAdmisionPrevia 
  INNER JOIN cap_AdmisionPostulantesProcesoWeb as res on cad.iCodCapacitacionAdmision=res.iCodCapacitacionAdmision   
--where   cap.cDNI=@cDNI
where ci.iCodCandidatoInforme = @iCodCandidatoInforme --and cpc.iCodCapacitacionPrograma=11
and cap.cguid='0000'
 order by cad.iCodCapacitacionAdmision desc 
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionCandidatoByDNI_Copy]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



















 


CREATE PROCEDURE [dbo].[SP_DT_CapacitacionCandidatoByDNI_Copy] @cDNI varchar(15) 
AS

 
 
 
 SET NOCOUNT ON
--insert into logvisita values('CAPACITACION CONSULTA RESULTADO',@cDNI,0,0,GETDATE(),'C');
--https://bit.ly/3gGT61F
  select  cc.cNombreCurso,

  isnull(cap.ccodigoRegistro,'')+ '<br>' + 
 
 (
 case 
 when cad.bApto=1 then 
		 
		'<br><span style="font-size:1.2em;display:block;background:#F0F0F0;padding:10px 8px;"><span style="font-weight:bold;">Resultado : </span>' +  
		(
		case 
			when cad.cTipoAlumno='S' then 'SELECCIONADO - CONFIRMAR MATRÍCULA' 
			when cad.cTipoAlumno='A' then 'ACCESITARIO' 
			when cad.cTipoAlumno='NS' then 'NO SELECCIONADO' 
			when cad.cTipoAlumno='NP' then 'NO SE PRESENTO A LA EVALUACIÓN' 
			when cad.cTipoAlumno='D' then 'DESCALIFICADO - INCUMPLE NORMAS DE EVALUACIÓN' 
			else 'NO SELECCIONADO'  
		end 
		)
		+ ' </span>  ' + 
  

   '<br><span style="font-size:1.2em;display:block;background:#F0F0F0;padding:10px 8px;"><span style="font-weight:bold;">Nota : </span>' +  
 str(cad.nEvaluacionTecnica,4,2) + 
  ' </span><br> ' 

  +

		 case 
			when cad.cTipoAlumno='S' then 
			'<b>IMPORTANTE :</b><br>Usted ha sido SELECCIONADO , para confirmar tu matrícula y ser partícipe del curso debes descargar el siguiente documento ' + 
			'<a href="https://bit.ly/3gGT61F" style="color: #3db166!important; font-weight: 400;" target="_blank">CARTA DE COMPROMISO (click aquí) </a> el cual deberá llenarlo con letra legible, firmarlo y enviarlo en <b>Formato PDF</b> al correo <b>capacitacion.aaq@viampg.com</b> con el asunto ' +
			'NRO DE DNI - MATRICULA y consigna tu <b>Nro de DNI</b>,Apellidos y Nombres, Correo y Teléfono correctos en el mensaje. <br>' + 
			'<span style="color:orangered;"> Tienes plazo hasta el viernes 30 de Abril de lo contrario  
			perderás tu beca ganada y el participante que sigue según orden de mérito será el beneficiario.</span><br>' 
			when cad.cTipoAlumno='A' then 
			'<b>IMPORTANTE :</b><br>Usted ha sido considerado como ACCESITARIO , en el caso que un participante seleccionado renunciara por motivos 
			de salud u otros, usted sería considerado como beneficiario del programa.<br> ' 
			when cad.cTipoAlumno='NP' then 
			'<b>GRACIAS POR TU PARTICIPACIÓN :</b><br>Estimado participante lamentamos que no haya podido participar en la etapa de evaluación técnica, sin embargo lo invitamos a participar 
			a la convocatoria de la Fase II que iniciará en el mes de Junio, en la cual ofertaremos 23 cursos de capacitación.<br>' 
			else  
			'<b>GRACIAS POR TU PARTICIPACIÓN :</b><br>Estimado participante usted no alcanzo vacante dentro del ranking de resultados, sin embargo lo invitamos a participar 
			a la convocatoria de la Fase II que iniciará en el mes de Junio, en la cual ofertaremos 23 cursos de capacitación.<br>' 
		end

  else  
   '<br><span style="font-size:1.2em;display:block;background:#F0F0F0;padding:10px 8px;"><span style="font-weight:bold;">Resultado : </span>' +  
 'USTED NO ES PARTICIPANTE DE ESTA ETAPA DEL PROGRAMA' + 
  ' </span><br> ' 
   end    )
  as cCodigoRegistro, 
  '' as cValor1,''as cValor2 ,'' as cValor3 

  from   CapacitacionCurso cc INNER JOIN
 CapacitacionProgramaCurso cpc ON cc.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso 
  INNER JOIN CapacitacionAdmision  cad ON cpc.iCodCapacitacionProgramaCurso = cad.iCodCapacitacionProgramaCurso 
  INNER JOIN CandidatoInforme ci ON cad.iCodCandidatoInforme = ci.iCodCandidatoInforme 
  INNER JOIN CapacitacionCursoModulo  ccm ON cc.iCodCapacitacionCursoModulo = ccm.iCodCapacitacionCursoModulo 
  LEFT JOIN capacitacionadmisionprevia cap on cad.iCodCapacitacionAdmisionPrevia=cap.iCodCapacitacionAdmisionPrevia 
 
 --  where   cap.cDNI=@cDNI
 where cpc.iCodCapacitacionPrograma=7 and ci.cDNI=@cDNI
 










GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionConstanciaMatricula]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO







 


CREATE PROCEDURE [dbo].[SP_DT_CapacitacionConstanciaMatricula] @iCodCapacitacionMatricula int  
AS
SELECT        cmat.iCodCapacitacionMatricula,
 cu.cNombreCurso, 
 ci.cDNI, 
 ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,
cp.cNombrePrograma,
'GRUPO' +' ' + right( '00' + cast( cg.iNro AS varchar(2)), 2) as cGrupoNro ,
cg.dFechaIni,
cg.cLugar,
cg.cHorario ,
cu.cCodigoCurso+'-'+right( '000' + cast( cmat.cNroMatricula AS varchar(3)), 3)+'-'+CAST(cp.iPeriodo AS VARCHAR(4)) as cCodigoMatricula 
FROM    CapacitacionMatricula cmat 
 INNER JOIN    CapacitacionProgramaCurso cpc on cmat.iCodCapacitacionProgramaCurso=cpc.iCodCapacitacionProgramaCurso 
 INNER JOIN  CapacitacionPrograma cp on cpc.iCodCapacitacionPrograma=cp.iCodCapacitacionPrograma 
 INNER JOIN   CapacitacionCurso cu   ON cpc.iCodCapacitacionCurso = cu.iCodCapacitacionCurso 
 INNER JOIN  CandidatoInforme ci ON cmat.iCodCandidatoInforme = ci.iCodCandidatoInforme 
 INNER JOIN CapacitacionGrupo cg ON cmat.iCodCapacitacionGrupo=cg.iCodCapacitacionGrupo  
 where cmat.iCodCapacitacionMatricula=@iCodCapacitacionMatricula 
  
 
 







GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionCursosPorPrograma]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_DT_CapacitacionCursosPorPrograma] @iCodCapacitacionPrograma int 
AS
SELECT        pc.iCodCapacitacionProgramaCurso, m.cNomCursoModulo, c.cNombreCurso,
count(req.iCodCapacitacionProgramaCursoRequisito) as iTotalReq
FROM            dbo.CapacitacionProgramaCurso AS pc INNER JOIN
                         dbo.CapacitacionCurso AS c ON pc.iCodCapacitacionCurso = c.iCodCapacitacionCurso INNER JOIN
                         dbo.CapacitacionCursoModulo AS m ON c.iCodCapacitacionCursoModulo = m.iCodCapacitacionCursoModulo
	
	left join CapacitacionProgramaCursoRequisito req on pc.iCodCapacitacionProgramaCurso=req.iCodCapacitacionProgramaCurso and req.bAnulado=0  
	
	where pc.iCodCapacitacionPrograma=@iCodCapacitacionPrograma 
group by 
 pc.iCodCapacitacionProgramaCurso, m.cNomCursoModulo, c.cNombreCurso
 order by c.cNombreCurso  
 
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionGetRequisitosByCandidatoAdmision]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[SP_DT_CapacitacionGetRequisitosByCandidatoAdmision] @iCodCapacitacionAdmision int
AS
select ca.iCodCapacitacionAdmisionRequisitoValor, 
case 
when isnull(cpval.iCalificaDescalifica,-1) >=0 then cpval.iCalificaDescalifica 
else -1 
end
as iCalificaDescalifica,
cpr.cRequisito ,
cpval.cDetalleValor ,
ca.bAnulado ,
ca.iCodCapacitacionProgramaCursoRequisito,
ca.iCodCapacitacionProgramaCursoRequisitoValor  
 from  
 CapacitacionAdmisionRequisitoValor ca 
left join CapacitacionProgramaCursoRequisito cpr on ca.iCodCapacitacionProgramaCursoRequisito=cpr.iCodCapacitacionProgramaCursoRequisito  
left join CapacitacionProgramaCursoRequisitoValor cpval on ca.iCodCapacitacionProgramaCursoRequisitoValor=cpval.iCodCapacitacionProgramaCursoRequisitoValor 
Where ca.iCodCapacitacionAdmision=@iCodCapacitacionAdmision  
 Order by cpr.iOrden 
 









GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionHistorialParticipante]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








 


CREATE PROCEDURE [dbo].[SP_DT_CapacitacionHistorialParticipante] @iCodCandidatoInforme int,@iCodCapacitacionProgramaCurso int   
AS
select 
case cpc.iCodCapacitacionPrograma 
when 1 then 'CAPACITACION 2019'
when 4 then 'CAPACITACION CIP' 
when 5 then 'CAPACITACION ILO' 
else '' end as Proceso,
 cu.cNombreCurso,
case cm.iEstadoProceso 
when 1 then 'CORRECTO' 
when 2 then 'OBSERVADO' 
when 3 then 'RENUNCIA' 
when 4 then 'PENALIZADO' 
else 'NO APLICA' end as [Fase Matricula],
case cm.iEstadoProcesoResultado  
when 1 then 'SIN RESULTADO' 
when 2 then 'EGRESADO' 
when 3 then 'APROBADO' 
when 4 then 'DESAPROBADO' 
else 'NO APLICA' end as [Fase Enseñanza]  
 from 
capacitacionmatricula cm  
 inner join capacitacionprogramacurso cpc on cm.iCodCapacitacionProgramaCurso=cpc.iCodCapacitacionProgramaCurso 
 inner join capacitacioncurso cu on cpc.iCodCapacitacionCurso=cu.iCodCapacitacionCurso  
 where cm.iCodCandidatoInforme=@iCodCandidatoInforme  
 and cm.iCodCapacitacionProgramaCurso<>@iCodCapacitacionProgramaCurso 
  
 
 








GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionListadoCursosByPrograma]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CapacitacionListadoCursosByPrograma] @iCodCapacitacionPrograma int 
AS

SELECT pc.iCodCapacitacionProgramaCurso as codProgramCurso,
        cm.iCodCapacitacionCursoModulo as idModulo,
        cm.cNomCursoModulo as modulo,
        cc.iCodCapacitacionCurso as idCurso,
		(( cc.cNombreCurso) +
	   case 
		when pc.cNivel='BA' then ' BÁSICO' 
		when pc.cNivel='IN' then ' INTERMEDIO' 
		when pc.cNivel='AV' then ' AVANZADO' 
		else '' end )as curso,       
        pc.iDias as Dias,
        pc.iHoras as horas,
        pc.cCompetencias,
        pc.cObjetivo,
		 pc.iVacantes,
		cast(0 as bit) as  bInscribir,
		case 
		when isnull(pc.cUrlFoto,'')='' then 'default.png'  		 
		else pc.cUrlFoto end as cUrlFoto ,

		case 
		when isnull(pc.cUrlPDF,'')='' then '#'  		 
		else pc.cUrlPDF end as cUrlPDF
        FROM CapacitacionProgramaCurso as pc
        left join CapacitacionCurso as cc on cc.iCodCapacitacionCurso = pc.iCodCapacitacionCurso
        left join CapacitacionCursoModulo as cm on pc.iCodCapacitacionCursoModulo  = cm.iCodCapacitacionCursoModulo

where 
 (pc.iCodCapacitacionPrograma = @iCodCapacitacionPrograma or 0=@iCodCapacitacionPrograma)  and 
pc.bPublicar=1 
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionListadoCursosByPrograma_Beta]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CapacitacionListadoCursosByPrograma_Beta] 
	@iCodCapacitacionPrograma int 
AS
BEGIN


	SELECT cast(pc.iCodCapacitacionProgramaCurso as varchar) as [iProgramaCurso],
		pc.iCodCapacitacionPrograma AS [iPrograma],
        cm.iCodCapacitacionCursoModulo as [iModulo],
        cm.cNomCursoModulo as [cModulo],
        cc.iCodCapacitacionCurso as [idCurso],
		(( cc.cNombreCurso) +
	   case 
		when pc.cNivel='BA' then ' BÁSICO' 
		when pc.cNivel='IN' then ' INTERMEDIO' 
		when pc.cNivel='AV' then ' AVANZADO' 
		else '' end )as [cCurso],       
        pc.iDias as [Dias],
        pc.iHoras as [horas],
		dbo.fnFormatoFechaUX(GETDATE()) as [dFechaFinInscripcion],
        pc.cCompetencias AS [cCompetencias],
        pc.cObjetivo [cObjetivo],
		pc.iVacantes [iVacantes],
		cast(0 as bit) as [bInscribir],
		case 
			when isnull(pc.cUrlFoto,'')='' then 'default.png'  		 
			else pc.cUrlFoto 
		end as [cUrlFoto],
		case 
			when isnull(pc.cUrlPDF,'')='' then '#'  		 
			else pc.cUrlPDF 
		end as [cUrlPDF]
    FROM CapacitacionProgramaCurso as pc
    left join CapacitacionCurso as cc on cc.iCodCapacitacionCurso = pc.iCodCapacitacionCurso
    left join CapacitacionCursoModulo as cm on pc.iCodCapacitacionCursoModulo  = cm.iCodCapacitacionCursoModulo
	WHERE (pc.iCodCapacitacionPrograma = @iCodCapacitacionPrograma or 0 = @iCodCapacitacionPrograma)  
	--and pc.bPublicar = 1
	and cm.iCodCapacitacionCursoModulo = 12
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionListaEvaluacionCurricular]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




















 


CREATE PROCEDURE [dbo].[SP_DT_CapacitacionListaEvaluacionCurricular] @iCodCapacitacionProgramaCurso int,
																		@iCodUsuarioEvalua int 
AS

 
 
 
 SET NOCOUNT ON
SELECT        CapacitacionAdmision.iCodCapacitacionAdmision,
 CapacitacionCursoModulo.cNomCursoModulo, 
 CapacitacionCurso.cNombreCurso, 
 cpc.iCodCapacitacionProgramaCurso, 
cpc.iMeta, CapacitacionAdmision.dFechaRegistro, 
ci.cDNI, 
 ci.cApellidos + ' '+ ci.cNombres as cNomCompleto, 
 case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as cCondicion , 

ci.cUbigeoResidencia, ci.bEvaluado, 
ci.bContratado, ci.bCargaBox,
CapacitacionAdmision.iGradoAcademico, CapacitacionAdmision.iTiempoExperiencia, 
CapacitacionAdmision.iLicenciaConducirValor, CapacitacionAdmision.iRecordConductor,
  CapacitacionAdmision.iCursoEspecialValor, 
  case 
 when CapacitacionAdmision.dFechaEvaluaCV='1900-01-01' then '' 
 else convert(varchar, CapacitacionAdmision.dFechaEvaluaCV, 103)  end  as dFechaEvaluaCV,
 CASE 
 WHEN (select count(cmatpz.iCodCandidatoInforme) from CapacitacionMatricula cmatpz where cmatpz.iCodCandidatoInforme=ci.iCodCandidatoInforme and (cmatpz.iEstadoProceso=4 or cmatpz.iEstadoProceso=4))>=1 then 'NO APTO'    
 WHEN isnull(cmat.iEstadoProceso,0)=1 then  'NO APTO'
 ELSE
  case  
  when CapacitacionAdmision.bApto=1 then 'APTO' 
  when CapacitacionAdmision.bApto=0 then 'NO APTO'   
  when CapacitacionAdmision.iEstado=2 then 'NO APTO'  
  end 
 END AS cApto,
   case 
 when CapacitacionAdmision.dFechaEvaluacionTecnica='1900-01-01' then '' 
 else convert(varchar, CapacitacionAdmision.dFechaEvaluacionTecnica, 103)  end  as dFechaEvaluacionTecnica,
CapacitacionAdmision.nEvaluacionTecnica,
CapacitacionAdmision.cTipoAlumno,
 CapacitacionAdmision.iEstado ,ci.iCodCandidatoInforme  ,
 CapacitacionAdmision.iCodPersonaEvaluaCV ,
CapacitacionAdmision.bApto, 
  ISNULL(u.cNick,'') as cNick,
  CapacitacionAdmision.iLicenciaConducirTiempo, 
  cpc.iGradoAcademico as iGradoAcademicoReq, cpc.iTiempoExperiencia as iTiempoExperienciaReq, 
cpc.iLicenciaConducirValor as iLicenciaConducirValorReq, cpc.iRecordConductor as iRecordConductorReq,
  cpc.iCursoEspecialValor as iCursoEspecialValorReq,cpc.iLicenciaConducirTiempo as iLicenciaConducirTiempoReq ,
CASE 
WHEN isnull(cmat.iEstadoProceso,0)=1 then  'ES BENEFICIARIO DE UN CURSO DE LA FASE I' 
WHEN (select count(cmatpz.iCodCandidatoInforme) from CapacitacionMatricula cmatpz where cmatpz.iCodCandidatoInforme=ci.iCodCandidatoInforme and (cmatpz.iEstadoProceso=4 or cmatpz.iEstadoProceso=4))>=1 then 'USTED ESTA DESCALIFICADO POR ABANDONO DE UN CURSO ( 2019 - 2020 )'    
ELSE
  case 
  when ci.bsustentoCV=1 and (ci.cCondicion='LOCAL' or ci.ccondicion='RESIDENTE' or ci.cCondicion='COMUNIDAD'  ) then 
			case
			when cpc.iGradoAcademico>CapacitacionAdmision.iGradoAcademico then 
			'NO ACREDITA NIVEL DE ESTUDIOS REQUERIDO' 
			when cpc.iTiempoExperiencia>CapacitacionAdmision.iTiempoExperiencia then 
			'NO ACREDITA TIEMPO DE EXPERIENCIA REQUERIDO' 
			when cpc.iLicenciaConducirValor>CapacitacionAdmision.iLicenciaConducirValor then 
			'NO ACREDITA EL TIPO DE LICENCIA DE CONDUCIR REQUERIDO' 
			when cpc.iRecordConductor>CapacitacionAdmision.iRecordConductor then 
			'NO ACREDITA RECORD DE CONDUCTOR REQUERIDO' 
			when cpc.iLicenciaConducirTiempo>CapacitacionAdmision.iLicenciaConducirTiempo then 
			'NO ACREDITA TIEMPO DE EXPERIENCIA REQUERIDO EN LICENCIA DE CONDUCIR' 
			when cpc.iCursoEspecialValor>CapacitacionAdmision.iCursoEspecialValor then 
			'NO ACREDITA LOS CURSOS O CERTIFICACIONES REQUERIDOS' 
			when ci.cCondicion='FORANEO' or ci.cCondicion='' then 
			'NO ACREDITA SUSTENTOS DE LOCAL' 
			  when CapacitacionAdmision.iEstado=2 then 
			CapacitacionAdmision.cObs 
			else 
				case CapacitacionAdmision.bApto 
					 when 1 then '' 
					-- when 0 then CapacitacionAdmision.cObs 
				end
			 end  
	 else
		case 
		when isnull(cad.iCodCandidatoAdmision,0)>0 then 'NO COMPLETÓ EL PROCESO DE REGISTRO OAEL'
		else  'NO ACREDITA SUSTENTO DE LOCAL'
		end
	 END
 END as cObs,
  CapacitacionAdmision.iRanking ,CapacitacionAdmision.cLugarInscripcion ,
  case CapacitacionAdmision.iTipoCV 
  when 1 then 'N' 
  when 2 then 'S' 
  when 3 then 'A' 
  end as cTipoCV ,
  cpc.iCodCapacitacionPrograma ,cpc.cObs as cInfoCurso  ,
CASE 
WHEN isnull(cmat.iEstadoProceso,0)=1 then  'ES BENEFICIARIO DE UN CURSO DE LA FASE I' 
WHEN (select count(cmatpz.iCodCandidatoInforme) from CapacitacionMatricula cmatpz where cmatpz.iCodCandidatoInforme=ci.iCodCandidatoInforme and (cmatpz.iEstadoProceso=4 or cmatpz.iEstadoProceso=4))>=1 then 'USTED ESTA DESCALIFICADO POR ABANDONO DE UN CURSO ( 2019 - 2020 )'    
ELSE
	case  
	when CapacitacionAdmision.bApto=1 then '' 
	when CapacitacionAdmision.bApto=0 then   CapacitacionAdmision.cObs 
	when CapacitacionAdmision.iEstado=2 then  CapacitacionAdmision.cObs  
	end 
END AS cNotasObs 
FROM            CapacitacionCurso INNER JOIN
 CapacitacionProgramaCurso cpc ON CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
 CapacitacionAdmision  ON cpc.iCodCapacitacionProgramaCurso = CapacitacionAdmision.iCodCapacitacionProgramaCurso INNER JOIN
 CandidatoInforme ci ON CapacitacionAdmision.iCodCandidatoInforme = ci.iCodCandidatoInforme INNER JOIN
 CapacitacionCursoModulo ON CapacitacionCurso.iCodCapacitacionCursoModulo = CapacitacionCursoModulo.iCodCapacitacionCursoModulo 
 LEFT JOIN Usuario u on CapacitacionAdmision.iCodPersonaEvaluaCV=u.iCodPersona 
  left join candidatoadmision cad on ci.iCodCandidatoInforme=cad.iCodCandidatoInforme  and icodcandidatoadmisiontipo=1  
 and cad.bImprocedente=0 
 LEFT JOIN  dbo.CapacitacionMatricula cmat on cmat.iCodCandidatoInforme =ci.iCodCandidatoInforme  and cmat.iCodCapacitacionProgramaCurso>=48 and   cmat.iCodCapacitacionProgramaCurso<=58 
 
 where cpc.iCodCapacitacionProgramaCurso=@iCodCapacitacionProgramaCurso 
 and (CapacitacionAdmision.iCodPersonaEvaluaCV in(0,@iCodUsuarioEvalua)  
 or 0=@iCodUsuarioEvalua ) 





GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionMatriculadosXGrupo]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








 


CREATE PROCEDURE [dbo].[SP_DT_CapacitacionMatriculadosXGrupo] @iCodCapacitacionProgramaCurso int  
AS
SELECT        cmat.iCodCapacitacionMatricula,
 dbo.CapacitacionCursoModulo.cNomCursoModulo, 
 dbo.CapacitacionCurso.cNombreCurso, 
 cpc.iCodCapacitacionProgramaCurso, 
 cmat.cNroMatricula, 
 dbo.CandidatoInforme.cDNI, 
 dbo.CandidatoInforme.cApellidos + ' ' + dbo.CandidatoInforme.cNombres AS cNomCompleto,
 CASE WHEN cmat.dFechaRegistro = '1900-01-01' THEN '' ELSE CONVERT(varchar, cmat.dFechaRegistro, 103) END AS dFechaRegistro,

 case cmat.iSituacionMatricula   
 when 0 then 'PENDIENTE DE MATRICULA' 
when 1 then 'CORRECTO'
when 2 then 'NSP'
when 3 then 'RENUNCIA'
when 4 then 'PENALIZADO' 
else 'STAND BY' end as cEstadoMatricula,
cmat.bActivo  ,cmat.iSituacionMatricula ,CapacitacionCurso.cCodigoCurso ,
isnull(cg.iCodCapacitacionGrupo,0) as iCodCapacitacionGrupo,  
isnull(CONVERT(varchar, cg.dFechaIni, 103) ,'') as dFechaIni,
isnull(CONVERT(varchar, cg.dFechaFin, 103) ,'') as dFechaFin,
isnull(cg.cLugar,'') as cLugar,isnull(cg.cHorario,'') as cHorario ,
isnull(con.cNomContrata,'')  as cNomContrata ,
CandidatoInforme.cFono , 
'GRUPO' +' ' + right( '00' + cast( cg.iNro AS varchar(2)), 2) as cGrupoNro  
 
FROM            dbo.CapacitacionCurso INNER JOIN
 dbo.CapacitacionProgramaCurso AS cpc ON dbo.CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
 dbo.CapacitacionMatricula AS cmat ON cpc.iCodCapacitacionProgramaCurso = cmat.iCodCapacitacionProgramaCurso INNER JOIN
 dbo.CandidatoInforme ON cmat.iCodCandidatoInforme = dbo.CandidatoInforme.iCodCandidatoInforme INNER JOIN
 dbo.CapacitacionCursoModulo ON dbo.CapacitacionCurso.iCodCapacitacionCursoModulo = dbo.CapacitacionCursoModulo.iCodCapacitacionCursoModulo
 LEFT JOIN CapacitacionGrupo cg on cmat.iCodCapacitacionGrupo=cg.iCodCapacitacionGrupo 
 LEFT JOIN Contrata con on cg.iCodContrataCapacita=con.iCodContrata 
 where  cmat.iSituacionMatricula=1 and cpc.iCodCapacitacionProgramaCurso=@iCodCapacitacionProgramaCurso  
  
 
 








GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionProgramaCursoDetalle]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_CapacitacionProgramaCursoDetalle] @iCodCapacitacionProgramaCurso int 
AS

SELECT pc.iCodCapacitacionProgramaCurso as codProgramCurso,
        cm.iCodCapacitacionCursoModulo as idModulo,
        cm.cNomCursoModulo as modulo,
        cc.iCodCapacitacionCurso as idCurso,
        cc.cNombreCurso as curso,
		case pc.cModalidad
			when 'P' then 'Presencial'
			when 'V' then 'Virtual'
			else 'Híbrido'
		end as cModalidad, 
        pc.iDias as Dias,
        pc.iHoras as horas,
        pc.cCompetencias,
        pc.cObjetivo,	 
      pc.cCompetencias,
      pc.cPublicoObjetivo,
      pc.cMetodologiaDuracion,
      pc.cCertificacion ,
	  pc.iVacantes,	  
	  cast(1 as bit) as  bInscribir,
		case 
		when isnull(pc.cUrlFoto,'')='' then 'default.png'  		 
		else pc.cUrlFoto end as cUrlFoto ,
		case 
		when isnull(ltrim(rtrim(pc.cUrlPDF)),'')='' then '#'  		 
		else pc.cUrlPDF end as cUrlPDF,
		'' as cContrataCapacita 
        FROM CapacitacionProgramaCurso as pc      
        left join CapacitacionCurso as cc on cc.iCodCapacitacionCurso = pc.iCodCapacitacionCurso
        left join CapacitacionCursoModulo as cm on pc.iCodCapacitacionCursoModulo  = cm.iCodCapacitacionCursoModulo
where   pc.iCodCapacitacionProgramaCurso=@iCodCapacitacionProgramaCurso 
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionProgramaCursoDetalle_Beta]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_DT_CapacitacionProgramaCursoDetalle_Beta] 
	@iCodCapacitacionProgramaCurso int,
	@iCodCandidatoInforme int
AS
BEGIN
	SELECT cast(pc.iCodCapacitacionProgramaCurso as varchar) as [iProgramCurso],
        cm.iCodCapacitacionCursoModulo as [idModulo],
        cm.cNomCursoModulo as [modulo],
        cc.iCodCapacitacionCurso as [idCurso],
        cc.cNombreCurso as [curso],
		case pc.cModalidad
			when 'P' then 'Presencial'
			when 'V' then 'Virtual'
			else 'Híbrido'
		end as [cModalidad], 
        pc.iDias as [Dias], pc.iHoras as [horas], dbo.fnRemplazarTexto(pc.cCompetencias) as [cCompetencias],pc.cObjetivo as [cObjetivo],	 
      dbo.fnRemplazarTexto(pc.cPublicoObjetivo) as [cPublicoObjetivo],pc.cMetodologiaDuracion as [cMetodologiaDuracion],
      pc.cCertificacion as [cCertificacion],pc.iVacantes as [iVacantes],	  
	  cast(1 as bit) as  bInscribir,
		case 
			when isnull(pc.cUrlFoto,'')='' then 'default.png'  		 
			else pc.cUrlFoto 
		end as [cUrlFoto],
		case 
			when isnull(ltrim(rtrim(pc.cUrlPDF)),'')='' then '#'  		 
			else pc.cUrlPDF 
		end as [cUrlPDF],
		'' as cContrataCapacita,
		(select bConsentimientoCapacita from CandidatoInformeAdd where iCodCandidatoInforme = @iCodCandidatoInforme) as [bConsentimientoCapacita] 
        FROM CapacitacionProgramaCurso as pc      
        left join CapacitacionCurso as cc on cc.iCodCapacitacionCurso = pc.iCodCapacitacionCurso
        left join CapacitacionCursoModulo as cm on pc.iCodCapacitacionCursoModulo  = cm.iCodCapacitacionCursoModulo
	where   pc.iCodCapacitacionProgramaCurso=@iCodCapacitacionProgramaCurso 
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CapacitacionResultadosTecnico]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






 


CREATE PROCEDURE [dbo].[SP_DT_CapacitacionResultadosTecnico] @iCodCapacitacionProgramaCurso int  
AS
SELECT        CapacitacionAdmision.iCodCapacitacionAdmision,
 CapacitacionCursoModulo.cNomCursoModulo, 
 CapacitacionCurso.cNombreCurso, 
 cpc.iCodCapacitacionProgramaCurso, 
cpc.iMeta, 
CandidatoInforme.cDNI, 
 ltrim(rtrim(CandidatoInforme.cApellidos + ' '+ CandidatoInforme.cNombres)) as cNomCompleto, CandidatoInforme.cCondicion, 
CapacitacionAdmision.nEvaluacionTecnica,
CapacitacionAdmision.cTipoAlumno,
 CapacitacionAdmision.iEstado ,
 ROW_NUMBER() over (ORDER BY CapacitacionAdmision.nEvaluacionTecnica DESC) AS iRanking 
   FROM            CapacitacionCurso INNER JOIN
 CapacitacionProgramaCurso cpc ON CapacitacionCurso.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso INNER JOIN
 CapacitacionAdmision ON cpc.iCodCapacitacionProgramaCurso = CapacitacionAdmision.iCodCapacitacionProgramaCurso INNER JOIN
 CandidatoInforme ON CapacitacionAdmision.iCodCandidatoInforme = CandidatoInforme.iCodCandidatoInforme INNER JOIN
 CapacitacionCursoModulo ON CapacitacionCurso.iCodCapacitacionCursoModulo = CapacitacionCursoModulo.iCodCapacitacionCursoModulo 
 where CapacitacionAdmision.bApto=1 and 
 cpc.iCodCapacitacionProgramaCurso=@iCodCapacitacionProgramaCurso 
  
 
 






GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ContrataLista]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ContrataLista]   
AS  
BEGIN
	select iCodContrata, cNomContrata,cNomCorto,cTipoEmpresa,cCondicionEmpresaDetalle 
	FROM contrata order by cNomContrata
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ContrataRepresentantes]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ContrataRepresentantes] @iCodContrata int  
AS  
BEGIN
	SELECT cr.iCodContrataRepresentante,
		   ci.iCodCandidatoInforme,
		   ci.cDNI,
		   ci.cNombres + ' ' + ci.cApellidos AS cNomCompleto,
		   CASE        
			   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AID' THEN 'LOCAL'        
			   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AIO' THEN 'LOCAL'        
			   WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'LOCAL'        
			   WHEN ltrim(rtrim(u.cUbigeo))='140902' THEN 'LOCAL'        
			   WHEN ltrim(rtrim(u.cUbigeo))='090409' THEN 'LOCAL'        
			   WHEN ltrim(rtrim(u.cUbigeo))='090401' THEN 'LOCAL'        
			   ELSE 'FORANEO'        
		   END AS cCondicion,
		   dbo.fnObtenerCondicionDetalle(com.cTipoAreaInfluencia, u.cUbigeo) AS cCondicionDetalle,
		   CASE
			   WHEN ci.bSustentoCV=1 THEN 'SI'
			   ELSE 'NO'
		   END AS cValidado,
		   isnull(com.cComunidad, '') AS cLocalidadComunidad,
		   cr.bAnulado,
		   isnull(com.iCodComunidad, 1) AS iCodLocalidadComunidad
	FROM ContrataRepresentante cr
	LEFT JOIN CandidatoInforme ci ON cr.iCodCandidatoInforme=ci.iCodCandidatoinforme
	LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo
	LEFT JOIN TDUbigeo ur ON ci.cUbigeoResidencia=ur.cUbigeo
	LEFT JOIN CandidatoInformeCondicion cond ON ci.iCodCandidatoInforme=cond.iCodCandidatoInforme
	LEFT JOIN TDCondicionSustento tdco ON cond.iCodTDCondicionSustentoNueva=tdco.iCodTDCondicionSustento
	AND tdco.iCodUsuario=1
	LEFT JOIN Comunidad com ON com.iCodComunidad=cond.iCodComunidad
	AND com.iCodComunidad>1
	WHERE cond.iCodCandidatoInformeCondicion=
		(SELECT MAX(cond9.iCodCandidatoInformeCondicion)
		 FROM CandidatoInformeCondicion cond9
		 WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme)
	AND cr.iCodContrata=@iCodContrata
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ContrataSunatInfo]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_DT_ContrataSunatInfo] @iCodContrata int 
AS
SELECT iCodContrataSunatInfo,
	cast(cs.dFechaCreacion  as date) as [Fecha Revisión],
      cs.dFechaInscripcion as [Fecha Inscripción],
      cs.dFechaInicioActividades as [Fecha Inicio Actividad],
      cs.cEstadoContribuyente as [Estado Contribuyente],
     
      cs.cUbigeoDomicilioFiscal as [Ubigeo Dom. Fiscal],
	   cs.cDomicilioFiscal as [Domicilio Fiscal],
      cs.cSistemaEmiteComprobante [Sist. Emisión Comprobante],
      cs.cActividadComercioExterior as [Actividad Comercio Exterior],
      cs.cSistemaContabilidad as [Sistema de Contabilidad],
      cs.cActividadPrincipal as [Actividad Principal],
      isnull(rep.cRubroEmpresarial,'') as [Rubro Actividad Principal],
      cs.cActividadSecundariaUno as [Actividad Secundaria 1],
      ISNULL(res1.cRubroEmpresarial,'') as [Rubro Actividad Secundaria 1],
      cs.cActividadSecundariaDos as [Actividad Secundaria 2],
      ISNULL(res2.cRubroEmpresarial,'') as [Rubro Actividad Secundaria 2],
      cs.dFechaBoleta as [Fecha Emisión Boleta],
      cs.dFechaFactura as [Fecha Emisión Factura],
      cs.dFechaGuiaRemision as [Fecha Guía Remisión],
      cs.dFechaAfiliadoPle as [Fecha Afiliado al PLE],
      cs.cPadron as [Padrones],
	  case 
	  when cs.bDeudaCoactiva=0 then 'NO'
	  else 'SI - ' + cs.cDeudaCoactiva 
	  end as [Deuda Coactiva] 
       
  FROM  ContrataSunatInfo cs 
  left join prov.RubroEmpresarial rep on cs.iCodRubroEmpresarialPrincipal=rep.iCodRubroEmpresarial 
  left join prov.RubroEmpresarial res1 on cs.iCodRubroEmpresarialSecundariaUno=res1.iCodRubroEmpresarial 
  left join prov.RubroEmpresarial res2 on cs.iCodRubroEmpresarialSecundariaDos=res2.iCodRubroEmpresarial 

  WHERE cs.iCodContrata=@iCodContrata  
  ORDER by cs.iCodContrataSunatInfo DESC

GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ContratistaContratoResponsablePorContrato]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ContratistaContratoResponsablePorContrato]   
@iCodContratistaContrato int    
AS    
BEGIN  
 SELECT  iCodContratistaContratoResponsable,  
   iCodContratistaContrato,  
   ccr.iCodPersona,  
   pn.cNombres + ' ' + PN.cApelP + ' ' + PN.cApelP as NombresApellidos,  
   ccr.cCargo,  
   bOperadorContrato,  
   bFuerzaLaboral,  
   bEmpleo,  
   bProveeduria,  
   bCapacitacion,  
   bEvaluacionDesempeno,
   bRDP
 FROM ContratistaContratoResponsable ccr  
 LEFT JOIN PersonaNatural pn ON pn.iCodPersona=ccr.icodPersona  
 WHERE iCodContratistaContrato=@iCodContratistaContrato  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ContratistaVigente]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ContratistaVigente]   
AS  
BEGIN

	SELECT distinct   
			 co.iCodContrata,  
			 co.cNomContrata   
	FROM contrata co    
	INNER JOIN ContratistaContrato cto on co.iCodContrata=cto.iCodContrata   
	WHERE cto.bCerrado=0

END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ContratosByContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ContratosByContrata] 
@iCodContrata INT   
AS
BEGIN
	SELECT  iCodContratistaContrato,  
			cGrupoContrato + ' ' + cNroContrato as cContrato 
	FROM Contratistacontrato 
	WHERE iCodContrata=@iCodContrata   
	AND bCerrado=0
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ContratosPorContratistaContrato]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ContratosPorContratistaContrato]           
@iCodContratistaContrato integer             
AS            
BEGIN

  SELECT	T1.iCodContratistaContratoRenovacion,          
			T1.iCodContratistaContrato,                
			FORMAT(T1.dFechaTerminoAnterior,'dd-MM-yyyy') AS dFechaTerminoAnterior,
			FORMAT(T1.dFechaTerminoNuevo,'dd-MM-yyyy') AS dFechaTerminoNuevo,
			T1.cMotivoAmpliacion,
			T1.iEstado  
  FROM dbo.ContratistacontratoRenovacion as T1        
  LEFT JOIN dbo.ContratistaContrato as T2 ON T2.iCodContratistaContrato=T1.iCodContratistaContrato      
  WHERE T1.iCodContratistaContrato=@iCodContratistaContrato
  ORDER BY T1.iCodContratistaContratoRenovacion DESC
     
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriaDetalleFeedback]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- SP QUE SE UNA EN DESKTOP DETALLE RPTA CONTRATA
 CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriaDetalleFeedback] @iCodConvocatoriaMain int 
 AS
SELECT  
 cd.iCodConvocatoriaDetalle, cd.iCodConvocatoria, 
 cv.cPerfil, 
 CASE cd.iTipoPostulacion 
 WHEN 1 THEN 'OAEL' 
 WHEN 2 THEN 'SISTEMA' 
 WHEN 3 THEN 'EXCEPTUADO' 
  WHEN 4 THEN 'PREFERENCIAL' 
   WHEN 5 THEN 'SOLICITADO' 
    WHEN 6 THEN 'VIRTUAL APP' 
 WHEN 7 THEN 'STAKEHOLDER' 
 else '' 
	 END AS cTipoPostulacion,  
    ci.cDNI,
	ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
 ci.cFono,
 cd.iRanking, 
 ci.cLicenciaConducir ,
cd.cEstado , 
cd.cSeleccionado ,
  CASE 
 WHEN cd.dFechaContactoContrata1 = '1900-01-01' THEN ''  
 ELSE convert(varchar(15),cd.dFechaContactoContrata1,103) END 
  as dFechaRespuesta ,
 cd.cRptaContrata, cd.cObs ,
 cd.dFechaVerificaFeedback ,
 cd.cFeedbackCorrecto , 
 --V VALIDADO
 --C CAMBIAR RPTA
 --R RECONSIDERAR
  cd.cObsConsultor ,
  cd.iCodCandidatoInforme 

FROM dbo.ConvocatoriaDetalle AS cd left JOIN
 dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme 
 left JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria left JOIN
 ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain  left join
 Contrata AS co ON cm.iCodContrata = co.iCodContrata 
where cm.iCodConvocatoriaMain=@iCodConvocatoriaMain --15078--@iCodConvocatoriaMain 
 and cd.cEstado='D' and cd.dfechacargacv<>'1900-01-01' 
order by cm.cNroConvocatoria, cNomContrata,cSubContrata,dfechafin,cPerfil  











GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriaDetalleFeedbackValidarRpt]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
















 


CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriaDetalleFeedbackValidarRpt] @iCodConvocatoriaMain int 
AS
select 
 cd.iCodConvocatoriaDetalle, 
cm.cNroConvocatoria,
 --CASE cM.iTipo 
 --WHEN 1 THEN 'REGULAR' 
 --WHEN 2 THEN 'REQ. EXCEPTUADO' 
 --WHEN 3 THEN 'ADICIONAL' 
 -- WHEN 4 THEN 'DISPENSADO' 
 --  WHEN 5 THEN 'MARATON' 
 --   WHEN 6 THEN 'PGI' 
 --WHEN 7 THEN 'STAKEHOLDER' 
 --WHEN 8 THEN 'AAQ' 
 --WHEN 9 THEN 'OTROS' 
 --WHEN 10 THEN 'REGULAR DUPLICADO' 
	-- END AS cTipoConvocatoria, 
ltrim(rtrim(co.cNomContrata)) as cNomContrata, 
convert(varchar(15), cm.dFechaIni, 6) + ' al '+convert(varchar(15), cm.dFechaFin, 6) as cFechaConvocatoria,
 
 cv.cPerfil, 
 
 --CASE cd.iTipoPostulacion 
 --WHEN 1 THEN 'OAEL' 
 --WHEN 2 THEN 'SISTEMA' 
 --WHEN 3 THEN 'EXCEPTUADO' 
 -- WHEN 4 THEN 'PREFERENCIAL' 
 --  WHEN 5 THEN 'SOLICITADO' 
 --   WHEN 6 THEN 'VIRTUAL APP' 
 --WHEN 7 THEN 'STAKEHOLDER' 
	-- END AS cTipoPostulacion,  
   --ROW_NUMBER() OVER(PARTITION BY cNomContrata,
   --cSubContrata,dfechafin,cPerfil ORDER BY ci.cApellidos ASC) as iNroPos,
    ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
 ci.cFono,
 ci.cLicenciaConducir , 
 cd.dFechaCargaCV,
 
 cd.iRanking, 
 cd.cRptaContrata,
 cd.cObs,
cd.cSeleccionado ,
  CASE 
 WHEN cd.dFechaContactoContrata1 = '1900-01-01' THEN ''  
 ELSE convert(varchar(15),cd.dFechaContactoContrata1,103) END 
  as cFechaRespuesta ,
    CASE 
 WHEN cd.dFechaVerificaFeedback = '1900-01-01' THEN ''  
 ELSE convert(varchar(15),cd.dFechaVerificaFeedback,103) END 
  as cFechaVerificaFeedback ,

 
case  cd.cFeedbackCorrecto 
wHEN 'V' then 'VALIDADO'
WHEN 'C' then 'CAMBIAR RPTA.'
WHEN 'R' then 'RECONSIDERAR'
WHEN '-' then 'SIN VALIDAR'
else 'SIN VALIDAR'
end as cFeedbackCorrecto ,
 cd.cObsConsultor  ,
 cd.cFeedbackCorrecto as cFeedbackCorrectoAbrev
FROM dbo.ConvocatoriaDetalle AS cd left JOIN
 dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme 
  left join TDubigeo as tu on ci.cUbigeo=tu.cUbigeo 
 LEFt JOIN TDubigeo as tur ON ci.cUbigeoResidencia=tur.cUbigeo   
 left JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria left JOIN
 ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain  left join
 Contrata AS co ON cm.iCodContrata = co.iCodContrata 
where cm.iCodConvocatoriaMain=@iCodConvocatoriaMain 
 and cd.cEstado='D' and cd.dfechacargacv<>'1900-01-01' 
order by cm.cNroConvocatoria, cNomContrata,cSubContrata,dfechafin,cPerfil  









GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriaDetalleFeedbackValidarRptWeb]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriaDetalleFeedbackValidarRptWeb] @iCodConvocatoriaMain int   
AS
BEGIN
	select   
	 cd.iCodConvocatoriaDetalle,   
	cm.cNroConvocatoria,  
	 CASE cM.iTipo   
	 WHEN 1 THEN 'REGULAR'   
	 WHEN 2 THEN 'REQ. EXCEPTUADO'   
	 WHEN 3 THEN 'ADICIONAL'   
	  WHEN 4 THEN 'DISPENSADO'   
	   WHEN 5 THEN 'MARATON'   
		WHEN 6 THEN 'PGI'   
	 WHEN 7 THEN 'STAKEHOLDER'   
	 WHEN 8 THEN 'ANTAMINA'   
	 WHEN 9 THEN 'OTROS'   
	 WHEN 10 THEN 'REGULAR DUPLICADO'   
	  END AS cTipoConvocatoria,   
	ltrim(rtrim(co.cNomContrata)) as cNomContrata,   
	convert(varchar(15), cm.dFechaIni, 6) + ' al '+convert(varchar(15), cm.dFechaFin, 6) as cFechaConvocatoria,  
	 cv.iCantidad,  
	 cv.cPerfil,   
	  CASE cd.iTipoPostulacion   
	 WHEN 1 THEN 'OAEL'   
	 WHEN 2 THEN 'SISTEMA'   
	 WHEN 3 THEN 'EXCEPTUADO'   
	  WHEN 4 THEN 'PREFERENCIAL'   
	   WHEN 5 THEN 'SOLICITADO'   
		WHEN 6 THEN 'VIRTUAL APP'   
	 WHEN 7 THEN 'STAKEHOLDER'
	 WHEN 8 THEN 'OTROS'   
 
	  END AS cTipoPostulacion,    
  
		ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,   
	ci.cFono,ci.cCorreo,  
	 cd.dFechaCargaCV,  
	  cd.iRanking,   
	   ci.bCargaBox,   
	 CASE   
	 WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS BIT)   
	 ELSE CAST(1 AS BIT) END AS bCVCargado,   
	 cd.cEstado ,   
  
	 cd.cRptaContrata,  
	 cd.cObs,  
	cd.cSeleccionado ,  
	  CASE   
	 WHEN cd.dFechaContactoContrata1 = '1900-01-01' THEN ''    
	 ELSE convert(varchar(15),cd.dFechaContactoContrata1,103) END   
	  as cFechaRespuesta ,  
		CASE   
	 WHEN cd.dFechaVerificaFeedback = '1900-01-01' THEN ''    
	 ELSE convert(varchar(15),cd.dFechaVerificaFeedback,103) END   
	  as cFechaVerificaFeedback ,  
  
   
	case  cd.cFeedbackCorrecto   
	wHEN 'V' then 'VALIDADO'  
	WHEN 'C' then 'CAMBIAR RPTA.'  
	WHEN 'R' then 'RECONSIDERAR'  
	WHEN '-' then 'SIN VALIDAR'  
	else 'SIN VALIDAR'  
	end as cFeedbackCorrecto ,  
	 cd.cObsConsultor  ,  
	 cd.cFeedbackCorrecto as cFeedbackCorrectoAbrev  
	FROM dbo.ConvocatoriaDetalle AS cd left JOIN  
	 dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme   
	  left JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria left JOIN  
	 ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain  left join  
	 Contrata AS co ON cm.iCodContrata = co.iCodContrata   
	where cm.iCodConvocatoriaMain=@iCodConvocatoriaMain   
	 and cd.cEstado='D' and cd.dfechacargacv<>'1900-01-01'   
	order by cm.cNroConvocatoria, cNomContrata,cSubContrata,dfechafin,cPerfil    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriaDetalleHistorial]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriaDetalleHistorial]      
@iCodConvocatoriaDetalle int      
AS      
BEGIN      
      
    
  SELECT          
   iCodConvocatoriaDetalleHistorial,          
   iCodConvocatoriaDetalle,            
   CASE cSeleccinado WHEN 'SI' THEN 'SELECCIONADO' WHEN 'NO' THEN 'NO SELECCIONADO' ELSE cSeleccinado END as 'cSeleccinado',          
   cRptaContrata,          
   cObs,      
   iCodUsuarioCreacion,      
   dFechaCreacion,      
   iCodUsuarioModificacion,      
   dFechaModificacion      
   FROM dbo.ConvocatoriaDetalleHistorial          
   WHERE iCodConvocatoriaDetalle=@iCodConvocatoriaDetalle          
    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriaDetalleParaEnviarCV]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


 CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriaDetalleParaEnviarCV] as

SELECT        cd.iCodConvocatoriaDetalle, 
cd.iCodCandidatoInforme, 
cd.iCodConvocatoria, 
cd.cEstado,
cast(cd.dFechaMintra as date) AS dFechaEnvio, 
cd.dFechaCargaCV, 
--cd.iTipoPostulacion, 
ci.cDNI,
ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,
LEFT(ci.cCondicion, 1) AS cCondicion,
ct.cNomContrata, 
 c.cPerfil, 
 co.cRutaLista,
 c.cPerfil as Plaza
 ,
 case 
 when isnull(cues.iCodCuestionario,0)=0 then 100
 else 
  (select (cast(isnull( cast((sum(isnull(cuop.iCalificaDescalifica,0))) as decimal(6,2)) / nullif(cast(count(curep.iCodCuestionarioPreguntas) as decimal(6,2)),0) ,0)  as decimal(6,2)) * 100 )

from CuestionarioPostulante  cup 
left join CuestionarioPostulanteRespuestas curep on curep.iCodCuestionarioPostulante=cup.iCodCuestionarioPostulante 
left join CuestionarioPreguntasOpciones cuop on curep.iCodCuestionarioPreguntasOpciones=cuop.iCodCuestionarioPreguntasOpciones
where cup.iCodConvocatoria=c.iCodConvocatoria and 
cup.iCodCandidatoInforme=cd.iCodCandidatoInforme and cup.bEnviado=1  ) 
end as nRanking 
FROM            dbo.ConvocatoriaMain AS co INNER JOIN
                         dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain INNER JOIN
                         dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata INNER JOIN
                         dbo.ConvocatoriaDetalle AS cd ON c.iCodConvocatoria = cd.iCodConvocatoria INNER JOIN
                         dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme
				left join dbo.CuestionarioConvocatoria cues on cues.iCodConvocatoria=c.iCodConvocatoria 
 --left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado>0 
 
 
-- WHERE        (cd.cEstado = 'E') 

 
 where cd.iTipoPostulacion in(1,3,6) -- regular  adicional   pgi
 and (co.dFechaIni>='2023-01-01'  and dateadd(day,2,co.dFechaFin) >= cast(GETDATE() as date))
 and ci.cCondicion in('LOCAL','RESIDENTE','COMUNIDAD') 
 and ci.bSustentoCV=1 
 and ci.bCargaBox=1 
 --and ci.bEvaluado=1 
 and cd.cEstado='D'  
 and cd.dFechaCargaCV<='2000-01-01'  
 and co.iCodContrata<>127  
 --order by iCodConvocatoriaDetalle desc 


GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriaPostulanteEnviadoByConvocatoria]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriaPostulanteEnviadoByConvocatoria] 
@iCodConvocatoriaMain int AS
BEGIN
	SET NOCOUNT ON;  
  
    ;WITH GestoresComunidad AS (  
        SELECT DISTINCT  
            pgc.iCodComunidad,  
            STUFF((  
                SELECT ' , ' + LTRIM(RTRIM(p2.cNombres + ' ' + p2.cApelP + ' ' + p2.cApelM))  
                FROM PersonaGestorComunidad pgc2  
                INNER JOIN PersonaNatural p2   
                    ON p2.iCodPersona = pgc2.iCodPersona  
                WHERE pgc2.iCodComunidad = pgc.iCodComunidad  
                  AND pgc2.bHabilitar = 1  
                ORDER BY p2.cNombres, p2.cApelP, p2.cApelM  
                FOR XML PATH(''), TYPE  
            ).value('.', 'NVARCHAR(MAX)'), 1, 2, '') AS Gestores  
        FROM PersonaGestorComunidad pgc  
    )  

	SELECT cd.iCodConvocatoriaDetalle,
		   cd.iCodConvocatoria,
		   cm.cNroConvocatoria,
		   CASE cM.iTipo
			   WHEN 1 THEN 'REGULAR'
			   WHEN 2 THEN 'REQ. EXCEPTUADO'
			   WHEN 3 THEN 'ADICIONAL'
			   WHEN 4 THEN 'DISPENSADO'
			   WHEN 5 THEN 'MARATON'
			   WHEN 6 THEN 'PGI'
			   WHEN 7 THEN 'STAKEHOLDER'
			   WHEN 8 THEN 'AAQ'
			   WHEN 9 THEN 'OTROS'
			   WHEN 10 THEN 'REGULAR DUPLICADO'
		   END AS cTipoConvocatoria,
		   ltrim(rtrim(co.cNomContrata)) AS cNomContrata,
		   convert(varchar(15), cm.dFechaIni, 6) + ' al '+convert(varchar(15), cm.dFechaFin, 6) AS cFechaConvocatoria ,
		   cv.iCantidad,
		   cv.cPerfil,
		   CASE cd.iTipoPostulacion
			   WHEN 1 THEN 'OAEL'
			   WHEN 2 THEN 'SISTEMA'
			   WHEN 3 THEN 'EXCEPTUADO'
			   WHEN 4 THEN 'PREFERENCIAL'
			   WHEN 5 THEN 'SOLICITADO'
			   WHEN 6 THEN 'VIRTUAL APP'
			   WHEN 7 THEN 'STAKEHOLDER'
		   END AS cTipoPostulacion,
		   ROW_NUMBER() OVER(PARTITION BY cNomContrata, cSubContrata, dfechafin, cPerfil
							 ORDER BY ci.cApellidos ASC) AS iNroPos,
		   ci.cDNI,
		   ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,
		   ci.cFono,
		    ISNULL(com.cUbicacionZona,'') AS [UGT],           
			ISNULL(com.cTipoCompromiso, '') AS [COMUNIDAD],        
			ISNULL(com.cUbicacionCuenca,'') AS [DISTRITO COMUNIDAD],        
			ISNULL(gc.Gestores, '') AS [GESTOR SOCIAL],        
		   isnull(tu.cDepartamento, '---') AS cRegionNac,
		   isnull(tur.cDepartamento, '---') AS cRegionDom,
		   CASE
			   WHEN ci.bRucMoq=1 THEN 'RUC'
			   WHEN ci.bTrabajoMoq=1 THEN 'TR'
			   WHEN ci.bEstudioMoq=1 THEN 'ES'
			   WHEN ci.bConviveMoq=1 THEN 'CONV'
			   WHEN ci.bCasadoMoq=1 THEN 'MA'
			   WHEN ci.bHijosMoq=1 THEN 'HI'
			   WHEN ci.bDNIMoq=1 THEN 'RE'
			   WHEN ci.cCondicion='LOCAL' THEN 'DNI'
			   WHEN ci.cCondicion='COMUNIDAD' THEN 'CO'
			   WHEN ci.cCondicion='FORANEO' THEN 'DNI'
			   ELSE ''
		   END AS cDocSustento ,
		   ci.cCapacitacion AS cCapacitado ,
		   cd.dFechaCargaCV,
		   cd.iRanking,
		   ci.bCargaBox,
		   CASE
			   WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS BIT)
			   ELSE CAST(1 AS BIT)
		   END AS bCVCargado,
		   ci.bContratado,
		   cd.cEstado,
		   cd.cObs,
		   cd.cSeleccionado,
		   cd.cRptaContrata,
		   ci.cUbigeo,
		   cm.cSubContrata,
		   CASE
			   WHEN cd.dFechaContactoContrata1 = '1900-01-01' THEN ''
			   ELSE convert(varchar(15), cd.dFechaContactoContrata1, 103)
		   END AS dFechaRespuesta
	FROM dbo.ConvocatoriaDetalle AS cd
	LEFT JOIN dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme
	LEFT JOIN TDubigeo AS tu ON ci.cUbigeo=tu.cUbigeo
	LEFT JOIN TDubigeo AS tur ON ci.cUbigeoResidencia=tur.cUbigeo
	LEFT JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria
	LEFT JOIN ConvocatoriaMain cm ON cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain
	LEFT JOIN ConvocatoriaComunidad cvc ON cvc.iCodConvocatoria = cv.iCodConvocatoria   
	LEFT JOIN Contrata AS co ON cm.iCodContrata = co.iCodContrata
	OUTER APPLY (  
        SELECT TOP 1 cond9.*        
        FROM CandidatoInformeCondicion cond9        
        WHERE cond9.iCodCandidatoInforme = ci.iCodCandidatoInforme        
        ORDER BY cond9.iCodCandidatoInformeCondicion DESC        
    ) cond        
    LEFT JOIN Comunidad com ON com.iCodComunidad = cond.iCodComunidad AND com.iCodComunidad > 1        
    LEFT JOIN Comunidad com2 ON com2.iCodComunidad = cvc.iCodComunidad AND com2.iCodComunidad > 1        
    LEFT JOIN GestoresComunidad gc ON gc.iCodComunidad = com2.iCodComunidad AND gc.iCodComunidad > 1   
	WHERE cm.iCodConvocatoriaMain=@iCodConvocatoriaMain
	  AND cd.cEstado='D'
	  AND cd.dfechacargacv<>'1900-01-01'
	ORDER BY cm.cNroConvocatoria,
			 cNomContrata,
			 cSubContrata,
			 dfechafin,
			 cPerfil
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriaPostulanteEnviadoByFechaEnvio]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO












 


CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriaPostulanteEnviadoByFechaEnvio] @iCodContrata integer,@dFechaCargaCVIni date,@dFechaCargaCVFin date 
AS
SELECT     cd.iCodConvocatoriaDetalle, cd.iCodConvocatoria, 
cm.cNroConvocatoria,
ltrim(rtrim(co.cNomContrata)) as cNomContrata, 
convert(varchar(15), cm.dFechaIni, 6) + ' al '+convert(varchar(15), cm.dFechaFin, 6) as cFechaConvocatoria
 ,cv.iCantidad,
 cv.cPerfil, 
cm.dFechaLimite as dFechaMaxima,
 CASE cd.iTipoPostulacion 
 WHEN 1 THEN 'GRTPE' 
 WHEN 2 THEN 'SISTEMA' 
 WHEN 3 THEN 'EXCEPTUADO' 
  WHEN 4 THEN 'PREFERENCIAL' 
   WHEN 5 THEN 'SOLICITADO'  END AS cTipoPostulacion,  
   ROW_NUMBER() OVER(PARTITION BY cNomContrata,
   cSubContrata,dfechafin,cPerfil ORDER BY ci.cApellidos ASC) as iNroPos,
    ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
 ci.cFono,
 isnull(tu.cDepartamento,'---') as cRegionNac,
isnull(tur.cDepartamento,'---') as cRegionDom,
case 
when ci.bRucMoq=1 then 'RUC'
 when ci.bTrabajoMoq=1 then 'TR' 
 when ci.bEstudioMoq=1 then 'ES'
 when ci.bConviveMoq=1 then 'CONV' 
when ci.bCasadoMoq=1 then 'MA'
 when ci.bHijosMoq=1 then 'HI' 
 when ci.bDNIMoq=1 then 'RE' 
 when ci.cCondicion='LOCAL' then 'DNI'    
  when ci.cCondicion='COMUNIDAD' then 'CO'    
 when ci.cCondicion='FORANEO' then 'DNI' else '' end 
 as cDocSustento  ,
ci.cCapacitacion as cCapacitado 
 ,   
 cd.dFechaCargaCV,
 DATEDIFF(day,  DATEADD(day, 1, cm.dFechaFin),  cd.dFechaCargaCV) as iDias,
 cd.iRanking, 
 CASE 
 WHEN ci.iEstadoVerificativa = 3 THEN CAST(1 AS bit) 
 ELSE CAST(0 AS bit) 
 END AS bVerificativa, 
 ci.bCargaBox, cd.bCumplePerfil, 
 CASE 
 WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS BIT) 
 ELSE CAST(1 AS BIT) END AS bCVCargado, 
 ci.bContratado, cd.cEstado ,'' as cRptaContrataInput,'' as cObsRptaContrataInput ,ci.cUbigeo ,cm.cSubContrata 
FROM dbo.ConvocatoriaDetalle AS cd left JOIN
 dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme 
  left join TDubigeo as tu on ci.cUbigeo=tu.cUbigeo 
 LEFt JOIN TDubigeo as tur ON ci.cUbigeoResidencia=tur.cUbigeo   
 left JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria left JOIN
 ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain  left join
 Contrata AS co ON cm.iCodContrata = co.iCodContrata 
where co.iCodContrata=@iCodContrata and 
cd.dFechaCargaCV>=@dFechaCargaCVIni and 
cd.dFechaCargaCV<=@dFechaCargaCVFin   
order by cm.cNroConvocatoria, cNomContrata,cSubContrata,dfechafin,cPerfil  






GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriaPostulanteEnviadoByFechaEnvioConvocatoria]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriaPostulanteEnviadoByFechaEnvioConvocatoria]       
    @iCodConvocatoriaMain INT,  
    @dFechaCargaCVIni DATE,  
    @dFechaCargaCVFin DATE       
AS      
BEGIN      
    SET NOCOUNT ON;  
  
    ;WITH GestoresComunidad AS (  
        SELECT DISTINCT  
            pgc.iCodComunidad,  
            STUFF((  
                SELECT ' , ' + LTRIM(RTRIM(p2.cNombres + ' ' + p2.cApelP + ' ' + p2.cApelM))  
                FROM PersonaGestorComunidad pgc2  
                INNER JOIN PersonaNatural p2   
                    ON p2.iCodPersona = pgc2.iCodPersona  
                WHERE pgc2.iCodComunidad = pgc.iCodComunidad  
                  AND pgc2.bHabilitar = 1  
                ORDER BY p2.cNombres, p2.cApelP, p2.cApelM  
                FOR XML PATH(''), TYPE  
            ).value('.', 'NVARCHAR(MAX)'), 1, 2, '') AS Gestores  
        FROM PersonaGestorComunidad pgc  
    )  
    SELECT   
        cd.iCodConvocatoriaDetalle,        
        cd.iCodConvocatoria,        
        cm.cNroConvocatoria,        
        LTRIM(RTRIM(co.cNomContrata)) AS cNomContrata,        
        CONVERT(VARCHAR(15), cm.dFechaIni, 6) + ' al ' + CONVERT(VARCHAR(15), cm.dFechaFin, 6) AS cFechaConvocatoria,        
        cv.iCantidad,        
        cv.cPerfil,        
        cm.dFechaLimite AS dFechaMaxima,        
        CASE cd.iTipoPostulacion        
            WHEN 1 THEN 'OAEL'        
            WHEN 2 THEN 'SISTEMA'        
            WHEN 3 THEN 'EXCEPTUADO'        
            WHEN 4 THEN 'PREFERENCIAL'        
            WHEN 5 THEN 'SOLICITADO'        
            WHEN 6 THEN 'VIRTUAL APP'        
            WHEN 7 THEN 'STAKEHOLDER'        
        END AS cTipoPostulacion,        
        ROW_NUMBER() OVER (  
            PARTITION BY LTRIM(RTRIM(co.cNomContrata)), cm.cSubContrata, cm.dFechaFin, cv.cPerfil  
            ORDER BY ci.cApellidos ASC  
        ) AS iNroPos,        
        ci.cDNI,        
        ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,        
        ci.cFono,        
        ISNULL(com.cUbicacionZona,'') AS [UGT],           
        ISNULL(com.cTipoCompromiso, '') AS [COMUNIDAD],        
        ISNULL(com.cUbicacionCuenca,'') AS [DISTRITO COMUNIDAD],        
        ISNULL(gc.Gestores, '') AS [GESTOR SOCIAL],        
        ISNULL(tu.cDepartamento, '---') AS cRegionNac,        
        ISNULL(tur.cDepartamento, '---') AS cRegionDom,        
        CASE        
            WHEN ci.bRucMoq=1 THEN 'RUC'        
            WHEN ci.bTrabajoMoq=1 THEN 'TR'        
            WHEN ci.bEstudioMoq=1 THEN 'ES'        
            WHEN ci.bConviveMoq=1 THEN 'CONV'        
            WHEN ci.bCasadoMoq=1 THEN 'MA'        
            WHEN ci.bHijosMoq=1 THEN 'HI'        
            WHEN ci.bDNIMoq=1 THEN 'RE'        
            WHEN ci.cCondicion='LOCAL' THEN 'DNI'        
            WHEN ci.cCondicion='COMUNIDAD' THEN 'CO'        
            WHEN ci.cCondicion='FORANEO' THEN 'DNI'        
            ELSE ''        
        END AS cDocSustento ,        
        ci.cCapacitacion AS cCapacitado ,        
        cd.dFechaCargaCV,        
        DATEDIFF(DAY, DATEADD(DAY, 1, cm.dFechaFin), cd.dFechaCargaCV) AS iDias,        
        cd.iRanking,        
        CASE        
            WHEN ci.iEstadoVerificativa = 3 THEN CAST(1 AS bit)        
            ELSE CAST(0 AS bit)        
        END AS bVerificativa,        
        ci.bCargaBox,        
        cd.bCumplePerfil,        
        CASE        
            WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS BIT)        
            ELSE CAST(1 AS BIT)        
        END AS bCVCargado,        
        ci.bContratado,        
        cd.cEstado,        
        cd.cSeleccionado,
        cd.cRptaContrata,
		cd.cObs,
        ci.cUbigeo,        
        cm.cSubContrata  
    FROM dbo.ConvocatoriaDetalle cd        
    LEFT JOIN dbo.CandidatoInforme ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme        
    LEFT JOIN TDubigeo tu ON ci.cUbigeo = tu.cUbigeo        
   LEFT JOIN TDubigeo tur ON ci.cUbigeoResidencia = tur.cUbigeo        
    LEFT JOIN dbo.Convocatoria cv ON cd.iCodConvocatoria = cv.iCodConvocatoria        
    LEFT JOIN ConvocatoriaMain cm ON cv.iCodConvocatoriaMain = cm.iCodConvocatoriaMain        
    LEFT JOIN ConvocatoriaComunidad cvc ON cvc.iCodConvocatoria = cv.iCodConvocatoria        
    LEFT JOIN Contrata co ON cm.iCodContrata = co.iCodContrata        
    OUTER APPLY (  
        SELECT TOP 1 cond9.*        
        FROM CandidatoInformeCondicion cond9        
        WHERE cond9.iCodCandidatoInforme = ci.iCodCandidatoInforme        
        ORDER BY cond9.iCodCandidatoInformeCondicion DESC        
    ) cond        
    LEFT JOIN Comunidad com ON com.iCodComunidad = cond.iCodComunidad AND com.iCodComunidad > 1        
    LEFT JOIN Comunidad com2 ON com2.iCodComunidad = cvc.iCodComunidad AND com2.iCodComunidad > 1        
    LEFT JOIN GestoresComunidad gc ON gc.iCodComunidad = com2.iCodComunidad AND gc.iCodComunidad > 1        
    WHERE cm.iCodConvocatoriaMain = @iCodConvocatoriaMain        
      AND cd.dFechaCargaCV >= @dFechaCargaCVIni        
      AND cd.dFechaCargaCV <= @dFechaCargaCVFin        
    ORDER BY cm.cNroConvocatoria,        
        cNomContrata,        
        cSubContrata,    
        ci.cDNI,    
        cm.dFechaFin,        
        cv.cPerfil,        
        com.cComunidad;  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriasAprobadasCEDPorContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriasAprobadasCEDPorContrata]                 
@iCodContrata integer                   
AS                  
BEGIN                
   SELECT          
      t1.iCodConvocatoriaMain,              
      t1.cNroConvocatoria,                
      CONVERT(VARCHAR,t1.dFechaSolicitud,105) AS dFechaSolicitud,              
      t1.iEstado,          
      t2.cGrupoContrato + ' ' + t2.cNroContrato as cContrato,          
      t3.cNomContrata as cSubContratista,        
      ISNULL(t1.bAprobadoCED, 0) as bAprobadoCED,        
      ISNULL(t1.bAprobadoCliente, 0) as bAprobadoCliente        
   FROM dbo.ConvocatoriaMain as t1          
   LEFT JOIN dbo.Contratistacontrato t2 ON t1.iCodContratistaContrato=t2.iCodContratistaContrato          
   LEFT JOIN dbo.Contrata t3 on t3.iCodContrata=t1.iCodSubContrata  
   WHERE t1.bAprobadoCED = 1
   ORDER BY iCodConvocatoriaMain DESC
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriasAprobadasMPGPorContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriasAprobadasMPGPorContrata]                 
@iCodContrata integer                   
AS                  
BEGIN                
   SELECT          
      t1.iCodConvocatoriaMain,              
      t1.cNroConvocatoria,                
      CONVERT(VARCHAR,t1.dFechaSolicitud,105) AS dFechaSolicitud,              
      t1.iEstado,          
      t2.cGrupoContrato + ' ' + t2.cNroContrato as cContrato,          
      t3.cNomContrata as cSubContratista,        
      ISNULL(t1.bAprobadoCED, 0) as bAprobadoCED,        
      ISNULL(t1.bAprobadoCliente, 0) as bAprobadoCliente        
   FROM dbo.ConvocatoriaMain as t1          
   LEFT JOIN dbo.Contratistacontrato t2 ON t1.iCodContratistaContrato=t2.iCodContratistaContrato          
   LEFT JOIN dbo.Contrata t3 on t3.iCodContrata=t1.iCodSubContrata  
   WHERE t1.bAprobadoCED = 1
   ORDER BY iCodConvocatoriaMain DESC
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriasByCodigoMain]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriasByCodigoMain] 
@iCodConvocatoriaMain int AS
BEGIN

	SELECT c.iCodConvocatoria,
		   c.iCodConvocatoriaMain,
		   c.cMOCMONC,
		   c.cPerfil,
		   dbo.fn_RemoveHTML(c.cDesPerfil) as cDesPerfil,
		   c.iCantidad, 
		   c.bLiberado,
		   c.iExceptuado,
		   c.iLiberado,
		   c.iTotal,
		   c.bCoberturado,
		   c.dFechaLiberaExceptua,
		   c.cObs,
		   c.bSituacion,
		   cPerfil AS cPerfilActual,
		   c.bResolicitado  ,
		   isnull(cc.iCodCuestionario, 0) AS iCodCuestionario,
		   CASE
			   WHEN isnull(cc.iCodCuestionario, 0)>0 THEN cast(1 AS bit)
			   ELSE cast(0 AS bit)
		   END AS bCuestionario ,
		   c.iCodOcupacion
	FROM convocatoria c
	LEFT JOIN CuestionarioConvocatoria cc ON cc.iCodConvocatoria=c.iCodConvocatoria
	WHERE c.iCodConvocatoriaMain=@iCodConvocatoriaMain

END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriasByContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
















 


CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriasByContrata] @iCodContrata integer 
AS
SELECT   c.iCodConvocatoriaMain,
 c.iCodContrata,
case c.iTipo 
when 1 then 'REGULAR'
WHEN 2 THEN 'EXCEPTUADO'
WHEN 3 THEN 'ADICIONAL'
WHEN 4 THEN 'DISPENSADO'
WHEN 5 THEN 'MARATON'
WHEN 6 THEN 'PGI'
WHEN 9 THEN 'OTROS' 
WHEN 10 THEN 'REGULAR BBDD' 
ELSE '' END AS cTipo,
 c.cNroConvocatoria,
 ct.cNomContrata, 
 c.cSubContrata, 
 cast(c.dFechaIni as date) as dFechaIni, cast(c.dFechaFin as date) as dFechaFin, c.dFechaLimite, 
 (select count(cd0.iCodCandidatoInforme) from convocatoriadetalle cd0
inner join convocatoria c0 on cd0.iCodConvocatoria=c0.iCodConvocatoria 
inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain  
where cd0.dFechaCargaCV<>'1900-01-01' and cm0.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iCantEnviada,
  (select  count(cd1.iCodConvocatoriaDetalle) 
   from convocatoriadetalle cd1
inner join convocatoria c1 on cd1.iCodConvocatoria=c1.iCodConvocatoria 
inner join convocatoriamain cm1 on c1.iCodConvocatoriaMain=cm1.iCodConvocatoriaMain  
where cd1.dFechaContactoContrata1='1900-01-01' and cd1.dFechaCargaCV<>'1900-01-01' 
 and cm1.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iRespuestaNO , 
(select count(cd2.iCodConvocatoriaDetalle) 
   from convocatoriadetalle cd2
inner join convocatoria c2 on cd2.iCodConvocatoria=c2.iCodConvocatoria 
inner join convocatoriamain cm2 on c2.iCodConvocatoriaMain=cm2.iCodConvocatoriaMain  
where cd2.dFechaContactoContrata1<>'1900-01-01' and cd2.dFechaCargaCV<>'1900-01-01' 
 and  cm2.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iRespuestaSI ,
 c.cRutaDifusion 
 ,
 (select count(ccu.iCodCuestionario) from CuestionarioConvocatoria ccu
  where ccu.iCodConvocatoriaMain=c.iCodConvocatoriaMain  ) as iCantCuestionarios 

FROM         dbo.ConvocatoriaMain AS c 
INNER JOIN dbo.Contrata AS ct ON c.iCodContrata = ct.iCodContrata 
LEFT OUTER JOIN dbo.Convocatoria AS cd ON c.iCodConvocatoriaMain = cd.iCodConvocatoriaMain 
--LEFT JOIN ConvocatoriaDetalle cdp on cd.iCodConvocatoria=cdp.iCodConvocatoria 
					  where c.iCodContrata=@iCodContrata
GROUP BY c.iCodConvocatoriaMain, ct.cNomContrata, c.dFechaIni, c.dFechaFin, 
c.iEstado, c.iCodContrata,c.iTipo , c.cSubContrata, c.dFechaLimite,
c.cNroConvocatoria, c.cRutaDifusion 
ORDER BY c.iCodConvocatoriaMain desc 











GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriasByContrata33]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO













 


CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriasByContrata33] @iCodContrata integer 
AS
SELECT     c.iCodConvocatoriaMain,
 c.iCodContrata,
case c.iTipo 
when 1 then 'REGULAR'
WHEN 2 THEN 'EXCEPTUADO'
WHEN 3 THEN 'ADICIONAL'
WHEN 4 THEN 'DISPENSADO'
WHEN 5 THEN 'MARATON'
WHEN 6 THEN 'PGI'
WHEN 9 THEN 'OTROS' 
ELSE '' END AS cTipo,
 c.cNroConvocatoria,
 ct.cNomContrata, 
 c.cSubContrata, 
 c.dFechaIni, c.dFechaFin, c.dFechaLimite, 
 (select count(cd0.iCodCandidatoInforme) from convocatoriadetalle cd0
inner join convocatoria c0 on cd0.iCodConvocatoria=c0.iCodConvocatoria 
inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain  
where cd0.dFechaCargaCV<>'1900-01-01' and cm0.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iCantEnviada,
  (select  count(cd1.iCodConvocatoriaDetalle) 
   from convocatoriadetalle cd1
inner join convocatoria c1 on cd1.iCodConvocatoria=c1.iCodConvocatoria 
inner join convocatoriamain cm1 on c1.iCodConvocatoriaMain=cm1.iCodConvocatoriaMain  
where cd1.dFechaContactoContrata1='1900-01-01' and cd1.dFechaCargaCV<>'1900-01-01' 
 and cm1.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iRespuestaNO , 
(select count(cd2.iCodConvocatoriaDetalle) 
   from convocatoriadetalle cd2
inner join convocatoria c2 on cd2.iCodConvocatoria=c2.iCodConvocatoria 
inner join convocatoriamain cm2 on c2.iCodConvocatoriaMain=cm2.iCodConvocatoriaMain  
where cd2.dFechaContactoContrata1<>'1900-01-01' and  cm2.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iRespuestaSI 


FROM         dbo.ConvocatoriaMain AS c 
INNER JOIN dbo.Contrata AS ct ON c.iCodContrata = ct.iCodContrata 
LEFT OUTER JOIN dbo.Convocatoria AS cd ON c.iCodConvocatoriaMain = cd.iCodConvocatoriaMain 
LEFT JOIN ConvocatoriaDetalle cdp on cd.iCodConvocatoria=cdp.iCodConvocatoria 
					  where c.iCodContrata=@iCodContrata
GROUP BY c.iCodConvocatoriaMain, ct.cNomContrata, c.dFechaIni, c.dFechaFin, c.iEstado, c.iCodContrata,c.iTipo , c.cSubContrata, c.dFechaLimite,c.cNroConvocatoria
ORDER BY c.iCodConvocatoriaMain desc 








GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriasComunidades]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriasComunidades] 
	@iCodConvocatoria int,   
	@iCodConvocatoriaMain int
AS
BEGIN

	SELECT	cc.iCodConvocatoriaComunidad,
	        cc.iCodComunidad,
			cc.cComunidad,
			cc.iCantidad
	FROM Convocatoria AS c
	LEFT JOIN ConvocatoriaMain cm ON cm.iCodConvocatoriaMain=c.iCodConvocatoriaMain
	LEFT JOIN ConvocatoriaComunidad cc ON cc.iCodConvocatoria=c.iCodConvocatoria
	WHERE c.iCodConvocatoria=@iCodConvocatoria
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriasPendientesClientePorContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriasPendientesClientePorContrata]                 
@iCodContrata integer                   
AS                  
BEGIN                
   SELECT          
      t1.iCodConvocatoriaMain,              
      t1.cNroConvocatoria,                
      CONVERT(VARCHAR,t1.dFechaSolicitud,105) AS dFechaSolicitud,              
      t1.iEstado,          
      t2.cGrupoContrato + ' ' + t2.cNroContrato as cContrato,          
      t3.cNomContrata as cSubContratista,        
      ISNULL(t1.bAprobadoCED, 0) as bAprobadoCED,        
      ISNULL(t1.bAprobadoCliente, 0) as bAprobadoCliente        
   FROM dbo.ConvocatoriaMain as t1          
   LEFT JOIN dbo.Contratistacontrato t2 ON t1.iCodContratistaContrato=t2.iCodContratistaContrato          
   LEFT JOIN dbo.Contrata t3 on t3.iCodContrata=t1.iCodSubContrata  
   WHERE t1.bAprobadoCED = 1 AND t1.iEstado=6 
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriasPorContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriasPorContrata]                   
@iCodContrata integer                     
AS                    
BEGIN    
  
    SELECT             
     t1.iCodConvocatoriaMain,                
     t1.cNroConvocatoria,                  
     CONVERT(VARCHAR,t1.dFechaSolicitud,105) AS dFechaSolicitud,
     CONVERT(VARCHAR,t1.dFechaIni,105) AS dFechaIni,
     CONVERT(VARCHAR,t1.dFechaFin,105) AS dFechaFin,                
     CONVERT(VARCHAR,t1.dFechaLimite,105) AS dFechaLimite,               
     t1.iEstado,            
     t2.cGrupoContrato + ' ' + t2.cNroContrato as cContrato,   
     CASE t3.iCodContrata   
     WHEN @iCodContrata THEN '-'  
     ELSE t3.cNomContrata END as cSubContratista,
     ISNULL(t1.bAprobadoCED, 0) as bAprobadoCED,          
     ISNULL(t1.bAprobadoCliente, 0) as bAprobadoCliente          
    FROM dbo.ConvocatoriaMain as t1            
    LEFT JOIN dbo.Contratistacontrato t2 ON t1.iCodContratistaContrato=t2.iCodContratistaContrato            
    LEFT JOIN dbo.Contrata t3 on t3.iCodContrata=t1.iCodSubContrata  
    where t1.iCodContrata=@iCodContrata  
    ORDER BY t1.iCodConvocatoriaMain DESC   
     
END  
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ConvocatoriasPorConvocatoriaMain]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ConvocatoriasPorConvocatoriaMain]         
@iCodConvocatoriaMain integer           
AS          
BEGIN        
  SELECT T1.iCodConvocatoria,        
   T1.cPerfil,        
   T1.cMOCMONC,      
   T1.iCantidad,    
     CASE T1.iEstado  
   WHEN 0 THEN 'PROCESO'  
   WHEN 1 THEN 'ENVIADO'  
   WHEN 2 THEN 'APROBADO'  
   WHEN 3 THEN 'RECHAZADO'  
   WHEN 4 THEN 'OBSERVADO'  
   END  AS cEstado  
  FROM dbo.Convocatoria as T1      
  LEFT JOIN dbo.ConvocatoriaMain as T2 ON T2.iCodConvocatoriaMain=T1.iCodConvocatoriaMain    
   WHERE T1.iCodConvocatoriaMain=@iCodConvocatoriaMain     
  

  --  SELECT T1.iCodConvocatoria,        
  -- T1.cPerfil,        
  -- T1.cMOCMONC,      
  -- T1.iCantidad,    
  -- T3.cDisplayMember AS 'cTipoObra',    
  -- T1.iPeriodoContrataMeses,    
  -- T4.cDisplayMember AS cGenero,  
  -- CASE T1.iEstado  
  -- WHEN 0 THEN 'PROCESO'  
  -- WHEN 1 THEN 'ENVIADO'  
  -- WHEN 2 THEN 'APROBADO'  
  -- WHEN 3 THEN 'RECHAZADO'  
  -- WHEN 4 THEN 'OBSERVADO'  
  -- END  AS cEstado  
  --FROM dbo.Convocatoria as T1      
  --LEFT JOIN dbo.ConvocatoriaMain as T2 ON T2.iCodConvocatoriaMain=T1.iCodConvocatoriaMain    
  --LEFT JOIN dbo.TDCatalogo T3 ON T3.cTabla='Convocatoria' AND T3.cNombreGrupo='TipoObra'AND T1.iTipoObra= T3.cValueMember    
  --LEFT JOIN dbo.TDCatalogo T4 ON T4.cTabla='Convocatoria' AND T4.cNombreGrupo='Genero'AND T1.cGenero= T4.cValueMember    
  --WHERE T1.iCodConvocatoriaMain=@iCodConvocatoriaMain      
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_Cuestionario]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO














 


CREATE PROCEDURE [dbo].[SP_DT_Cuestionario] 
AS
 
 select iCodCuestionario, cNombre,
cTipoCuestionario,cTipoProceso ,cModalidad 
from cuestionario  
 
  







GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CuestionarioListaPreguntas]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO















 


CREATE PROCEDURE [dbo].[SP_DT_CuestionarioListaPreguntas]  @iCodCuestionario int 
AS
 
 select  
  cp.iCodCuestionarioPreguntas,
  cp.cPregunta ,
  count(cpo.iCodCuestionarioPreguntasOpciones) as iCantOpciones 
  

  from CuestionarioPreguntas cp 
  left join CuestionarioPreguntasOpciones cpo on cpo.iCodCuestionarioPreguntas=cp.iCodCuestionarioPreguntas 
 where cp.iCodCuestionario=@iCodCuestionario  
  group by cp.iCodCuestionarioPreguntas,
  cp.cPregunta 
order by cp.iCodCuestionarioPreguntas asc
--,cpo.iOrden asc  







GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CuestionarioPorGrupo]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO














 


CREATE PROCEDURE [dbo].[SP_DT_CuestionarioPorGrupo]  @cTipoProceso as varchar(15) ,
													@iCodCuestionario as int,
													@iCodOcupacion as int
AS
 
 select c.iCodCuestionario,c.cTipoCuestionario, c.cNombre,
c.cTipoProceso ,c.cModalidad ,
count(cconv.iCodCuestionarioConvocatoria) as iCantConv,
count(ccap.iCodCuestionarioCapacitacion) as iCantCap 
--isnull(cconv.iCodCuestionarioConvocatoria,0) as iCodCuestionarioConvocatoria ,
--isnull(ccap.iCodCuestionarioCapacitacion ,0) as  iCodCuestionarioCapacitacion
from cuestionario  c 
left join CuestionarioConvocatoria cconv on cconv.iCodCuestionario=c.iCodCuestionario  
left join CuestionarioCapacitacion ccap on ccap.iCodCuestionario=c.iCodCuestionario  
left join Convocatoria cv on cv.iCodConvocatoria=cconv.iCodConvocatoria 
where 
cTipoProceso=@cTipoProceso 
 and (0=@iCodCuestionario or c.iCodCuestionario=@iCodCuestionario)  
 and (0=@iCodOcupacion or cv.iCodOcupacion=@iCodOcupacion)  
  group by c.iCodCuestionario,c.cTipoCuestionario, c.cNombre,
c.cTipoProceso ,c.cModalidad 
  







GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CuestionarioPreguntasOpciones]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO















 


CREATE PROCEDURE [dbo].[SP_DT_CuestionarioPreguntasOpciones]  @iCodCuestionario int 
AS
 
 select  
  cp.iCodCuestionarioPreguntas,
  cp.cPregunta ,
  cpo.iCalificaDescalifica ,
  cpo.cDescripcion,
  cpo.nPuntaje 
  

  from CuestionarioPreguntas cp 
  inner join CuestionarioPreguntasOpciones cpo on cpo.iCodCuestionarioPreguntas=cp.iCodCuestionarioPreguntas 
  where cp.iCodCuestionario=@iCodCuestionario  
  order by cp.iCodCuestionarioPreguntas asc,cpo.iOrden asc  







GO
/****** Object:  StoredProcedure [dbo].[SP_DT_CuestionarioPreguntasOpcionesMigrar]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[SP_DT_CuestionarioPreguntasOpcionesMigrar] 
 @iCodCuestionario int 
AS
BEGIN

	 select
c.iCodCuestionario,
c.cNombre ,
c.bFechaConLimite ,
c.dFechaInicio ,
c.dFechaTermino ,
c.cEstado ,
c.nPuntajeMinimoAprobatorio ,
c.cDetalleCuestionario ,
c.cTipoCuestionario ,
c.cTipoProceso ,
c.cModalidad ,
c.iTiempoMinutos ,
c.bEditable ,
cp.iCodCuestionarioPreguntas,
cp.cPregunta ,
cp.nPuntaje ,
cp.iEstado ,
cp.cTipoPregunta ,
cp.cTipoLista ,
cp.cTipoVista ,
cp.bMultiple ,
cp.bAleatorio ,
cpo.iCodCuestionarioPreguntasOpciones,
cpo.cDescripcion,
cpo.iOrden,
cpo.nPuntaje,
cpo.iCalificaDescalifica 
 
 from cuestionario c 
 inner join cuestionariopreguntas cp on cp.iCodcuestionario=c.iCodCuestionario 
 inner join CuestionarioPreguntasOpciones cpo on cpo.iCodCuestionarioPreguntas=cp.icodcuestionariopreguntas  
 where c.iCodCuestionario=@iCodCuestionario   
 order by c.iCodCuestionario,cp.iCodCuestionarioPreguntas ,cpo.iCodCuestionarioPreguntasOpciones 
END



GO
/****** Object:  StoredProcedure [dbo].[SP_DT_EvaluacionArbolCombinacion]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_EvaluacionArbolCombinacion](
	@iCodArbolPos INT,
	@iCodArbolNeg INT
)
AS
BEGIN 	
	SET NOCOUNT ON 
	IF EXISTS (SELECT TOP 1 1 FROM EvaluacionArbolCombinacion WHERE iCodArbolPos = @iCodArbolPos and iCodArbolNeg = @iCodArbolNeg)			
	    SELECT cast(ca.iCodEvaluacionArbolCombinacion as varchar) as iCodEvaluacionArbolCombinacion 
		--cast(ca.iCodArbolPos as varchar) as iCodArbolPos,cast(ca.iCodArbolNeg as varchar)as iCodArbolNeg,ca.cAptitud
		FROM dbo.EvaluacionArbolCombinacion AS ca 	
 		where ca.iCodArbolPos = @iCodArbolPos and ca.iCodArbolNeg = @iCodArbolNeg		
	ELSE	
	    SELECT '0' as iCodEvaluacionArbolCombinacion, 
		cast(@iCodArbolPos as varchar) as iCodArbolPos --,cast(@iCodArbolNeg as varchar)as iCodArbolNeg,'Apto Capacitable' as cAptitud
		--FROM dbo.EvaluacionArbolCombinacion AS ca 	
 	--	where ca.iCodArbolPos = @iCodArbolPos and ca.iCodArbolNeg = @iCodArbolNeg
END;
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GeCandidatoInforme]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_GeCandidatoInforme] (
	@iCodCandidatoInforme int 
)
AS
BEGIN
	SELECT ci.iCodCandidatoInforme,ci.cDNI,ci.cUbigeo,ci.cApellidos,ci.cNombres,ci.cSexo,ci.cEstCivil,ci.cFono,ci.cCorreo,ci.dFechaNac,ci.cCUI,
    ci.cDireccion,ci.cCondicion,ci.cPuestoEspecialidad,ci.cOcupacion,ci.cOcupacion2,ci.cEducaSecundaria,ci.cEducaTecnica,ci.cEducaSuperior,ci.cExpLaboral,
    ci.cEmprEx1,ci.cCargoEx1,ci.dFechaIniEx1,ci.dFechaFinEx1,ci.cEmprEx2,ci.cCargoEx2,ci.dFechaIniEx2,ci.dFechaFinEx2,ci.cComunidad,ci.cMOCMONC,
    ci.cObservacion,ci.cAptitud,ci.cUbigeoResidencia,ci.dFechaDisponible,ci.cCapacitacion,ci.cLicenciaConducir,ci.cCertificacion,ci.iPAsertividad,
    ci.iPTrabajoEquipo,ci.iPComEfectiva,ci.iPAdaptabilidad,ci.iEEstable,ci.iEInestable,ci.iCCompromiso,ci.iSRptoNorma,ci.iSIperC,ci.iSActitud,
    ci.dFechaRegistro,ci.iCodUsuarioRegistra,ci.dFechaEvaluacion,ci.bEvaluado,ci.dFechaVerificativa,ci.bVerificativa,ci.iEstadoVerificativa,
    ci.iResultadoVerificativa,ci.dFechaCargaBox,ci.bSustentoCV,ci.bContratado,ci.bCargaBox,ci.bDNIMoq,ci.bCasadoMoq,ci.bConviveMoq,ci.bHijosmoq,
    ci.bRucMoq,ci.bEstudioMoq,ci.bTrabajoMoq, ci.cTipoDoc,ci.iTipoIngreso,ci.cPaisNacimiento,ci.iTiempoExperiencia,ci.cDNIConyuge,ci.cUbigeoConyuge,
    ci.cApellidosConyuge,ci.cNombresConyuge,ci.cDNIHijo,ci.cUbigeoHijo,ci.cApellidosHijo,ci.cNombresHijo,ci.bComunidadPadron,ci.bComunidadConstancia,
    ci.bCip,ci.bCumplePefil,ci.bDisponible,ci.dFechaEmisionDni,ci.cEmpresaTrabaja,ci.dFechaEvaluacionResultado,ci.iCodPersonaEvalua,ci.bDiscapacitado,
    ci.bPrioritario,ci.iCodUsuario,ci.dFechaSis,isnull(ca.cPresentacionPerfil,'') as cPresentacionPerfil
    FROM CandidatoInforme as ci
    left join  CandidatoInformeAdd as ca on ca.iCodCandidatoInforme = ci.iCodCandidatoInforme
    WHERE ci.iCodCandidatoInforme =@iCodCandidatoInforme;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetAnexoAdmisionDetalle]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











CREATE PROCEDURE [dbo].[SP_DT_GetAnexoAdmisionDetalle] @iCodAnexoAdmision int  
AS
select ad.iCodAnexoAdmisionDetalle,ad.cProcesoEtapa, ci.cApellidos + ' '+ci.cNombres as cNomCompleto,
ci.cTipoDoc, ci.cDNI,
isnull(adt.cResumen,'') as cModIngreso ,ci.cSexo,
ad.cCargo,ad.iCodSubContrata , ad.cMOCMONC, 
case ci.bSustentoCV
when 1 then
	case 
	when bRucMoq=1 then 'RUC'
	 when bTrabajoMoq=1 then 'TR' 
	  when bEstudioMoq=1 then 'ES'
	 when bConviveMoq=1 then 'CONV'  
	when bCasadoMoq=1 then 'MA' 
	  when bHijosMoq=1 then 'HI' 
	 when bDNIMoq=1 then 'RE' 

	 when cCondicion='LOCAL' then 'DNI'    
	  when cCondicion='COMUNIDAD' then 'CO'    
	 when cCondicion='FORANEO' then 'DNI' end 
 else 'DNI' end
 as cDocSustento,
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as  cCondicion,
 ad.cNota,
ad.cObs,ad.bAnulado,ad.bNuevo, ad.iCodCandidatoInforme ,
  case ci.bSustentoCV 
 when 1 then 'SI' 
 when 0 then 'NO' 
 end as Doc,
 ad.iCodAnexoAdmisionTipo 
from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme  
left join AnexoAdmisionTipo adt on ad.iCodAnexoAdmisionTipo=adt.iCodAnexoAdmisionTipo 
where ad.iCodAnexoAdmision=@iCodAnexoAdmision 
order by cNomCompleto 




GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetAnexoAdmisionDetalleDesktop]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











CREATE PROCEDURE [dbo].[SP_DT_GetAnexoAdmisionDetalleDesktop] @iCodAnexoAdmision int  
AS
select ad.iCodAnexoAdmisionDetalle,ad.cProcesoEtapa, ci.cApellidos + ' '+ci.cNombres as cNomCompleto,
ci.cTipoDoc, ci.cDNI,
isnull(adt.cResumen,'') as cModIngreso ,ci.cSexo,
ad.cCargo,ad.iCodSubContrata , ad.cMOCMONC, 
case ci.bSustentoCV
when 1 then
	case 
	when bRucMoq=1 then 'RUC'
	 when bTrabajoMoq=1 then 'TR' 
	  when bEstudioMoq=1 then 'ES'
	 when bConviveMoq=1 then 'CONV'  
	when bCasadoMoq=1 then 'MA' 
	  when bHijosMoq=1 then 'HI' 
	 when bDNIMoq=1 then 'RE' 

	 when cCondicion='LOCAL' then 'DNI'    
	  when cCondicion='COMUNIDAD' then 'CO'    
	 when cCondicion='FORANEO' then 'DNI' end 
 else 'DNI' end
 as cDocSustento,
 case ci.cCondicion 
		when 'LOCAL' then 'L' 
		when 'RESIDENTE' then 'L' 
		when 'COMUNIDAD' then 'L' 
		when 'FORANEO' then 'F' 
		else 'F' 
 end  as cCondicionReg  ,
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as  cCondicion,
 ad.cNota,
ad.cObs,ad.bAnulado,ad.bNuevo, ad.iCodCandidatoInforme ,
  case ci.bSustentoCV 
 when 1 then 'SI' 
 when 0 then 'NO' 
 end as Doc,
 ad.iCodAnexoAdmisionTipo 

from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme  
left join AnexoAdmisionTipo adt on ad.iCodAnexoAdmisionTipo=adt.iCodAnexoAdmisionTipo 
where ad.iCodAnexoAdmision=@iCodAnexoAdmision 
order by cNomCompleto 




GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetAnexoDetalleByCodigoCI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











CREATE PROCEDURE [dbo].[SP_DT_GetAnexoDetalleByCodigoCI] @iCodCandidatoInforme int   
AS
select
 coa.cNomCorto as cEmpresa,
case 
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(co.cNomCorto,'') 
end as cSubContrata, 
(FORMAT( aa.iCorrelativo  ,'0000') + '-' + cast(aa.iPeriodo as varchar(4))) AS cNroAnexo,
case when aa.dFechaAprobacion='1900-01-01' then '' 
else CONVERT(varchar,aa.dFechaAprobacion,103) end as 
dFechaSolicitud,
ad.cCargo,
ad.cMOCMONC, 
ci.cCondicion,
case ad.cProcesoEtapa 
when 'P' then 'PROCESO' 
when 'O' then 'PROCESO' 
when 'A' then 'APROBADO' 
when 'R' then 'RECHAZADO' 
else '-'
end as cEstado
, ad.bAnulado ,
ad.iCodAnexoAdmisionDetalle 
from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join AnexoAdmision aa on ad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
inner join contrata coa on aa.iCodContrata=coa.iCodContrata
left join contrata co on ad.iCodSubContrata=co.iCodContrata  
where ci.iCodCandidatoInforme=@iCodCandidatoInforme 
order by ad.iCodAnexoAdmisionDetalle desc 














GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetAnexoDetalleByDNI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








CREATE PROCEDURE [dbo].[SP_DT_GetAnexoDetalleByDNI] @cDNI varchar(15)  
AS
select coa.cNomCorto as cEmpresa,aa.dFechaSolicitud,
ad.cCargo,isnull(co.cNomCorto,'') as cSubContrata, ad.cMOCMONC, 
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as  cCondicion,
case ad.cProcesoEtapa 
when 'P' then 'PROCESO' 
when 'O' then 'PROCESO' 
when 'A' then 'APROBADO' 
when 'R' then 'RECHAZADO' 
else '-'
end as cEstado
,case ad.bAnulado 
when 0 then 'NO' 
when 1 then 'SI' end as cAnulado 
from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join AnexoAdmision aa on ad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
inner join contrata coa on aa.iCodContrata=coa.iCodContrata
left join contrata co on ad.iCodSubContrata=co.iCodContrata  
where ci.cDNI=@cDNI 
 











GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetConvocatoriasFormato]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_GetConvocatoriasFormato]           
@iCodConvocatoriaMain int           
AS           
BEGIN          
  SELECT co.iCodConvocatoriaMain,  
      ISNULL(ct.cNomContrata, '') AS cNomContrata,  
      CASE  
       WHEN co.iCodContrata <> co.iCodSubContrata THEN sct.cNomContrata  
       ELSE ''  
      END AS cNomSubContrata,  
      cto.cNroContrato,  
      cto.cZona,  
      co.cNroConvocatoria,  
      CONVERT(VARCHAR, co.dFechaSolicitud, 103) AS dFechaSolicitud,  
      CONVERT(VARCHAR, co.dFechaIni, 103) AS dFechaIni,  
      CONVERT(VARCHAR, co.dFechaFin, 103) AS dFechaFin,  
      cSolicitante,  
      c.iCantidad,  
      c.cMOCMONC AS cMOCMONC,  
      c.cPerfil AS cPerfil,  
      (c.iCantidad - c.iExceptuado) AS iTotalForm,  
      c.iTotal,  
      dbo.fn_RemoveHTML(c.cDesPerfil) AS cDesPerfil,  
      c.iBandaSalarialMin,  
      CONVERT(VARCHAR(20), CAST(c.iBandaSalarialMax AS DECIMAL(15,2))) AS iSueldo,  
      cat.cDisplayMember AS cRegimenLaboral,  
      c.iPeriodoContrataMeses,  
      CONVERT(VARCHAR, c.dFechaEstimadaIngreso, 103) AS dFechaEstimadaIngreso,  
      c.cHorarioLaboral,  
      c.cRotacion,  
      c.cObs  
  FROM dbo.ConvocatoriaMain AS co  
  INNER JOIN dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain  
  INNER JOIN dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata  
  LEFT JOIN dbo.Contrata sct ON sct.iCodContrata = co.iCodSubContrata  
  LEFT JOIN dbo.ContratistaContrato cto ON cto.iCodContratistaContrato = co.iCodContratistaContrato
  LEFT JOIN dbo.TDCatalogo cat ON cat.cValueMember=c.cRegimenLaboral AND cat.cTabla='FuerzaLaboralDetalle'
  AND cat.cNombreGrupo='RegimenLaboral'
  WHERE co.iCodConvocatoriaMain = @iCodConvocatoriaMain  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetConvocatoriasVigentes]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











CREATE PROCEDURE [dbo].[SP_DT_GetConvocatoriasVigentes] @dFechaFin date 
AS
SELECT co.iCodConvocatoriaMain, 
co.iCodContrata,
  ct.cNomContrata, co.cSubContrata, 
  c.cPerfil, c.iCantidad ,c.cMOCMONC ,c.cDesPerfil ,co.dFechaFin,c.iCodConvocatoria 
FROM dbo.ConvocatoriaMain AS co INNER JOIN
 dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain INNER JOIN
 dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata 
  where co.dFechaFin>=cast(GETDATE() as date) 
 and co.iTipo in(1,3)  and c.bCoberturado=0 












GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetConvocatoriasVigentesAll]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO













CREATE PROCEDURE [dbo].[SP_DT_GetConvocatoriasVigentesAll] @dFechaFin date 
AS
--PARA ANDROID SE USA
select 
co.iCodConvocatoriaMain, 
co.iCodContrata,
 -- ct.cNomContrata
  ct.cNomContrata + (
							case 
							when co.iCodContrata<>co.iCodSubContrata then ' - ' + isnull(sct.cNomContrata,'') 
							else '' end 
							) as cNomContrata
  , co.cSubContrata, 
  c.cPerfil, (c.iCantidad - c.iExceptuado) as iCantidad
  ,c.cMOCMONC ,
  case 
  when isnull(cuvo.iCodCuestionarioConvocatoria,0)>0 then 'Solo puede postular al siguiente perfil desde la pagina https://mipostulacion.pe '
  else   c.cDesPerfil  end as cDesPerfil 
  ,
  convert(varchar(35), co.dFechaFin, 103) as dFechaFin
  ,c.iCodConvocatoria 
  --,cuvo.iCodCuestionarioConvocatoria 
FROM dbo.ConvocatoriaMain AS co INNER JOIN
 dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain INNER JOIN
 dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata 
  left join dbo.Contrata sct on sct.iCodContrata=co.iCodSubContrata   
  left join CuestionarioConvocatoria cuvo on cuvo.iCodConvocatoria=c.iCodConvocatoria  
  where 
  co.dFechaFin>=cast(GETDATE() as date) 
	 AND 
	 co.iTipo in(1,3,5)   and c.bCoberturado=0  
	 AND co.iEstado=5 
  AND (c.iCantidad - c.iExceptuado)>0 
  and cuvo.iCodCuestionarioConvocatoria is null 
  and co.iCodContrata<>127  
  --co.dFechaFin>=@dFechaFin
 -- and co.iTipo=1  and c.bCoberturado=0 
















GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetConvocatoriasVigentesWeb]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[SP_DT_GetConvocatoriasVigentesWeb] 
@iPagina int,  
@iPaginaTamano int,
@iCodContrata int  
AS
BEGIN

	--DECLARE @iPagina int=1  
 --   DECLARE @iPaginaTamano int=10 

	DECLARE @TOTAL INT = (  SELECT COUNT(c.iCodConvocatoria) 
							FROM dbo.ConvocatoriaMain AS co 
							INNER JOIN dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain 
							INNER JOIN dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata 
							WHERE co.dFechaFin>=cast(GETDATE() as date) 
							AND co.iTipo in(1,3,5,8,11,12)    and c.bCoberturado=0 
							AND co.iEstado=5  AND ( ct.iCodContrata = @iCodContrata OR 0=@iCodContrata)
						  )

	SELECT	iCodConvocatoriaMain, 
			iCodContrata,
			cNomContrata, 
			cSubContrata, 
			cPerfil, 
			iCantidad,
			cMOCMONC,
			cDesPerfil,
			dFechaFin,
			dFechaFinString,
			iCodConvocatoria,
			@TOTAL 
	FROM (
			SELECT			co.iCodConvocatoriaMain, 
							co.iCodContrata,
							ct.cNomContrata + (
							case 
							when co.iCodContrata<>co.iCodSubContrata then ' <br> <div style="font-size:0.9em;">SUB CONTRATA : ' + isnull(sct.cNomContrata,'')+'</div> '
							else '' end 
							) as cNomContrata, 
							co.cSubContrata,--isnull(sct.cNomContrata,'') as cSubContrata, 
							c.cPerfil, 
							c.iCantidad,
							c.cMOCMONC,
							c.cDesPerfil,
							co.dFechaFin,
							CONVERT(varchar,co.dFechaFin,105) as dFechaFinString,
							c.iCodConvocatoria,
							ROW_NUMBER() OVER(ORDER BY c.iCodConvocatoria desc) Row 
			FROM dbo.ConvocatoriaMain AS co 
			INNER JOIN dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain 
			INNER JOIN dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata 
			 left join dbo.Contrata sct on sct.iCodContrata=co.iCodSubContrata   
			WHERE co.dFechaFin>=cast(GETDATE() as date) 
			AND co.iTipo in(1,3,5,8,11,12)    and c.bCoberturado=0 
			AND co.iEstado=5  
			AND ( ct.iCodContrata = @iCodContrata OR 0=@iCodContrata)
			
	)Tabla
	WHERE Row > (@iPagina - 1) * @iPaginaTamano and Row <= (@iPagina - 1) * @iPaginaTamano + @iPaginaTamano  

END



GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetConvocatoriasVigentesWeb_old]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[SP_DT_GetConvocatoriasVigentesWeb_old] 
@iPagina int,  
@iPaginaTamano int 
AS
BEGIN

	--DECLARE @iPagina int=1  
 --   DECLARE @iPaginaTamano int=10 

	DECLARE @TOTAL INT = (  SELECT COUNT(c.iCodConvocatoria) 
							FROM dbo.ConvocatoriaMain AS co 
							INNER JOIN dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain 
							INNER JOIN dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata 
							WHERE co.dFechaFin>=cast(GETDATE() as date) 
							AND co.iTipo=1    and c.bCoberturado=0  
						  )

	SELECT	iCodConvocatoriaMain, 
			iCodContrata,
			cNomContrata, 
			cSubContrata, 
			cPerfil, 
			iCantidad,
			cMOCMONC,
			cDesPerfil,
			dFechaFin,
			dFechaFinString,
			iCodConvocatoria,
			@TOTAL 
	FROM (
			SELECT			co.iCodConvocatoriaMain, 
							co.iCodContrata,
							ct.cNomContrata, 
							co.cSubContrata, 
							c.cPerfil, 
							c.iCantidad,
							c.cMOCMONC,
							c.cDesPerfil,
							co.dFechaFin,
							CONVERT(varchar,co.dFechaFin,105) as dFechaFinString,
							c.iCodConvocatoria,
							ROW_NUMBER() OVER(ORDER BY c.iCodConvocatoria desc) Row 
			FROM dbo.ConvocatoriaMain AS co 
			INNER JOIN dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain 
			INNER JOIN dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata 
			WHERE co.dFechaFin>=cast(GETDATE() as date) 
			AND co.iTipo=1   and c.bCoberturado=0 
			--AND ( ct.iCodContrata = @iCodContrata OR 0=@iCodContrata)
			
	)Tabla
	WHERE Row > (@iPagina - 1) * @iPaginaTamano and Row <= (@iPagina - 1) * @iPaginaTamano + @iPaginaTamano  

END



GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetConvocatoriasVigentesWebContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_GetConvocatoriasVigentesWebContrata]    
AS  
BEGIN

	 DECLARE @TOTAL INT = (SELECT COUNT(c.iCodConvocatoria)   
		   FROM dbo.ConvocatoriaMain AS co   
		   INNER JOIN dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain   
		   INNER JOIN dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata   
		   --WHERE co.dFechaFin>=cast(GETDATE() as date)   
		   WHERE co.dFechaLimite>=cast(GETDATE() as date)   
		   AND co.iTipo in(1,3,5,8,11,12)   
		   AND (c.iCantidad - c.iExceptuado) > 0    
		   and co.iEstado=5  and c.bCoberturado = 0  --AND ( ct.iCodContrata = @iCodContrata OR 0=@iCodContrata)  
			);  
  
	 SELECT co.iCodContrata,
			ct.cNomContrata,  
			( SELECT COUNT(c.iCodConvocatoria)   
			 FROM dbo.ConvocatoriaMain AS con   
			 INNER JOIN dbo.Convocatoria AS c ON con.iCodConvocatoriaMain = c.iCodConvocatoriaMain   
			 INNER JOIN dbo.Contrata AS ct ON con.iCodContrata = ct.iCodContrata   
			 --WHERE con.dFechaFin>=cast(GETDATE() as date)   
			 WHERE con.dFechaLimite>=cast(GETDATE() as date)   
			 AND con.iTipo in(1,3,5,8,11,12) and con.iEstado=5  and c.bCoberturado=0  
			 AND (c.iCantidad - c.iExceptuado)>0   
			 AND ( ct.iCodContrata = co.iCodContrata OR 0 = co.iCodContrata)  
			)as [iNumPuestos],  
			@TOTAL as [cVigentes],ct.cContacto2 as [cCodContrata],co.iTipo AS [iTipo]  
	 FROM dbo.ConvocatoriaMain AS co   
	 INNER JOIN dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain   
	 INNER JOIN dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata   
	 --WHERE co.dFechaFin>=cast(GETDATE() as date)   
	 WHERE co.dFechaLimite>=cast(GETDATE() as date)   
	 AND co.iTipo in(1,3,5,8,11,12) and co.iEstado=5 and c.bCoberturado=0    
	 and (c.iCantidad - c.iExceptuado)>0   
	 --and iNumPuestos>0   
	 GROUP BY co.iCodContrata,ct.cNomContrata ,ct.cContacto2,co.iTipo  
	 ORDER BY ct.cNomContrata

END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetConvocatoriasVigentesWebContrata_New]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_GetConvocatoriasVigentesWebContrata_New]  
AS
BEGIN
	DECLARE @TOTAL INT = (SELECT COUNT(c.iCodConvocatoria) 
							FROM dbo.ConvocatoriaMain AS co 
							INNER JOIN dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain 
							INNER JOIN dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata 
							WHERE co.dFechaFin>=cast(GETDATE() as date) 
							AND co.iTipo in(1,3,5,8,11,12) 
							AND (c.iCantidad - c.iExceptuado) > 0  
							and co.iEstado=5  and c.bCoberturado = 0  --AND ( ct.iCodContrata = @iCodContrata OR 0=@iCodContrata)
						  );

	SELECT co.iCodContrata,ct.cNomContrata,
		( SELECT COUNT(c.iCodConvocatoria) 
			FROM dbo.ConvocatoriaMain AS con 
			INNER JOIN dbo.Convocatoria AS c ON con.iCodConvocatoriaMain = c.iCodConvocatoriaMain 
			INNER JOIN dbo.Contrata AS ct ON con.iCodContrata = ct.iCodContrata 
			WHERE con.dFechaFin>=cast(GETDATE() as date) 
			AND con.iTipo in(1,3,5,8,11,12) and con.iEstado=5  and c.bCoberturado=0
			AND (c.iCantidad - c.iExceptuado)>0 
			AND ( ct.iCodContrata = co.iCodContrata OR 0 = co.iCodContrata)
		)as [iNumPuestos],
	@TOTAL as [cVigentes],ct.cContacto2 as [cCodContrata],co.iTipo AS [iTipo]
	FROM dbo.ConvocatoriaMain AS co 
	INNER JOIN dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain 
	INNER JOIN dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata 
	WHERE co.dFechaFin>=cast(GETDATE() as date) 
	AND co.iTipo in(1,3,5,8,11,12) and co.iEstado=5 and c.bCoberturado=0  
	GROUP BY co.iCodContrata,ct.cNomContrata ,ct.cContacto2,co.iTipo
	ORDER BY ct.cNomContrata
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetConvocatoriasVigentesWebListar]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_GetConvocatoriasVigentesWebListar]   
 @iPagina int,    
 @iPaginaTamano int,  
 @iCodContrata int    
AS  
BEGIN  
 DECLARE @TOTAL INT = (  SELECT COUNT(c.iCodConvocatoria)   
       FROM dbo.ConvocatoriaMain AS co   
       INNER JOIN dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain   
       INNER JOIN dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata   
       --WHERE co.dFechaFin>=cast(GETDATE() as date)   
       WHERE co.dFechaLimite>=cast(GETDATE() as date)   
       AND co.iTipo in(1,3,5,8,11,12)    and c.bCoberturado=0   
       AND co.iEstado=5  AND ( ct.iCodContrata = @iCodContrata OR 0=@iCodContrata)   
       AND (c.iCantidad - c.iExceptuado)>0   
        )
		
 SELECT iCodConvocatoriaMain,   
   iCodContrata,  
   cNomContrata,   
   cSubContrata,   
   cPerfil,   
   iCantidad,  
   cMOCMONC,  
   cDesPerfil,     
   dFechaFin,  
   dFechaIniString,  
   dFechaFinString,  
   iCodConvocatoria,  
   @TOTAL as cVigentes,  
   isnull(DATEDIFF (DAY, cast(GETDATE() as date) , dFechaFin ),0)+1  
    as [iDiasTermino],iTipo     
 FROM (  
		   SELECT   co.iCodConvocatoriaMain,   
					co.iCodContrata,         
					ct.cNomContrata as cNomContrata,         
					--co.cSubContrata,         
					--isnull(sct.cNomContrata,'') as cSubContrata,   
					isnull(case when co.iCodContrata <> co.iCodSubContrata then concat('<b>Sub EECC: </b>',isnull(sct.cNomContrata,'')) end,'') as cSubContrata,  
					c.cPerfil,   
					(c.iCantidad - c.iExceptuado) as iCantidad,  
					c.cMOCMONC,  
					c.cDesPerfil,  
					co.dFechaFin,  
					CONVERT(varchar,co.dFechaIni,104) as dFechaIniString,  
					CONVERT(varchar,co.dFechaFin,104) as dFechaFinString,  
					c.iCodConvocatoria,co.iTipo,  
					ROW_NUMBER() OVER(ORDER BY c.iCodConvocatoria desc) Row   
		   FROM dbo.ConvocatoriaMain AS co   
		   INNER JOIN dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain   
		   INNER JOIN dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata   
			left join dbo.Contrata sct on sct.iCodContrata=co.iCodSubContrata     
		   --WHERE co.dFechaFin>=cast(GETDATE() as date)   
		   WHERE co.dFechaLimite>=cast(GETDATE() as date)   
		   AND co.iTipo in(1,3,5,8,11,12)    and c.bCoberturado=0   
		   AND co.iEstado=5    
		   AND ( ct.iCodContrata = @iCodContrata OR 0=@iCodContrata)  
		   AND (c.iCantidad - c.iExceptuado)>0   
 )Tabla  
 WHERE Row > (@iPagina - 1) * @iPaginaTamano and Row <= (@iPagina - 1) * @iPaginaTamano + @iPaginaTamano 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetConvocatoriaWeb]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_GetConvocatoriaWeb]   
@iCodConvocatoria int    
AS  
BEGIN   
 SELECT co.iCodConvocatoriaMain,   
   co.iCodContrata,  
   ct.cNomContrata ,  
   /*+ (  
   case   
   when co.iCodContrata<>co.iCodSubContrata then ' <br> <div style="font-size:0.9em;">SUB CONTRATA : ' + isnull(sct.cNomContrata,'')+'</div> '  
   else '' end   
   )   
   as cNomContrata, */  
   --sct.cNomContrata as cNomSubContrata,  
   case   
    when co.iCodContrata<>co.iCodSubContrata then isnull(sct.cNomContrata,'')  
    else ''   
   end as cNomSubContrata,   
   c.cPerfil,   
   (c.iCantidad - c.iExceptuado) as iCantidad,  
   c.cMOCMONC,  
   c.cDesPerfil,  
   co.dFechaFin,  
   CONVERT(varchar,co.dFechaFin,105) as dFechaFinString,  
   c.iCodConvocatoria,  
   case  
    when co.iCodContrata=127 then cast(1 as bit)  
    else cast(0 as bit)  
   end as bBloquearPostulacion ,  
   c.cUrlExterna,  
   isnull(cc.iCodCuestionario,0) as bCuestionario  
 FROM dbo.ConvocatoriaMain AS co   
 INNER JOIN dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain   
 INNER JOIN dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata   
 left join dbo.Contrata sct on sct.iCodContrata=co.iCodSubContrata  
 left join dbo.CuestionarioConvocatoria as cc on cc.iCodConvocatoria = c.iCodConvocatoria  
 WHERE  c.iCodConvocatoria =@iCodConvocatoria 
 --and co.dFechaFin>=cast(GETDATE() as date)
 and co.dFechaLimite>=cast(GETDATE() as date)
 
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetEvaluacionDesempenoPorContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_GetEvaluacionDesempenoPorContrata]                       
@iCodContrata int                           
AS                        
BEGIN                        
                        
	SELECT        
			eval.iCodEvaluacionDesempeno,        
			fl.iCodContrata,        
			ccto.cNroContrato,                      
			ci.cDNI,  
			eval.bEsEvaluado,  
			ci.cApellidos + ' ' + ci.cNombres as cNomCompleto,
			dbo.fnObtenerCondicionDetalle(com.cTipoAreaInfluencia, u.cUbigeo) AS CondicionDetalle,  
			eval.cTipoEvaluacion,                
			cata.cDisplayMember as cDescripcionTipoEvaluacion,                
			CASE ISNULL( CONVERT( VARCHAR, eval.dFechaSolicitud, 105 ) , '' )                 
			WHEN '01-01-1900' THEN '-'                
			ELSE ISNULL( CONVERT( VARCHAR, eval.dFechaSolicitud, 105 ) , '' )                 
			END as cFechaSolicitud,                      
			CASE ISNULL( CONVERT( VARCHAR, eval.dFechaEvaluacion, 105 ) , '' )                 
			WHEN '01-01-1900' THEN '-'                
			ELSE ISNULL( CONVERT( VARCHAR, eval.dFechaEvaluacion, 105 ) , '' )                 
			END as cFechaEvaluacion,      
			nPuntajeTotalEvaluacion,      
			CASE   
			     WHEN nPuntajeTotalEvaluacion BETWEEN 21 AND 37 THEN 'Muy Bajo'  
			     WHEN nPuntajeTotalEvaluacion BETWEEN 38 AND 54 THEN 'Bajo'  
			     WHEN nPuntajeTotalEvaluacion BETWEEN 55 AND 71 THEN 'Regular'  
			     WHEN nPuntajeTotalEvaluacion BETWEEN 72 AND 88 THEN 'Bueno'  
			     WHEN nPuntajeTotalEvaluacion BETWEEN 89 AND 105 THEN 'Muy Bueno'  
			     ELSE 'Falta Evaluar'  
			END AS cPuntuacionResultado      
	FROM  EvaluacionDesempeno AS eval                           
	LEFT JOIN FuerzaLaboralDetalle fld on eval.iCodFuerzaLaboralDetalle=fld.iCodFuerzaLaboralDetalle                      
	LEFT JOIN FuerzaLaboral fl ON fl.iCodFuerzaLaboral= fld.iCodFuerzaLaboral                      
	INNER JOIN ContratistaContrato AS ccto ON fl.iCodContratistaContrato = ccto.iCodContratistaContrato                          
	INNER JOIN CandidatoInforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme 
	LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo        
	LEFT JOIN CandidatoInformeCondicion cond ON ci.iCodCandidatoInforme=cond.iCodCandidatoInforme        
	LEFT JOIN Comunidad com ON com.iCodComunidad=cond.iCodComunidad        
	AND com.iCodComunidad>1        
	INNER JOIN TDCatalogo cata on cata.cTabla='evaluaciondesempeno' and cata.cValueMember=eval.cTipoEvaluacion                
	WHERE 
	cond.iCodCandidatoInformeCondicion=        
	  (SELECT MAX(cond9.iCodCandidatoInformeCondicion)        
	   FROM CandidatoInformeCondicion cond9        
	   WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme)   
	AND  fl.iCodContrata=@iCodContrata                           
	ORDER BY eval.iCodEvaluacionDesempeno DESC                         
                           
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetFuerzaLaboralParaEvaluacionPorCodContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_GetFuerzaLaboralParaEvaluacionPorCodContrata]                
@iCodContrata int                         
AS                        
BEGIN
	SET NOCOUNT ON;
	/* ===============================================================================
	   Recordar: La Evaluacion de desempeño solo se realiza a Personal LOCAL AID Y AIO
	   ===============================================================================  */
    SELECT 
			fld.iCodFuerzaLaboralDetalle,
			fld.iCodFuerzaLaboral,
			CASE WHEN fld.bCesado = 1 THEN 0 ELSE 1 END AS bActivo,
			ctct.cNroContrato,
			ci.cDNI,
			(ci.cApellidos + ' ' + ci.cNombres) AS cNomCompleto,
			'LOCAL ' + dbo.fnObtenerCondicionDetalle(com.cTipoAreaInfluencia, u.cUbigeo) AS cCondicion ,
			fl.iCodContrata
    FROM FuerzaLaboralDetalle AS fld
    INNER JOIN CandidatoInforme ci ON fld.iCodCandidatoInforme = ci.iCodCandidatoInforme
	LEFT JOIN CandidatoInformeCondicion cond ON ci.iCodCandidatoInforme=cond.iCodCandidatoInforme   
    LEFT JOIN FuerzaLaboral fl ON fl.iCodFuerzaLaboral = fld.iCodFuerzaLaboral
    LEFT JOIN ContratistaContrato ctct ON ctct.iCodContratistaContrato = fl.iCodContratistaContrato
	LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo   
	LEFT JOIN Comunidad com ON com.iCodComunidad=cond.iCodComunidad        
	AND com.iCodComunidad>1 
    WHERE
		cond.iCodCandidatoInformeCondicion=        
		  (SELECT MAX(cond9.iCodCandidatoInformeCondicion)        
		   FROM CandidatoInformeCondicion cond9        
		   WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme)   
        -- Solo filas donde la condición sea 'AID' o 'AIO'
        AND dbo.fnObtenerCondicionDetalle(com.cTipoAreaInfluencia, u.cUbigeo) IN ('AID', 'AIO')
        AND fld.iCodFuerzaLaboral IN (
            SELECT iCodFuerzaLaboral
            FROM FuerzaLaboral
            WHERE iCodContrata = @iCodContrata
              AND iPeriodo = (SELECT YEAR(cValue1) FROM UConfig2 WHERE iCodUConfig2 = 11)
              AND iMes = (SELECT MONTH(cValue1) FROM UConfig2 WHERE iCodUConfig2 = 11)
        )
        AND fld.iCodFuerzaLaboralDetalle NOT IN (
            SELECT iCodFuerzaLaboralDetalle FROM EvaluacionDesempeno
        )
    ORDER BY ci.cApellidos
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_GetListaPersonasFFLLPorCodOcupacion]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_GetListaPersonasFFLLPorCodOcupacion]        
@iCodOcupacion int                     
AS                    
BEGIN                   
                
	 SELECT   
		  ci.iCodCandidatoInforme,
		  ci.cDni,
		  ci.cNombres + ' ' + ci.cApellidos as NombresApellidos,  
		  c.cNomContrata,  
		  cto.cNomContrato,  
		  fld.cOcupacion,  
		  fld.cMOCMONC,  
		  fld.iPeriodo,  
		  dbo.fnNombreDelMesPorNroMes(fld.iMes)as cMes  
	 FROM FuerzalaboralDetalle fld  
	 LEFT JOIN TDOcupacion ocu ON fld.iCodOcupacion=ocu.iCodOcupacion  
	 LEFT JOIN FuerzaLaboral fl ON fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral  
	 LEFT JOIN ContratistaContrato cto ON fl.iCodContratistaContrato=cto.iCodContratistaContrato  
	 LEFT JOIN Contrata c ON cto.iCodContrata = c.iCodContrata  
	 LEFT JOIN CandidatoInforme ci ON ci.iCodCandidatoInforme=fld.iCodCandidatoInforme  
	 WHERE  fld.iCodOcupacion = @iCodOcupacion                 
	 ORDER BY ci.iCodCandidatoInforme, fld.iPeriodo, fld.iMes  
   
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_ListaCompetenciasPorEvaluacionDesempeno]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_ListaCompetenciasPorEvaluacionDesempeno]      
@iCodEvaluacionDesempeno INT     
AS      
BEGIN   

	 SELECT		edd.iCodEvaluacionDesempenoDetalle,      
			    edd.iCodEvaluacionDesempeno,      
			    edd.cDescripcionEvaluacionRubro,    
			    edd.cDescripcionEvaluacionRubroDetalle,    
			    edd.nPuntajeEvaluacion     
	 FROM EvaluacionDesempenoDetalle edd        
	 WHERE edd.iCodEvaluacionDesempeno = @iCodEvaluacionDesempeno
 
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_PersonaGestorComunidad]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_PersonaGestorComunidad]  
@iCodPersona int   
AS
BEGIN
	SELECT	ISNULL(pgs.iCodPersonaGestorComunidad,-1) AS iCodPersonaGestorComunidad,
			ISNULL(pgs.iCodPersona,-1 ) AS iCodPersona,
			comu.iCodComunidad,
			comu.cComunidad,
			pgs.bHabilitar,
			pgs.iCodUsuarioCreacion,
			pgs.dFechaCreacion
	FROM Comunidad comu   
	LEFT JOIN PersonaGestorComunidad pgs on pgs.iCodComunidad=comu.iCodComunidad
	AND pgs.iCodPersona=@iCodPersona 
    WHERE comu.iCodComunidad NOT IN(1)

END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_PersonaListaEstudiosRow]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_PersonaListaEstudiosRow]
	@iCodCandidatoEstudios int   
AS
BEGIN
	SET NOCOUNT ON
	select cCentroEstudios
		  ,iGradoInstruccion
		  ,iCicloAcademico
		  ,cCarrera
		  ,iSituacionAcademica
		  ,iGradoAcademico
		  ,iRankingAcademico
		  ,iPeriodoInicioMes
		  ,iPeriodoInicioAno
		  ,iPeriodoFinMes
		  ,iPeriodoFinAno
		  ,bPrincipal
	  FROM CandidatoEstudios
	  where iCodCandidatoEstudios = @iCodCandidatoEstudios
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_PersonaListaExperienciaLaboralRow]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_PersonaListaExperienciaLaboralRow] 
	@iCodCandidatoExperienciaLaboral int   
AS
SET NOCOUNT ON
SET LANGUAGE Spanish
	select cast(ex.iCodCandidatoExperienciaLaboral as varchar) as iCodCandidatoExperienciaLaboral,
	ex.cEmpresa,
	ex.cPuesto ,
	ex.iCodCandidatoExperienciaNivel,
	ex.cRubroExperiencia,
	ex.cSectorExperiencia,
	CONVERT(varchar,ex.dFechaIni,103) as dFechaIni,
	CONVERT(varchar,ex.dFechaFin,103) as dFechaFin,
	substring(datename(month,convert(date,cast(ex.iPeriodoInicioAno as varchar(4))+'-'+cast(ex.iPeriodoInicioMes as varchar(4))+'-01')),0,4) + 
	' ' + cast(ex.iPeriodoInicioAno as varchar(4))   as cPeriodoIni ,
	case 
	when ex.bActualmenteTrabajado=1 then
		'ACTUALIDAD' 
	else 
	substring(datename(month,convert(date,cast(ex.iPeriodoFinAno as varchar(4))+'-'+cast(ex.iPeriodoFinMes as varchar(4))+'-01')),0,4) + 
	' ' + cast(ex.iPeriodoFinAno as varchar(4)) 
	end as cPeriodoFin,
	ex.bActualmenteTrabajado,ex.cFuncionesLogros, ex.bDocumentado
	from CandidatoExperienciaLaboral ex 
	where ex.iCodCandidatoExperienciaLaboral = @iCodCandidatoExperienciaLaboral and ex.bActivo = 1 
	ORDER BY ex.iPeriodoInicioAno desc,ex.iPeriodoInicioMes desc
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_PostulacionesByCI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_PostulacionesByCI] @iCodCandidatoInforme int   
AS
BEGIN

		SELECT   TOP(20)      
				 case cd.iTipoPostulacion   
				 when 1 then 'OAEL'   
				 when 2 then 'SISTEMA'   
				 when 3 then '---'    
				 when 4 then 'PREFERENCIAL'   
				 when 5 then 'SOLICITADO'    
				 when 6 then 'VIRTUAL'    
				 WHEN 7 THEN 'STAKEHOLDER'    
				 else 'SIN POSTULACION'   
				 end as cTipoPostulacion,   
				  LTRIM(RTRIM(ISNULL(co.cNomContrata, '') + ' ' + ISNULL(cm.cSubContrata, ''))) AS cContrataPostula,  
				  cto.cNroContrato ,   
  
				  isnull(cv.cPerfil,'') as cPerfil,  
				   isnull(cd.bCumplePerfil,0) as bCumplePerfil,  
				  CASE   
				  WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS bit)   
				  WHEN cd.dFechaCargaCV IS NULL THEN CAST(0 AS bit) ELSE CAST(1 AS bit) END AS bCVCargado,   
				  case   
				  when cd.dFechaCargaCV='1900-01-01' then ''   
				  else convert(varchar, cd.dFechaCargaCV, 103)  end  as dFechaCargaCV,  
				   case   
				  when cd.dFechaContactoContrata1='1900-01-01' then ''   
				  else convert(varchar, cd.dFechaContactoContrata1, 103)  end  as dFechaRespuesta,  
					isnull(cd.cRptaContrata,'') as cRptaContrata ,isnull(cd.cObs,'') as cObs   
    
			--   ,   cd.iCodConvocatoriaDetalle   
		 FROM            dbo.CandidatoInforme AS ci LEFT OUTER JOIN   
		  dbo.ConvocatoriaDetalle AS cd ON ci.iCodCandidatoInforme = cd.iCodCandidatoInforme LEFT OUTER JOIN  
		  dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria    
		  left join ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain   
		  left join dbo.Contrata AS co ON cm.iCodContrata = co.iCodContrata   
		  left join ContratistaContrato cto on cm.iCodContratistaContrato=cto.iCodContratistaContrato    
		  where ci.iCodCandidatoInforme=@iCodCandidatoInforme  
		  and cd.cEstado='D'    
		  --and cm.iTipo in (1,3)     
		  order by cd.iCodConvocatoriaDetalle desc

  END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_PostulacionesByDNI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_PostulacionesByDNI] @cDNI varchar(15) 
AS
SELECT TOP(20)    

	case cd.iTipoPostulacion 
	when 1 then 'OAEL' 
	when 2 then 'SISTEMA' 
	when 3 then '---'  
	when 4 then 'PREFERENCIAL' 
	when 5 then 'SOLICITADO'  
	when 6 then 'VIRTUAL'  
	WHEN 7 THEN 'STAKEHOLDER'  
	else 'SIN POSTULACION' 
	end as cTipoPostulacion, 
	 LTRIM(RTRIM(ISNULL(co.cNomContrata, '') + ' ' + ISNULL(cm.cSubContrata, ''))) AS cContrataPostula,
	 isnull(cv.cPerfil,'') as cPerfil,
	  isnull(cd.bCumplePerfil,0) as bCumplePerfil,
	 CASE 
	 WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS bit) 
	 WHEN cd.dFechaCargaCV IS NULL THEN CAST(0 AS bit) ELSE CAST(1 AS bit) END AS bCVCargado, 
	 case 
	 when cd.dFechaCargaCV='1900-01-01' then '' 
	 else convert(varchar, cd.dFechaCargaCV, 103)  end  as dFechaCargaCV,
	  case 
	 when cd.dFechaContactoContrata1='1900-01-01' then '' 
	 else convert(varchar, cd.dFechaContactoContrata1, 103)  end  as dFechaRespuesta,
		  isnull(cd.cRptaContrata,'') as cRptaContrata ,isnull(cd.cObs,'') as cObs,
	(case
	when isnull(co.cNomContrata ,'') != '' then 30
	else 0
	end +
	case
	when cd.dFechaCargaCV != '1900-01-01' then 30
	else 0
	end +
	case
	when cd.dFechaContactoContrata1 != '1900-01-01' then 40
	else 0
	end) as [iProgreso]
		  --   ,	  cd.iCodConvocatoriaDetalle 
	FROM            dbo.CandidatoInforme AS ci LEFT OUTER JOIN 
	 dbo.ConvocatoriaDetalle AS cd ON ci.iCodCandidatoInforme = cd.iCodCandidatoInforme LEFT OUTER JOIN
	 dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria  
	 left join ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
	 left join dbo.Contrata AS co ON cm.iCodContrata = co.iCodContrata 
	 where ci.cDNI=@cDNI 
	 and cd.cEstado='D'  
	 --and cm.iTipo in (1,3)   
	 order by cd.iCodConvocatoriaDetalle desc
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_PostulacionesByDNIDesktop]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

















 


CREATE PROCEDURE [dbo].[SP_DT_PostulacionesByDNIDesktop] @cDNI varchar(15) 
AS
SELECT     
 cd.iCodConvocatoriaDetalle, 
cd.cEstado,
case cd.iTipoPostulacion 
when 1 then 'OAEL' 
when 2 then 'SISTEMA' 
when 3 then '---'  
when 4 then 'PREFERENCIAL' 
when 5 then 'SOLICITADO'  
when 6 then 'VIRTUAL'  
WHEN 7 THEN 'STAKEHOLDER'  
else 'SIN POSTULACION' 
end as cTipoPostulacion, 
 LTRIM(RTRIM(ISNULL(co.cNomContrata, '') + ' ' + ISNULL(cm.cSubContrata, ''))) AS cContrataPostula,
 isnull(cv.cPerfil,'') as cPerfil,
  isnull(cd.bCumplePerfil,0) as bCumplePerfil,
 CASE 
 WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS bit) 
 WHEN cd.dFechaCargaCV IS NULL THEN CAST(0 AS bit) ELSE CAST(1 AS bit) END AS bCVCargado, 
 cast(cd.dFechaMintra as date) as dFechaRegistro,
 case 
 when cd.dFechaCargaCV='1900-01-01' then '' 
 else convert(varchar, cd.dFechaCargaCV, 103)  end  as dFechaCargaCV,
  case 
 when cd.dFechaContactoContrata1='1900-01-01' then '' 
 else convert(varchar, cd.dFechaContactoContrata1, 103)  end  as dFechaRespuesta,
      isnull(cd.cRptaContrata,'') as cRptaContrata ,isnull(cd.cObs,'') as cObs 
	  --   ,	  
FROM            dbo.CandidatoInforme AS ci LEFT OUTER JOIN 
 dbo.ConvocatoriaDetalle AS cd ON ci.iCodCandidatoInforme = cd.iCodCandidatoInforme LEFT OUTER JOIN
 dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria  
 left join ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
 left join dbo.Contrata AS co ON cm.iCodContrata = co.iCodContrata 
 where ci.cDNI=@cDNI 
 --and cd.cEstado='D'  
 --and cm.iTipo in (1,3)   
 order by cd.iCodConvocatoriaDetalle desc













GO
/****** Object:  StoredProcedure [dbo].[SP_DT_PostulacionesByDNIWeb]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_PostulacionesByDNIWeb] 
	@cDNI varchar(15) 
AS    
BEGIN
	SELECT 
	case cd.iTipoPostulacion 
	when 1 then 'OAEL' 
	when 2 then 'SISTEMA' 
	when 3 then '---'  
	when 4 then 'PREFERENCIAL' 
	when 5 then 'SOLICITADO'  
	when 6 then 'VIRTUAL'  
	WHEN 7 THEN 'STAKEHOLDER'  
	else 'SIN POSTULACION' 
	end as cTipoPostulacion, 
	 LTRIM(RTRIM(ISNULL(co.cNomContrata, '') + ' ' + ISNULL(cm.cSubContrata, ''))) AS cContrataPostula,
	 isnull(cv.cPerfil,'') as cPerfil,
	  isnull(cd.bCumplePerfil,0) as bCumplePerfil,
	 CASE 
	 WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS bit) 
	 WHEN cd.dFechaCargaCV IS NULL THEN CAST(0 AS bit) ELSE CAST(1 AS bit) END AS bCVCargado, 
	 case 
	 when cd.dFechaCargaCV='1900-01-01' then '' 
	 else convert(varchar, cd.dFechaCargaCV, 103)  end  as dFechaCargaCV,
	  case 
	 when cd.dFechaContactoContrata1='1900-01-01' then '' 
	 else convert(varchar, cd.dFechaContactoContrata1, 103)  end  as dFechaRespuesta,
	isnull(cd.cRptaContrata,'') as cRptaContrata ,isnull(cd.cObs,'') as cObs
	--convert(varchar, cm.dFechaIni, 103) as dFechaIni,convert(varchar, cm.dFechaFin, 103) as dFechaFin 
		  --   ,	  cd.iCodConvocatoriaDetalle 
	FROM dbo.CandidatoInforme AS ci 
	LEFT OUTER JOIN dbo.ConvocatoriaDetalle AS cd ON ci.iCodCandidatoInforme = cd.iCodCandidatoInforme 
	LEFT OUTER JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria  
	 left join ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 	
	 left join dbo.Contrata AS co ON cm.iCodContrata = co.iCodContrata 
	 --left join ContratistaContrato cc on cc.iCodContrata = cm.iCodContrata
	 where ci.cDNI=@cDNI 
	 and cd.cEstado='D'  
	 --and cm.iTipo in (1,3)   
	 order by cd.iCodConvocatoriaDetalle desc
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_UsuarioContrataLista]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_UsuarioContrataLista] @pAcceder as bit 
AS
SELECT        uc.iCodUsuarioContrata,
uc.bAcceder,
u.cNick ,
CASE WHEN len(ltrim(rtrim(pn.cApelM))) > 0 THEN pn.cApelP + ' ' + pn.cApelM + ' ' + pn.cNombres 
ELSE pn.cApelP + ' ' + pn.cNombres END AS cNomCompleto,
co.cNomContrata, 
co.cContacto2 as cUrlDrive,
CASE 
WHEN SUBSTRING(co.cContacto2,1,4)='http'  THEN CAST(1 as bit)
ELSE CAST(0 as bit) 
END as bDrive ,
pn.cCorreo  

FROM            dbo.UsuarioContrata AS uc INNER JOIN
                         dbo.Usuario AS u ON uc.iCodUsuario = u.iCodUsuario INNER JOIN
                         dbo.PersonaNatural AS pn ON uc.iCodPersona = pn.iCodPersona INNER JOIN
                         dbo.Contrata AS co ON uc.iCodContrata = co.iCodContrata
Where uc.bAcceder=@pAcceder -- OR 0=@pAcceder
GO
/****** Object:  StoredProcedure [dbo].[SP_DT_UsuarioReporteCatalogo]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO















 


CREATE PROCEDURE [dbo].[SP_DT_UsuarioReporteCatalogo]  @iCodUsuarioSistema int 
AS
 
select isnull(ur.iCodUsuarioReporteCatalogo,-1) as iCodUsuarioReporteCatalogo,
isnull(ur.iCodUsuarioSistema,-1) as  iCodUsuarioSistema,
r.iCodReporteCatalogo,
r.cNombreReporte ,
--isnull(ur.bHabilitar,0) as   bHabilitar 
ur.bHabilitar

from rpt.ReporteCatalogo r 
left join usuarioreportecatalogo ur on r.iCodReporteCatalogo=ur.iCodReporteCatalogo  
and ur.iCodUsuarioSistema=@iCodUsuarioSistema 
--where ur.iCodUsuarioSistema=@iCodUsuarioSistema or ur.iCodUsuario is null 






GO
/****** Object:  StoredProcedure [dbo].[SP_DT_UsuarioReporteHabilitados]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DT_UsuarioReporteHabilitados] 
@iCodUsuarioSistema int 
AS
BEGIN

	SELECT r.iCodReporteCatalogo,
		   r.cNombreReporte,
		   r.cQueryReporte,
		   r.bFiltroFecha
	FROM rpt.ReporteCatalogo r
	INNER JOIN UsuarioReporteCatalogo ur ON r.iCodReporteCatalogo=ur.iCodReporteCatalogo
	WHERE ur.iCodUsuarioSistema=@iCodUsuarioSistema
	AND ur.bHabilitar=1 --where ur.iCodUsuarioSistema=@iCodUsuarioSistema or ur.iCodUsuario is null

END
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_CandidatoByDNI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO












 


CREATE PROCEDURE [dbo].[SP_DTW_CandidatoByDNI] @cDNI varchar(15) 
AS
 SELECT        ci.iCodCandidatoInforme, 
ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
ci.cUbigeo + ' - ' + ci.cLugarNac AS cDepartamento, 
case ci.bCargabox 
when 1 then 
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	case ci.bSustentoCV
	when 1 then
		case ci.cCondicion 
			when 'LOCAL' then 'LOCAL' 
			when 'RESIDENTE' then 'LOCAL' 
			when 'COMUNIDAD' then 'LOCAL' 
			when 'FORANEO' then 'FORANEO' 
			else 'FORANEO' 
		end
	else 
		'FORANEO'
	end
end as cCondicion , 
CASE WHEN ci.cOcupacion IS NULL 
 THEN '' ELSE ci.cOcupacion end as cOcupacion,
--CASE WHEN ci.cOcupacion IS NULL 
-- THEN '' ELSE ci.cOcupacion + CASE WHEN ci.cOcupacion2 IS NULL THEN '' WHEN ci.cOcupacion2 = '' THEN '' ELSE ' - ' + ci.cOcupacion2 END END AS cOcupacion, 
 ci.bEvaluado, 
   case 
 when  ci.dFechaEvaluacion='1900-01-01' then '' 
 else convert(varchar,  ci.dFechaEvaluacion, 103)  end  as dFechaEvaluacion,
 'APTO' as cAptitud, 
 ci.dFechaVerificativa, 
 ci.bVerificativa, 
 CASE ci.iEstadoVerificativa 
 WHEN 0 THEN '-' 
 WHEN 1 THEN '-' 
 WHEN 2 THEN 'E' 
 WHEN 3 THEN 'R' 
 END AS cEstadoVerificativa, 
 ci.dFechaCargaBox, ci.bCargaBox, 
  case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then cast( 0 as bit) 
 else cast(1 as bit)  
 end as bContratado , ci.dFechaSis AS dFechaRegistro,
isnull(co.cNomContrata,'')  as [EmpresaTrabaja],
 ci.cFono as Fono 
FROM            dbo.CandidatoInforme AS ci  
 left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 
 left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
left join contrata co on fl.iCodContrata=co.iCodContrata 
where  ci.cDNI=@cDNI 
 
  





GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_CandidatoPorDNI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DTW_CandidatoPorDNI]   
@cDni varchar(8)     
AS  
BEGIN

	SELECT TOP 1 cast(cic.dFechaSis AS date) AS dFechaSistema,
           cic.iCodTDCondicionSustentoAnterior,
           cic.cCondicionAnterior,
           cic.iCodTDCondicionSustentoNueva,
           cic.cCondicionNueva,
           cic.cCondicionSustento,
           isnull(co.cComunidad, '') AS cComunidad,
		   ci.*
	FROM CandidatoInformeCondicion cic
	LEFT JOIN Comunidad co ON cic.iCodComunidad=co.iCodComunidad
	LEFT JOIN CandidatoInforme ci ON ci.iCodCandidatoInforme = cic.iCodCandidatoInforme
	WHERE cic.iCodCandidatoInforme=
		(SELECT ci.iCodCandidatoInforme
		 FROM CandidatoInforme ci
		 WHERE ci.cDNI=@cDni)
	ORDER BY cast(cic.dFechaSis AS date) DESC

END
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_ContratosPorContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DTW_ContratosPorContrata]                       
@iCodContrata int                          
AS                        
BEGIN        
	SELECT t1.iCodContratistaContrato,
		   t1.bCerrado ,
		   t1.cNroContrato,
		   t1.cNomContrato, --t2.cNomContrata,
	 CONVERT(VARCHAR,t1.dFechaTermino, 105) AS dFechaTermino,
	 t1.iEstado,
	 CASE
		 WHEN t1.bReporteFFLL=1 THEN 'SI'
		 ELSE 'NO'
	 END AS cReporteFFLL
	FROM dbo.Contratistacontrato t1 --LEFT JOIN dbo.Contrata t2 on t2.iCodContrata=t1.iCodContrata
	WHERE t1.iCodContrata=@iCodContrata
	ORDER BY t1.iCodContratistaContrato DESC    
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_ConvocatoriaDetalleHistorial]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   
CREATE PROCEDURE [dbo].[SP_DTW_ConvocatoriaDetalleHistorial]    
@Opcion int,    
  @iCodConvocatoriaDetalleHistorial int=NULL,    
  @iCodConvocatoriaDetalle int=NULL,    
  @iCodUsuario int=NULL,    
  @Fecha date=NULL,    
  @iResultado nvarchar(3)=NULL,    
  @RptaContrata nvarchar(100)=NULL,    
  @cAnotacion nvarchar(1000)=NULL    
AS    
BEGIN    
    
  
  --  SELECT        
  --iCodConvocatoriaDetalleHistorial,        
  --iCodConvocatoriaDetalle,          
  --CASE cSeleccinado WHEN 'SI' THEN 'SELECCIONADO' WHEN 'NO' THEN 'NO SELECCIONADO' ELSE cSeleccinado END as 'cSeleccinado',        
  --cRptaContrata,        
  --cObs,    
  --iCodUsuarioCreacion,    
  --dFechaCreacion,    
  --iCodUsuarioModificacion,    
  --dFechaModificacion    
  --FROM dbo.ConvocatoriaDetalleHistorial        
  --WHERE iCodConvocatoriaDetalle=@iCodConvocatoriaDetalle        
  
IF @Opcion=1     
BEGIN    
    
 IF EXISTS(SELECT CDH.iCodConvocatoriaDetalleHistorial FROM dbo.ConvocatoriaDetalleHistorial CDH WHERE CDH.iCodConvocatoriaDetalleHistorial=@iCodConvocatoriaDetalleHistorial)    
    BEGIN    
    
      UPDATE dbo.ConvocatoriaDetalleHistorial      
      SET     
        iCodConvocatoriaDetalle = @iCodConvocatoriaDetalle,    
        iCodUsuarioModificacion = @iCodUsuario,    
        dFechaModificacion = @Fecha,    
        cSeleccinado = @iResultado,    
        cRptaContrata = @RptaContrata,    
        cObs = @cAnotacion    
      WHERE     
        iCodConvocatoriaDetalleHistorial = @iCodConvocatoriaDetalleHistorial    
      
    END    
    ELSE    
    BEGIN    
        
      INSERT INTO dbo.ConvocatoriaDetalleHistorial    
      (    
        iCodConvocatoriaDetalle,    
        iCodUsuarioCreacion,    
        dFechaCreacion,  
  iCodUsuarioModificacion,    
        dFechaModificacion,    
        cSeleccinado,    
        cRptaContrata,    
        cObs    
      )    
      VALUES (    
        @iCodConvocatoriaDetalle,    
        @iCodUsuario,    
        GETDATE(),  
  @iCodUsuario,    
        GETDATE(),    
        @iResultado,    
        @RptaContrata,    
        @cAnotacion    
      )    
      
    END    
        
END    
    
IF @Opcion=2     
BEGIN    
    SELECT     
      iCodConvocatoriaDetalleHistorial,    
      iCodConvocatoriaDetalle,    
      iCodUsuarioCreacion,    
      dFechaCreacion,    
      CASE cSeleccinado WHEN 'SI' THEN 'SELECCIONADO' WHEN 'NO' THEN 'NO SELECCIONADO' ELSE cSeleccinado END as 'cResultado',    
      cRptaContrata,    
      cObs    
    FROM dbo.ConvocatoriaDetalleHistorial    
    WHERE dbo.ConvocatoriaDetalleHistorial.iCodConvocatoriaDetalle=@iCodConvocatoriaDetalle    
END    
    
IF @Opcion=3    
BEGIN    
    DELETE FROM dbo.ConvocatoriaDetalleHistorial     
    WHERE     
      iCodConvocatoriaDetalleHistorial = @iCodConvocatoriaDetalleHistorial    
      
END    
    
    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_ConvocatoriasPorContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DTW_ConvocatoriasPorContrata] @iCodContrata integer   
AS
BEGIN
	SELECT   c.iCodConvocatoriaMain,  
	 c.iCodContrata,  
	case c.iTipo   
	when 1 then 'REGULAR'  
	WHEN 2 THEN 'EXCEPTUADO'  
	WHEN 3 THEN 'ADICIONAL'  
	WHEN 4 THEN 'DISPENSADO'  
	WHEN 5 THEN 'MARATON'  
	WHEN 6 THEN 'PGI'  
	WHEN 9 THEN 'OTROS'   
	WHEN 10 THEN 'REGULAR BBDD'   
	ELSE '' END AS cTipo,  
	 c.cNroConvocatoria,  
	 ct.cNomContrata,   
	 c.cSubContrata,   
	 cast(c.dFechaIni as date) as dFechaIni, cast(c.dFechaFin as date) as dFechaFin, c.dFechaLimite,   
	-- (select count(cd0.iCodCandidatoInforme) from convocatoriadetalle cd0  
	--inner join convocatoria c0 on cd0.iCodConvocatoria=c0.iCodConvocatoria   
	--inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain    
	--where cd0.dFechaCargaCV<>'1900-01-01' and cm0.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iCantEnviada,  
	 (select count(cd0.iCodCandidatoInforme) from convocatoriadetalle cd0  
	inner join convocatoria c0 on cd0.iCodConvocatoria=c0.iCodConvocatoria   
	inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain    
	where cd0.dFechaCargaCV<>'1900-01-01'   
	and cd0.iTipoPostulacion=2    
	and cm0.iCodConvocatoriaMain=c.iCodConvocatoriaMain  ) as iSistema,  
	 (select count(cd3.iCodCandidatoInforme) from convocatoriadetalle cd3  
	inner join convocatoria c0 on cd3.iCodConvocatoria=c0.iCodConvocatoria   
	inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain    
	where cd3.dFechaCargaCV<>'1900-01-01'   
	and cd3.iTipoPostulacion<>2    
	and cm0.iCodConvocatoriaMain=c.iCodConvocatoriaMain  ) as iOtros,  
	 (select count(cd0.iCodCandidatoInforme) from convocatoriadetalle cd0  
	inner join convocatoria c0 on cd0.iCodConvocatoria=c0.iCodConvocatoria   
	inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain    
	where cd0.dFechaCargaCV<>'1900-01-01' and cm0.iCodConvocatoriaMain=c.iCodConvocatoriaMain),  
	  (select  count(cd1.iCodConvocatoriaDetalle)   
	   from convocatoriadetalle cd1  
	inner join convocatoria c1 on cd1.iCodConvocatoria=c1.iCodConvocatoria   
	inner join convocatoriamain cm1 on c1.iCodConvocatoriaMain=cm1.iCodConvocatoriaMain    
	where cd1.dFechaContactoContrata1='1900-01-01' and cd1.dFechaCargaCV<>'1900-01-01'   
	 and cm1.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iRespuestaNO ,   
	(select count(cd2.iCodConvocatoriaDetalle)   
	   from convocatoriadetalle cd2  
	inner join convocatoria c2 on cd2.iCodConvocatoria=c2.iCodConvocatoria   
	inner join convocatoriamain cm2 on c2.iCodConvocatoriaMain=cm2.iCodConvocatoriaMain    
	where cd2.dFechaContactoContrata1<>'1900-01-01' and cd2.dFechaCargaCV<>'1900-01-01'   
	 and  cm2.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iRespuestaSI ,  
	 c.cRutaDifusion   
	 ,  
	 (select count(ccu.iCodCuestionario) from CuestionarioConvocatoria ccu  
	  where ccu.iCodConvocatoriaMain=c.iCodConvocatoriaMain  ) as iCantCuestionarios   
  
	FROM         dbo.ConvocatoriaMain AS c   
	INNER JOIN dbo.Contrata AS ct ON c.iCodContrata = ct.iCodContrata   
	LEFT OUTER JOIN dbo.Convocatoria AS cd ON c.iCodConvocatoriaMain = cd.iCodConvocatoriaMain   
	--LEFT JOIN ConvocatoriaDetalle cdp on cd.iCodConvocatoria=cdp.iCodConvocatoria   
		   where c.iCodContrata=@iCodContrata  
	GROUP BY c.iCodConvocatoriaMain, ct.cNomContrata, c.dFechaIni, c.dFechaFin,   
	c.iEstado, c.iCodContrata,c.iTipo , c.cSubContrata, c.dFechaLimite,  
	c.cNroConvocatoria, c.cRutaDifusion   
	ORDER BY c.iCodConvocatoriaMain desc

END
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_ConvocatoriasPorContrataFeedback]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DTW_ConvocatoriasPorContrataFeedback] @iCodContrata integer   
AS
BEGIN

	SELECT   c.iCodConvocatoriaMain,  
	 c.iCodContrata,  
	case c.iTipo   
	when 1 then 'REGULAR'  
	WHEN 2 THEN 'EXCEPTUADO'  
	WHEN 3 THEN 'ADICIONAL'  
	WHEN 4 THEN 'DISPENSADO'  
	WHEN 5 THEN 'MARATON'  
	WHEN 6 THEN 'PGI'  
	WHEN 9 THEN 'OTROS'   
	WHEN 10 THEN 'REGULAR BBDD'   
	ELSE '' END AS cTipo,  
	 c.cNroConvocatoria,  
	 ct.cNomContrata,   
	 c.cSubContrata,   
	 cast(c.dFechaIni as date) as dFechaIni, cast(c.dFechaFin as date) as dFechaFin, c.dFechaLimite,   
	-- (select count(cd0.iCodCandidatoInforme) from convocatoriadetalle cd0  
	--inner join convocatoria c0 on cd0.iCodConvocatoria=c0.iCodConvocatoria   
	--inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain    
	--where cd0.dFechaCargaCV<>'1900-01-01' and cm0.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iCantEnviada,  
	 (select count(cd0.iCodCandidatoInforme) from convocatoriadetalle cd0  
	inner join convocatoria c0 on cd0.iCodConvocatoria=c0.iCodConvocatoria   
	inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain    
	where cd0.dFechaCargaCV<>'1900-01-01'   
	and cd0.iTipoPostulacion=2    
	and cm0.iCodConvocatoriaMain=c.iCodConvocatoriaMain  ) as iSistema,  
	 (select count(cd3.iCodCandidatoInforme) from convocatoriadetalle cd3  
	inner join convocatoria c0 on cd3.iCodConvocatoria=c0.iCodConvocatoria   
	inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain    
	where cd3.dFechaCargaCV<>'1900-01-01'   
	and cd3.iTipoPostulacion<>2    
	and cm0.iCodConvocatoriaMain=c.iCodConvocatoriaMain  ) as iOtros,  
	 (select count(cd0.iCodCandidatoInforme) from convocatoriadetalle cd0  
	inner join convocatoria c0 on cd0.iCodConvocatoria=c0.iCodConvocatoria   
	inner join convocatoriamain cm0 on c0.iCodConvocatoriaMain=cm0.iCodConvocatoriaMain    
	where cd0.dFechaCargaCV<>'1900-01-01' and cm0.iCodConvocatoriaMain=c.iCodConvocatoriaMain),  
	  (select  count(cd1.iCodConvocatoriaDetalle)   
	   from convocatoriadetalle cd1  
	inner join convocatoria c1 on cd1.iCodConvocatoria=c1.iCodConvocatoria   
	inner join convocatoriamain cm1 on c1.iCodConvocatoriaMain=cm1.iCodConvocatoriaMain    
	where cd1.dFechaContactoContrata1='1900-01-01' and cd1.dFechaCargaCV<>'1900-01-01'   
	 and cm1.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iRespuestaNO ,   
	(select count(cd2.iCodConvocatoriaDetalle)   
	   from convocatoriadetalle cd2  
	inner join convocatoria c2 on cd2.iCodConvocatoria=c2.iCodConvocatoria   
	inner join convocatoriamain cm2 on c2.iCodConvocatoriaMain=cm2.iCodConvocatoriaMain    
	where cd2.dFechaContactoContrata1<>'1900-01-01' and cd2.dFechaCargaCV<>'1900-01-01'   
	 and  cm2.iCodConvocatoriaMain=c.iCodConvocatoriaMain) as iRespuestaSI ,  
	 c.cRutaDifusion   
	 ,  
	 (select count(ccu.iCodCuestionario) from CuestionarioConvocatoria ccu  
	  where ccu.iCodConvocatoriaMain=c.iCodConvocatoriaMain  ) as iCantCuestionarios   
  
	FROM         dbo.ConvocatoriaMain AS c   
	INNER JOIN dbo.Contrata AS ct ON c.iCodContrata = ct.iCodContrata   
	LEFT OUTER JOIN dbo.Convocatoria AS cd ON c.iCodConvocatoriaMain = cd.iCodConvocatoriaMain   
	--LEFT JOIN ConvocatoriaDetalle cdp on cd.iCodConvocatoria=cdp.iCodConvocatoria   
		   where c.iCodContrata=@iCodContrata  
	GROUP BY c.iCodConvocatoriaMain, ct.cNomContrata, c.dFechaIni, c.dFechaFin,   
	c.iEstado, c.iCodContrata,c.iTipo , c.cSubContrata, c.dFechaLimite,  
	c.cNroConvocatoria, c.cRutaDifusion   
	ORDER BY c.iCodConvocatoriaMain desc

END
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_ConvocatoriasPorGestorComunidad]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DTW_ConvocatoriasPorGestorComunidad]   
@iCodUsuario int     
AS  
BEGIN  
  
 SELECT c.iCodConvocatoria,  
   con.cNomContrata,  
   cm.cNroConvocatoria,  
   c.cMOCMONC,  
   c.cPerfil,  
   c.iCantidad,  
   c.iExceptuado,  
   c.iTotal,  
   cc.iCantidad as 'CantAsignadaGestor',  
   cc.cComunidad,  
   pgc.iCodPersona,  
   u.cNick,  
   u.iCodUsuario  
 FROM ConvocatoriaComunidad cc  
 LEFT JOIN Convocatoria c ON c.iCodConvocatoria = cc.iCodConvocatoria  
 LEFT JOIN ConvocatoriaMain cm ON cm.iCodConvocatoriaMain = cc.iCodConvocatoriaMain  
 LEFT JOIN Contrata con ON con.iCodContrata=cm.iCodContrata  
 LEFT JOIN PersonaGestorComunidad pgc on pgc.iCodComunidad = cc.iCodComunidad and pgc.bHabilitar=1  
 LEFT JOIN Usuario u ON u.iCodPersona = pgc.iCodPersona  
 WHERE (u.iCodUsuario=@iCodUsuario)  
  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_ListaComunidadesPorGestorComunidad]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DTW_ListaComunidadesPorGestorComunidad]               
@iCodUsuario int           
AS        
BEGIN        
        
	SELECT	comu.iCodComunidad as ValueMember, 
			comu.cComunidad  as DisplayMember
	FROM Comunidad comu  
	INNER JOIN PersonaGestorComunidad pgc ON pgc.iCodComunidad=comu.iCodComunidad AND pgc.bHabilitar=1
	WHERE pgc.iCodPersona in(SELECT iCodPersona FROM Usuario WHERE iCodUsuario=@iCodUsuario)
	ORDER BY comu.cComunidad
    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_ListaUsuariosWeb]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DTW_ListaUsuariosWeb] 
AS 
BEGIN
	SELECT uc.iCodUsuarioContrata,
		   co.cNomContrata,
		   CASE
			   WHEN len(ltrim(rtrim(pn.cApelM))) > 0 THEN pn.cApelP + ' ' + pn.cApelM + ' ' + pn.cNombres
			   ELSE pn.cApelP + ' ' + pn.cNombres
		   END AS cNomCompleto,
		   p.cNroDoc,
		   uc.bAcceder
	FROM dbo.UsuarioContrata AS uc
	INNER JOIN dbo.Usuario AS u ON uc.iCodUsuario = u.iCodUsuario
	INNER JOIN dbo.PersonaNatural AS pn ON uc.iCodPersona = pn.iCodPersona
	INNER JOIN dbo.Persona AS p ON p.iCodPersona = pn.iCodPersona
	INNER JOIN dbo.Contrata AS co ON uc.iCodContrata = co.iCodContrata
	ORDER BY u.dFechaSis DESC
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_PostulantesByConvocatoria]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DTW_PostulantesByConvocatoria]     
@iCodConvocatoriaMain int       
AS    
BEGIN   
  SELECT   
   cd.iCodConvocatoriaDetalle,  
   cd.cSeleccionado,
   CASE (SELECT COUNT(*) FROM ConvocatoriaDetalleHistorial cdh
	  WHERE cdh.iCodConvocatoriaDetalle = cd.iCodConvocatoriaDetalle)
	  WHEN 0 THEN ''
   ELSE  
	   CASE       
		 WHEN cd.cRptaContrata='APROBADO' THEN 'SI'      
	   ELSE 'NO' END 
   END AS cAprobado,      
   cd.iCodCandidatoInforme,    
   cv.cPerfil,       
   CASE cd.iTipoPostulacion       
    WHEN 1 THEN 'OAEL'       
    WHEN 2 THEN 'SISTEMA'       
    WHEN 3 THEN 'EXCEPTUADO'       
    WHEN 4 THEN 'PREFERENCIAL'       
    WHEN 5 THEN 'SOLICITADO'       
    WHEN 6 THEN 'VIRTUAL'       
    WHEN 7 THEN 'STAKEHOLDER'  
    WHEN 8 THEN 'NOSE'        
   END AS cTipoPostulacion,        
   ci.cDNI,  
   ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,       
   ci.cFono,      
   ci.cCapacitacion as cHorarioDisp,   
     
   case       
      when ci.bRucMoq=1 then 'RUC'      
      when ci.bTrabajoMoq=1 then 'TR'       
      when ci.bEstudioMoq=1 then 'ES'      
      when ci.bConviveMoq=1 then 'CONV'       
      when ci.bCasadoMoq=1 then 'MA'      
      when ci.bHijosMoq=1 then 'HI'       
      when ci.bDNIMoq=1 then 'RE'       
      when ci.cCondicion='LOCAL' then 'DNI'          
      when ci.cCondicion='COMUNIDAD' then 'CO'          
      when ci.cCondicion='FORANEO' then 'DNI' else ''   
   end as cDocSustento,  
     
   CASE WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS bit)       
     WHEN cd.dFechaCargaCV IS NULL   
     THEN CAST(0 AS bit) ELSE CAST(1 AS bit)   
   END AS bCVCargado,  
     
     case when cd.dFechaCargaCV='1900-01-01' then ''       
     else convert(varchar, cd.dFechaCargaCV, 103)    
     end  as dFechaCargaCV,  
      
     case when cd.dFechaContactoContrata1='1900-01-01' then ''       
    else convert(varchar, cd.dFechaContactoContrata1, 103)    
     end  as dFechaRespuesta,       
       
     case cd.cRptaContrata  when '' then 'CV SIN REVISAR'       
     else  isnull(cd.cRptaContrata,'')   
     end as cRptaContrata,
	 
	 (SELECT COUNT(*) FROM ConvocatoriaDetalleHistorial cdh
	  WHERE cdh.iCodConvocatoriaDetalle = cd.iCodConvocatoriaDetalle) as CantFeedBack
  
  FROM dbo.ConvocatoriaDetalle AS cd     
  left JOIN  dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme           
  left JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria       
  left JOIN   ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain       
  where cm.iCodConvocatoriaMain=@iCodConvocatoriaMain         
  and cd.dFechaCargaCV<>'1900-01-01'      
  order by cm.cNroConvocatoria, cSubContrata,dfechafin,cPerfil        
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_PostulantesByConvocatoriaRanking]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO














 


CREATE PROCEDURE [dbo].[SP_DTW_PostulantesByConvocatoriaRanking] @iCodConvocatoriaMain int 
AS
SELECT     cd.iCodConvocatoriaDetalle, 
 '[ ' + cast(cv.iCantidad as varchar(5)) + ' ] ' +
 cv.cPerfil as cPerfil, 
 CASE cd.iTipoPostulacion 
 WHEN 1 THEN 'OAEL' 
 WHEN 2 THEN 'SISTEMA' 
 WHEN 3 THEN 'EXCEPTUADO' 
  WHEN 4 THEN 'PREFERENCIAL' 
   WHEN 5 THEN 'SOLICITADO' 
    WHEN 6 THEN 'VIRTUAL' 
	WHEN 7 THEN 'STAKEHOLDER'  
    END AS cTipoPostulacion,  
   ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
 ci.cFono,
 ci.cCapacitacion as cHorarioDisp ,
case 
when ci.bRucMoq=1 then 'RUC'
 when ci.bTrabajoMoq=1 then 'TR' 
 when ci.bEstudioMoq=1 then 'ES'
 when ci.bConviveMoq=1 then 'CONV' 
when ci.bCasadoMoq=1 then 'MA'
 when ci.bHijosMoq=1 then 'HI' 
 when ci.bDNIMoq=1 then 'RE' 
 when ci.cCondicion='LOCAL' then 'DNI'    
  when ci.cCondicion='COMUNIDAD' then 'CO'    
 when ci.cCondicion='FORANEO' then 'DNI' else '' end 
 as cDocSustento  ,
CASE 
 WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS bit) 
 WHEN cd.dFechaCargaCV IS NULL THEN CAST(0 AS bit) ELSE CAST(1 AS bit) END AS bCVCargado, 
 case 
 when cd.dFechaCargaCV='1900-01-01' then '' 
 else convert(varchar, cd.dFechaCargaCV, 103)  end  as dFechaCargaCV,
  case 
 when cd.dFechaContactoContrata1='1900-01-01' then '' 
 else convert(varchar, cd.dFechaContactoContrata1, 103)  end  as dFechaRespuesta,
    --  isnull(cd.cRptaContrata,'') as cRptaContrata ,
case cd.cRptaContrata  when '' then 'CV SIN REVISAR' 
else  isnull(cd.cRptaContrata,'') end as cRptaContrata ,
cd.cSeleccionado ,
case 
when cd.cRptaContrata='APROBADO' then 'S'
else 'N' end as cAprobado 
,
cd.iCodCandidatoInforme ,
--(select cast(isnull( cast((sum(isnull(cuop.iCalificaDescalifica,0))) as decimal(6,2)) / nullif(cast(count(curep.iCodCuestionarioPreguntas) as decimal(6,2)),0) ,0)  as decimal(6,2)) 

--from CuestionarioPostulante  cup 
--left join CuestionarioPostulanteRespuestas curep on curep.iCodCuestionarioPostulante=cup.iCodCuestionarioPostulante 
--left join CuestionarioPreguntasOpciones cuop on curep.iCodCuestionarioPreguntasOpciones=cuop.iCodCuestionarioPreguntasOpciones
--where cup.iCodConvocatoria=cv.iCodConvocatoria and 
--cup.iCodCandidatoInforme=cd.iCodCandidatoInforme and cup.bEnviado=1  )  
--as nRanking ,
cast(cd.iRanking as decimal(6,3))/100 as nRanking,
isnull(cpo.iCodCuestionarioPostulante,-1) as iCantCuestionarioPostulante 
FROM dbo.ConvocatoriaDetalle AS cd left JOIN
 dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme 
 left JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria 
  left JOIN   ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
    left join CuestionarioPostulante cpo on cpo.iCodCandidatoInforme=cd.iCodCandidatoInforme and cpo.iCodConvocatoria=cv.iCodConvocatoria  

where cm.iCodConvocatoriaMain=@iCodConvocatoriaMain   
 and cd.dFechaCargaCV<>'1900-01-01'
order by cm.cNroConvocatoria, cm.cSubContrata,cm.dfechafin,cv.cPerfil  









GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_PostulantesByConvocatoriaRankingSistema]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DTW_PostulantesByConvocatoriaRankingSistema] @iCodConvocatoriaMain int     
AS  
BEGIN  
 SELECT     cd.iCodConvocatoriaDetalle,     
  '[ ' + cast(cv.iCantidad as varchar(5)) + ' ] ' +    
  cv.cPerfil as cPerfil,     
  CASE cd.iTipoPostulacion     
  WHEN 1 THEN 'OAEL'     
  WHEN 2 THEN 'SISTEMA'     
  WHEN 3 THEN 'EXCEPTUADO'     
   WHEN 4 THEN 'PREFERENCIAL'     
    WHEN 5 THEN 'SOLICITADO'     
  WHEN 6 THEN 'VIRTUAL'     
  WHEN 7 THEN 'STAKEHOLDER'
  WHEN 8 THEN 'OTRO'      
  END AS cTipoPostulacion,      
    ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,     
  ci.cFono,    
 CASE     
  WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS bit)     
  WHEN cd.dFechaCargaCV IS NULL THEN CAST(0 AS bit) ELSE CAST(1 AS bit) END AS bCVCargado,     
  case     
  when cd.dFechaCargaCV='1900-01-01' then ''     
  else convert(varchar, cd.dFechaCargaCV, 103)  end  as dFechaCargaCV,    
   case     
  when cd.dFechaContactoContrata1='1900-01-01' then ''     
  else convert(varchar, cd.dFechaContactoContrata1, 103)  end  as dFechaRespuesta,    
  --  isnull(cd.cRptaContrata,'') as cRptaContrata ,    
 case cd.cRptaContrata  when '' then 'CV SIN REVISAR'     
 else  isnull(cd.cRptaContrata,'') end as cRptaContrata ,    
 cd.cSeleccionado ,    
 case     
 when cd.cRptaContrata='APROBADO' then 'S'    
 else 'N' end as cAprobado     
 ,    
 cd.iCodCandidatoInforme ,    
 --(select cast(isnull( cast((sum(isnull(cuop.iCalificaDescalifica,0))) as decimal(6,2)) / nullif(cast(count(curep.iCodCuestionarioPreguntas) as decimal(6,2)),0) ,0)  as decimal(6,2))     
    
 --from CuestionarioPostulante  cup     
 --left join CuestionarioPostulanteRespuestas curep on curep.iCodCuestionarioPostulante=cup.iCodCuestionarioPostulante     
 --left join CuestionarioPreguntasOpciones cuop on curep.iCodCuestionarioPreguntasOpciones=cuop.iCodCuestionarioPreguntasOpciones    
 --where cup.iCodConvocatoria=cv.iCodConvocatoria and     
 --cup.iCodCandidatoInforme=cd.iCodCandidatoInforme and cup.bEnviado=1  )      
 --as nRanking ,    
 cast(cd.iRanking as decimal(6,3))/100 as nRanking,    
 isnull(cpo.iCodCuestionarioPostulante,-1) as iCantCuestionarioPostulante ,    
  CASE cd.iTipoPostulacion     
  WHEN 1 THEN 2    
  WHEN 2 THEN 1     
  WHEN 3 THEN 2     
   WHEN 4 THEN 2     
    WHEN 5 THEN 3    
  WHEN 6 THEN 3    
  WHEN 7 THEN 3 
  WHEN 8 THEN 3      
  END AS iPrioridadPostulacion    
 FROM dbo.ConvocatoriaDetalle AS cd left JOIN    
  dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme     
  left JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria     
   left JOIN   ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain     
  left join CuestionarioPostulante cpo on cpo.iCodCandidatoInforme=cd.iCodCandidatoInforme and cpo.iCodConvocatoria=cv.iCodConvocatoria      
    
 where cm.iCodConvocatoriaMain=@iCodConvocatoriaMain       
  and cd.dFechaCargaCV<>'1900-01-01'    
 order by  iPrioridadPostulacion ASC,  cv.cPerfil ASC, cd.iRanking DESC  
  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_PostulantesDisponiblesBDPorGestorComunidad]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DTW_PostulantesDisponiblesBDPorGestorComunidad]     
@iCodUsuario int       
AS    
BEGIN    
    
 SELECT ci.iCodCandidatoInforme,    
     ci.cDNI,    
     ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,    
     ci.cUbigeo AS cDepartamento,  
    
     CASE ci.cCondicion    
    WHEN 'LOCAL' THEN 'LOCAL'    
    WHEN 'RESIDENTE' THEN 'RESIDENTE'    
    WHEN 'COMUNIDAD' THEN 'COMUNIDAD'    
    WHEN 'FORANEO' THEN 'LOCAL-SV'    
    ELSE 'LOCAL-SV'    
     END AS cCondicion,   
  ci.cComunidad,  
     CASE    
    WHEN ci.cOcupacion IS NULL THEN ''    
    ELSE ci.cOcupacion+ CASE    
          WHEN ci.cOcupacion2 IS NULL THEN ''    
          WHEN ci.cOcupacion2='' THEN ''    
          ELSE ' - ' + ci.cOcupacion2    
         END    
   END AS cOcupacion,    
  ltrim(rtrim(ci.cLicenciaConducir + ' ' + ci.cCertificacion)) AS cSkills,    
  ci.dFechaEvaluacion,    
  ci.bEvaluado,    
  ci.cAptitud,    
  ci.bVerificativa,    
  ci.iEstadoVerificativa,    
  CASE ci.bCargaBox WHEN 0 THEN 'SI' WHEN 1 THEN 'NO'END bCargaBox,    
  cast(0 AS bit) AS bContratado ,    
  CONVERT(date, ci.dFechaEvaluacion) AS dFechaRegistro,    
  CASE    
   WHEN ltrim(rtrim(ci.cObservacion))='SELECCIONADO' THEN CAST (1 AS BIT)    
   ELSE CAST(0 AS BIT)    
  END AS bSeleccionado ,    
  ci.iResultadoVerificativa,    
  ci.cPuestoEspecialidad,    
  ci.iTiempoExperiencia,    
  ci.bDisponible,    
  ci.cCapacitacion AS cHorarioDisponible,    
 CASE isnull(fld.iCodFuerzaLaboralDetalle, 0)    
  WHEN 0 THEN cast(0 AS bit)    
  ELSE cast(1 AS bit)    
 END AS Anexo2,    
          CASE isnull(    
               (SELECT top 1 CASE    
                  WHEN aa.bAnulado=1 THEN 'N'    
                  ELSE CASE    
                     WHEN DATEADD(DAY, 10, CAST(a.dFechaAprobacion AS date))>=CAST(GETDATE() AS DATE) THEN aa.cProcesoEtapa    
                     WHEN aa.cProcesoEtapa='R' THEN 'V'    
                     ELSE 'V'    
                    END    
                 END    
                FROM anexoadmision a    
                INNER JOIN AnexoAdmisionDetalle aa ON a.iCodAnexoAdmision=aa.iCodAnexoAdmision    
                LEFT JOIN Contrata emp ON a.iCodContrata=emp.iCodContrata    
                WHERE aa.iCodCandidatoInforme=ci.iCodCandidatoInforme    
               AND DATEADD(DAY, 10, CAST(a.dFechaAprobacion AS date))>=CAST(GETDATE() AS DATE)    
                ORDER BY iCodAnexoAdmisionDetalle DESC),'N')    
           WHEN 'R' THEN cast(0 AS bit)    
           WHEN 'N' THEN cast(0 AS bit)    
           ELSE cast(1 AS bit)    
          END AS PGI,    
          floor((cast(convert(varchar(8), getdate(), 112) AS int)- cast(convert(varchar(8), ci.dFechaNac, 112) AS int)) / 10000) AS Edad,    
          CASE    
           WHEN ci.dFechaEvaluacionResultado='1900-01-01' THEN 'SIN EXP.'    
           WHEN ci.dFechaEvaluacionResultado='0001-01-01' THEN 'SIN EXP.'    
           ELSE cast(year(ci.dFechaEvaluacionResultado) AS varchar(4))    
          END AS cUltimaExp,    
          CASE    
               (SELECT count(icodcandidatoinforme)    
             FROM fuerzalaboraldetalle fld    
             WHERE fld.icodcandidatoinforme=ci.icodcandidatoinforme)    
           WHEN 0 THEN ''    
           ELSE 'SI'    
          END AS cFFLLHistorial,    
          isnull(cid.bConsentimiento, cast(0 AS bit)) AS [CDatosP]    
 FROM dbo.CandidatoInforme ci    
 LEFT JOIN fuerzalaboraldetalle fld     
 ON ci.iCodCandidatoInforme=fld.iCodCandidatoInforme AND fld.bCesado=0 AND fld.iEstado<>0    
 LEFT JOIN CandidatoInformeAdd cid ON ci.iCodCandidatoInforme=cid.iCodCandidatoInforme    
 WHERE ci.cComunidad in( SELECT DISTINCT comu.cComunidad     
       FROM PersonaGestorComunidad pgc     
       LEFT JOIN Comunidad comu ON comu.iCodComunidad=pgc.iCodComunidad    
       LEFT JOIN Persona per ON per.iCodPersona = pgc.iCodPersona    
       LEFT JOIN Usuario usu ON usu.iCodPersona = per.iCodPersona    
       WHERE pgc.bHabilitar=1 AND usu.iCodUsuario=@iCodUsuario)    
    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_PotulantesPorConvocatoria]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DTW_PotulantesPorConvocatoria]        
@iCodConvocatoria int,        
@iCodUsuario int           
AS        
BEGIN        
        
   SELECT         
    cd.iCodConvocatoriaDetalle,        
    c.iCodConvocatoria,        
    ci.cDNI,  
    ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,
	ci.cComunidad,
	ci.cCondicion,
    cc.cComunidad as 'ComunidadConvocatoria',  
    pgc.iCodPersona,        
    u.cNick,        
    u.iCodUsuario      
   FROM ConvocatoriaDetalle cd        
   LEFT JOIN Convocatoria c ON c.iCodConvocatoria = cd.iCodConvocatoria        
   LEFT JOIN CandidatoInforme ci ON ci.iCodCandidatoInforme=cd.iCodCandidatoInforme    
   LEFT JOIN ConvocatoriaComunidad cc ON c.iCodConvocatoria = cc.iCodConvocatoria        
   --LEFT JOIN ConvocatoriaMain cm ON cd.iCodConvocatoria = cc.iCodConvocatoria        
   ----LEFT JOIN Contrata con ON con.iCodContrata=cm.iCodContrata        
   INNER JOIN PersonaGestorComunidad pgc on pgc.iCodComunidad = cc.iCodComunidad and pgc.bHabilitar=1 and ci.cComunidad=cc.cComunidad   
   LEFT JOIN Usuario u ON u.iCodPersona = pgc.iCodPersona     
   WHERE  c.iCodConvocatoria = @iCodConvocatoria        
   --AND (u.iCodUsuario=@iCodUsuario)       
      
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_UsuarioPermiso]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DTW_UsuarioPermiso]  
@iCodUsuario int                            
AS                          
BEGIN  
  
	SELECT up.iCodUFormulario, up.iCodUsuarioSistema, f.cNomCortoFormulario, f.cNomFormulario 
	FROM UsuarioPermiso up  
	LEFT JOIN UFormulario f ON up.iCodUFormulario=f.iCodUFormulario  
	WHERE f.cGrupo='Web Contratista'  
	AND up.iCodUsuarioSistema=@iCodUsuario
	AND up.bVisualizar=1  
  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DTW_VerificarPostulacionDuplicada]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DTW_VerificarPostulacionDuplicada]  
@iCodConvocatoria int,          
@iCodCandidatoInforme int             
AS          
BEGIN          
     
   IF EXISTS ( SELECT   ci.iCodCandidatoInforme  
      FROM ConvocatoriaDetalle cd          
      LEFT JOIN Convocatoria c ON c.iCodConvocatoria = cd.iCodConvocatoria          
      LEFT JOIN CandidatoInforme ci ON ci.iCodCandidatoInforme=cd.iCodCandidatoInforme      
      WHERE  c.iCodConvocatoria = @iCodConvocatoria          
      AND ci.iCodCandidatoInforme=@iCodCandidatoInforme)  
   BEGIN  
		SELECT 1;  
   END  
   ELSE  
   BEGIN   
		SELECT 0;  
   END  
  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ED_RptEvaluacionDesempenoFicha]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
CREATE PROCEDURE [dbo].[SP_ED_RptEvaluacionDesempenoFicha]                       
@iCodEvaluacionDesempeno int                        
AS                      
BEGIN                     
  WITH TABLA_VALORES AS (  
    SELECT   
        eval.iCodEvaluacionDesempeno,  
        erd.iCodEvaluacionRubro,  
  er.cDescripcionEvaluacionRubro,  
        CAST(ROUND(SUM(edd.nPuntajeEvaluacion),0) AS INT) AS SumPuntajePorRubro,  
        CAST(ROUND(AVG(edd.nPuntajeEvaluacion),0) AS INT) AS PromPuntajePorRubro  
    FROM   
        EvaluacionDesempeno eval  
    LEFT JOIN   
        EvaluacionDesempenoDetalle edd ON eval.iCodEvaluacionDesempeno = edd.iCodEvaluacionDesempeno  
    LEFT JOIN   
        EvaluacionRubroDetalle erd ON erd.iCodEvaluacionRubroDetalle = edd.iCodEvaluacionRubroDetalle  
 LEFT JOIN   
        EvaluacionRubro er ON er.iCodEvaluacionRubro = erd.iCodEvaluacionRubro  
    GROUP BY   
        erd.iCodEvaluacionRubro,  
        eval.iCodEvaluacionDesempeno,  
  er.cDescripcionEvaluacionRubro  
),  
  
PROMEDIO_TOTAL AS (  
    SELECT   
        iCodEvaluacionDesempeno,  
        CAST(ROUND(AVG(PromPuntajePorRubro),0) AS INT) AS PromedioDelPromedio  
    FROM   
        TABLA_VALORES  
    GROUP BY   
        iCodEvaluacionDesempeno  
)  
                
  SELECT            
      edd.iCodEvaluacionDesempeno                           
     ,fld.iCodFuerzaLaboralDetalle          
     ,(SELECT cDisplayMember FROM TDCatalogo cat  
  WHERE cat.cValueMember = cTipoEvaluacion AND cat.cTabla='EvaluacionDesempeno' AND cat.cNombreGrupo='TipoEvaluacion') as cTipoEvaluacion  
     ,CASE WHEN CONVERT(VARCHAR,dFechaSolicitud,23) ='1900-01-01' THEN ''       
     ELSE CONVERT(VARCHAR,dFechaSolicitud,105) END AS dFechaSolicitud          
     ,CASE WHEN CONVERT(VARCHAR,eval.dFechaEvaluacion,23) ='1900-01-01' THEN ''       
     ELSE CONVERT(VARCHAR,eval.dFechaEvaluacion,105) END AS dFechaEvaluacion      
     ,bEsEvaluado      
     ,fld.cOcupacion      
     ,cPuestoPromovido          
     ,cNombreSupervisor          
     ,CASE WHEN CONVERT(VARCHAR,dFechaContratacion,23) ='1900-01-01' THEN ''       
     ELSE CONVERT(VARCHAR,dFechaContratacion,105) END AS dFechaContratacion            
     ,cComentarioEmpleado          
     ,cComentarioSupervisor          
     ,cont.cNomContrata      
     ,contrato.cNroContrato      
     ,cand.cNombres + ' ' + cand.cApellidos as cNombresyApellidos      
     ,CASE WHEN cand.cSexo = 'M' THEN 'MASCULINO' WHEN cand.cSexo = 'F' THEN 'FEMENINO' ELSE '' END AS cSexo      
     ,cand.cDNI      
     ,cand.cUbigeo      
     ,case when ltrim(rtrim(cand.cEducaSuperior))<>'' then 'UNIVERSITARIO'      
     else case when ltrim(rtrim(cand.cEducaTecnica))<>'' then 'TECNICO'      
           else case when ltrim(rtrim(cand.cEducaSecundaria))<>'' then 'SECUNDARIA'      
        else 'SIN DATOS' end end end as cNivelInstruccion      
     ,CASE WHEN CONVERT(VARCHAR, cand.dFechaNac,23) ='1900-01-01' THEN ''       
     ELSE CONVERT(VARCHAR, cand.dFechaNac,105) END AS cFechaNacimiento          
     ,isnull(u.cDepartamento,'') as cDepartamentoNacimiento      
     ,isnull(u.cProvincia,'')  as cProvinciaNacimiento      
     ,isnull(u.cDistrito,'') as cDistritoNacimiento      
     ,cand.cComunidad as cComunidad,    
  edd.nPuntajeEvaluacion,         
  edd.cDescripcionEvaluacionRubroDetalle,        
  edd.cDescripcionEvaluacionRubro,        
 --    edd.iCodEvaluacionDesempeno,  
 --tv.iCodEvaluacionDesempeno,  
 --   tv.iCodEvaluacionRubro,  
    tv.SumPuntajePorRubro,  
    tv.PromPuntajePorRubro,  
    pt.PromedioDelPromedio,  
 CASE   
        WHEN pt.PromedioDelPromedio <= 1 THEN 'MUY BAJO'  
        WHEN pt.PromedioDelPromedio <= 2 THEN 'BAJO'  
        WHEN pt.PromedioDelPromedio <= 3 THEN 'MEDIO'  
        WHEN pt.PromedioDelPromedio <= 4 THEN 'ALTO'  
        WHEN pt.PromedioDelPromedio <= 5 THEN 'MUY ALTO'  
    ELSE 'FUERA DE ESCALA'  
    END AS cEscalaFinal    
  FROM EvaluacionDesempeno eval    
  LEFT JOIN EvaluacionDesempenoDetalle edd ON eval.iCodEvaluacionDesempeno= edd.iCodEvaluacionDesempeno    
  LEFT JOIN FuerzaLaboralDetalle fld ON fld.iCodFuerzaLaboralDetalle=eval.iCodFuerzaLaboralDetalle      
  LEFT JOIN FuerzaLaboral fl ON fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral      
  LEFT JOIN Contrata cont ON cont.iCodContrata = fl.iCodContrata      
  LEFT JOIN ContratistaContrato contrato ON contrato.iCodContratistaContrato= fl.iCodContratistaContrato      
  LEFT JOIN CandidatoInforme cand On cand.iCodCandidatoInforme = fld.iCodCandidatoInforme      
  LEFT JOIN TDUbigeo u on cand.cUbigeo=u.cUbigeo       
  LEFT JOIN comunidad com on cand.cComunidad=com.cComunidad  
  LEFT JOIN TABLA_VALORES tv ON tv.iCodEvaluacionDesempeno = EVAL.iCodEvaluacionDesempeno and tv.cDescripcionEvaluacionRubro=edd.cDescripcionEvaluacionRubro  
  LEFT JOIN PROMEDIO_TOTAL pt ON tv.iCodEvaluacionDesempeno = pt.iCodEvaluacionDesempeno  
  WHERE  edd.iCodEvaluacionDesempeno = @iCodEvaluacionDesempeno                    
                    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ELIM_ConvocatoriaDetalleHistorial]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ELIM_ConvocatoriaDetalleHistorial]            
 @iCodConvocatoriaDetalleHistorial INT,  
 @iCodConvocatoriaDetalle INT  
AS            
BEGIN            
  BEGIN TRY   
     
    BEGIN TRAN SP_ELIM_CDHistorial         
         
    DELETE dbo.ConvocatoriaDetalleHistorial  
    WHERE iCodConvocatoriaDetalleHistorial=@iCodConvocatoriaDetalleHistorial  
  
    --Actualizar con el ultimo feedBack la cabecera principal  
  
    IF EXISTS(SELECT 1 FROM ConvocatoriaDetalleHistorial   
     WHERE iCodConvocatoriaDetalle=@iCodConvocatoriaDetalle)  
    BEGIN  
      
		DECLARE @VAR_iCodConvocatoriaDetalle INT;  
		DECLARE @VAR_cSeleccinado NVARCHAR(6);  
		DECLARE @VAR_cRptaContrata NVARCHAR(200);  
		DECLARE @VAR_cObs NVARCHAR(200);  
		DECLARE @VAR_dFechaCreacion DATETIME;  
  
        SELECT  TOP 1  
				 @VAR_iCodConvocatoriaDetalle = iCodConvocatoriaDetalle,  
				 @VAR_cSeleccinado = cSeleccinado,  
				 @VAR_cRptaContrata = cRptaContrata,  
				 @VAR_cObs = cObs,  
				 @VAR_dFechaCreacion = dFechaCreacion  
		FROM ConvocatoriaDetalleHistorial  
		WHERE iCodConvocatoriaDetalle=@iCodConvocatoriaDetalle  
		ORDER BY dFechaCreacion DESC  
  
		UPDATE dbo.ConvocatoriaDetalle  
		SET    
		   cSeleccionado= @VAR_cSeleccinado,  
		   cRptaContrata=@VAR_cRptaContrata,  
		   cObs = @VAR_cObs,  
		   dFechaSis = @VAR_dFechaCreacion,  
		   dFechaContactoContrata1=@VAR_dFechaCreacion  
		WHERE iCodConvocatoriaDetalle=@VAR_iCodConvocatoriaDetalle  
    END  
    ELSE   
    BEGIN  
  
        UPDATE dbo.ConvocatoriaDetalle  
		SET    
			cSeleccionado='',  
			cRptaContrata='',  
			cObs = '',  
			dFechaSis = '1900-01-01 00:00:00.000',  
			dFechaContactoContrata1='1900-01-01 00:00:00.000'  
		WHERE iCodConvocatoriaDetalle=@iCodConvocatoriaDetalle  

    END  
  
    SELECT 1  
  
    COMMIT TRAN SP_ELIM_CDHistorial            
    
  END TRY     
     
  BEGIN CATCH     
    
    SELECT -1            
    ROLLBACK TRAN SP_ELIM_CDHistorial  
      
  END CATCH                  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ELIM_ConvocatoriaMainAntesCrearDetalles]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_ELIM_ConvocatoriaMainAntesCrearDetalles]
@iCodConvocatoriaMain INT 
AS
BEGIN

	BEGIN TRY
			BEGIN TRAN SP_ELIM_ConvocatoriaMain

			IF EXISTS(SELECT * FROM dbo.Convocatoria
			          WHERE iCodConvocatoriaMain=@iCodConvocatoriaMain)
			BEGIN
				SELECT 0
			END
			ELSE
			BEGIN
				DELETE FROM dbo.ConvocatoriaMain
				WHERE iCodConvocatoriaMain=@iCodConvocatoriaMain
				SELECT 1
			END
			
			COMMIT TRAN SP_ELIM_ConvocatoriaMain
			
	END TRY
	BEGIN CATCH
			SELECT -1
			ROLLBACK TRAN SP_ELIM_ConvocatoriaMain
	END CATCH
		
END

GO
/****** Object:  StoredProcedure [dbo].[SP_ELIM_EvaluacionDesempeno]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ELIM_EvaluacionDesempeno]          
@iCodEvaluacionDesempeno INT        
AS                  
BEGIN                         
 BEGIN TRY      
	BEGIN TRAN SP_ELIM_EvaluacionDesempeno

	DELETE FROM dbo.EvaluacionDesempenoDetalle WHERE iCodEvaluacionDesempeno=@iCodEvaluacionDesempeno
	DELETE FROM dbo.EvaluacionDesempeno WHERE iCodEvaluacionDesempeno=@iCodEvaluacionDesempeno

	SELECT 1                  
	COMMIT TRAN SP_ELIM_EvaluacionDesempeno                  
                     
 END TRY                  
 BEGIN CATCH                  
	SELECT -1                  
	ROLLBACK TRAN SP_ELIM_EvaluacionDesempeno                  
 END CATCH                             
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_ELIM_FL_TrabajadorPorCodFuerzaLaboralDetalle]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ELIM_FL_TrabajadorPorCodFuerzaLaboralDetalle]
@iCodFuerzaLaboralDetalle INT 
AS
BEGIN

	BEGIN TRY
			BEGIN TRAN SP_ELIM_FL_TrabajadorPorCodFLD

			IF EXISTS(SELECT * FROM dbo.Fuerzalaboraldetalle
			          WHERE iCodFuerzaLaboralDetalle=@iCodFuerzaLaboralDetalle and iEstado=1)
			BEGIN
				DELETE from Fuerzalaboraldetalle 
				WHERE iCodFuerzaLaboralDetalle=@iCodFuerzaLaboralDetalle and iEstado=1

				SELECT 1
			END
			ELSE
			BEGIN
				SELECT 0
			END
			
			COMMIT TRAN SP_ELIM_FL_TrabajadorPorCodFLD
			
	END TRY
	BEGIN CATCH
			SELECT -1
			ROLLBACK TRAN SP_ELIM_FL_TrabajadorPorCodFLD
	END CATCH
		
END

GO
/****** Object:  StoredProcedure [dbo].[SP_ELIM_RequerimientoAntesCrearDetalles]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_ELIM_RequerimientoAntesCrearDetalles]
@iCodConvocatoriaMain INT 
AS
BEGIN

	BEGIN TRY
			BEGIN TRAN ELIM_RequerimientoAntesCrearDeta

			IF EXISTS(SELECT * FROM dbo.Convocatoria
			          WHERE iCodConvocatoriaMain=@iCodConvocatoriaMain)
			BEGIN
				SELECT 0
			END
			ELSE
			BEGIN
				DELETE FROM dbo.ConvocatoriaMain
				WHERE iCodConvocatoriaMain=@iCodConvocatoriaMain
				SELECT 1
			END
			
			COMMIT TRAN ELIM_RequerimientoAntesCrearDeta
			
	END TRY
	BEGIN CATCH
			SELECT -1
			ROLLBACK TRAN ELIM_RequerimientoAntesCrearDeta
	END CATCH
		
END

GO
/****** Object:  StoredProcedure [dbo].[SP_FL_CierraPeriodoFFLL]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_FL_CierraPeriodoFFLL] @iCodFuerzaLaboral int, @iCodUsuarioCierre int AS
BEGIN

		UPDATE FuerzaLaboral
		SET iCodEstado=2
		WHERE iCodFuerzaLaboral=@iCodFuerzaLaboral

		UPDATE FuerzaLaboralDetalle
		SET iCodUsuarioCierra=@iCodUsuarioCierre, dFechaCierre=getdate()
		WHERE iCodFuerzaLaboral=@iCodFuerzaLaboral

END
GO
/****** Object:  StoredProcedure [dbo].[SP_FL_DetalleFuerzaLaboral]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_FL_DetalleFuerzaLaboral] @iCodFuerzaLaboral int   
AS  
BEGIN

WITH InfoFuerzaLaboral AS(
		SELECT  fld.iCodFuerzaLaboralDetalle,   
				~fld.bCesado as bActivo,  
				ci.cDNI,  
				ci.cApellidos + ' ' + ci.cNombres as cNomCompleto ,  
				case 
					WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'LOCAL' 
					WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'LOCAL' 
					when ltrim(rtrim(substring(u.cUbigeo,1,2)))='02' then 'LOCAL' 
					when ltrim(rtrim(u.cUbigeo))='140902' then 'LOCAL' 
					when ltrim(rtrim(u.cUbigeo))='090409' then 'LOCAL' 
					when ltrim(rtrim(u.cUbigeo))='090401' then 'LOCAL' 
					ELSE 
						'FORANEO'	  
				END AS [CONDICION],
					case 
					WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'AID' 
					WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'AIO' 
					WHEN LTRIM(RTRIM(u.cUbigeo))='020805'  OR
					LTRIM(RTRIM(u.cUbigeo))='020813'  OR
					LTRIM(RTRIM(u.cUbigeo))='021901'  OR
					LTRIM(RTRIM(u.cUbigeo))='020814'  THEN 'AID'  
					WHEN LTRIM(RTRIM(u.cUbigeo))='021901'  OR
					LTRIM(RTRIM(u.cUbigeo))='020301'  OR
					LTRIM(RTRIM(u.cUbigeo))='020304'  OR
					LTRIM(RTRIM(u.cUbigeo))='020305'  OR
					LTRIM(RTRIM(u.cUbigeo))='020310'  OR
					LTRIM(RTRIM(u.cUbigeo))='020321'  OR
					LTRIM(RTRIM(u.cUbigeo))='020323'  OR
					LTRIM(RTRIM(u.cUbigeo))='020325'  OR
					LTRIM(RTRIM(u.cUbigeo))='020803'  OR
					LTRIM(RTRIM(u.cUbigeo))='021204'  OR
					LTRIM(RTRIM(u.cUbigeo))='021205'  OR
					LTRIM(RTRIM(u.cUbigeo))='021206'  OR
					LTRIM(RTRIM(u.cUbigeo))='021209'  OR
					LTRIM(RTRIM(u.cUbigeo))='021210'  OR
					LTRIM(RTRIM(u.cUbigeo))='090401'  OR
					LTRIM(RTRIM(u.cUbigeo))='090409'  OR
					LTRIM(RTRIM(u.cUbigeo))='140902'  THEN 'AIO' 
					when ltrim(rtrim(substring(u.cUbigeo,1,2)))='02' then  --REGIONAL
						  'REGIONAL'
	 
					else     'FORANEO'
					END as [CONDICION DETALLE],   
				fld.cOcupacion,  
				fld.cMOCMONC,  
				fld.dFechaIni ,  
				case fld.iEstado   
				when 1 then 'Nuevo'   
				when 2 then 'Anterior'   
				when 3 then 'Observado'   
				when 4 then 'Conforme'   
				when 9 then 'Cesado'   
				else ''  
				end  cEstado   
		FROM  FuerzaLaboralDetalle AS fld    
		INNER JOIN CandidatoInforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme
		left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
		left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
		left join CandidatoInformeCondicion cond on ci.iCodCandidatoInforme=cond.iCodCandidatoInforme 
		left join TDCondicionSustento tdco on cond.iCodTDCondicionSustentoNueva=tdco.iCodTDCondicionSustento and  tdco.iCodUsuario=1  
		left join Comunidad com on com.iCodComunidad=cond.iCodComunidad and com.iCodComunidad>1     
		where cond.iCodCandidatoInformeCondicion=(
		select MAX(cond9.iCodCandidatoInformeCondicion) 
		FROM CandidatoInformeCondicion cond9 
		WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme  
		)
		AND fld.iCodFuerzaLaboral=@iCodFuerzaLaboral      
		
		)

		SELECT iCodFuerzaLaboralDetalle,
				bActivo,
				cDNI,
				cNomCompleto,
				CASE CONDICION + ' - ' + [CONDICION DETALLE]
				WHEN 'FORANEO - FORANEO'
			    THEN 'FORANEO'
				ELSE
				CONDICION + ' - ' + [CONDICION DETALLE] 
				END AS cCondicion,
				cOcupacion,
				cMOCMONC,
				dFechaIni,
				cEstado
		FROM InfoFuerzaLaboral
		ORDER by iCodFuerzaLaboralDetalle DESC
END
GO
/****** Object:  StoredProcedure [dbo].[SP_FL_GetCapacitacionesPorCI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_FL_GetCapacitacionesPorCI]   
@iCodCandidatoInforme int      
AS      
BEGIN    
  
 SELECT   
  ca.iCodCapacitacionAdmision,
  CAST (cp.iPeriodo AS VARCHAR(10)) + ' - ' + cp.cNombrePrograma as [cNombrePrograma],
  ccm.cNomCursoModulo,  
  cc.cNombreCurso,  
  cpc.iCodCapacitacionProgramaCurso,  
  cpc.iMeta,  
  ca.dFechaRegistro,  
  ci.cDNI,  
  ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto,  
  CASE ci.bSustentoCV  
     WHEN 1 THEN CASE ci.cCondicion  
         WHEN 'LOCAL' THEN 'LOCAL'  
         WHEN 'RESIDENTE' THEN 'LOCAL'  
         WHEN 'COMUNIDAD' THEN 'LOCAL'  
         WHEN 'FORANEO' THEN 'FORANEO'  
         ELSE 'FORANEO'  
        END  
     ELSE 'FORANEO'  
  END AS cCondicion,  
  ci.cUbigeoResidencia,  
  ci.bEvaluado,  
  ci.bContratado,  
  ci.bCargaBox,  
  ca.iGradoAcademico,  
  ca.iTiempoExperiencia,  
  ca.iLicenciaConducirValor,  
     ca.iRecordConductor,  
     ca.iCursoEspecialValor,  
     CASE  
      WHEN ca.dFechaEvaluaCV = '1900-01-01' THEN ''  
      ELSE CONVERT(varchar, ca.dFechaEvaluaCV, 103)  
     END AS dFechaEvaluaCV,  
     CASE  
      WHEN  
       (SELECT COUNT(cmatpz.iCodCandidatoInforme)  
        FROM CapacitacionMatricula cmatpz  
        WHERE cmatpz.iCodCandidatoInforme = ci.iCodCandidatoInforme  
       AND (cmatpz.iEstadoProceso = 4  
         OR cmatpz.iEstadoProceso = 4)) >= 1 THEN 'NO APTO'  
      WHEN isnull(cmat.iEstadoProceso, 0) = 1 THEN 'NO APTO'  
      ELSE CASE  
      WHEN ca.bApto = 1 THEN 'APTO'  
      WHEN ca.bApto = 0 THEN 'NO APTO'  
      WHEN ca.iEstado = 2 THEN 'NO APTO'  
     END  
     END AS cApto,  
     CASE  
      WHEN ca.dFechaEvaluacionTecnica = '1900-01-01' THEN ''  
      ELSE CONVERT(varchar, ca.dFechaEvaluacionTecnica, 103)  
     END AS dFechaEvaluacionTecnica,  
     ca.nEvaluacionTecnica,  
     ca.cTipoAlumno,  
     ca.iEstado,  
     ci.iCodCandidatoInforme,  
     ca.iCodPersonaEvaluaCV,  
     ca.bApto,  
     ISNULL(u.cNick, '') AS cNick,  
     ca.iLicenciaConducirTiempo,  
     cpc.iGradoAcademico AS iGradoAcademicoReq,  
     cpc.iTiempoExperiencia AS iTiempoExperienciaReq,  
     cpc.iLicenciaConducirValor AS iLicenciaConducirValorReq,  
     cpc.iRecordConductor AS iRecordConductorReq,  
     cpc.iCursoEspecialValor AS iCursoEspecialValorReq,  
     cpc.iLicenciaConducirTiempo AS iLicenciaConducirTiempoReq,  
     CASE  
      WHEN isnull(cmat.iEstadoProceso, 0) = 1 THEN 'ES BENEFICIARIO DE UN CURSO DE LA FASE I'  
      WHEN  
       (SELECT COUNT(cmatpz.iCodCandidatoInforme)  
        FROM CapacitacionMatricula cmatpz  
        WHERE cmatpz.iCodCandidatoInforme = ci.iCodCandidatoInforme  
       AND (cmatpz.iEstadoProceso = 4  
         OR cmatpz.iEstadoProceso = 4)) >= 1 THEN 'USTED ESTA DESCALIFICADO POR ABANDONO DE UN CURSO ( 2019 - 2020 )'  
      ELSE CASE  
      WHEN ci.bsustentoCV = 1  
        AND (ci.cCondicion = 'LOCAL'  
          OR ci.ccondicion = 'RESIDENTE'  
          OR ci.cCondicion = 'COMUNIDAD') THEN CASE  
                     WHEN cpc.iGradoAcademico > ca.iGradoAcademico THEN 'NO ACREDITA NIVEL DE ESTUDIOS REQUERIDO'  
                     WHEN cpc.iTiempoExperiencia > ca.iTiempoExperiencia THEN 'NO ACREDITA TIEMPO DE EXPERIENCIA REQUERIDO'  
                     WHEN cpc.iLicenciaConducirValor > ca.iLicenciaConducirValor THEN 'NO ACREDITA EL TIPO DE LICENCIA DE CONDUCIR REQUERIDO'  
                     WHEN cpc.iRecordConductor > ca.iRecordConductor THEN 'NO ACREDITA RECORD DE CONDUCTOR REQUERIDO'  
                     WHEN cpc.iLicenciaConducirTiempo > ca.iLicenciaConducirTiempo THEN 'NO ACREDITA TIEMPO DE EXPERIENCIA REQUERIDO EN LICENCIA DE CONDUCIR'  
                     WHEN cpc.iCursoEspecialValor > ca.iCursoEspecialValor THEN 'NO ACREDITA LOS CURSOS O CERTIFICACIONES REQUERIDOS'  
                     WHEN ci.cCondicion = 'FORANEO'  
                    OR ci.cCondicion = '' THEN 'NO ACREDITA SUSTENTOS DE LOCAL'  
                     WHEN ca.iEstado = 2 THEN ca.cObs  
                     ELSE CASE ca.bApto  
                     WHEN 1 THEN ''  
                    END  
                    END  
      ELSE CASE  
         WHEN isnull(cad.iCodCandidatoAdmision, 0) > 0 THEN 'NO COMPLETÓ EL PROCESO DE REGISTRO OAEL'  
         ELSE 'NO ACREDITA SUSTENTO DE LOCAL'  
        END  
     END  
     END AS cObs,  
     ca.iRanking,  
     ca.cLugarInscripcion,  
     CASE ca.iTipoCV  
      WHEN 1 THEN 'N'  
      WHEN 2 THEN 'S'  
      WHEN 3 THEN 'A'  
     END AS cTipoCV,
     cpc.iCodCapacitacionPrograma,  
     cpc.cObs AS cInfoCurso,  
     '' AS cNotasObs,  
    (SELECT SUM(ISNULL(cpval.iCalificaDescalifica, 0)) AS Expr1  
     FROM dbo.CapacitacionAdmisionRequisitoValor AS ca  
     LEFT OUTER JOIN dbo.CapacitacionProgramaCursoRequisitoValor AS cpval ON ca.iCodCapacitacionProgramaCursoRequisitoValor = cpval.iCodCapacitacionProgramaCursoRequisitoValor  
     WHERE (ca.iCodCapacitacionAdmision = ca.iCodCapacitacionAdmision)) AS NroReq,  
   c.cNomContrata,
   c.cNomContrata as [cEntidadCapacita]
 FROM dbo.CapacitacionCurso cc  
 INNER JOIN dbo.CapacitacionProgramaCurso AS cpc ON cc.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso
 LEFT JOIN dbo.CapacitacionPrograma cp ON cp.iCodCapacitacionPrograma = cpc.iCodCapacitacionPrograma
 INNER JOIN dbo.CapacitacionAdmision ca ON cpc.iCodCapacitacionProgramaCurso = ca.iCodCapacitacionProgramaCurso  
 INNER JOIN dbo.CandidatoInforme AS ci ON ca.iCodCandidatoInforme = ci.iCodCandidatoInforme  
 INNER JOIN dbo.CapacitacionCursoModulo ccm ON cc.iCodCapacitacionCursoModulo = ccm.iCodCapacitacionCursoModulo  
 LEFT JOIN dbo.Contrata c ON c.iCodContrata=cpc.iCodContrataCapacita  
 LEFT OUTER JOIN dbo.Usuario AS u ON ca.iCodPersonaEvaluaCV = u.iCodPersona  
 LEFT OUTER JOIN dbo.CandidatoAdmision AS cad ON ci.iCodCandidatoInforme = cad.iCodCandidatoInforme  
 AND cad.iCodCandidatoAdmisionTipo = 1  
 AND cad.bImprocedente = 0  
 LEFT OUTER JOIN dbo.CapacitacionMatricula AS cmat ON cmat.iCodCandidatoInforme = ci.iCodCandidatoInforme  
 AND cmat.iCodCapacitacionProgramaCurso >= 48  
 AND cmat.iCodCapacitacionProgramaCurso <= 58  
 WHERE ci.iCodCandidatoInforme=@iCodCandidatoInforme  
  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_FL_GetCerroPeriodoFFLLPorContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_FL_GetCerroPeriodoFFLLPorContrata] 
@iCodContrata int
AS
BEGIN   
		DECLARE @VAR_PERIODO_ACTIVO INT;
		DECLARE @VAR_MES_ACTIVO INT;
	
		SET @VAR_PERIODO_ACTIVO = (SELECT YEAR(cValue1) FROM dbo.UConfig2 WHERE cName='FechaActivoFFLL')
		SET @VAR_MES_ACTIVO = (SELECT MONTH(cValue1) FROM dbo.UConfig2 WHERE cName='FechaActivoFFLL')
	
		IF EXISTS (
			SELECT 1 FROM FuerzaLaboral
			WHERE iCodContrata=@iCodContrata 
			AND iPeriodo=@VAR_PERIODO_ACTIVO 
			AND iMes=@VAR_MES_ACTIVO 
			AND iCodEstado=1
		)
		BEGIN
			SELECT 0 -- NO CERRO AUN
		END
		ELSE
		BEGIN
			SELECT 1  --CERRO
		END
END
GO
/****** Object:  StoredProcedure [dbo].[SP_FL_GetContratosByContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO















CREATE PROCEDURE [dbo].[SP_FL_GetContratosByContrata] @iCodContrata int ,
														@iPeriodo int,
														@iMes int 
AS
 
SELECT        fl.iCodFuerzaLaboral, 
case fl.iMes 
when 1 then 'ENERO - ' + cast(fl.iPeriodo as varchar(4)) 
when 2 then 'FEBRERO - '  + cast(fl.iPeriodo as varchar(4)) 
when 3 then 'MARZO - '  + cast(fl.iPeriodo as varchar(4)) 
when 4 then 'ABRIL - '  + cast(fl.iPeriodo as varchar(4)) 
when 5 then 'MAYO - '  + cast(fl.iPeriodo as varchar(4)) 
when 6 then 'JUNIO - '  + cast(fl.iPeriodo as varchar(4)) 
when 7 then 'JULIO - '  + cast(fl.iPeriodo as varchar(4)) 
when 8 then 'AGOSTO - '  + cast(fl.iPeriodo as varchar(4)) 
when 9 then 'SETIEMBRE - '  + cast(fl.iPeriodo as varchar(4)) 
when 10 then 'OCTUBRE - '  + cast(fl.iPeriodo as varchar(4)) 
when 11 then 'NOVIEMBRE - '  + cast(fl.iPeriodo as varchar(4)) 
when 12 then 'DICIEMBRE - '  + cast(fl.iPeriodo as varchar(4)) 
else '' 
end as cMes,
ccto.cNroContrato,
ccto.cNomContrato ,
fl.iCodContratistaContrato 
 
FROM  FuerzaLaboral AS fl 
INNER JOIN ContratistaContrato AS ccto ON fl.iCodContratistaContrato = ccto.iCodContratistaContrato
  where fl.iCodContrata=@iCodContrata 
  and fl.iPeriodo=@iPeriodo 
  and fl.iMes=@iMes   

 
 
 













GO
/****** Object:  StoredProcedure [dbo].[SP_FL_GetFFLLActivos]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_FL_GetFFLLActivos] 
@iPeriodo int,@iMes int , @iCodContrata int 
AS
BEGIN

	SELECT fl.iCodFuerzaLaboral ,
		   fl.iCodContrata ,
		   fl.iCodSubContratista ,
		   fl.iCodContratistaContrato ,
		   fl.iPeriodo ,
		   fl.iMes ,
		   fl.bActivo ,
		   fl.iCodEstado ,
		   fld.iCodFuerzaLaboralDetalle,
		   fld.iCodCandidatoInforme ,
		   fld.iCodSubContrata ,
		   fld.cTipoCargo ,
		   fld.cOcupacion ,
		   fld.cMOCMONC ,
		   fld.cRotacion ,
		   fld.cTurno ,
		   fld.cTipoContrato ,
		   fld.cRegimenLaboral ,
		   fld.iHorasHombre ,
		   fld.cLugarPernocte ,
		   fld.cAreaTrabajo ,
		   fld.dFechaIni ,
		   fld.dFechaCese ,
		   fld.cMotivoCese ,
		   fld.cObs ,
		   fld.iCalificacion ,
		   fld.bDevolvioFotocheck ,
		   fld.iEstado ,
		   fld.bCesado ,
		   fld.bConsentimiento,
		   fld.cGrupo ,
		   fld.cNivel ,
		   fld.cSituacionLaboral ,
		   fld.iCodUsuarioModifica ,
		   fld.dFechaModifica ,
		   fld.iCodUsuarioCierra ,
		   fld.dFechaCierre ,
		   fld.iCodOcupacion ,
		   fld.dFechaTerminoContrato ,
		   fld.nSalarioBase ,
		   fld.iCodUsuario ,
		   fld.dFechaSis
	FROM FuerzaLaboral fl
	INNER JOIN FuerzaLaboralDetalle fld ON fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral
	LEFT JOIN ContratistaContrato cto ON cto.iCodContratistaContrato=fl.iCodContratistaContrato
	WHERE fl.iPeriodo=@iPeriodo
	  AND fl.iMes=@iMes
	  AND fld.bCesado=0
	  AND cto.bCerrado=0
	  AND (fl.iCodContrata = @iCodContrata
		   OR 0=@iCodContrata)
	ORDER BY fl.iCodContrata ASC,
			 fl.iCodContratistaContrato

END
GO
/****** Object:  StoredProcedure [dbo].[SP_FL_GetFFLLHistorialByCI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_FL_GetFFLLHistorialByCI] @iCodCandidatoInforme int  
AS  
BEGIN
	SELECT    cast(fld.iPeriodo as varchar(6))  + ' - ' +   
	(case  fld.iMes    
	when 1 then 'ENERO'   
	when 2 then 'FEBRERO'  
	when 3 then 'MARZO'  
	when 4 then 'ABRIL'  
	when 5 then 'MAYO'  
	when 6 then 'JUNIO'  
	when 7 then 'JULIO'  
	when 8 then 'AGOSTO'  
	when 9 then 'SETIEMBRE'  
	when 10 then 'OCTUBRE'  
	when 11 then 'NOVIEMBRE'  
	when 12 then 'DICIEMBRE' end)  as [Periodo],  
	 co.cNomContrata,  
	case   
	when fl.iCodContrata=fld.iCodSubContrata then ''   
	else sc.cNomContrata   
	end as cNomSubContrata,
	cto.cNomContrato,
	convert(varchar, fld.dFechaIni, 103) as dFechaIni,  
	fld.cOcupacion,  
	fld.cMOCMONC,   
	case   
	when fld.bCesado=1 then 'CESADO'   
	ELSE fld.cSituacionLaboral   
	END AS cSituacionLaboral ,  
	case   
	when fld.dFechaCese='1900-01-01' then ''  
	else  convert(varchar, fld.dFechaCese, 103) end as dFechaCese   
	FROM FuerzaLaboral fl  
	inner join  FuerzaLaboralDetalle AS fld  on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral
	left join ContratistaContrato cto on cto.iCodContratistaContrato=fl.iCodContratistaContrato
	inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata   
	inner join contrata co on fl.iCodContrata=co.iCodContrata   
	where fld.iCodCandidatoInforme=@iCodCandidatoInforme   
	order by fld.iCodFuerzaLaboralDetalle desc    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_FL_GetFuerzaLaboralDetalleCI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_FL_GetFuerzaLaboralDetalleCI] @iCodFuerzaLaboralDetalle int AS
BEGIN

	SELECT fd.iCodCandidatoInforme,
		   ci.cDNI,
		   ci.cApellidos,
		   ci.cNombres,
		   ci.cSexo,
		   ci.cUbigeo,
		   ci.cPaisNacimiento,
		   CASE ci.cCondicion
			   WHEN 'RESIDENTE' THEN 'LOCAL'
			   WHEN 'LOCAL' THEN 'LOCAL'
			   WHEN 'COMUNIDAD' THEN 'LOCAL'
			   WHEN 'FORANEO' THEN 'FORANEO'
			   ELSE 'FORANEO'
		   END AS cCondicion,
		   CASE ci.bEvaluado
			   WHEN 1 THEN ''
			   WHEN 0 THEN ''
		   END AS cEvaluado,
		   CASE ci.bCargaBox
			   WHEN 1 THEN 'SI'
			   WHEN 0 THEN 'NO'
		   END AS cExpediente,
		   CASE ci.bContratado
			   WHEN 1 THEN 'SI'
			   WHEN 0 THEN 'NO'
		   END AS cFFLL,
		   CASE ci.bSustentoCV
			   WHEN 1 THEN 'SI'
			   WHEN 0 THEN 'NO'
		   END AS cSustentoCV,
		   ci.cTipoDoc,
		   fd.iCodFuerzaLaboralDetalle,
		   fd.iCodFuerzaLaboral,
		   convert(varchar, fd.dFechaIni, 103) AS dFechaIni,
		   fd.cTipoCargo,
		   fd.cOcupacion,
		   fd.iCodOcupacion,
		   fd.cMOCMONC,
		   fd.cRegimenLaboral,
		   fd.cTipoContrato,
		   fd.cTurno,
		   fd.cRotacion,
		   fd.cAreaTrabajo,
		   fd.cLugarPernocte,
		   fd.iCodSubContrata,
		   fd.iHorasHombre,
		   fd.cSituacionLaboral
	FROM FuerzaLaboralDetalle AS fd
	INNER JOIN CandidatoInforme ci ON fd.iCodCandidatoInforme=ci.iCodCandidatoInforme
	WHERE fd.iCodFuerzaLaboralDetalle=@iCodFuerzaLaboralDetalle
END
GO
/****** Object:  StoredProcedure [dbo].[SP_FL_GetPeriodosByContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_FL_GetPeriodosByContrata] @iCodContrata int   
AS BEGIN  
  
 SELECT fl.iCodFuerzaLaboral,  
     CASE fl.iMes  
      WHEN 1 THEN 'ENERO - ' + cast(fl.iPeriodo AS varchar(4))  
      WHEN 2 THEN 'FEBRERO - ' + cast(fl.iPeriodo AS varchar(4))  
      WHEN 3 THEN 'MARZO - ' + cast(fl.iPeriodo AS varchar(4))  
      WHEN 4 THEN 'ABRIL - ' + cast(fl.iPeriodo AS varchar(4))  
      WHEN 5 THEN 'MAYO - ' + cast(fl.iPeriodo AS varchar(4))  
      WHEN 6 THEN 'JUNIO - ' + cast(fl.iPeriodo AS varchar(4))  
      WHEN 7 THEN 'JULIO - ' + cast(fl.iPeriodo AS varchar(4))  
      WHEN 8 THEN 'AGOSTO - ' + cast(fl.iPeriodo AS varchar(4))  
      WHEN 9 THEN 'SETIEMBRE - ' + cast(fl.iPeriodo AS varchar(4))  
      WHEN 10 THEN 'OCTUBRE - ' + cast(fl.iPeriodo AS varchar(4))  
      WHEN 11 THEN 'NOVIEMBRE - ' + cast(fl.iPeriodo AS varchar(4))  
      WHEN 12 THEN 'DICIEMBRE - ' + cast(fl.iPeriodo AS varchar(4))  
      ELSE ''  
     END AS cMes,  
     ccto.cNroContrato,  
     ccto.cZona,
	 SUM(CASE WHEN fld.bCesado = 0 THEN 1 ELSE 0 END) AS iCantActivos,
     SUM(CASE WHEN fld.bCesado = 1 THEN 1 ELSE 0 END) AS iCantCesados,
     count(fld.iCodFuerzaLaboralDetalle) AS iCant,
     fl.iCodEstado,  
     fl.iPeriodo,  
     fl.iMes  
       
     ,CASE fl.iCodEstado WHEN 1 THEN 'FFLL ABIERTA' WHEN 2 THEN 'FFLL CERRADO' END AS [cCierreFFLLEstado]  
  
 FROM FuerzaLaboral AS fl  
 LEFT JOIN FuerzaLaboralDetalle fld ON fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral  
 INNER JOIN ContratistaContrato AS ccto ON fl.iCodContratistaContrato = ccto.iCodContratistaContrato  
 WHERE fl.iCodContrata=@iCodContrata  
 GROUP BY fl.iCodFuerzaLaboral,  
    fl.iMes,  
    fl.iPeriodo,  
    ccto.cNroContrato,  
    ccto.cZona,  
    fl.iCodEstado  
 ORDER BY fl.iPeriodo DESC,  
    fl.iMes DESC,  
    ccto.cNroContrato  
END  
GO
/****** Object:  StoredProcedure [dbo].[SP_FL_GetPeriodosByContrata_2]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_FL_GetPeriodosByContrata_2]      
    @iCodContrata int      
AS      
BEGIN      
    SELECT       
        fl.iCodFuerzaLaboral,    
		fl.iCodContrata,    
        CASE fl.iMes          
            WHEN 1  THEN 'ENERO - ' + CAST(fl.iPeriodo AS varchar(4))          
            WHEN 2  THEN 'FEBRERO - ' + CAST(fl.iPeriodo AS varchar(4))          
            WHEN 3  THEN 'MARZO - ' + CAST(fl.iPeriodo AS varchar(4))          
            WHEN 4  THEN 'ABRIL - ' + CAST(fl.iPeriodo AS varchar(4))          
            WHEN 5  THEN 'MAYO - ' + CAST(fl.iPeriodo AS varchar(4))          
            WHEN 6  THEN 'JUNIO - ' + CAST(fl.iPeriodo AS varchar(4))          
            WHEN 7  THEN 'JULIO - ' + CAST(fl.iPeriodo AS varchar(4))          
            WHEN 8  THEN 'AGOSTO - ' + CAST(fl.iPeriodo AS varchar(4))          
            WHEN 9  THEN 'SEPTIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4))          
            WHEN 10 THEN 'OCTUBRE - ' + CAST(fl.iPeriodo AS varchar(4))          
            WHEN 11 THEN 'NOVIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4))          
            WHEN 12 THEN 'DICIEMBRE - ' + CAST(fl.iPeriodo AS varchar(4))          
            ELSE ''          
        END AS cMes,      
        ccto.cNroContrato,      
        ccto.cZona,      
              
        -- Cantidad de Activos, Cesados y Total      
        SUM(CASE WHEN fld.bCesado = 0 THEN 1 ELSE 0 END) AS iCantActivos,        
        SUM(CASE WHEN fld.bCesado = 1 THEN 1 ELSE 0 END) AS iCantCesados,        
        COUNT(fld.iCodFuerzaLaboralDetalle) AS iCant,        
      
        fl.iCodEstado,          
        fl.iPeriodo,          
        fl.iMes,      
        CASE fl.iCodEstado       
            WHEN 1 THEN 'FFLL ABIERTA'       
            WHEN 2 THEN 'FFLL CERRADO'       
            ELSE 'DESCONOCIDO'       
        END AS cCierreFFLLEstado,      
              
        -- Tasas      
        CASE      
            WHEN ccto.nTasaMOSCLocal <= 0 THEN 0.50      
            ELSE ccto.nTasaMOSCLocal / 100.00      
        END AS nTasaMOSCLocal,      
        CASE      
            WHEN ccto.nTasaMONCLocal <= 0 THEN 1.00      
            ELSE ccto.nTasaMONCLocal / 100.00      
        END AS nTasaMONCLocal,      
           
		-- iTotalMONC:    
		SUM(CASE WHEN ocu.cTipo = 'MONC' THEN 1 ELSE 0 END) AS iTotalMONC,    
		-- iTotalMOSC:     
		SUM(CASE WHEN ocu.cTipo = 'MOSC' THEN 1 ELSE 0 END) AS iTotalMOSC,    
	   -- iTotalMOC:     
		SUM(CASE WHEN ocu.cTipo = 'MOC' THEN 1 ELSE 0 END) AS iTotalMOC,    
    
        -- iTotalMOSCLocal:      
        SUM(CASE      
            WHEN ocu.cTipo = 'MOSC'      
                 --AND ci.bSustentoCV = 1      
                 --AND ci.cCondicion IN ('AID', 'AIO', 'REGIONAL') THEN 1      
			       AND (  com.cTipoAreaInfluencia ='AID'    
					      OR com.cTipoAreaInfluencia ='AIO'    
						  --AID    
						   OR LTRIM(RTRIM(u.cUbigeo))='020805'          
						   OR LTRIM(RTRIM(u.cUbigeo))='020813'          
						   OR LTRIM(RTRIM(u.cUbigeo))='021901'          
						   OR LTRIM(RTRIM(u.cUbigeo))='020814'     
						  --AIO    
							OR LTRIM(RTRIM(u.cUbigeo))='021901'          
							OR LTRIM(RTRIM(u.cUbigeo))='020301'          
							OR LTRIM(RTRIM(u.cUbigeo))='020304'          
							OR LTRIM(RTRIM(u.cUbigeo))='020305'          
							OR LTRIM(RTRIM(u.cUbigeo))='020310'          
							OR LTRIM(RTRIM(u.cUbigeo))='020321'          
							OR LTRIM(RTRIM(u.cUbigeo))='020323'          
							OR LTRIM(RTRIM(u.cUbigeo))='020325'          
							OR LTRIM(RTRIM(u.cUbigeo))='020803'          
							OR LTRIM(RTRIM(u.cUbigeo))='021204'          
							OR LTRIM(RTRIM(u.cUbigeo))='021205'          
							OR LTRIM(RTRIM(u.cUbigeo))='021206'          
							OR LTRIM(RTRIM(u.cUbigeo))='021209'          
							OR LTRIM(RTRIM(u.cUbigeo))='021210'          
							OR LTRIM(RTRIM(u.cUbigeo))='090401'          
							OR LTRIM(RTRIM(u.cUbigeo))='090409'          
							OR LTRIM(RTRIM(u.cUbigeo))='140902'     
				   -- Regional    
				   OR ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02'    
				  )    
			THEN 1    
					ELSE 0      
				END) AS iTotalMOSCLocal,    
    
  -- iTotalMOSCForaneo :    
        SUM(CASE      
            WHEN ocu.cTipo = 'MOSC'      
                 --AND ci.bSustentoCV = 1      
                 --AND ci.cCondicion = 'FORANEO'     
     AND NOT (    ISNULL(com.cTipoAreaInfluencia, '')='AID'    
       OR ISNULL(com.cTipoAreaInfluencia, '')='AIO'     
       OR ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02'     
       OR ltrim(rtrim(u.cUbigeo))='140902'     
       OR ltrim(rtrim(u.cUbigeo))='090409'     
       OR ltrim(rtrim(u.cUbigeo))='090401'     
        )    
     THEN 1      
            ELSE 0      
        END) AS iTotalMOSCForaneo,    
      
  -- nFLMOSCLocal :    
        ISNULL(CAST((SUM(CASE      
            WHEN ocu.cTipo = 'MOSC'      
                 AND (  com.cTipoAreaInfluencia ='AID'    
       OR com.cTipoAreaInfluencia ='AIO'    
          --AID    
           OR LTRIM(RTRIM(u.cUbigeo))='020805'          
        OR LTRIM(RTRIM(u.cUbigeo))='020813'          
        OR LTRIM(RTRIM(u.cUbigeo))='021901'          
        OR LTRIM(RTRIM(u.cUbigeo))='020814'     
          --AIO    
           OR LTRIM(RTRIM(u.cUbigeo))='021901'          
        OR LTRIM(RTRIM(u.cUbigeo))='020301'          
        OR LTRIM(RTRIM(u.cUbigeo))='020304'          
        OR LTRIM(RTRIM(u.cUbigeo))='020305'          
        OR LTRIM(RTRIM(u.cUbigeo))='020310'          
        OR LTRIM(RTRIM(u.cUbigeo))='020321'          
        OR LTRIM(RTRIM(u.cUbigeo))='020323'          
        OR LTRIM(RTRIM(u.cUbigeo))='020325'          
        OR LTRIM(RTRIM(u.cUbigeo))='020803'          
        OR LTRIM(RTRIM(u.cUbigeo))='021204'          
        OR LTRIM(RTRIM(u.cUbigeo))='021205'          
        OR LTRIM(RTRIM(u.cUbigeo))='021206'          
        OR LTRIM(RTRIM(u.cUbigeo))='021209'          
        OR LTRIM(RTRIM(u.cUbigeo))='021210'          
        OR LTRIM(RTRIM(u.cUbigeo))='090401'          
        OR LTRIM(RTRIM(u.cUbigeo))='090409'          
        OR LTRIM(RTRIM(u.cUbigeo))='140902'     
           -- Regional    
           OR ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02'    
          )    
     THEN 1    
            ELSE 0      
        END) * 1.0) /      
        NULLIF(SUM(CASE      
            WHEN ocu.cTipo = 'MOSC'      
                  --AND ci.bSustentoCV = 1      
                  AND ci.cCondicion IN ('LOCAL', 'RESIDENTE', 'COMUNIDAD', 'FORANEO')     
      THEN 1      
            ELSE 0      
        END), 0) AS DECIMAL(5,4)), 0) AS nFLMOSCLocal,    
    
  -- nFLMOSCForaneo:    
        ISNULL(CAST((SUM(CASE      
           WHEN ocu.cTipo = 'MOSC'      
                --AND ci.bSustentoCV = 1      
                --AND ci.cCondicion = 'FORANEO' THEN 1      
     AND NOT (    ISNULL(com.cTipoAreaInfluencia, '')='AID'    
       OR ISNULL(com.cTipoAreaInfluencia, '')='AIO'     
       OR ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02'     
       OR ltrim(rtrim(u.cUbigeo))='140902'     
       OR ltrim(rtrim(u.cUbigeo))='090409'     
       OR ltrim(rtrim(u.cUbigeo))='090401'     
        )    
     THEN 1      
           ELSE 0      
        END) * 1.0) /      
        NULLIF(SUM(CASE      
            WHEN ocu.cTipo = 'MOSC'      
                 --AND ci.bSustentoCV = 1      
                 AND ci.cCondicion IN ('LOCAL', 'RESIDENTE', 'COMUNIDAD', 'FORANEO') THEN 1      
            ELSE 0      
        END), 0) AS DECIMAL(5,4)), 0) AS nFLMOSCForaneo,      
      
  -- iTotalMONCLocal:    
        SUM(CASE      
            WHEN ocu.cTipo = 'MONC'      
     AND (      LTRIM(RTRIM(u.cUbigeo))='020805'         
       OR LTRIM(RTRIM(u.cUbigeo))='020813'          
       OR LTRIM(RTRIM(u.cUbigeo))='021901'          
       OR LTRIM(RTRIM(u.cUbigeo))='020814'    
       OR com.cTipoAreaInfluencia ='AID'    
          )    
     THEN 1      
            ELSE 0      
        END) AS iTotalMONCLocal,     
    
  --iTotalMONCForaneo    
        SUM(CASE      
            WHEN ocu.cTipo = 'MONC'      
                 --AND ci.bSustentoCV = 1      
                 --AND ci.cCondicion = 'FORANEO'     
     AND NOT (    ISNULL(com.cTipoAreaInfluencia, '')='AID'    
      OR ISNULL(com.cTipoAreaInfluencia, '')='AIO'     
      OR ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02'     
      OR ltrim(rtrim(u.cUbigeo))='140902'     
      OR ltrim(rtrim(u.cUbigeo))='090409'     
      OR ltrim(rtrim(u.cUbigeo))='090401'     
       )    
     THEN 1      
            ELSE 0      
        END) AS iTotalMONCForaneo,     
      
  -- nFLMONCLocal :    
        ISNULL(CAST((SUM(CASE      
            WHEN ocu.cTipo = 'MONC'      
     AND (      LTRIM(RTRIM(u.cUbigeo))='020805'         
       OR LTRIM(RTRIM(u.cUbigeo))='020813'          
       OR LTRIM(RTRIM(u.cUbigeo))='021901'          
       OR LTRIM(RTRIM(u.cUbigeo))='020814'    
       OR com.cTipoAreaInfluencia ='AID'    
          )    
     THEN 1      
            ELSE 0      
        END) * 1.0) /      
        NULLIF(SUM(CASE      
            WHEN ocu.cTipo = 'MONC'      
                  --AND ci.bSustentoCV = 1      
                  AND ci.cCondicion IN ('LOCAL', 'RESIDENTE', 'COMUNIDAD', 'FORANEO') THEN 1      
            ELSE 0      
        END), 0) AS DECIMAL(5,4)), 0) AS nFLMONCLocal,     
      
  -- nFLMONCForaneo:    
        ISNULL(CAST((SUM(CASE      
           WHEN ocu.cTipo = 'MONC'      
                --AND ci.bSustentoCV = 1      
                --AND ci.cCondicion = 'FORANEO' THEN 1     
    AND NOT (    ISNULL(com.cTipoAreaInfluencia, '')='AID'    
      OR ISNULL(com.cTipoAreaInfluencia, '')='AIO'     
      OR ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02'     
      OR ltrim(rtrim(u.cUbigeo))='140902'     
      OR ltrim(rtrim(u.cUbigeo))='090409'     
      OR ltrim(rtrim(u.cUbigeo))='090401'     
       )    
    THEN 1      
           ELSE 0      
        END) * 1.0) /      
        NULLIF(SUM(CASE      
            WHEN ocu.cTipo = 'MONC'      
                 AND ci.bSustentoCV = 1      
                 AND ci.cCondicion IN ('LOCAL', 'RESIDENTE', 'COMUNIDAD', 'FORANEO') THEN 1      
            ELSE 0      
        END), 0) AS DECIMAL(5,4)), 0) AS nFLMONCForaneo,    
      
  -- iTotalMOCLocal:      
        SUM(CASE      
            WHEN ocu.cTipo = 'MOC'      
                 --AND ci.bSustentoCV = 1      
                 --AND ci.cCondicion IN ('AID', 'AIO', 'REGIONAL') THEN 1      
      AND (  com.cTipoAreaInfluencia ='AID'    
       OR com.cTipoAreaInfluencia ='AIO'    
          --AID    
           OR LTRIM(RTRIM(u.cUbigeo))='020805'          
        OR LTRIM(RTRIM(u.cUbigeo))='020813'          
        OR LTRIM(RTRIM(u.cUbigeo))='021901'          
        OR LTRIM(RTRIM(u.cUbigeo))='020814'     
          --AIO    
           OR LTRIM(RTRIM(u.cUbigeo))='021901'          
        OR LTRIM(RTRIM(u.cUbigeo))='020301'          
        OR LTRIM(RTRIM(u.cUbigeo))='020304'          
        OR LTRIM(RTRIM(u.cUbigeo))='020305'          
        OR LTRIM(RTRIM(u.cUbigeo))='020310'          
        OR LTRIM(RTRIM(u.cUbigeo))='020321'          
        OR LTRIM(RTRIM(u.cUbigeo))='020323'          
        OR LTRIM(RTRIM(u.cUbigeo))='020325'          
        OR LTRIM(RTRIM(u.cUbigeo))='020803'          
        OR LTRIM(RTRIM(u.cUbigeo))='021204'          
        OR LTRIM(RTRIM(u.cUbigeo))='021205'          
        OR LTRIM(RTRIM(u.cUbigeo))='021206'          
        OR LTRIM(RTRIM(u.cUbigeo))='021209'          
        OR LTRIM(RTRIM(u.cUbigeo))='021210'          
        OR LTRIM(RTRIM(u.cUbigeo))='090401'          
        OR LTRIM(RTRIM(u.cUbigeo))='090409'          
        OR LTRIM(RTRIM(u.cUbigeo))='140902'     
           -- Regional    
           OR ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02'    
          )    
    THEN 1    
            ELSE 0      
        END) AS iTotalMOCLocal,    
    
    -- iTotalMOCForaneo :    
        SUM(CASE      
            WHEN ocu.cTipo = 'MOC'      
                 --AND ci.bSustentoCV = 1      
                 --AND ci.cCondicion = 'FORANEO'     
     AND NOT (    ISNULL(com.cTipoAreaInfluencia, '')='AID'    
       OR ISNULL(com.cTipoAreaInfluencia, '')='AIO'     
       OR ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02'     
       OR ltrim(rtrim(u.cUbigeo))='140902'     
       OR ltrim(rtrim(u.cUbigeo))='090409'     
       OR ltrim(rtrim(u.cUbigeo))='090401'     
        )    
     THEN 1      
            ELSE 0      
        END) AS iTotalMOCForaneo,    
    
  -- nFLMOCLocal :    
        ISNULL(CAST((SUM(CASE      
            WHEN ocu.cTipo = 'MOC'      
                 AND (  com.cTipoAreaInfluencia ='AID'    
       OR com.cTipoAreaInfluencia ='AIO'    
          --AID    
           OR LTRIM(RTRIM(u.cUbigeo))='020805'          
        OR LTRIM(RTRIM(u.cUbigeo))='020813'          
        OR LTRIM(RTRIM(u.cUbigeo))='021901'          
        OR LTRIM(RTRIM(u.cUbigeo))='020814'     
          --AIO    
           OR LTRIM(RTRIM(u.cUbigeo))='021901'          
        OR LTRIM(RTRIM(u.cUbigeo))='020301'          
        OR LTRIM(RTRIM(u.cUbigeo))='020304'          
        OR LTRIM(RTRIM(u.cUbigeo))='020305'          
        OR LTRIM(RTRIM(u.cUbigeo))='020310'          
        OR LTRIM(RTRIM(u.cUbigeo))='020321'          
        OR LTRIM(RTRIM(u.cUbigeo))='020323'          
        OR LTRIM(RTRIM(u.cUbigeo))='020325'          
        OR LTRIM(RTRIM(u.cUbigeo))='020803'          
        OR LTRIM(RTRIM(u.cUbigeo))='021204'          
        OR LTRIM(RTRIM(u.cUbigeo))='021205'          
        OR LTRIM(RTRIM(u.cUbigeo))='021206'          
        OR LTRIM(RTRIM(u.cUbigeo))='021209'          
        OR LTRIM(RTRIM(u.cUbigeo))='021210'          
        OR LTRIM(RTRIM(u.cUbigeo))='090401'          
        OR LTRIM(RTRIM(u.cUbigeo))='090409'          
        OR LTRIM(RTRIM(u.cUbigeo))='140902'     
           -- Regional    
           OR ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02'    
          )    
     THEN 1    
            ELSE 0      
        END) * 1.0) /      
        NULLIF(SUM(CASE      
            WHEN ocu.cTipo = 'MOC'      
                  --AND ci.bSustentoCV = 1      
                  AND ci.cCondicion IN ('LOCAL', 'RESIDENTE', 'COMUNIDAD', 'FORANEO')     
      THEN 1      
            ELSE 0      
        END), 0) AS DECIMAL(5,4)), 0) AS nFLMOCLocal,    
    
  -- nFLMOCForaneo:    
        ISNULL(CAST((SUM(CASE      
           WHEN ocu.cTipo = 'MOC'      
                --AND ci.bSustentoCV = 1      
                --AND ci.cCondicion = 'FORANEO' THEN 1      
     AND NOT (    ISNULL(com.cTipoAreaInfluencia, '')='AID'    
       OR ISNULL(com.cTipoAreaInfluencia, '')='AIO'     
       OR ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02'     
       OR ltrim(rtrim(u.cUbigeo))='140902'     
       OR ltrim(rtrim(u.cUbigeo))='090409'     
       OR ltrim(rtrim(u.cUbigeo))='090401'     
        )    
     THEN 1      
           ELSE 0      
        END) * 1.0) /      
        NULLIF(SUM(CASE      
            WHEN ocu.cTipo = 'MOC'      
                 --AND ci.bSustentoCV = 1      
                 AND ci.cCondicion IN ('LOCAL', 'RESIDENTE', 'COMUNIDAD', 'FORANEO') THEN 1      
            ELSE 0      
        END), 0) AS DECIMAL(5,4)), 0) AS nFLMOCForaneo     
      
	FROM FuerzaLaboral AS fl
	INNER JOIN FuerzaLaboralDetalle fld ON fl.iCodFuerzaLaboral = fld.iCodFuerzaLaboral
	INNER JOIN CandidatoInforme ci ON fld.iCodCandidatoInforme = ci.iCodCandidatoInforme
	LEFT JOIN TDOcupacion ocu ON fld.iCodOcupacion = ocu.iCodOcupacion
	LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo
	LEFT JOIN ContratistaContrato ccto ON fl.iCodContratistaContrato = ccto.iCodContratistaContrato
	LEFT JOIN CandidatoInformeCondicion cond ON ci.iCodCandidatoInforme=cond.iCodCandidatoInforme
	LEFT JOIN TDCondicionSustento tdco ON cond.iCodTDCondicionSustentoNueva=tdco.iCodTDCondicionSustento
	AND tdco.iCodUsuario=1
	LEFT JOIN Comunidad com ON com.iCodComunidad=cond.iCodComunidad
	AND com.iCodComunidad>1
	WHERE fl.iCodContrata = @iCodContrata --295
	AND cond.iCodCandidatoInformeCondicion=
    (SELECT MAX(cond9.iCodCandidatoInformeCondicion)
     FROM CandidatoInformeCondicion cond9
     WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme)
GROUP BY fl.iCodFuerzaLaboral,
         fl.iCodContrata,
         fl.iMes,
         fl.iPeriodo,
         ccto.cNroContrato,
         ccto.cZona,
         fl.iCodEstado,
         ccto.nTasaMOSCLocal,
         ccto.nTasaMONCLocal
ORDER BY fl.iPeriodo DESC,
         fl.iMes DESC,
         ccto.cNroContrato END
GO
/****** Object:  StoredProcedure [dbo].[SP_FL_RptFormatoFFLL]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_FL_RptFormatoFFLL] @iCodFuerzaLaboral int,        
            @dFechaCeseIni date,        
            @dFechaCeseFin date,        
            @iPeriodo int,        
            @iMes int,        
            @iCodContrata int,        
            @iCodContratistaContrato int,        
            @cTipo varchar(4)            
AS        
SET NOCOUNT ON        
 --**************************************************        
 /*******************************************************/        
 -- ACTIVOS        
 IF (@cTipo='AA')        
 BEGIN        
select fl.iCodFuerzaLaboral,        
co.cNomContrata,        
'PERU' as cPaisFunciones,        
case         
when fl.iCodContrata=fld.iCodSubContrata then 'NO'         
else 'SI' end as cSubContratista,        
sc.cNomContrata as cNomSubContrata,        
cto.cTipoContrato as cTipoContratista,        
fld.cTipoCargo,        
cto.cNomContrato,        
cto.cNroContrato,        
--fld.cOcupacion,
ocu.cNomOcupacion AS cOcupacion,
ci.cApellidos + ' ' + ci.cNombres as cNomCompleto,        
ci.cDNI,        
ci.cUbigeo,        
fld.iHorasHombre,        
case         
when ci.dFechaNac='1900-01-01' then ''         
else CONVERT(varchar, ci.dFechaNac, 103)         
end as dFechaNacimiento,        
floor(        
(cast(convert(varchar(8),getdate(),112) as int)-        
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000        
) as iEdad,        
fld.cRegimenLaboral,        
case         
when cast(fld.dFechaIni as date)='1900-01-01' then ''         
else CONVERT(varchar, fld.dFechaIni, 103)  end as dFechaIni,        
case         
when cast(fld.dFechaCese as date)='1900-01-01' then ''         
else CONVERT(varchar, fld.dFechaCese, 103)  end as dFechaCese,        
fld.cTipoContrato,        
case         
when fld.cTurno='NA'  then fld.cRotacion         
else fld.cTurno + ' ' + fld.cRotacion         
end as cTurnoRotacion,        
ci.cSexo,        
fld.cAreaTrabajo,        
fld.cLugarPernocte,        
--fld.cMOCMONC,
 ocu.cTipo AS cMOCMONC,
case         
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then         
 case        
  when ci.bSustentoCV=1 then  'SI'         
  else 'NO'        
  end         
else 'NO' end as cResidenteMoq,        
isnull(u.cDepartamento,'') as cDepartamentoNac1,        
isnull(u.cDepartamento,'') as cDepartamentoRes,        
isnull(u.cProvincia,'') as cProvinciaRes,        
isnull(u.cDistrito,'') as cDistritoRes,        
case         
when fld.bConsentimiento=1 then 'SI'         
else 'NO' end as cConsentimiento,        
fld.bCesado ,        
case fld.bCesado         
when 1 then 'CESADO'         
when 0 then 'ACTIVO'         
end as cActivoCesado ,        
cto.cGrupoContrato ,        
cto.cFase ,        
ci.cComunidad,        
case fld.bCesado         
when 1 then         
 case fld.bDevolvioFotocheck         
 when 1 then 'SI'         
 else 'NO'         
 end        
else ''         
end as cDevolvioFotocheck ,        
CASE       
WHEN ci.bSustentoCV=1 then 'SI'      
ELSE 'NO' end      
        
 as cDocSustento,        
(case       
WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'LOCAL'       
WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'LOCAL'       
when ltrim(rtrim(substring(u.cUbigeo,1,2)))='02' then 'LOCAL'       
when ltrim(rtrim(u.cUbigeo))='140902' then 'LOCAL'       
when ltrim(rtrim(u.cUbigeo))='090409' then 'LOCAL'       
when ltrim(rtrim(u.cUbigeo))='090401' then 'LOCAL'       
ELSE       
 'FORANEO'      
end ) + ' - ' +    
( case     
     WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'AID'     
     WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'AIO'     
     WHEN LTRIM(RTRIM(u.cUbigeo))='020805'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020813'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021901'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020814'  THEN 'AID'      
     WHEN LTRIM(RTRIM(u.cUbigeo))='021901'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020301'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020304'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020305'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020310'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020321'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020323'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020325'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020803'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021204'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021205'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021206'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021209'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021210'  OR    
     LTRIM(RTRIM(u.cUbigeo))='090401'  OR    
     LTRIM(RTRIM(u.cUbigeo))='090409'  OR    
     LTRIM(RTRIM(u.cUbigeo))='140902'  THEN 'AIO'     
     when ltrim(rtrim(substring(u.cUbigeo,1,2)))='02' then  --REGIONAL    
        'REGIONAL'    
      
     else     'FORANEO'    
     END)    
as cCondicion ,        
 fld.cRotacion ,ci.cFono ,fld.cMotivoCese ,        
  case fld.iCalificacion         
 when 5 then 'POSITIVO'        
 when 1 then 'NEGATIVO'         
 else ''         
 end cCalificacionImpacto ,        
 case fld.bCesado         
 when 0 then  fld.cSituacionLaboral         
 when 1 then 'CESADO'         
 end as cSituacionLaboral         
from FuerzaLaboral fl         
inner join fuerzalaboraldetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral         
inner join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme        
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo         
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo         
inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata         
inner join contrata co on fl.iCodContrata=co.iCodContrata         
inner join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato
LEFT JOIN TDOcupacion ocu ON ocu.iCodOcupacion=fld.iCodOcupacion  
left join CandidatoInformeCondicion cond on ci.iCodCandidatoInforme=cond.iCodCandidatoInforme       
left join TDCondicionSustento tdco on cond.iCodTDCondicionSustentoNueva=tdco.iCodTDCondicionSustento and  tdco.iCodUsuario=1        
left join Comunidad com on com.iCodComunidad=cond.iCodComunidad and com.iCodComunidad>1           
where cond.iCodCandidatoInformeCondicion=(      
select MAX(cond9.iCodCandidatoInformeCondicion)       
FROM CandidatoInformeCondicion cond9       
WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme        
)       
AND fl.iCodFuerzaLaboral=@iCodFuerzaLaboral and fld.bCesado=0         
      
 END        
        
  --**************************************************        
 -- ACTIVOS Y CESADOS        
  IF (@cTipo='AC')        
 BEGIN        
  --DECLARE @pPeriodo int;        
--DECLARE @pMes int;        
DECLARE @pCodContratistaContrato int;        
--SET @pPeriodo=(select case tfl1.iMes when 1 then tfl1.iPeriodo-1 else tfl1.iPeriodo end from FuerzaLaboral tfl1 where tfl1.iCodFuerzaLaboral=@iCodFuerzaLaboral);        
--SET @pMes=(select case tfl.iMes when 1 then 12 else tfl.iMes-1 end from FuerzaLaboral tfl where tfl.iCodFuerzaLaboral=@iCodFuerzaLaboral);        
SET @pCodContratistaContrato=(select tfl2.iCodContratistaContrato from FuerzaLaboral tfl2 where tfl2.iCodFuerzaLaboral=@iCodFuerzaLaboral);        
        
select fl.iCodFuerzaLaboral,        
co.cNomContrata,        
'PERU' as cPaisFunciones,        
case         
when fl.iCodContrata=fld.iCodSubContrata then 'NO'         
else 'SI' end as cSubContratista,        
sc.cNomContrata as cNomSubContrata,        
cto.cTipoContrato as cTipoContratista,        
fld.cTipoCargo,        
cto.cNomContrato,        
cto.cNroContrato,        
--fld.cOcupacion,
ocu.cNomOcupacion AS cOcupacion,       
ci.cApellidos + ' ' + ci.cNombres as cNomCompleto,        
ci.cDNI,        
ci.cUbigeo,        
fld.iHorasHombre,        
case         
when ci.dFechaNac='1900-01-01' then ''         
else CONVERT(varchar, ci.dFechaNac, 103)         
end as dFechaNacimiento,        
floor(        
(cast(convert(varchar(8),getdate(),112) as int)-        
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000        
) as iEdad,        
fld.cRegimenLaboral,        
case         
when cast(fld.dFechaIni as date)='1900-01-01' then ''         
else CONVERT(varchar, fld.dFechaIni, 103)  end as dFechaIni,        
case         
when cast(fld.dFechaCese as date)='1900-01-01' then ''         
else CONVERT(varchar, fld.dFechaCese, 103)  end as dFechaCese,        
fld.cTipoContrato,        
case         
when fld.cTurno='NA'  then fld.cRotacion         
else fld.cTurno + ' ' + fld.cRotacion         
end as cTurnoRotacion,        
ci.cSexo,        
fld.cAreaTrabajo,        
fld.cLugarPernocte,        
--fld.cMOCMONC,
 ocu.cTipo AS cMOCMONC,       
case         
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then       
 case        
  when ci.bSustentoCV=1 then  'SI'         
  else 'NO'        
  end         
else 'NO' end as cResidenteMoq,        
isnull(u.cDepartamento,'') as cDepartamentoNac,        
isnull(u.cDepartamento,'') as cDepartamentoRes,        
isnull(u.cProvincia,'') as cProvinciaRes,        
isnull(u.cDistrito,'') as cDistritoRes,        
case         
when fld.bConsentimiento=1 then 'SI'         
else 'NO' end as cConsentimiento,        
fld.bCesado ,        
case fld.bCesado         
when 1 then 'CESADO'         
when 0 then 'ACTIVO'         
end as cActivoCesado ,        
cto.cGrupoContrato ,        
cto.cFase ,        
ci.cComunidad,        
case fld.bCesado         
when 1 then         
 case fld.bDevolvioFotocheck         
 when 1 then 'SI'         
 else 'NO'         
 end        
else ''         
end as cDevolvioFotocheck ,        
      
CASE       
WHEN ci.bSustentoCV=1 then 'SI'      
ELSE 'NO' end      
        
 as cDocSustento,        
(case       
WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'LOCAL'       
WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'LOCAL'       
when ltrim(rtrim(substring(u.cUbigeo,1,2)))='02' then 'LOCAL'       
when ltrim(rtrim(u.cUbigeo))='140902' then 'LOCAL'       
when ltrim(rtrim(u.cUbigeo))='090409' then 'LOCAL'       
when ltrim(rtrim(u.cUbigeo))='090401' then 'LOCAL'       
ELSE       
 'FORANEO'      
end ) + ' - ' +    
( case     
     WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'AID'     
     WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'AIO'     
     WHEN LTRIM(RTRIM(u.cUbigeo))='020805'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020813'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021901'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020814'  THEN 'AID'      
     WHEN LTRIM(RTRIM(u.cUbigeo))='021901'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020301'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020304'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020305'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020310'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020321'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020323'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020325'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020803'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021204'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021205'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021206'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021209'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021210'  OR    
     LTRIM(RTRIM(u.cUbigeo))='090401'  OR    
     LTRIM(RTRIM(u.cUbigeo))='090409'  OR    
     LTRIM(RTRIM(u.cUbigeo))='140902'  THEN 'AIO'     
     when ltrim(rtrim(substring(u.cUbigeo,1,2)))='02' then  --REGIONAL    
        'REGIONAL'    
      
     else     'FORANEO'    
     END)    
as cCondicion ,          
 fld.cRotacion ,ci.cFono ,fld.cMotivoCese ,        
 case fld.iCalificacion         
 when 5 then 'POSITIVO'        
 when 1 then 'NEGATIVO'         
 else ''         
 end cCalificacionImpacto ,        
  case fld.bCesado         
 when 0 then  fld.cSituacionLaboral         
 when 1 then 'CESADO'         
 end as cSituacionLaboral          
from FuerzaLaboral fl         
inner join fuerzalaboraldetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral         
inner join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme        
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo         
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo         
inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata         
inner join contrata co on fl.iCodContrata=co.iCodContrata         
inner join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato
LEFT JOIN TDOcupacion ocu ON ocu.iCodOcupacion=fld.iCodOcupacion  
left join CandidatoInformeCondicion cond on ci.iCodCandidatoInforme=cond.iCodCandidatoInforme       
left join TDCondicionSustento tdco on cond.iCodTDCondicionSustentoNueva=tdco.iCodTDCondicionSustento and  tdco.iCodUsuario=1        
left join Comunidad com on com.iCodComunidad=cond.iCodComunidad and com.iCodComunidad>1           
where cond.iCodCandidatoInformeCondicion=(      
select MAX(cond9.iCodCandidatoInformeCondicion)       
FROM CandidatoInformeCondicion cond9       
WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme        
)       
AND fl.iCodFuerzaLaboral=@iCodFuerzaLaboral    and fld.bCesado=0          
--FIN DE ACTIVOS VAMOS A AÑADIR CESADOS        
UNION ALL        
select fl.iCodFuerzaLaboral,        
co.cNomContrata,        
'PERU' as cPaisFunciones,        
case         
when fl.iCodContrata=fld.iCodSubContrata then 'NO'         
else 'SI' end as cSubContratista,        
sc.cNomContrata as cNomSubContrata,        
cto.cTipoContrato as cTipoContratista,        
fld.cTipoCargo,        
cto.cNomContrato,        
cto.cNroContrato,        
--fld.cOcupacion,
ocu.cNomOcupacion AS cOcupacion,        
ci.cApellidos + ' ' + ci.cNombres as cNomCompleto,        
ci.cDNI,        
ci.cUbigeo,        
fld.iHorasHombre,        
case         
when ci.dFechaNac='1900-01-01' then ''         
else CONVERT(varchar, ci.dFechaNac, 103)         
end as dFechaNacimiento,        
floor(        
(cast(convert(varchar(8),getdate(),112) as int)-        
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000        
) as iEdad,        
fld.cRegimenLaboral,        
case         
when cast(fld.dFechaIni as date)='1900-01-01' then ''         
else CONVERT(varchar, fld.dFechaIni, 103)  end as dFechaIni,        
case         
when cast(fld.dFechaCese as date)='1900-01-01' then ''         
else CONVERT(varchar, fld.dFechaCese, 103)  end as dFechaCese,        
fld.cTipoContrato,        
case         
when fld.cTurno='NA'  then fld.cRotacion         
else fld.cTurno + ' ' + fld.cRotacion         
end as cTurnoRotacion,        
ci.cSexo,        
fld.cAreaTrabajo,        
fld.cLugarPernocte,        
--fld.cMOCMONC,
 ocu.cTipo AS cMOCMONC,        
case         
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then         
 case        
  when ci.bSustentoCV=1 then  'SI'         
  else 'NO'        
  end         
else 'NO' end as cResidenteMoq,        
isnull(u.cDepartamento,'') as cDepartamentoNac,        
isnull(u.cDepartamento,'') as cDepartamentoRes,        
isnull(u.cProvincia,'') as cProvinciaRes,        
isnull(u.cDistrito,'') as cDistritoRes,        
case         
when fld.bConsentimiento=1 then 'SI'         
else 'NO' end as cConsentimiento,        
fld.bCesado ,        
case fld.bCesado         
when 1 then 'CESADO'         
when 0 then 'ACTIVO'         
end as cActivoCesado ,        
cto.cGrupoContrato ,        
cto.cFase ,        
ci.cComunidad,        
case fld.bCesado         
when 1 then         
 case fld.bDevolvioFotocheck         
 when 1 then 'SI'         
 else 'NO'         
 end        
else ''         
end as cDevolvioFotocheck ,        
CASE       
WHEN ci.bSustentoCV=1 then 'SI'      
ELSE 'NO' end      
        
 as cDocSustento,       
(case       
WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'LOCAL'       
WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'LOCAL'       
when ltrim(rtrim(substring(u.cUbigeo,1,2)))='02' then 'LOCAL'       
when ltrim(rtrim(u.cUbigeo))='140902' then 'LOCAL'       
when ltrim(rtrim(u.cUbigeo))='090409' then 'LOCAL'       
when ltrim(rtrim(u.cUbigeo))='090401' then 'LOCAL'       
ELSE       
 'FORANEO'      
end ) + ' - ' +    
( case     
     WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'AID'     
     WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'AIO'     
     WHEN LTRIM(RTRIM(u.cUbigeo))='020805'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020813'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021901'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020814'  THEN 'AID'      
     WHEN LTRIM(RTRIM(u.cUbigeo))='021901'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020301'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020304'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020305'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020310'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020321'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020323'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020325'  OR    
     LTRIM(RTRIM(u.cUbigeo))='020803'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021204'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021205'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021206'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021209'  OR    
     LTRIM(RTRIM(u.cUbigeo))='021210'  OR    
     LTRIM(RTRIM(u.cUbigeo))='090401'  OR    
     LTRIM(RTRIM(u.cUbigeo))='090409'  OR    
     LTRIM(RTRIM(u.cUbigeo))='140902'  THEN 'AIO'     
     when ltrim(rtrim(substring(u.cUbigeo,1,2)))='02' then  --REGIONAL    
        'REGIONAL'    
      
     else     'FORANEO'    
     END)    
as cCondicion ,            
 fld.cRotacion ,ci.cFono ,fld.cMotivoCese ,        
 case fld.iCalificacion         
 when 5 then 'POSITIVO'        
 when 1 then 'NEGATIVO'         
 else ''         
 end cCalificacionImpacto ,        
  case fld.bCesado         
 when 0 then  fld.cSituacionLaboral         
 when 1 then 'CESADO'         
 end as cSituacionLaboral          
from FuerzaLaboral fl         
inner join fuerzalaboraldetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral         
inner join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme        
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo         
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo         
inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata         
inner join contrata co on fl.iCodContrata=co.iCodContrata         
inner join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato
LEFT JOIN TDOcupacion ocu ON ocu.iCodOcupacion=fld.iCodOcupacion  
left join CandidatoInformeCondicion cond on ci.iCodCandidatoInforme=cond.iCodCandidatoInforme     
  left join TDCondicionSustento tdco on cond.iCodTDCondicionSustentoNueva=tdco.iCodTDCondicionSustento and  tdco.iCodUsuario=1      
  left join Comunidad com on com.iCodComunidad=cond.iCodComunidad and com.iCodComunidad>1         
  where cond.iCodCandidatoInformeCondicion=(    
  select MAX(cond9.iCodCandidatoInformeCondicion)     
  FROM CandidatoInformeCondicion cond9     
  WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme      
  )    
AND fl.iCodContratistaContrato=@pCodContratistaContrato         
 and fld.dFechaCese>=@dFechaCeseIni         
 and fld.dFechaCese<=@dFechaCeseFin         
 and fld.bCesado=1         
        
        
        
        
 END        
        
        
-- POR PERIODO Y ACTIVOS Y TODAS LAS EECC        
  IF (@cTipo='AP')        
 BEGIN        
select fl.iCodFuerzaLaboral,        
co.cNomContrata,        
'PERU' as cPaisFunciones,        
case         
when fl.iCodContrata=fld.iCodSubContrata then 'NO'         
else 'SI' end as cSubContratista,        
sc.cNomContrata as cNomSubContrata,        
cto.cTipoContrato as cTipoContratista,        
fld.cTipoCargo,        
cto.cNomContrato,        
cto.cNroContrato,        
--fld.cOcupacion,
ocu.cNomOcupacion AS cOcupacion,       
ci.cApellidos + ' ' + ci.cNombres as cNomCompleto,        
ci.cDNI,        
ci.cUbigeo,        
fld.iHorasHombre,        
case         
when ci.dFechaNac='1900-01-01' then ''         
else CONVERT(varchar, ci.dFechaNac, 103)         
end as dFechaNacimiento,        
floor(        
(cast(convert(varchar(8),getdate(),112) as int)-        
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000        
) as iEdad,        
fld.cRegimenLaboral,        
case         
when cast(fld.dFechaIni as date)='1900-01-01' then ''         
else CONVERT(varchar, fld.dFechaIni, 103)  end as dFechaIni,        
case         
when cast(fld.dFechaCese as date)='1900-01-01' then ''         
else CONVERT(varchar, fld.dFechaCese, 103)  end as dFechaCese,        
fld.cTipoContrato,        
case         
when fld.cTurno='NA'  then fld.cRotacion         
else fld.cTurno + ' ' + fld.cRotacion         
end as cTurnoRotacion,        
ci.cSexo,        
fld.cAreaTrabajo,        
fld.cLugarPernocte,        
--fld.cMOCMONC,
 ocu.cTipo AS cMOCMONC,        
case         
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then         
 case        
  when ci.bSustentoCV=1 then  'SI'         
  else 'NO'        
  end         
else 'NO' end as cResidenteMoq,        
isnull(u.cDepartamento,'') as cDepartamentoNac,        
isnull(ur.cDepartamento,'') as cDepartamentoRes,        
isnull(ur.cProvincia,'') as cProvinciaRes,        
isnull(ur.cDistrito,'') as cDistritoRes,        
case         
when fld.bConsentimiento=1 then 'SI'         
else 'NO' end as cConsentimiento,        
fld.bCesado ,        
case fld.bCesado         
when 1 then 'CESADO'         
when 0 then 'ACTIVO'         
end as cActivoCesado ,        
cto.cGrupoContrato ,        
cto.cFase ,        
ci.cComunidad,        
case fld.bCesado         
when 1 then         
 case fld.bDevolvioFotocheck         
 when 1 then 'SI'         
 else 'NO'         
 end        
else ''         
end as cDevolvioFotocheck ,        
case         
when bRucMoq=1 then 'RUC'        
 when bTrabajoMoq=1 then 'TR'         
  when bEstudioMoq=1 then 'ES'        
 when bConviveMoq=1 then 'CONV'          
when bCasadoMoq=1 then 'MA'         
  when bHijosMoq=1 then 'HI'         
 when bDNIMoq=1 then 'RE'         
        
 when cCondicion='LOCAL' then 'DNI'            
  when cCondicion='COMUNIDAD' then 'CO'            
 when cCondicion='FORANEO' then 'DNI' end         
 as cDocSustento,        
case ci.bSustentoCV        
when 1 then        
 case ci.cCondicion         
  when 'LOCAL' then 'LOCAL'         
  when 'RESIDENTE' then 'LOCAL'         
  when 'COMUNIDAD' then 'LOCAL'         
  when 'FORANEO' then 'FORANEO'         
  else 'FORANEO'         
 end        
else         
 'FORANEO'        
end as cCondicion ,        
 fld.cRotacion ,ci.cFono ,fld.cMotivoCese ,        
  case fld.iCalificacion         
 when 5 then 'POSITIVO'        
 when 1 then 'NEGATIVO'         
 else ''         
 end cCalificacionImpacto ,        
  case fld.bCesado         
 when 0 then  fld.cSituacionLaboral         
 when 1 then 'CESADO'         
 end as cSituacionLaboral          
from FuerzaLaboral fl         
inner join fuerzalaboraldetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral         
inner join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme        
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo         
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo         
inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata         
inner join contrata co on fl.iCodContrata=co.iCodContrata         
inner join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato
LEFT JOIN TDOcupacion ocu ON ocu.iCodOcupacion=fld.iCodOcupacion  
where fl.iPeriodo=@iPeriodo and fl.iMes=@iMes and fld.bCesado=0         
 ORDER BY co.cNomContrata asc,cto.cNroContrato asc        
 END        
        
  -- ACTIVOS Y POR CONTRATISTA        
 IF (@cTipo='AAC')         
 BEGIN        
select fl.iCodFuerzaLaboral,        
co.cNomContrata,        
'PERU' as cPaisFunciones,        
case         
when fl.iCodContrata=fld.iCodSubContrata then 'NO'         
else 'SI' end as cSubContratista,        
sc.cNomContrata as cNomSubContrata,        
cto.cTipoContrato as cTipoContratista,        
fld.cTipoCargo,        
cto.cNomContrato,        
cto.cNroContrato,        
--fld.cOcupacion,
ocu.cNomOcupacion AS cOcupacion,       
ci.cApellidos + ' ' + ci.cNombres as cNomCompleto,        
ci.cDNI,        
ci.cUbigeo,        
fld.iHorasHombre,        
case         
when ci.dFechaNac='1900-01-01' then ''         
else CONVERT(varchar, ci.dFechaNac, 103)         
end as dFechaNacimiento,        
floor(        
(cast(convert(varchar(8),getdate(),112) as int)-        
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000        
) as iEdad,        
fld.cRegimenLaboral,        
case         
when cast(fld.dFechaIni as date)='1900-01-01' then ''         
else CONVERT(varchar, fld.dFechaIni, 103)  end as dFechaIni,        
case         
when cast(fld.dFechaCese as date)='1900-01-01' then ''         
else CONVERT(varchar, fld.dFechaCese, 103)  end as dFechaCese,        
fld.cTipoContrato,        
case         
when fld.cTurno='NA'  then fld.cRotacion         
else fld.cTurno + ' ' + fld.cRotacion         
end as cTurnoRotacion,        
ci.cSexo,        
fld.cAreaTrabajo,        
fld.cLugarPernocte,        
--fld.cMOCMONC,
 ocu.cTipo AS cMOCMONC,        
case         
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then         
 case        
  when ci.bSustentoCV=1 then  'SI'         
  else 'NO'        
  end         
else 'NO' end as cResidenteMoq,        
isnull(u.cDepartamento,'') as cDepartamentoNac,        
isnull(ur.cDepartamento,'') as cDepartamentoRes,        
isnull(ur.cProvincia,'') as cProvinciaRes,        
isnull(ur.cDistrito,'') as cDistritoRes,        
case         
when fld.bConsentimiento=1 then 'SI'         
else 'NO' end as cConsentimiento,        
fld.bCesado ,        
case fld.bCesado         
when 1 then 'CESADO'         
when 0 then 'ACTIVO'         
end as cActivoCesado ,        
cto.cGrupoContrato ,        
cto.cFase ,        
ci.cComunidad,        
case fld.bCesado         
when 1 then         
 case fld.bDevolvioFotocheck         
 when 1 then 'SI'         
 else 'NO'         
 end        
else ''         
end as cDevolvioFotocheck ,        
case         
when bRucMoq=1 then 'RUC'        
 when bTrabajoMoq=1 then 'TR'         
  when bEstudioMoq=1 then 'ES'        
 when bConviveMoq=1 then 'CONV'          
when bCasadoMoq=1 then 'MA'         
  when bHijosMoq=1 then 'HI'         
 when bDNIMoq=1 then 'RE'         
        
 when cCondicion='LOCAL' then 'DNI'            
  when cCondicion='COMUNIDAD' then 'CO'            
 when cCondicion='FORANEO' then 'DNI' end         
 as cDocSustento,        
case ci.bSustentoCV        
when 1 then        
 case ci.cCondicion         
  when 'LOCAL' then 'LOCAL'         
  when 'RESIDENTE' then 'LOCAL'         
  when 'COMUNIDAD' then 'LOCAL'         
  when 'FORANEO' then 'FORANEO'         
  else 'FORANEO'         
 end        
else         
 'FORANEO'        
end as cCondicion ,        
 fld.cRotacion ,ci.cFono ,fld.cMotivoCese ,        
  case fld.iCalificacion         
 when 5 then 'POSITIVO'        
 when 1 then 'NEGATIVO'         
 else ''         
 end cCalificacionImpacto ,        
 case fld.bCesado         
 when 0 then  fld.cSituacionLaboral         
 when 1 then 'CESADO'         
 end as cSituacionLaboral         
from FuerzaLaboral fl         
inner join fuerzalaboraldetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral         
inner join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme        
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo         
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo         
inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata         
inner join contrata co on fl.iCodContrata=co.iCodContrata         
inner join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato
LEFT JOIN TDOcupacion ocu ON ocu.iCodOcupacion=fld.iCodOcupacion  
where co.iCodContrata=@iCodContrata and fl.iPeriodo=@iPeriodo and fl.iMes=@iMes  and fld.bCesado=0         
 order by cto.cNroContrato asc,ci.cApellidos asc         
 END        
        
        
         
  -- ACTIVOS Y POR CONTRATO        
 IF (@cTipo='ACTO')         
 BEGIN        
select fl.iCodFuerzaLaboral,        
co.cNomContrata,        
'PERU' as cPaisFunciones,        
case         
when fl.iCodContrata=fld.iCodSubContrata then 'NO'         
else 'SI' end as cSubContratista,        
sc.cNomContrata as cNomSubContrata,        
cto.cTipoContrato as cTipoContratista,        
fld.cTipoCargo,        
cto.cNomContrato,        
cto.cNroContrato,        
--fld.cOcupacion,
ocu.cNomOcupacion AS cOcupacion,       
ci.cApellidos + ' ' + ci.cNombres as cNomCompleto,        
ci.cDNI,        
ci.cUbigeo,        
fld.iHorasHombre,        
case         
when ci.dFechaNac='1900-01-01' then ''         
else CONVERT(varchar, ci.dFechaNac, 103)         
end as dFechaNacimiento,        
floor(        
(cast(convert(varchar(8),getdate(),112) as int)-        
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000        
) as iEdad,        
fld.cRegimenLaboral,        
case         
when cast(fld.dFechaIni as date)='1900-01-01' then ''         
else CONVERT(varchar, fld.dFechaIni, 103)  end as dFechaIni,        
case         
when cast(fld.dFechaCese as date)='1900-01-01' then ''         
else CONVERT(varchar, fld.dFechaCese, 103)  end as dFechaCese,        
fld.cTipoContrato,        
case         
when fld.cTurno='NA'  then fld.cRotacion         
else fld.cTurno + ' ' + fld.cRotacion         
end as cTurnoRotacion,        
ci.cSexo,        
fld.cAreaTrabajo,        
fld.cLugarPernocte,        
--fld.cMOCMONC,
 ocu.cTipo AS cMOCMONC,        
case         
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then         
 case        
  when ci.bSustentoCV=1 then  'SI'         
  else 'NO'        
  end         
else 'NO' end as cResidenteMoq,        
isnull(u.cDepartamento,'') as cDepartamentoNac,        
isnull(ur.cDepartamento,'') as cDepartamentoRes,        
isnull(ur.cProvincia,'') as cProvinciaRes,        
isnull(ur.cDistrito,'') as cDistritoRes,        
case         
when fld.bConsentimiento=1 then 'SI'         
else 'NO' end as cConsentimiento,        
fld.bCesado ,        
case fld.bCesado         
when 1 then 'CESADO'         
when 0 then 'ACTIVO'         
end as cActivoCesado ,        
cto.cGrupoContrato ,        
cto.cFase ,        
ci.cComunidad,        
case fld.bCesado         
when 1 then         
 case fld.bDevolvioFotocheck         
 when 1 then 'SI'         
 else 'NO'         
 end        
else ''         
end as cDevolvioFotocheck ,        
 CASE       
WHEN ci.bSustentoCV=1 then 'SI'      
ELSE 'NO' end      
 as cDocSustento,        
case       
WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'LOCAL'       
WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'LOCAL'       
when ltrim(rtrim(substring(u.cUbigeo,1,2)))='02' then 'LOCAL'       
when ltrim(rtrim(u.cUbigeo))='140902' then 'LOCAL'       
when ltrim(rtrim(u.cUbigeo))='090409' then 'LOCAL'       
when ltrim(rtrim(u.cUbigeo))='090401' then 'LOCAL'       
ELSE       
 'FORANEO'       
end as cCondicion ,        
 fld.cRotacion ,ci.cFono ,fld.cMotivoCese ,        
  case fld.iCalificacion         
 when 5 then 'POSITIVO'        
 when 1 then 'NEGATIVO'         
 else ''         
 end cCalificacionImpacto ,        
 case fld.bCesado         
 when 0 then  fld.cSituacionLaboral         
 when 1 then 'CESADO'         
 end as cSituacionLaboral         
 ,fld.iCodFuerzaLaboralDetalle         
from FuerzaLaboral fl         
inner join fuerzalaboraldetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral         
inner join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme        
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo         
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo         
inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata         
inner join contrata co on fl.iCodContrata=co.iCodContrata         
inner join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato
LEFT JOIN TDOcupacion ocu ON ocu.iCodOcupacion=fld.iCodOcupacion  
left join CandidatoInformeCondicion cond on ci.iCodCandidatoInforme=cond.iCodCandidatoInforme       
left join TDCondicionSustento tdco on cond.iCodTDCondicionSustentoNueva=tdco.iCodTDCondicionSustento and  tdco.iCodUsuario=1        
left join Comunidad com on com.iCodComunidad=cond.iCodComunidad and com.iCodComunidad>1           
where cond.iCodCandidatoInformeCondicion=(      
select MAX(cond9.iCodCandidatoInformeCondicion)       
FROM CandidatoInformeCondicion cond9       
WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme        
)       
AND fl.iCodContratistaContrato=@iCodContratistaContrato  and fl.iPeriodo=@iPeriodo and fl.iMes=@iMes  and fld.bCesado=0         
 order by cto.cNroContrato asc,ci.cApellidos asc         
 END 
GO
/****** Object:  StoredProcedure [dbo].[SP_FL_RptFormatoHHCC]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_FL_RptFormatoHHCC] @iCodFuerzaLaboral int       
AS      
BEGIN       
WITH InfoFuerzaLaboral AS(  
  
SELECT fl.icodfuerzalaboral  
   ,co.cNomContrata  
   ,'PERU' AS cPaisFunciones  
   ,CASE  
   WHEN fl.iCodContrata = fld.iCodSubContrata THEN 'NO'  
   ELSE 'SI'  
    END AS cSubContratista  
   ,sc.cNomContrata AS cNomSubContrata  
   ,cto.cTipoContrato AS cTipoContratista  
   ,fld.cTipoCargo  
   ,cto.cNomContrato  
   ,cto.cNroContrato  
--fld.cOcupacion,
,ocu.cNomOcupacion AS cOcupacion
   ,ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto  
   ,ci.cDNI  
   ,ci.cUbigeo  
   ,fld.iHorasHombre  
   ,CASE  
   WHEN ci.dFechaNac = '1900-01-01' THEN ''  
   ELSE CONVERT(VARCHAR, ci.dFechaNac, 103)  
    END AS dFechaNacimiento  
   ,FLOOR(  
    (CAST(CONVERT(VARCHAR(8), GETDATE(), 112) AS INT) -  
    CAST(CONVERT(VARCHAR(8), ci.dFechaNac, 112) AS INT)) / 10000  
    ) AS iEdad  
   ,fld.cRegimenLaboral  
   ,CASE  
   WHEN CAST(fld.dFechaIni AS DATE) = '1900-01-01' THEN ''  
   ELSE CONVERT(VARCHAR, fld.dFechaIni, 103)  
    END AS dFechaIni  
   ,CASE  
   WHEN CAST(fld.dFechaCese AS DATE) = '1900-01-01' THEN ''  
   ELSE CONVERT(VARCHAR, fld.dFechaCese, 103)  
    END AS dFechaCese  
   ,fld.cTipoContrato  
   ,CASE  
   WHEN fld.cTurno = 'NA' THEN fld.cRotacion  
   ELSE fld.cTurno + ' ' + fld.cRotacion  
    END AS cTurnoRotacion  
   ,ci.cSexo  
   ,fld.cAreaTrabajo  
   ,fld.cLugarPernocte  

--fld.cMOCMONC,
 ,ocu.cTipo AS cMOCMONC
   ,case   
     WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'LOCAL'   
     WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'LOCAL'   
     when ltrim(rtrim(substring(u.cUbigeo,1,2)))='02' then 'LOCAL'   
     when ltrim(rtrim(u.cUbigeo))='140902' then 'LOCAL'   
     when ltrim(rtrim(u.cUbigeo))='090409' then 'LOCAL'   
     when ltrim(rtrim(u.cUbigeo))='090401' then 'LOCAL'   
     ELSE   
      'FORANEO'     
    END AS [CONDICION],  
     case   
     WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'AID'   
     WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'AIO'   
     WHEN LTRIM(RTRIM(u.cUbigeo))='020805'  OR  
     LTRIM(RTRIM(u.cUbigeo))='020813'  OR  
     LTRIM(RTRIM(u.cUbigeo))='021901'  OR  
     LTRIM(RTRIM(u.cUbigeo))='020814'  THEN 'AID'    
     WHEN LTRIM(RTRIM(u.cUbigeo))='021901'  OR  
     LTRIM(RTRIM(u.cUbigeo))='020301'  OR  
     LTRIM(RTRIM(u.cUbigeo))='020304'  OR  
     LTRIM(RTRIM(u.cUbigeo))='020305'  OR  
     LTRIM(RTRIM(u.cUbigeo))='020310'  OR  
     LTRIM(RTRIM(u.cUbigeo))='020321'  OR  
     LTRIM(RTRIM(u.cUbigeo))='020323'  OR  
     LTRIM(RTRIM(u.cUbigeo))='020325'  OR  
     LTRIM(RTRIM(u.cUbigeo))='020803'  OR  
     LTRIM(RTRIM(u.cUbigeo))='021204'  OR  
     LTRIM(RTRIM(u.cUbigeo))='021205'  OR  
     LTRIM(RTRIM(u.cUbigeo))='021206'  OR  
     LTRIM(RTRIM(u.cUbigeo))='021209'  OR  
     LTRIM(RTRIM(u.cUbigeo))='021210'  OR  
     LTRIM(RTRIM(u.cUbigeo))='090401'  OR  
     LTRIM(RTRIM(u.cUbigeo))='090409'  OR  
     LTRIM(RTRIM(u.cUbigeo))='140902'  THEN 'AIO'   
     when ltrim(rtrim(substring(u.cUbigeo,1,2)))='02' then  --REGIONAL  
        'REGIONAL'  
    
     else     'FORANEO'  
     END as [CONDICION DETALLE]     
   ,ISNULL(u.cDepartamento, '') AS cDepartamentoNac  
   ,ISNULL(ur.cDepartamento, '') AS cDepartamentoRes  
   ,CASE  
   WHEN fld.bConsentimiento = 1 THEN 'SI'  
   ELSE 'NO'  
    END AS cConsentimiento  
   ,fld.bCesado  
   ,cto.cGrupoContrato  
   ,cto.cFase  
   ,CASE fld.bCesado  
   WHEN 0 THEN fld.cSituacionLaboral  
   WHEN 1 THEN 'CESADO'  
    END AS cSituacionLaboral  
  FROM FuerzaLaboral fl   
  INNER JOIN fuerzalaboraldetalle fld ON fl.iCodFuerzaLaboral = fld.iCodFuerzaLaboral  
  INNER JOIN candidatoinforme ci ON fld.iCodCandidatoInforme = ci.iCodCandidatoInforme  
  LEFT JOIN TDUbigeo u ON ci.cUbigeo = u.cUbigeo  
  LEFT JOIN TDUbigeo ur ON ci.cUbigeoResidencia = ur.cUbigeo  
  INNER JOIN contrata sc ON fld.iCodSubContrata = sc.iCodContrata  
  INNER JOIN contrata co ON fl.iCodContrata = co.iCodContrata  
  INNER JOIN ContratistaContrato cto ON fl.iCodContratistaContrato = cto.iCodContratistaContrato
  LEFT JOIN TDOcupacion ocu ON ocu.iCodOcupacion=fld.iCodOcupacion  
  left join CandidatoInformeCondicion cond on ci.iCodCandidatoInforme=cond.iCodCandidatoInforme   
  left join TDCondicionSustento tdco on cond.iCodTDCondicionSustentoNueva=tdco.iCodTDCondicionSustento and  tdco.iCodUsuario=1    
  left join Comunidad com on com.iCodComunidad=cond.iCodComunidad and com.iCodComunidad>1       
  where cond.iCodCandidatoInformeCondicion=(  
  select MAX(cond9.iCodCandidatoInformeCondicion)   
  FROM CandidatoInformeCondicion cond9   
  WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme    
  )   
  AND fl.iCodFuerzaLaboral = @iCodFuerzaLaboral      
    
   )  
 SELECT iCodFuerzaLaboral,  
   cNomContrata,  
   cPaisFunciones,  
   cSubContratista,  
   cNomSubContrata,  
   cTipoContratista,  
   cTipoCargo,  
   cNomContrato,  
   cNroContrato,  
   cOcupacion,  
   cNomCompleto,  
   cDNI,  
   cUbigeo,  
   iHorasHombre,  
   dFechaNacimiento,  
   iEdad,  
   cRegimenLaboral,  
   dFechaIni,  
   dFechaCese,  
   cTipoContrato,  
   cTurnoRotacion,  
   cSexo,  
   cAreaTrabajo,  
   cLugarPernocte,  
   cMOCMONC,  
   CASE CONDICION + ' - ' + [CONDICION DETALLE]  
    WHEN 'FORANEO - FORANEO'  
       THEN 'FORANEO'  
    ELSE  
    CONDICION + ' - ' + [CONDICION DETALLE]   
    END AS cCondicion,  
   cDepartamentoNac,  
   cDepartamentoRes,  
   bCesado,  
   cGrupoContrato,  
   cFase,  
   cSituacionLaboral  
 FROM InfoFuerzaLaboral  
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_FL_RptFormatoHHCCByPeriodo]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO























CREATE PROCEDURE [dbo].[SP_FL_RptFormatoHHCCByPeriodo] @iCodContratistaContrato int,@iPeriodo int,@iMes int
AS
 
select fl.icodfuerzalaboral,
co.cNomContrata,
'PERU' as cPaisFunciones,
case 
when fl.iCodContrata=fld.iCodSubContrata then 'NO' 
else 'SI' end as cSubContratista,
sc.cNomContrata as cNomSubContrata,
cto.cTipoContrato as cTipoContratista,
fld.cTipoCargo,
cto.cNomContrato,
cto.cNroContrato,
fld.cOcupacion,
ci.cApellidos + ' ' + ci.cNombres as cNomCompleto,
ci.cDNI,
ci.cUbigeo,
fld.iHorasHombre,
case 
when ci.dFechaNac='1900-01-01' then '' 
else CONVERT(varchar, ci.dFechaNac, 103) 
end as dFechaNacimiento,
floor(
(cast(convert(varchar(8),getdate(),112) as int)-
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000
) as iEdad,
fld.cRegimenLaboral,
case 
when cast(fld.dFechaIni as date)='1900-01-01' then '' 
else CONVERT(varchar, fld.dFechaIni, 103)  end as dFechaIni,
case 
when cast(fld.dFechaCese as date)='1900-01-01' then '' 
else CONVERT(varchar, fld.dFechaCese, 103)  end as dFechaCese,
fld.cTipoContrato,
case 
when fld.cTurno='NA'  then fld.cRotacion 
else fld.cTurno + ' ' + fld.cRotacion 
end as cTurnoRotacion,
ci.cSexo,
fld.cAreaTrabajo,
fld.cLugarPernocte,
fld.cMOCMONC,
case 
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then 
	case
	 when ci.bSustentoCV=1 then  'SI' 
	 else 'NO'
	 end 
else 'NO' end as cResidenteMoq,
isnull(u.cDepartamento,'') as cDepartamentoNac,
isnull(ur.cDepartamento,'') as cDepartamentoRes,
case 
when fld.bConsentimiento=1 then 'SI' 
else 'NO' end as cConsentimiento,
fld.bCesado ,
cto.cGrupoContrato ,
cto.cFase ,
  case fld.bCesado 
 when 0 then  fld.cSituacionLaboral 
 when 1 then 'CESADO' 
 end as cSituacionLaboral  
from FuerzaLaboral fl 
inner join fuerzalaboraldetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral 
inner join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata 
inner join contrata co on fl.iCodContrata=co.iCodContrata 
inner join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato 
where fl.iCodContratistaContrato=@iCodContratistaContrato 
and fl.iPeriodo=@iPeriodo and fl.iMes=@iMes 
 
 





















GO
/****** Object:  StoredProcedure [dbo].[SP_FL_RptFormatoHHCCByPeriodoTodo]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
























CREATE PROCEDURE [dbo].[SP_FL_RptFormatoHHCCByPeriodoTodo] @iPeriodo int,@iMes int
AS
 
select fl.icodfuerzalaboral,
co.cNomContrata,
'PERU' as cPaisFunciones,
case 
when fl.iCodContrata=fld.iCodSubContrata then 'NO' 
else 'SI' end as cSubContratista,
sc.cNomContrata as cNomSubContrata,
cto.cTipoContrato as cTipoContratista,
fld.cTipoCargo,
cto.cNomContrato,
cto.cNroContrato,
fld.cOcupacion,
ci.cApellidos + ' ' + ci.cNombres as cNomCompleto,
ci.cDNI,
ci.cUbigeo,
fld.iHorasHombre,
case 
when ci.dFechaNac='1900-01-01' then '' 
else CONVERT(varchar, ci.dFechaNac, 103) 
end as dFechaNacimiento,
floor(
(cast(convert(varchar(8),getdate(),112) as int)-
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000
) as iEdad,
fld.cRegimenLaboral,
case 
when cast(fld.dFechaIni as date)='1900-01-01' then '' 
else CONVERT(varchar, fld.dFechaIni, 103)  end as dFechaIni,
case 
when cast(fld.dFechaCese as date)='1900-01-01' then '' 
else CONVERT(varchar, fld.dFechaCese, 103)  end as dFechaCese,
fld.cTipoContrato,
case 
when fld.cTurno='NA'  then fld.cRotacion 
else fld.cTurno + ' ' + fld.cRotacion 
end as cTurnoRotacion,
ci.cSexo,
fld.cAreaTrabajo,
fld.cLugarPernocte,
fld.cMOCMONC,
case 
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then 'SI' 
else 'NO' end as cResidenteMoq,
isnull(u.cDepartamento,'') as cDepartamentoNac,
isnull(ur.cDepartamento,'') as cDepartamentoRes,
case 
when fld.bConsentimiento=1 then 'SI' 
else 'NO' end as cConsentimiento,
fld.bCesado ,
cto.cGrupoContrato ,
cto.cFase ,
  case fld.bCesado 
 when 0 then  fld.cSituacionLaboral 
 when 1 then 'CESADO' 
 end as cSituacionLaboral 
from FuerzaLaboral fl 
inner join fuerzalaboraldetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral 
inner join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata 
inner join contrata co on fl.iCodContrata=co.iCodContrata 
inner join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato 
where   fl.iPeriodo=@iPeriodo and fl.iMes=@iMes 
order by co.cNomContrata,cto.cNroContrato,ci.cApellidos
 
 






















GO
/****** Object:  StoredProcedure [dbo].[SP_FL_RptFormatoHHCCSetting]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






CREATE PROCEDURE [dbo].[SP_FL_RptFormatoHHCCSetting] @cTipo varchar(6), 
													@iCodContrata int,
													@iPeriodo int,
													@iMes int
AS
   -- ACTIVOS,CESADOS Y POR CONTRATISTA
 IF (@cTipo='ACC') 
 BEGIN
select fl.icodfuerzalaboral,
co.cNomContrata,
'PERU' as cPaisFunciones,
case 
when fl.iCodContrata=fld.iCodSubContrata then 'NO' 
else 'SI' end as cSubContratista,
sc.cNomContrata as cNomSubContrata,
cto.cTipoContrato as cTipoContratista,
fld.cTipoCargo,
cto.cNomContrato,
cto.cNroContrato,
fld.cOcupacion,
ci.cApellidos + ' ' + ci.cNombres as cNomCompleto,
ci.cDNI,
ci.cUbigeo,
fld.iHorasHombre,
case 
when ci.dFechaNac='1900-01-01' then '' 
else CONVERT(varchar, ci.dFechaNac, 103) 
end as dFechaNacimiento,
floor(
(cast(convert(varchar(8),getdate(),112) as int)-
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000
) as iEdad,
fld.cRegimenLaboral,
case 
when cast(fld.dFechaIni as date)='1900-01-01' then '' 
else CONVERT(varchar, fld.dFechaIni, 103)  end as dFechaIni,
case 
when cast(fld.dFechaCese as date)='1900-01-01' then '' 
else CONVERT(varchar, fld.dFechaCese, 103)  end as dFechaCese,
fld.cTipoContrato,
case 
when fld.cTurno='NA'  then fld.cRotacion 
else fld.cTurno + ' ' + fld.cRotacion 
end as cTurnoRotacion,
ci.cSexo,
fld.cAreaTrabajo,
fld.cLugarPernocte,
fld.cMOCMONC,
case 
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then 
	case
	 when ci.bSustentoCV=1 then  'SI' 
	 else 'NO'
	 end 
else 'NO' end as cResidenteMoq,
isnull(u.cDepartamento,'') as cDepartamentoNac,
isnull(ur.cDepartamento,'') as cDepartamentoRes,
case 
when ci.bEvaluado=1 then 'SI' 
else 'NO' end as cConsentimiento,
fld.bCesado ,
cto.cGrupoContrato ,
cto.cFase ,
  case fld.bCesado 
 when 0 then  fld.cSituacionLaboral 
 when 1 then 'CESADO' 
 end as cSituacionLaboral  
from FuerzaLaboral fl 
inner join fuerzalaboraldetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral 
inner join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata 
inner join contrata co on fl.iCodContrata=co.iCodContrata 
inner join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato 
where fl.iCodContrata=@iCodContrata  
and fl.iPeriodo=@iPeriodo and fl.iMes=@iMes  
ORDER BY co.cNomContrata asc,cto.cNroContrato asc 
 END
 
    -- TODAS LAS EECC
 IF (@cTipo='AP') 
 BEGIN
select fl.icodfuerzalaboral,
co.cNomContrata,
'PERU' as cPaisFunciones,
case 
when fl.iCodContrata=fld.iCodSubContrata then 'NO' 
else 'SI' end as cSubContratista,
sc.cNomContrata as cNomSubContrata,
cto.cTipoContrato as cTipoContratista,
fld.cTipoCargo,
cto.cNomContrato,
cto.cNroContrato,
fld.cOcupacion,
ci.cApellidos + ' ' + ci.cNombres as cNomCompleto,
ci.cDNI,
ci.cUbigeo,
fld.iHorasHombre,
case 
when ci.dFechaNac='1900-01-01' then '' 
else CONVERT(varchar, ci.dFechaNac, 103) 
end as dFechaNacimiento,
floor(
(cast(convert(varchar(8),getdate(),112) as int)-
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000
) as iEdad,
fld.cRegimenLaboral,
case 
when cast(fld.dFechaIni as date)='1900-01-01' then '' 
else CONVERT(varchar, fld.dFechaIni, 103)  end as dFechaIni,
case 
when cast(fld.dFechaCese as date)='1900-01-01' then '' 
else CONVERT(varchar, fld.dFechaCese, 103)  end as dFechaCese,
fld.cTipoContrato,
case 
when fld.cTurno='NA'  then fld.cRotacion 
else fld.cTurno + ' ' + fld.cRotacion 
end as cTurnoRotacion,
ci.cSexo,
fld.cAreaTrabajo,
fld.cLugarPernocte,
fld.cMOCMONC,
case 
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then 
	case
	 when ci.bSustentoCV=1 then  'SI' 
	 else 'NO'
	 end 
else 'NO' end as cResidenteMoq,
isnull(u.cDepartamento,'') as cDepartamentoNac,
isnull(ur.cDepartamento,'') as cDepartamentoRes,
case 
when ci.bEvaluado=1 then 'SI' 
else 'NO' end as cConsentimiento,
fld.bCesado ,
cto.cGrupoContrato ,
cto.cFase ,
  case fld.bCesado 
 when 0 then  fld.cSituacionLaboral 
 when 1 then 'CESADO' 
 end as cSituacionLaboral  
from FuerzaLaboral fl 
inner join fuerzalaboraldetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral 
inner join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata 
inner join contrata co on fl.iCodContrata=co.iCodContrata 
inner join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato 
where   fl.iPeriodo=@iPeriodo and fl.iMes=@iMes 
ORDER BY co.cNomContrata asc,cto.cNroContrato asc
 END
























GO
/****** Object:  StoredProcedure [dbo].[SP_FL_VerificarCandidatoRegistradoFLD]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_FL_VerificarCandidatoRegistradoFLD]            
@iCodFuerzaLaboral INT,  
@iCodCandidatoInforme INT  
AS            
BEGIN            
  BEGIN TRY            
   BEGIN TRAN SP_FL_VerificarCandidatoRegisFLD         
      
 DECLARE @VAR_PERIODO INT = 0;  
 DECLARE @VAR_MES INT= 0;  
  
 SELECT @VAR_PERIODO = iPeriodo, @VAR_MES= iMes   
 FROM FuerzaLaboralDetalle WHERE iCodFuerzaLaboral=@iCodFuerzaLaboral  
  
    IF EXISTS ( SELECT * FROM dbo.FuerzaLaboralDetalle        
         WHERE iPeriodo=@VAR_PERIODO   
   AND  iMes=@VAR_MES  
   AND iCodCandidatoInforme = @iCodCandidatoInforme  
   AND bCesado = 0)           
    BEGIN        
         SELECT 1 --Trabajador se encuentra registrado en el periodo         
    END        
    ELSE   
    BEGIN  
   SELECT 0 --Trabajador NO se encuentra registrado en el periodo      
    END  
  
 COMMIT TRAN SP_FL_VerificarCandidatoRegisFLD      
   
  END TRY            
  BEGIN CATCH            
 SELECT -1            
 ROLLBACK TRAN SP_FL_VerificarCandidatoRegisFLD            
  END CATCH            
              
END
GO
/****** Object:  StoredProcedure [dbo].[SP_INSER_ConvocatoriaDetalleHistorial]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_INSER_ConvocatoriaDetalleHistorial]          
	@iCodConvocatoriaDetalle INT,
	@cSeleccinado NVARCHAR(6),
	@cRptaContrata NVARCHAR(200),
	@cObs NVARCHAR(200),
	@iCodUsuarioCreacion INT,
	@dFechaCreacion DATETIME,
	@iCodUsuarioModificacion INT,
	@dFechaModificacion DATETIME
AS          
BEGIN          
	 BEGIN TRY 
	  
	   BEGIN TRAN SP_INSER_CDHistorial       
       

	   INSERT into dbo.ConvocatoriaDetalleHistorial (iCodConvocatoriaDetalle,cSeleccinado,cRptaContrata,cObs,iCodUsuarioCreacion,dFechaCreacion,iCodUsuarioModificacion,dFechaModificacion ) 
	   VALUES(@iCodConvocatoriaDetalle,@cSeleccinado,@cRptaContrata,@cObs,@iCodUsuarioCreacion,@dFechaCreacion,@iCodUsuarioModificacion,@dFechaModificacion)

	   UPDATE dbo.ConvocatoriaDetalle
	   SET dFechaContactoContrata1=@dFechaCreacion, 
	       cSeleccionado= @cSeleccinado,
		   cRptaContrata=@cRptaContrata,
		   cObs = @cObs,
		   dFechaSis = @dFechaCreacion
	   WHERE iCodConvocatoriaDetalle=@iCodConvocatoriaDetalle

	   SELECT 1

	   COMMIT TRAN SP_INSER_CDHistorial          
	 
	 END TRY   
	  
	 BEGIN CATCH   
	 
	   SELECT -1          
	   ROLLBACK TRAN SP_INSER_CDHistorial
	   
	 END CATCH                
END
GO
/****** Object:  StoredProcedure [dbo].[SP_INSER_CuestionarioPostulante]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_INSER_CuestionarioPostulante]
    @iCodCuestionario int,
	@iCodCuestionarioCapacitacion int,
	@iCodCuestionarioConvocatoria int,
	@iCodCandidatoInforme int,
	@iCodCapacitacionAdmision int,
	@iCodCapacitacionMatricula int,
	@iCodConvocatoriaMain int,
	@iCodConvocatoria int,
	@dFechaInicio datetime,
	@dFechaFin datetime,
	@iEstado int,
	@bEnviado bit,
	@nPuntaje decimal(6,2),
	@dFechaCreacion datetime,
	@iCodUsuarioCreacion int,
	@dFechaModificacion datetime,
	@iCodUsuarioModificacion int  
AS 
BEGIN
    SET NOCOUNT ON;  
	DECLARE @iCodCuestionarioPostulante INT 
	SET @iCodCuestionarioPostulante = (SELECT iCodCuestionarioPostulante FROM CuestionarioPostulante WHERE iCodCuestionarioConvocatoria = @iCodCuestionarioConvocatoria and iCodCandidatoInforme = @iCodCandidatoInforme);

	IF (@iCodCuestionarioPostulante IS NULL) --::: VALIDAMOS SI HAY ID
		BEGIN
		--::: INSERTAMOS
		INSERT INTO CuestionarioPostulante (iCodCuestionario,iCodCuestionarioCapacitacion,iCodCuestionarioConvocatoria,iCodCandidatoInforme,iCodCapacitacionAdmision,iCodCapacitacionMatricula,iCodConvocatoriaMain,iCodConvocatoria,dFechaInicio,dFechaFin,iEstado,bEnviado,nPuntaje,dFechaCreacion,iCodUsuarioCreacion,dFechaModificacion,iCodUsuarioModificacion)
		--OUTPUT INSERTED.iCodCuestionarioPostulante
		VALUES (@iCodCuestionario,@iCodCuestionarioCapacitacion,@iCodCuestionarioConvocatoria,@iCodCandidatoInforme,@iCodCapacitacionAdmision,@iCodCapacitacionMatricula,@iCodConvocatoriaMain,@iCodConvocatoria,@dFechaInicio,@dFechaFin,@iEstado,@bEnviado,@nPuntaje,@dFechaCreacion,@iCodUsuarioCreacion,@dFechaModificacion,@iCodUsuarioModificacion);
		--::: CAPTURAMOS EL ID DE LA INSERT
		SET @iCodCuestionarioPostulante = SCOPE_IDENTITY();
		END;
	--::: EMVIAMOS EL CAMPO EN ROW
	SELECT @iCodCuestionarioPostulante AS iCodCuestionarioPostulante;
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_INSER_CuestionarioPostulanteRespuesta]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_INSER_CuestionarioPostulanteRespuesta]       
    --@iCodCuestionarioPostulanteRespuestas int,
	@iCodCuestionarioPostulante int,
	@iCodCuestionarioPreguntas int,
	@iCodCuestionarioPreguntasOpciones int,
	@iCalificaDescalifica smallint,
	@cRespuestaOpcion varchar(500),
	@nPuntajeRespuesta decimal(6,2),
	@bRespondido bit,
	@cOtraRespuesta varchar(450),
	@dFechaCreacion datetime,
	@iCodUsuarioCreacion int,
	@dFechaModificacion datetime,
	@iCodUsuarioModificacion int
AS   
BEGIN
    SET NOCOUNT ON; 
	
	INSERT INTO CuestionarioPostulanteRespuestas 
	(iCodCuestionarioPostulante,iCodCuestionarioPreguntas,iCodCuestionarioPreguntasOpciones,iCalificaDescalifica,cRespuestaOpcion,
	nPuntajeRespuesta,bRespondido,cOtraRespuesta,dFechaCreacion,iCodUsuarioCreacion,dFechaModificacion,iCodUsuarioModificacion)
	OUTPUT INSERTED.iCodCuestionarioPostulanteRespuestas
	VALUES
	(@iCodCuestionarioPostulante,@iCodCuestionarioPreguntas,@iCodCuestionarioPreguntasOpciones,@iCalificaDescalifica,@cRespuestaOpcion,
	@nPuntajeRespuesta,@bRespondido,@cOtraRespuesta,@dFechaCreacion,@iCodUsuarioCreacion,@dFechaModificacion,@iCodUsuarioModificacion)
END    
GO
/****** Object:  StoredProcedure [dbo].[SP_INSER_GenerarEvaluacionDesempenoPorFLD]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_INSER_GenerarEvaluacionDesempenoPorFLD]        
@iCodFuerzaLaboralDetalle INT,        
@cTipoEvaluacion NVARCHAR(MAX),        
@dFechaSolicitud DATETIME,        
@iCodUsuarioCreacion INT,        
@dFechaCreacion DATETIME        
AS                
BEGIN                       
	BEGIN TRY    
	 BEGIN TRAN SP_INSER_GenerarEvalDesempeno        
	    
	  /* 1.- Buscando el iCodCandidtoInforme*/        
	  DECLARE @iCodCandidatoInforme INT = 0;        
	  SET @iCodCandidatoInforme = (SELECT TOP 1 iCodCandidatoInforme         
	     FROM FuerzaLaboralDetalle        
	     WHERE iCodFuerzaLaboralDetalle=@iCodFuerzaLaboralDetalle)        
	       
	  /* 2.- Inserta en la tabla EvaluacionDesempeno */        
	  INSERT INTO EvaluacionDesempeno (        
	  iCodFuerzaLaboralDetalle,iCodCandidatoInforme,cTipoEvaluacion,dFechaSolicitud,        
	  dFechaEvaluacion,bEsEvaluado,nPuntajeTotalEvaluacion,cNombreSupervisor,        
	  cComentarioSupervisor,cComentarioEmpleado,        
	  cPuestoPromovido,dFechaContratacion,bActivo,iCodUsuarioCreacion,        
	  dFechaCreacion,iCodUsuarioModificacion,dFechaModificacion)        
	  VALUES (        
	  @iCodFuerzaLaboralDetalle, -- iCodFuerzaLaboralDetalle        
	  @iCodCandidatoInforme, -- iCodCandidatoInforme        
	  @cTipoEvaluacion, -- cTipoEvaluacion        
	  @dFechaSolicitud, -- dFechaSolicitud        
	  '1900-01-01', -- dFechaEvaluacion        
	  0, -- bEsEvaluado        
	  0.0, -- nPuntajeTotalEvaluacion        
	  '', -- cNombreSupervisor        
	  '', -- cComentarioSupervisor        
	  '', -- cComentarioEmpleado        
	  '', -- cPuestoPromovido        
	  '1900-01-01', -- dFechaContratacion        
	  1, -- bActivo        
	  @iCodUsuarioCreacion, -- iCodUsuarioCreacion        
	  @dFechaCreacion,-- dFechaCreacion        
	  @iCodUsuarioCreacion, -- iCodUsuarioModificacion        
	  @dFechaCreacion ); -- dFechaModificacion        
	       
	  -- Obtiene el ID del último registro insertado en EvaluacionDesempeno        
	  DECLARE @NuevoCodEvaluacionDesempeno INT;        
	  SET @NuevoCodEvaluacionDesempeno = SCOPE_IDENTITY();        
	       
	  IF (@cTipoEvaluacion = 'CE')    --CESE    
	  BEGIN        
	  -- Luego inserta en la tabla EvaluacionDesempenoDetalle usando el ID obtenido        
	  INSERT INTO EvaluacionDesempenoDetalle (        
	  iCodEvaluacionDesempeno,iCodEvaluacionRubroDetalle,cDescripcionEvaluacionRubro,        
	  cDescripcionEvaluacionRubroDetalle,nPuntajeEvaluacion,bActivo,        
	  iCodUsuarioCreacion,dFechaCreacion,iCodUsuarioModificacion,dFechaModificacion)        
	  SELECT         
	    @NuevoCodEvaluacionDesempeno, -- iCodEvaluacionDesempeno        
	    ERD.iCodEvaluacionRubroDetalle, -- iCodEvaluacionRubroDetalle        
	    ER.cDescripcionEvaluacionRubro, -- cDescripcionEvaluacionRubro        
	    ERD.cDescripcionEvaluacionRubroDetalle, -- cDescripcionEvaluacionRubroDetalle        
	    0, -- nPuntajeEvaluacion        
	    1, -- bActivo        
	    @iCodUsuarioCreacion, -- iCodUsuarioCreacion        
	    @dFechaCreacion,-- dFechaCreacion        
	    @iCodUsuarioCreacion, -- iCodUsuarioModificacion        
	    @dFechaCreacion -- dFechaModificacion        
	  FROM EvaluacionRubroDetalle ERD        
	  LEFT JOIN EvaluacionRubro ER ON ER.iCodEvaluacionRubro=ERD.iCodEvaluacionRubro        
	  WHERE ER.bActivo=1        
	  AND (ER.bTipoEvaluacionCese = 1)        
	  END        
	         
	  ELSE IF (@cTipoEvaluacion = 'OP') -- OPERATIVO       
	  BEGIN        
	  -- Luego inserta en la tabla EvaluacionDesempenoDetalle usando el ID obtenido        
	  INSERT INTO EvaluacionDesempenoDetalle (        
	  iCodEvaluacionDesempeno,iCodEvaluacionRubroDetalle,cDescripcionEvaluacionRubro,        
	  cDescripcionEvaluacionRubroDetalle,nPuntajeEvaluacion,bActivo,        
	  iCodUsuarioCreacion,dFechaCreacion,iCodUsuarioModificacion,dFechaModificacion)        
	  SELECT         
	   @NuevoCodEvaluacionDesempeno, -- iCodEvaluacionDesempeno        
	   ERD.iCodEvaluacionRubroDetalle, -- iCodEvaluacionRubroDetalle        
	   ER.cDescripcionEvaluacionRubro, -- cDescripcionEvaluacionRubro        
	   ERD.cDescripcionEvaluacionRubroDetalle, -- cDescripcionEvaluacionRubroDetalle        
	   0, -- nPuntajeEvaluacion        
	   1, -- bActivo        
	   @iCodUsuarioCreacion, -- iCodUsuarioCreacion        
	   @dFechaCreacion,-- dFechaCreacion        
	   @iCodUsuarioCreacion, -- iCodUsuarioModificacion        
	   @dFechaCreacion -- dFechaModificacion        
	  FROM EvaluacionRubroDetalle ERD        
	  LEFT JOIN EvaluacionRubro ER ON ER.iCodEvaluacionRubro=ERD.iCodEvaluacionRubro        
	  WHERE ER.bActivo=1        
	  AND (ER.bTipoEvaluacionAuditoria = 1)   
	  END  
	    
	  ELSE IF (@cTipoEvaluacion = 'CP')   -- CAMBIO DE PUESTO     
	  BEGIN        
	  -- Luego inserta en la tabla EvaluacionDesempenoDetalle usando el ID obtenido        
	  INSERT INTO EvaluacionDesempenoDetalle (        
	  iCodEvaluacionDesempeno,iCodEvaluacionRubroDetalle,cDescripcionEvaluacionRubro,        
	  cDescripcionEvaluacionRubroDetalle,nPuntajeEvaluacion,bActivo,        
	  iCodUsuarioCreacion,dFechaCreacion,iCodUsuarioModificacion,dFechaModificacion)        
	  SELECT         
	    @NuevoCodEvaluacionDesempeno, -- iCodEvaluacionDesempeno        
	    ERD.iCodEvaluacionRubroDetalle, -- iCodEvaluacionRubroDetalle        
	    ER.cDescripcionEvaluacionRubro, -- cDescripcionEvaluacionRubro        
	    ERD.cDescripcionEvaluacionRubroDetalle, -- cDescripcionEvaluacionRubroDetalle        
	    0, -- nPuntajeEvaluacion        
	    1, -- bActivo        
	    @iCodUsuarioCreacion, -- iCodUsuarioCreacion        
	    @dFechaCreacion,-- dFechaCreacion        
	    @iCodUsuarioCreacion, -- iCodUsuarioModificacion        
	    @dFechaCreacion -- dFechaModificacion        
	   FROM EvaluacionRubroDetalle ERD        
	   LEFT JOIN EvaluacionRubro ER ON ER.iCodEvaluacionRubro=ERD.iCodEvaluacionRubro        
	   WHERE ER.bActivo=1        
	   AND (ER.bTipoEvaluacionCambioPuesto = 1)  
	   
	  END        
	       
	  SELECT 1                
	  COMMIT TRAN SP_INSER_GenerarEvalDesempeno                
	                  
	END TRY                
	BEGIN CATCH                
	  SELECT -1                
	  ROLLBACK TRAN SP_INSER_GenerarEvalDesempeno                
	END CATCH                           
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_INSER_SeguridadClaveHistorial]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_INSER_SeguridadClaveHistorial]
@iCodUsuario int, 
@cClave varchar(800)
AS
BEGIN

	BEGIN TRY
			BEGIN TRAN INSER_SeguridadClaveHistorial

			--1: Inserta a Tabla SeguridadClaveHistorial
			--SELECT * FROM dts.SeguridadClaveHistorial
			INSERT INTO dbo.SeguridadClaveHistorial
			VALUES (@iCodUsuario,dbo.fnColocaClave(@cClave),1,GETDATE())
		
			--2: Actualizar la Tabla Usuario
			--SELECT * FROM dts.Usuario
			UPDATE dbo.Usuario
			SET cClave = dbo.fnColocaClave(@cClave) 
			WHERE iCodUsuario = @iCodUsuario

			SELECT 1
			COMMIT TRAN INSER_SeguridadClaveHistorial
			
	END TRY
	BEGIN CATCH
			SELECT -1
			ROLLBACK TRAN INSER_SeguridadClaveHistorial
	END CATCH
		
END

GO
/****** Object:  StoredProcedure [dbo].[SP_INSER_SeguridadUsuarioHistorial]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_INSER_SeguridadUsuarioHistorial]
@cNick VARCHAR(50), 
@iCodUsuario INT,
@cTipoLogOnOff VARCHAR(250),
@iNroIntentosLogOn INT,
@bIngresoAplicacion bit,
@dFechaLogOnOff datetime,
@cHostName varchar(250),
@cIP varchar(250),
@bBloqueado bit,
@dFechaBloqueo datetime
AS
BEGIN

	BEGIN TRY
			BEGIN TRAN INSER_SeguridadUsuarioHistorial

			--SELECT * FROM dts.Usuario
			--SELECT * FROM dts.SeguridadUsuarioHistorial
			INSERT INTO dbo.SeguridadUsuarioHistorial
			VALUES (@cNick,@iCodUsuario,@cTipoLogOnOff,@iNroIntentosLogOn,@bIngresoAplicacion,
			@dFechaLogOnOff,@cHostName, @cIP,@bBloqueado,@dFechaBloqueo)

			SELECT 1
			COMMIT TRAN INSER_SeguridadUsuarioHistorial
			
	END TRY
	BEGIN CATCH
			SELECT -1
			ROLLBACK TRAN INSER_SeguridadUsuarioHistorial
	END CATCH
		
END

GO
/****** Object:  StoredProcedure [dbo].[SP_INSER_UsuarioYClaveHistorial]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_INSER_UsuarioYClaveHistorial]
@iCodPersona INT, 
@cNick varchar(50),
@cClave varchar(800),
@cTipo varchar(4) 
AS
BEGIN

	BEGIN TRY
			BEGIN TRAN INSER_UsuarioYClaveHistorial

			--1: Inserta a Tabla Usuario
			--SELECT * FROM dts.Usuario
			INSERT INTO dbo.Usuario
			VALUES (@iCodPersona,@cNick,dbo.fnColocaClave(@cClave),@cTipo,0)
			DECLARE @iCodUsuario INT 
		    SELECT @iCodUsuario = SCOPE_IDENTITY()

			--2: Copia de Tabla SeguridadClaveHistorial
			--SELECT * FROM dts.SeguridadClaveHistorial
			INSERT INTO dbo.SeguridadClaveHistorial
			SELECT iCodUsuario, 
			       cClave,
				   1,
				   GETDATE() 
			FROM dbo.Usuario
			WHERE iCodUsuario = @iCodUsuario

			SELECT 1
			COMMIT TRAN INSER_UsuarioYClaveHistorial
			
	END TRY
	BEGIN CATCH
			SELECT -1
			ROLLBACK TRAN INSER_UsuarioYClaveHistorial
	END CATCH
		
END

GO
/****** Object:  StoredProcedure [dbo].[SP_INSERW_GenerarPermisosPorUsuario]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_INSERW_GenerarPermisosPorUsuario]   
@iCodUsuarioSistema int,  
@iCodUsuario int,  
@cTipoUsuario varchar(4)  
AS  
BEGIN
	IF NOT EXISTS (
		SELECT 1 
		FROM UsuarioPermiso 
		WHERE iCodUFormulario IN (
			SELECT iCodUFormulario 
			FROM UFormulario 
			WHERE cGrupo = 'Web Contratista'
		)
		AND iCodUsuarioSistema = @iCodUsuarioSistema
	)
	BEGIN
		-- Si no existen, se procede a insertar los registros
		INSERT INTO UsuarioPermiso (iCodUFormulario, iCodUsuarioSistema, bVisualizar, bAgregar,  
		bGuardar, bEditar, bEliminar, iCodUsuario, dFechaSis)  
		SELECT iCodUFormulario, @iCodUsuarioSistema, 0, 0, 0, 0, 0, @iCodUsuario, GETDATE()   
		FROM UFormulario 
		WHERE cGrupo = 'Web Contratista';
	END

	-- Continuamos con las actualizaciones de permisos para los tipos de usuarios
	IF (@cTipoUsuario = '3')  --  3: Sistema Administrador  
	BEGIN  
		UPDATE UsuarioPermiso  
		SET bVisualizar = 1  
		WHERE iCodUsuarioSistema = @iCodUsuarioSistema;  
	END  
	IF (@cTipoUsuario = 'UC')  --  UC: Usuario Operador Contratistas  
	BEGIN  
		UPDATE UsuarioPermiso  
		SET bVisualizar = 1  
		WHERE iCodUsuarioSistema = @iCodUsuarioSistema  
		AND iCodUFormulario NOT IN (101, 102, 107, 109);  
	END  
	IF (@cTipoUsuario = 'US')  --  US: Usuario Operador Cliente Antamina usuarios  
	BEGIN  
		UPDATE UsuarioPermiso  
		SET bVisualizar = 1  
		WHERE iCodUsuarioSistema = @iCodUsuarioSistema  
		AND iCodUFormulario NOT IN (107);  
	END  
	IF (@cTipoUsuario = '1')  --  1: Usuario Operador OAEL  
	BEGIN  
		UPDATE UsuarioPermiso  
		SET bVisualizar = 1  
		WHERE iCodUsuarioSistema = @iCodUsuarioSistema  
		AND iCodUFormulario NOT IN (101, 102, 109);  
	END  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PGI_AnexoAdmisionDetalleWeb]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
















CREATE PROCEDURE [dbo].[SP_PGI_AnexoAdmisionDetalleWeb] @iCodAnexoAdmision int
AS
 SELECT   a.iCodAnexoAdmision,   ci.cTipoDoc,
ci.cDNI, 
ci.cApellidos ,
 ci.cNombres , 
ci.cUbigeo, 
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as cCondicion,
ad.cCargo,ad.cMOCMONC,
co.cRUC,
co.cNomContrata,
co.cNomCorto,
a.cTipo ,
a.dFechaAprobacion as dFechaSolicitud,
FORMAT( a.iCorrelativo  ,'0000') + '-' + cast(a.iPeriodo as varchar(4)) as cCorrelativo,
a.cPersonaSolicita,
a.cPersonaSolicitaCargo,

a.cEstado,
case 
when co.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cNomContrata,'')  
end as cNomSubContrata  ,
ccto.cNroContrato,
ccto.cNomContrato,
--ata.cDetalle as cTipoAnexoAdmision ,
 cNotas ,
isnull(atad.cResumen,'') as cTipoAnexoAdmisionPersona,
case ad.cProcesoEtapa 
WHEN 'A' then 'APROB.' 
WHEN 'O' then 'OBS.' 
WHEN 'R' then 'RECH.'
else 'NO' end as cResultadoPersona 
FROM   AnexoAdmision a 
inner join AnexoAdmisionDetalle ad on a.iCodAnexoAdmision=ad.iCodAnexoAdmision 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join Contrata co on a.iCodContrata=co.iCodContrata 
inner join ContratistaContrato ccto on a.iCodContratistaContrato=ccto.iCodContratistaContrato 
left join Contrata sco on ad.iCodSubContrata=sco.iCodContrata  
--inner join AnexoAdmisionTipo ata on a.iCodAnexoAdmisionTipo=ata.iCodAnexoAdmisionTipo 
left join AnexoAdmisionTipo atad on ad.iCodAnexoAdmisionTipo=atad.iCodAnexoAdmisionTipo 
where 
ad.iCodAnexoAdmision=42899 
--ad.iCodAnexoAdmision=@iCodAnexoAdmision 
and ad.cProcesoEtapa='A' 









GO
/****** Object:  StoredProcedure [dbo].[SP_PGI_AnexoAdmisionDetalleWebExt]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
















CREATE PROCEDURE [dbo].[SP_PGI_AnexoAdmisionDetalleWebExt] @iCodAnexoAdmision int
AS
 SELECT   a.iCodAnexoAdmision,   ci.cTipoDoc,
ci.cDNI, 
ci.cApellidos +' ' +
 ci.cNombres as cNomCompleto, 
ci.cUbigeo, 
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as cCondicion,
ad.cCargo,ad.cMOCMONC,
co.cRUC,
co.cNomContrata,
co.cNomCorto,
a.cTipo ,
a.dFechaAprobacion as dFechaSolicitud,
FORMAT( a.iCorrelativo  ,'0000') + '-' + cast(a.iPeriodo as varchar(4)) as cCorrelativo,
a.cPersonaSolicita,
a.cPersonaSolicitaCargo,

a.cEstado,
case 
when co.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cNomContrata,'')  
end as cNomSubContrata  ,
ccto.cNroContrato,
ccto.cNomContrato,
--ata.cDetalle as cTipoAnexoAdmision ,
 cNotas ,
isnull(atad.cResumen,'') as cTipoAnexoAdmisionPersona,
case ad.cProcesoEtapa 
WHEN 'A' then 'APROB.' 
WHEN 'O' then 'OBS.' 
WHEN 'R' then 'RECH.'
else 'NO' end as cResultadoPersona ,
a.dFechaNotifica ,  
case 
when a.bAprobadoAAQ=1 then 'AEL'
else 
	case when a.bApruebaAreaAAQ=1 then 'AAU' 
	else 
		case when a.bNotificado=1 then 'NOT'
		else ''
		end
	end
end 
as cEtapaGestion 


FROM   AnexoAdmision a 
inner join AnexoAdmisionDetalle ad on a.iCodAnexoAdmision=ad.iCodAnexoAdmision 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join Contrata co on a.iCodContrata=co.iCodContrata 
inner join ContratistaContrato ccto on a.iCodContratistaContrato=ccto.iCodContratistaContrato 
left join Contrata sco on ad.iCodSubContrata=sco.iCodContrata  
--inner join AnexoAdmisionTipo ata on a.iCodAnexoAdmisionTipo=ata.iCodAnexoAdmisionTipo 
left join AnexoAdmisionTipo atad on ad.iCodAnexoAdmisionTipo=atad.iCodAnexoAdmisionTipo 
where 
--ad.iCodAnexoAdmision=42899 
ad.iCodAnexoAdmision=@iCodAnexoAdmision 
and ad.cProcesoEtapa='A' 









GO
/****** Object:  StoredProcedure [dbo].[SP_PGI_GetAnexoAdmisionDetalle]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









 



CREATE PROCEDURE [dbo].[SP_PGI_GetAnexoAdmisionDetalle] @iCodContrata int ,@dFechaSolicitudIni date,@dFechaSolicitudFin date,@cTipoVista varchar(2)
AS
IF (@cTipoVista='T') 
BEGIN 
SELECT        aa.iCodAnexoAdmision, 
co.cNomCorto, 
ccto.cNroContrato,
 aa.cNroAnexo,
  case when aa.cTipo='P' then 'PGI  ' 
  when aa.cTipo='A'  then 'A05  ' 
  else '' 
  end 
   + (FORMAT( aa.iCorrelativo  ,'0000') + '-' + cast(aa.iPeriodo as varchar(4))) AS cCorrelativo, 
   aa.cGrupo,
   aat.cResumen, 
   aa.dFechaSolicitud ,
   aa.dFechaRegistro, 
 CASE WHEN convert(date,aa.dFechaAprobacion) = '1900-01-01' THEN '' 
 ELSE CONVERT(varchar, aa.dFechaAprobacion, 103) END AS dFechaAprobacion, 
 aa.cEstado 
FROM            dbo.AnexoAdmision AS aa INNER JOIN
                         dbo.AnexoAdmisionTipo AS aat ON aa.iCodAnexoAdmisionTipo = aat.iCodAnexoAdmisionTipo INNER JOIN
                         dbo.Contrata AS co ON aa.iCodContrata = co.iCodContrata INNER JOIN
                         dbo.ContratistaContrato AS ccto ON aa.iCodContratistaContrato = ccto.iCodContratistaContrato

END 
IF (@cTipoVista='CT') 
BEGIN 
SELECT        aa.iCodAnexoAdmision, 
co.cNomCorto, 
ccto.cNroContrato,
 aa.cNroAnexo,
  case when aa.cTipo='P' then 'PGI  ' 
  when aa.cTipo='A'  then 'A05  ' 
  else '' 
  end 
   + (FORMAT( aa.iCorrelativo  ,'0000') + '-' + cast(aa.iPeriodo as varchar(4))) AS cCorrelativo, 
   aa.cGrupo,
   aat.cResumen, 
   aa.dFechaSolicitud ,
   aa.dFechaRegistro, 
 CASE WHEN convert(date,aa.dFechaAprobacion) = '1900-01-01' THEN '' 
 ELSE CONVERT(varchar, aa.dFechaAprobacion, 103) END AS dFechaAprobacion, 
 aa.cEstado 
FROM            dbo.AnexoAdmision AS aa INNER JOIN
                         dbo.AnexoAdmisionTipo AS aat ON aa.iCodAnexoAdmisionTipo = aat.iCodAnexoAdmisionTipo INNER JOIN
                         dbo.Contrata AS co ON aa.iCodContrata = co.iCodContrata INNER JOIN
                         dbo.ContratistaContrato AS ccto ON aa.iCodContratistaContrato = ccto.iCodContratistaContrato
 where aa.iCodContrata=@iCodContrata
  order by aa.iCodAnexoAdmision desc 
END 
IF (@cTipoVista='CF') 
BEGIN 
SELECT        aa.iCodAnexoAdmision, 
co.cNomCorto, 
ccto.cNroContrato,
 aa.cNroAnexo,
  case when aa.cTipo='P' then 'PGI  ' 
  when aa.cTipo='A'  then 'A05  ' 
  else '' 
  end 
   + (FORMAT( aa.iCorrelativo  ,'0000') + '-' + cast(aa.iPeriodo as varchar(4))) AS cCorrelativo, 
   aa.cGrupo,
   aat.cResumen, 
   aa.dFechaSolicitud ,
   aa.dFechaRegistro, 
 CASE WHEN convert(date,aa.dFechaAprobacion) = '1900-01-01' THEN '' 
 ELSE CONVERT(varchar, aa.dFechaAprobacion, 103) END AS dFechaAprobacion, 
 aa.cEstado 
FROM            dbo.AnexoAdmision AS aa INNER JOIN
                         dbo.AnexoAdmisionTipo AS aat ON aa.iCodAnexoAdmisionTipo = aat.iCodAnexoAdmisionTipo INNER JOIN
                         dbo.Contrata AS co ON aa.iCodContrata = co.iCodContrata INNER JOIN
                         dbo.ContratistaContrato AS ccto ON aa.iCodContratistaContrato = ccto.iCodContratistaContrato
 where aa.iCodContrata=@iCodContrata and 
  aa.dFechaSolicitud>=@dFechaSolicitudIni and aa.dFechaSolicitud<=@dFechaSolicitudFin 
    order by aa.iCodAnexoAdmision desc 
END 

IF (@cTipoVista='TF') 
BEGIN 
SELECT        aa.iCodAnexoAdmision, 
co.cNomCorto, 
ccto.cNroContrato,
 aa.cNroAnexo,
  case when aa.cTipo='P' then 'PGI  ' 
  when aa.cTipo='A'  then 'A05  ' 
  else '' 
  end 
   + (FORMAT( aa.iCorrelativo  ,'0000') + '-' + cast(aa.iPeriodo as varchar(4))) AS cCorrelativo, 
   aa.cGrupo,
   aat.cResumen, 
   aa.dFechaSolicitud ,
   aa.dFechaRegistro, 
 CASE WHEN convert(date,aa.dFechaAprobacion) = '1900-01-01' THEN '' 
 ELSE CONVERT(varchar, aa.dFechaAprobacion, 103) END AS dFechaAprobacion, 
 aa.cEstado 
FROM            dbo.AnexoAdmision AS aa INNER JOIN
                         dbo.AnexoAdmisionTipo AS aat ON aa.iCodAnexoAdmisionTipo = aat.iCodAnexoAdmisionTipo INNER JOIN
                         dbo.Contrata AS co ON aa.iCodContrata = co.iCodContrata INNER JOIN
                         dbo.ContratistaContrato AS ccto ON aa.iCodContratistaContrato = ccto.iCodContratistaContrato
 where  aa.dFechaSolicitud>=@dFechaSolicitudIni and aa.dFechaSolicitud<=@dFechaSolicitudFin 
    order by aa.iCodAnexoAdmision desc 
END 















GO
/****** Object:  StoredProcedure [dbo].[SP_PGI_GetAnexoAdmisionDetalleCI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO














CREATE PROCEDURE [dbo].[SP_PGI_GetAnexoAdmisionDetalleCI] @iCodAnexoAdmisionDetalle int
AS
 SELECT        ad.iCodCandidatoInforme, 
ci.cDNI, ci.cApellidos,ci.cNombres, 
ci.cUbigeo, 
ci.cCondicion as cCondicionDes, 
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as  cCondicion ,
ci.cOcupacion,
 case ci.bEvaluado 
 when 1 then '' 
 when 0 then '' 
 end as cEvaluado, 
 case ci.bCargaBox 
 when 1 then 'SI' 
 when 0 then 'NO' 
 end as cExpediente, 
 case ci.bContratado 
 when 1 then 'SI' 
 when 0 then 'NO' 
 end as cFFLL,ci.cTipoDoc,
 ad.iCodAnexoAdmisionDetalle,
 ad.iCodAnexoAdmision,
 ad.cNota,ad.cCargo,ad.cMOCMONC ,
 ad.iCodSubContrata,
 ad.iCodAnexoAdmisionTipo
FROM            AnexoAdmisionDetalle AS ad  
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
where ad.iCodAnexoAdmisionDetalle=@iCodAnexoAdmisionDetalle 
GO
/****** Object:  StoredProcedure [dbo].[SP_PGI_GetAnexoAdmisionLista]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO










 



CREATE PROCEDURE [dbo].[SP_PGI_GetAnexoAdmisionLista] @iCodContrata int ,@dFechaSolicitudIni date,@dFechaSolicitudFin date,@cTipoVista varchar(2),@pEstado varchar(2) 
AS
IF (@cTipoVista='T') 
BEGIN 
SELECT        aa.iCodAnexoAdmision, 
co.cNomCorto, 
ccto.cNroContrato,
 ccto.cGrupoContrato, 
 aa.cTipo ,
 aa.cNroAnexo,
(FORMAT( aa.iCorrelativo  ,'0000') + '-' + cast(aa.iPeriodo as varchar(4))) AS cCorrelativo, 
   aa.cGrupo,
   aat.cDetalle, 
 CASE WHEN convert(date,aa.dFechaUsuarioContrataEnvia) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaUsuarioContrataEnvia as date) END AS cFechaUsuarioContrataEnvia ,
   aa.dFechaRegistro, 
 CASE WHEN convert(date,aa.dFechaAprobacion) = '1900-01-01' THEN '' 
 ELSE CONVERT(varchar, aa.dFechaAprobacion, 103) END AS dFechaAprobacion, 
 aa.cEstado ,
 case isnull(aa.iCodUsuarioValidaDoc,0) 
 when 0 then cast(0 as bit)
 else cast(1 as bit) 
 end as bValidaDoc,
  case isnull(aa.iCodUsuarioAprueba,0) 
 when 0 then cast(0 as bit)
 else cast(1 as bit) 
 end as bUsuarioAprueba,
  aa.bNotificado, 
  aa.bApruebaAreaAAQ,
  aa.bAprobadoAAQ 
FROM            dbo.AnexoAdmision AS aa INNER JOIN
                         dbo.AnexoAdmisionTipo AS aat ON aa.iCodAnexoAdmisionTipo = aat.iCodAnexoAdmisionTipo INNER JOIN
                         dbo.Contrata AS co ON aa.iCodContrata = co.iCodContrata INNER JOIN
                         dbo.ContratistaContrato AS ccto ON aa.iCodContratistaContrato = ccto.iCodContratistaContrato
WHERE 
    aa.cEstado=@pEstado OR ''=@pEstado 
END 
IF (@cTipoVista='CT') 
BEGIN 
  
SELECT        aa.iCodAnexoAdmision, 
co.cNomCorto, 
ccto.cNroContrato,
 ccto.cGrupoContrato, 
 aa.cTipo ,
 aa.cNroAnexo,
(FORMAT( aa.iCorrelativo  ,'0000') + '-' + cast(aa.iPeriodo as varchar(4))) AS cCorrelativo, 
   aa.cGrupo,
   aat.cDetalle, 
  CASE WHEN convert(date,aa.dFechaUsuarioContrataEnvia) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaUsuarioContrataEnvia as date) END AS cFechaUsuarioContrataEnvia ,
   aa.dFechaRegistro, 
 CASE WHEN convert(date,aa.dFechaAprobacion) = '1900-01-01' THEN '' 
 ELSE CONVERT(varchar, aa.dFechaAprobacion, 103) END AS dFechaAprobacion, 
 aa.cEstado ,
 case isnull(aa.iCodUsuarioValidaDoc,0) 
 when 0 then cast(0 as bit)
 else cast(1 as bit) 
 end as bValidaDoc,
  case isnull(aa.iCodUsuarioAprueba,0) 
 when 0 then cast(0 as bit)
 else cast(1 as bit) 
 end as bUsuarioAprueba,
  aa.bNotificado, 
  aa.bApruebaAreaAAQ,
  aa.bAprobadoAAQ 
FROM            dbo.AnexoAdmision AS aa INNER JOIN
                         dbo.AnexoAdmisionTipo AS aat ON aa.iCodAnexoAdmisionTipo = aat.iCodAnexoAdmisionTipo INNER JOIN
                         dbo.Contrata AS co ON aa.iCodContrata = co.iCodContrata INNER JOIN
                         dbo.ContratistaContrato AS ccto ON aa.iCodContratistaContrato = ccto.iCodContratistaContrato
 where aa.iCodContrata=@iCodContrata
   AND ( aa.cEstado=@pEstado OR ''=@pEstado) 
  order by aa.iCodAnexoAdmision desc 
END 
IF (@cTipoVista='CF') 
BEGIN 
SELECT        aa.iCodAnexoAdmision, 
co.cNomCorto, 
ccto.cNroContrato,
 ccto.cGrupoContrato, 
 aa.cTipo ,
 aa.cNroAnexo,
(FORMAT( aa.iCorrelativo  ,'0000') + '-' + cast(aa.iPeriodo as varchar(4))) AS cCorrelativo, 
   aa.cGrupo,
   aat.cDetalle, 
    CASE WHEN convert(date,aa.dFechaUsuarioContrataEnvia) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaUsuarioContrataEnvia as date) END AS cFechaUsuarioContrataEnvia ,
   aa.dFechaRegistro, 
 CASE WHEN convert(date,aa.dFechaAprobacion) = '1900-01-01' THEN '' 
 ELSE CONVERT(varchar, aa.dFechaAprobacion, 103) END AS dFechaAprobacion, 
 aa.cEstado ,
 case isnull(aa.iCodUsuarioValidaDoc,0) 
 when 0 then cast(0 as bit)
 else cast(1 as bit) 
 end as bValidaDoc,
  case isnull(aa.iCodUsuarioAprueba,0) 
 when 0 then cast(0 as bit)
 else cast(1 as bit) 
 end as bUsuarioAprueba,
  aa.bNotificado, 
  aa.bApruebaAreaAAQ,
  aa.bAprobadoAAQ 
FROM            dbo.AnexoAdmision AS aa INNER JOIN
                         dbo.AnexoAdmisionTipo AS aat ON aa.iCodAnexoAdmisionTipo = aat.iCodAnexoAdmisionTipo INNER JOIN
                         dbo.Contrata AS co ON aa.iCodContrata = co.iCodContrata INNER JOIN
                         dbo.ContratistaContrato AS ccto ON aa.iCodContratistaContrato = ccto.iCodContratistaContrato
 where aa.iCodContrata=@iCodContrata and 
  cast(aa.dFechaRegistro as date)>=@dFechaSolicitudIni and cast(aa.dFechaRegistro as date)<=@dFechaSolicitudFin  
   AND ( aa.cEstado=@pEstado OR ''=@pEstado) 
    order by aa.iCodAnexoAdmision desc 
END 

IF (@cTipoVista='TF') 
BEGIN 
SELECT        aa.iCodAnexoAdmision, 
co.cNomCorto, 
ccto.cNroContrato,
 ccto.cGrupoContrato, 
 aa.cTipo ,
 aa.cNroAnexo,
(FORMAT( aa.iCorrelativo  ,'0000') + '-' + cast(aa.iPeriodo as varchar(4))) AS cCorrelativo, 
   aa.cGrupo,
   aat.cDetalle, 
   CASE WHEN convert(date,aa.dFechaUsuarioContrataEnvia) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaUsuarioContrataEnvia as date) END AS cFechaUsuarioContrataEnvia ,
   aa.dFechaRegistro, 
 CASE WHEN convert(date,aa.dFechaAprobacion) = '1900-01-01' THEN '' 
 ELSE CONVERT(varchar, aa.dFechaAprobacion, 103) END AS dFechaAprobacion, 
 aa.cEstado ,
 case isnull(aa.iCodUsuarioValidaDoc,0) 
 when 0 then cast(0 as bit)
 else cast(1 as bit) 
 end as bValidaDoc,
  case isnull(aa.iCodUsuarioAprueba,0) 
 when 0 then cast(0 as bit)
 else cast(1 as bit) 
 end as bUsuarioAprueba,
   aa.bNotificado, 
  aa.bApruebaAreaAAQ,
  aa.bAprobadoAAQ ,
 case 
	 
   when  (datediff(HH,aa.dFechaNotifica,GETDATE()))>=72 and aa.bApruebaAreaAAQ=0 and aa.bNotificado=1  then 'C'
   else
		case
		when  (datediff(HH,aa.dFechaNotifica,GETDATE()))>=48 and aa.bApruebaAreaAAQ=0  and aa.bNotificado=1   then 'B' 
		else
			case
			 when  (datediff(HH,aa.dFechaNotifica,GETDATE()))>=24  and aa.bApruebaAreaAAQ=0 and aa.bNotificado=1   then 'A' 
			 else ''
			 end
		end
   
  end  as T 
FROM            dbo.AnexoAdmision AS aa INNER JOIN
                         dbo.AnexoAdmisionTipo AS aat ON aa.iCodAnexoAdmisionTipo = aat.iCodAnexoAdmisionTipo INNER JOIN
                         dbo.Contrata AS co ON aa.iCodContrata = co.iCodContrata INNER JOIN
                         dbo.ContratistaContrato AS ccto ON aa.iCodContratistaContrato = ccto.iCodContratistaContrato
 where cast(aa.dFechaRegistro as date)>=@dFechaSolicitudIni and cast(aa.dFechaRegistro as date)<=@dFechaSolicitudFin    
 AND ( aa.cEstado=@pEstado OR ''=@pEstado)
    order by aa.iCodAnexoAdmision desc 
END 















GO
/****** Object:  StoredProcedure [dbo].[SP_PGI_GetAnexoAdmisionListaSeguimiento]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO










 



CREATE PROCEDURE [dbo].[SP_PGI_GetAnexoAdmisionListaSeguimiento] @iCodContrata int ,@dFechaSolicitudIni date,@dFechaSolicitudFin date,@cTipoVista varchar(2),@pEstado varchar(2) 
AS
SET @dFechaSolicitudIni=dateadd(day,-100,GETDATE()) ;
SET @dFechaSolicitudFin=GETDATE() ;
 
SELECT  
aa.iCodAnexoAdmision, 
co.cNomCorto, 
ccto.cNroContrato,
 ccto.cGrupoContrato, 
 aa.cTipo ,
(FORMAT( aa.iCorrelativo  ,'0000') + '-' + cast(aa.iPeriodo as varchar(4))) AS cCorrelativo, 
   aa.cGrupo,

  --  aa.dFechaRegistro,

   CASE WHEN  aa.dFechaUsuarioContrataEnvia = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaUsuarioContrataEnvia as date) END AS dFechaRegistro ,
  
 CASE WHEN convert(date,aa.dFechaAprobacion) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaAprobacion as date)  END AS dFechaValidaOAEL, 

  CASE WHEN convert(date,aa.dFechaSolicitud) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaSolicitud as date)  END AS dFechaSolicitudFirma, 

   CASE WHEN convert(date,aa.dFechaNotifica) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaNotifica as date)  END AS dFechaNotifica, 

 case 	 
   when  (datediff(HH,aa.dFechaNotifica,GETDATE()))>=72 and aa.bApruebaAreaAAQ=0 and aa.bNotificado=1  then '3d'
   else
		case
		when  (datediff(HH,aa.dFechaNotifica,GETDATE()))>=48 and aa.bApruebaAreaAAQ=0  and aa.bNotificado=1   then '2d' 
		else
			case
			 when  (datediff(HH,aa.dFechaNotifica,GETDATE()))>=24  and aa.bApruebaAreaAAQ=0 and aa.bNotificado=1   then '1d' 
			 else ''
			 end
		end    
 end  as cDiasSinRpta,

CASE WHEN convert(date,aa.dFechaApruebaAreaAAQ) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaApruebaAreaAAQ as date)  END AS dFechaApruebaAreaAAQ, 

CASE WHEN convert(date,aa.dFechaAprobadoAAQ) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaAprobadoAAQ as date)  END AS dFechaAprobadoAAQ, 

  -- aa.bNotificado, 
  --aa.bApruebaAreaAAQ,
  --aa.bAprobadoAAQ ,
   aa.cEstado  
FROM            dbo.AnexoAdmision AS aa INNER JOIN
                         dbo.AnexoAdmisionTipo AS aat ON aa.iCodAnexoAdmisionTipo = aat.iCodAnexoAdmisionTipo INNER JOIN
                         dbo.Contrata AS co ON aa.iCodContrata = co.iCodContrata INNER JOIN
                         dbo.ContratistaContrato AS ccto ON aa.iCodContratistaContrato = ccto.iCodContratistaContrato
 

 
 where cast(aa.dFechaRegistro as date)>=@dFechaSolicitudIni and cast(aa.dFechaRegistro as date)<=@dFechaSolicitudFin    
 AND ( aa.cEstado in('P','R','F','O') )
    order by aa.iCodAnexoAdmision desc 
  















GO
/****** Object:  StoredProcedure [dbo].[SP_PGI_RptAprobadosFFLL]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO














 


CREATE PROCEDURE [dbo].[SP_PGI_RptAprobadosFFLL] @dFechaIni date,
												@dFechaFin date 
AS
SELECT 
cast(aa.dFechaRegistro as date) as [Fecha Registro],
--coa.cRUC as  RucContrata ,
coa.cNomContrata as  Contrata,
--case
--when aa.iCodContrata=ad.iCodSubContrata then '' 
--else isnull(sco.cRUC,'') end as RucSubContrata, 
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cNomCorto,'') end as  SubContrata, 
cto.cNroContrato as [NroContrato],
cto.cNomContrato as [Contrato] ,
 
 ci.cDNI as DNI,ci.cTipoDoc as [Tipo Doc.],
ci.cApellidos + ' ' + ci.cNombres as [Apellidos y Nombres],
--ci.cSexo as cGenero,
--case ci.bSustentoCV
--when 1 then
--	case ci.cCondicion 
--		when 'LOCAL' then 'LOCAL' 
--		when 'RESIDENTE' then 'LOCAL' 
--		when 'COMUNIDAD' then 'LOCAL' 
--		when 'FORANEO' then 'FORANEO' 
--		else 'FORANEO' 
--	end
--else 
--	'FORANEO'
--end as  Condicion ,
 
case 
when ad.bAnulado=1 then 'ANULADO' 
else 
	case ad.cProcesoEtapa 
	when 'P' then 'PROCESO' 
	when 'O' then 'OBSERVADO' 
	when 'R' then 'RECHAZADO' 
	when 'A' then 'APROBADO' 
	else 'ANULADO'
	end
end as  Estado 
 ,  
 (
 select count(fld.iCodFuerzaLaboralDetalle) from 
 FuerzaLaboralDetalle fld -- on ad.iCodCandidatoInforme=fld.iCodCandidatoInforme 
 left join FuerzaLaboral fl on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral 
  
 where fld.iCodCandidatoInforme=ad.iCodCandidatoInforme  and fl.iCodContratistaContrato=aa.iCodContratistaContrato 
 and fl.iPeriodo=2024 and fl.iMes>=month(aa.dFechaRegistro) )  as [Cant Meses FFLL],
 case 
 when isnull(fld.iCodFuerzaLaboralDetalle,0)>0 then 'SI' 
 else 'NO' 
 end as [FFLL ACTUAL] 

from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join AnexoAdmision aa on ad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join contrata coa on aa.iCodContrata=coa.iCodContrata
left join contrata sco on ad.iCodSubContrata=sco.iCodContrata    
inner join ContratistaContrato cto on aa.iCodContratistaContrato=cto.iCodContratistaContrato 
left join AnexoAdmisionTipo adt on aa.iCodAnexoAdmisionTipo=adt.iCodAnexoAdmisionTipo 
    left join fuerzalaboraldetalle fld on ad.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 
 --left join FuerzaLaboral fl on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral and fl.iCodContratistaContrato=aa.iCodContratistaContrato  
-- and fl.iPeriodo=2021 and fl.iMes>=month(aa.dFechaAprobacion) 
where cast(aa.dFechaRegistro as date)>=@dFechaIni and cast(aa.dFechaRegistro as date)<=@dFechaFin  
and ad.cProcesoEtapa='A' 
 -- and aa.iCodContrata=112 
order by aa.iCodAnexoAdmision,ci.cApellidos ,ci.cNombres  




GO
/****** Object:  StoredProcedure [dbo].[SP_PGI_RptFormatoPGI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
















CREATE PROCEDURE [dbo].[SP_PGI_RptFormatoPGI] @iCodAnexoAdmision int
AS
 SELECT   a.iCodAnexoAdmision,   ci.cTipoDoc,
ci.cDNI, 
ci.cApellidos ,
 ci.cNombres , 
ci.cUbigeo, 
ci.cCondicion as cCondicionDes, 
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as cCondicion,
ad.cCargo,ad.cMOCMONC,
co.cRUC,
co.cNomContrata,
co.cNomCorto,
a.cTipo ,
a.dFechaAprobacion as dFechaSolicitud,
a.cNroAnexo,
FORMAT( a.iCorrelativo  ,'0000') + '-' + cast(a.iPeriodo as varchar(4)) as cCorrelativo,
a.cPersonaSolicita,
a.cPersonaSolicitaCargo,
a.cAreaUsuaria,
case a.cGrupo 
when 'F' then 'FORANEO' 
when 'L' then 'LOCAL' 
else '' end as cGrupo,
a.cEstado,
case 
when co.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cNomContrata,'')  
end as cNomSubContrata  ,
ccto.cNroContrato,
ccto.cNomContrato,
isnull(conv.cNroConvocatoria,'')  as cNroConvocatoria ,
ata.cDetalle as cTipoAnexoAdmision ,
case 
when len(ltrim(rtrim(a.cNotas)))>0 then 'NOTAS : '+a.cNotas 
else a.cNotas end as cNotas ,
isnull(atad.cResumen,'') as cTipoAnexoAdmisionPersona,
case ad.cProcesoEtapa 
WHEN 'A' then 'APROB.' 
WHEN 'O' then 'OBS.' 
WHEN 'R' then 'RECH.'
else 'NO' end as cResultadoPersona 
FROM   AnexoAdmision a 
inner join AnexoAdmisionDetalle ad on a.iCodAnexoAdmision=ad.iCodAnexoAdmision 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join Contrata co on a.iCodContrata=co.iCodContrata 
inner join ContratistaContrato ccto on a.iCodContratistaContrato=ccto.iCodContratistaContrato 
left join Contrata sco on ad.iCodSubContrata=sco.iCodContrata  
left join ConvocatoriaMain conv on a.iCodConvocatoriaMain=conv.iCodConvocatoriaMain  
inner join AnexoAdmisionTipo ata on a.iCodAnexoAdmisionTipo=ata.iCodAnexoAdmisionTipo 
left join AnexoAdmisionTipo atad on ad.iCodAnexoAdmisionTipo=atad.iCodAnexoAdmisionTipo 
where ad.iCodAnexoAdmision=@iCodAnexoAdmision and ad.cProcesoEtapa='A' 









GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_ContratistaContratoPorCodFuerzaLaboralYCodCandidatoInforme]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ROW_ContratistaContratoPorCodFuerzaLaboralYCodCandidatoInforme]        
@iCodFuerzaLaboral int,        
@iCodCandidatoInforme INT        
AS        
BEGIN        
       
 DECLARE @VAR_PERIODO INT = 0;      
 DECLARE @VAR_MES INT= 0;      
 DECLARE @iCodContrataOrigen INT=0;      
 DECLARE @iCodContrataDestino INT=0;      
      
 -- DESTINO:      
 SELECT @VAR_PERIODO = fld.iPeriodo, @VAR_MES= fld.iMes,     
 @iCodContrataDestino = ct.iCodContrata      
 FROM dbo.FuerzaLaboralDetalle fld      
 LEFT JOIN dbo.FuerzaLaboral fl ON fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral      
 LEFT JOIN dbo.ContratistaContrato cto ON cto.iCodContratistaContrato=fl.iCodContratistaContrato      
 LEFT JOIN dbo.Contrata ct ON ct.iCodContrata=cto.iCodContrata      
 WHERE fld.iCodFuerzaLaboral=@iCodFuerzaLaboral      
      
 -- ORIGEN:      
 SELECT  @iCodContrataOrigen = ct.iCodContrata      
 FROM dbo.FuerzaLaboralDetalle fld      
 LEFT JOIN dbo.FuerzaLaboral fl ON fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral      
 LEFT JOIN dbo.ContratistaContrato cto ON cto.iCodContratistaContrato=fl.iCodContratistaContrato      
 LEFT JOIN dbo.Contrata ct ON ct.iCodContrata=cto.iCodContrata      
    WHERE fld.iPeriodo=@VAR_PERIODO       
 AND  fld.iMes=@VAR_MES      
 AND fld.iCodCandidatoInforme = @iCodCandidatoInforme      
 AND fld.bCesado = 0      
        
 IF (@iCodContrataOrigen = @iCodContrataDestino)        
  BEGIN        
         
  SELECT  ct.iCodContrata,         
    cto.cNroContrato,        
    ct.cNomContrata,        
    'MISMA CONTRATISTA' AS cRespuesta       
   FROM dbo.FuerzaLaboralDetalle fld      
  LEFT JOIN dbo.FuerzaLaboral fl ON fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral      
  LEFT JOIN dbo.ContratistaContrato cto ON cto.iCodContratistaContrato=fl.iCodContratistaContrato      
  LEFT JOIN dbo.Contrata ct ON ct.iCodContrata=cto.iCodContrata      
  WHERE fld.iPeriodo=@VAR_PERIODO       
  AND  fld.iMes=@VAR_MES      
  AND fld.iCodCandidatoInforme = @iCodCandidatoInforme      
  AND fld.bCesado = 0       
      
  END        
  ELSE        
  BEGIN       
      
  SELECT  ct.iCodContrata,         
    cto.cNroContrato,        
    ct.cNomContrata,        
    'OTRA CONTRATISTA' AS cRespuesta          
  FROM dbo.FuerzaLaboralDetalle fld      
  LEFT JOIN dbo.FuerzaLaboral fl ON fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral      
  LEFT JOIN dbo.ContratistaContrato cto ON cto.iCodContratistaContrato=fl.iCodContratistaContrato      
  LEFT JOIN dbo.Contrata ct ON ct.iCodContrata=cto.iCodContrata      
  WHERE fld.iPeriodo=@VAR_PERIODO       
  AND  fld.iMes=@VAR_MES      
  AND fld.iCodCandidatoInforme = @iCodCandidatoInforme      
  AND fld.bCesado = 0    
          
  END      
      
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_Convocatoria]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ROW_Convocatoria]         
@iCodConvocatoria int           
AS        
BEGIN        
	SELECT iCodConvocatoria,
		   iCodConvocatoriaMain,
		   cMOCMONC,
		   iCodOcupacion,
		   iCantidad,
		   iPeriodoContrataMeses,
		   cGenero,
		   iEdadMinimaRequerida,
		   iEdadMaximaRequerida,
		   iGradoInstruccion,
		   cDesPerfil,
		   iBandaSalarialMin,
		   iBandaSalarialMax,
		   iTiempoExpRequerida,
		   cat.cValueMember AS cRegimenLaboral,
		   cHorarioLaboral,
		   cRotacion,
		   iPeriodoContrataMeses,
		   CASE
			   WHEN dFechaEstimadaIngreso = '1900-01-01' THEN ''
			   ELSE CONVERT(VARCHAR, dFechaEstimadaIngreso, 103)
		   END AS dFechaEstimadaIngreso,
		   cFrenteLugarTrabajo
	FROM dbo.Convocatoria c
	LEFT JOIN dbo.TDCatalogo cat ON cat.cValueMember=c.cRegimenLaboral
	AND cat.cTabla='FuerzaLaboralDetalle'
	AND cat.cNombreGrupo='RegimenLaboral'
	WHERE iCodConvocatoria=@iCodConvocatoria    
     
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_ConvocatoriaDetalleCI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
















 


CREATE PROCEDURE [dbo].[SP_ROW_ConvocatoriaDetalleCI] @iCodConvocatoriaDetalle int 
AS
SELECT top 50    cd.iCodConvocatoriaDetalle, 
 cv.iCantidad,
 cv.cPerfil, 
 CASE cd.iTipoPostulacion 
 WHEN 1 THEN 'OAEL' 
 WHEN 2 THEN 'SISTEMA' 
 WHEN 3 THEN 'EXCEPTUADO' 
  WHEN 4 THEN 'PREFERENCIAL' 
   WHEN 5 THEN 'SOLICITADO' 
    WHEN 6 THEN 'VIRTUAL APP' 
 WHEN 7 THEN 'STAKEHOLDER' 
	 END AS cTipoPostulacion,
    ci.cDNI, ci.cApellidos + ' ' + ci.cNombres AS cNomCompleto, 
 ci.cFono,
 isnull(tu.cDepartamento,'---') as cRegionNac,
isnull(tur.cDepartamento,'---') as cRegionDom,
case 
when ci.bRucMoq=1 then 'RUC'
 when ci.bTrabajoMoq=1 then 'TR' 
 when ci.bEstudioMoq=1 then 'ES'
 when ci.bConviveMoq=1 then 'CONV' 
when ci.bCasadoMoq=1 then 'MA'
 when ci.bHijosMoq=1 then 'HI' 
 when ci.bDNIMoq=1 then 'RE' 
 when ci.cCondicion='LOCAL' then 'DNI'    
  when ci.cCondicion='COMUNIDAD' then 'CO'    
 when ci.cCondicion='FORANEO' then 'DNI' else '' end 
 as cDocSustento  ,
ci.cCapacitacion as cHorario  ,   
 --convert(cd.dFechaCargaCV,,
 CASE 
 WHEN ci.iEstadoVerificativa = 3 THEN CAST(1 AS bit) 
 ELSE CAST(0 AS bit) 
 END AS bVerificativa, 
  cd.bCumplePerfil, 
 CASE 
 WHEN cd.dFechaCargaCV = '1900-01-01' THEN CAST(0 AS BIT) 
 ELSE CAST(1 AS BIT) END AS bCVCargado, 
 cd.cEstado ,
 case isnull(fld.iCodFuerzaLaboralDetalle,0)
 when 0 then 'NO' 
 else 'SI' 
 end as cFFLLGlobal ,
 case isnull(fld.iCodFuerzaLaboralDetalle,0) 
 when 0 then ''
 else 
	case 
	when cof.iCodContrata=scof.iCodContrata then   isnull(cof.cNomContrata,'NINGUNA') 
	else isnull(cof.cNomContrata,'NINGUNA') + ' - ' + isnull(scof.cNomContrata,'NINGUNA') 
	end 
end as cEmpresaTrabaja,
 isnull(fld.iCodFuerzaLaboralDetalle,0) as  iCodFuerzaLaboralDetalle  
FROM dbo.ConvocatoriaDetalle AS cd left JOIN
 dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme 
  left join TDubigeo as tu on ci.cUbigeo=tu.cUbigeo 
 LEFt JOIN TDubigeo as tur ON ci.cUbigeoResidencia=tur.cUbigeo   
 left JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria 
  left JOIN ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
   left join  Contrata AS co ON cm.iCodContrata = co.iCodContrata 

 left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 
left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
left join contrata cof on fl.iCodContrata=cof.iCodContrata 
left join Contrata scof on fld.iCodSubContrata=scof.iCodContrata 

where cd.iCodConvocatoriaDetalle=@iCodConvocatoriaDetalle  
order by cm.cNroConvocatoria, dfechafin,cPerfil  










GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_ConvocatoriasComunidadesCantAsignadas]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ROW_ConvocatoriasComunidadesCantAsignadas]   
@iCodConvocatoria INT    
AS  
BEGIN  
  
 SELECT ISNULL(SUM(CC.iCantidad),0)
 FROM ConvocatoriaComunidad CC  
 WHERE CC.iCodConvocatoria = @iCodConvocatoria  
  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_CuestionarioConvocatoria]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ROW_CuestionarioConvocatoria]
	@iCodConvocatoria int
AS
BEGIN
	select cn.iCodCuestionario as [iCodCuestionario],
	isnull(cc.iCodCuestionarioCapacitacion,0) as [iCodCuestionarioCapacitacion],
	isnull(cn.iCodCuestionarioConvocatoria,0) as [iCodCuestionarioConvocatoria],
	cn.iCodConvocatoriaMain as [iCodConvocatoriaMain],
	cn.iCodConvocatoria as [iCodConvocatoria],
	cn.dFechaInicio as [dFechaInicio],cn.dFechaFin as [dFechaFin]
	from CuestionarioConvocatoria as cn
	left join Cuestionario as ct on ct.iCodCuestionario = cn.iCodCuestionario
	left join CuestionarioCapacitacion as cc on cc.iCodCuestionario = ct.iCodCuestionario
	where cn.iCodConvocatoria = @iCodConvocatoria
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_CuestionarioPostulante]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ROW_CuestionarioPostulante]   
	@iCodCandidatoInforme int,
    @iCodConvocatoria int
     
AS   
BEGIN
    SET NOCOUNT ON; 
	SELECT cast(pt.iCodCuestionarioPostulante AS VARCHAR) AS [iCodCuestionarioPostulante],
	cast(pt.iCodCuestionario AS VARCHAR) AS [iCodCuestionario],
	cast(cp.iCodCuestionarioPreguntas AS VARCHAR) AS [iCodCuestionarioPreguntas],
	cp.cPregunta,cp.nPuntaje AS [nPuntajePregunta],
	cast(po.iCodCuestionarioPreguntasOpciones AS VARCHAR) AS [iCodCuestionarioPreguntasOpciones],
	po.cDescripcion AS [cOpcion],po.nPuntaje as [nPuntajeOpcion],po.iCalificaDescalifica AS [iCalificaDescalifica],
	pt.bEnviado as [bEnviado]
	FROM CuestionarioPostulante AS pt 
	left join Cuestionario AS ct ON ct.iCodCuestionario = pt.iCodCuestionario
	left join CuestionarioPreguntas AS cp ON cp.iCodCuestionario = ct.iCodCuestionario
	left join CuestionarioPreguntasOpciones AS po ON po.iCodCuestionarioPreguntas = cp.iCodCuestionarioPreguntas
	WHERE pt.iCodConvocatoria = @iCodConvocatoria and pt.iCodCandidatoInforme = @iCodCandidatoInforme
	--where pt.iCodConvocatoria = 34403 and pt.iCodCandidatoInforme = 122278 
END    
GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_FeedbackPersona]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ROW_FeedbackPersona] 
@iCodConvocatoriaDetalle int    
AS  
SELECT 
		TOP 10 cd.iCodConvocatoriaDetalle,   
		convert(varchar, cd.dFechaCargaCV, 103) as dFechaCargaCV,  
		cv.cPerfil,   
		 CASE cd.iTipoPostulacion   
		 WHEN 1 THEN 'OAEL'   
		 WHEN 2 THEN 'SISTEMA'   
		 WHEN 3 THEN 'EXCEPTUADO'   
		  WHEN 4 THEN 'PREFERENCIAL'   
		   WHEN 5 THEN 'SOLICITADO'   
				WHEN 6 THEN 'VIRTUAL APP'   
		 WHEN 7 THEN 'STAKEHOLDER'   
			END AS cTipoPostulacion,    
		 cd.cSeleccionado,  
		 cd.cRptaContrata,  
		 cd.cObs,  
		  case   
		 when cd.dFechaContactoContrata1='1900-01-01' then ''   
		 else convert(varchar, cd.dFechaContactoContrata1, 103)  end  as dFechaRespuesta ,  
		   ci.cDNI, ci.cApellidos,  
		   ci.cNombres,   
		 ci.cFono,  
		 isnull(tu.cDepartamento,'---') as cRegionNac,  
		isnull(tur.cDepartamento,'---') as cRegionDom,  
		case   
		when ci.bRucMoq=1 then 'RUC'  
		 when ci.bTrabajoMoq=1 then 'TR'   
		 when ci.bEstudioMoq=1 then 'ES'  
		 when ci.bConviveMoq=1 then 'CONV'   
		when ci.bCasadoMoq=1 then 'MA'  
		 when ci.bHijosMoq=1 then 'HI'   
		 when ci.bDNIMoq=1 then 'RE'   
		 when ci.cCondicion='LOCAL' then 'DNI'      
		  when ci.cCondicion='COMUNIDAD' then 'CO'      
		 when ci.cCondicion='FORANEO' then 'DNI' else '' end   
		 as cDocSustento  ,  
		 case   
		when ci.dFechaNac='1900-01-01' then ''   
		else CONVERT(varchar, ci.dFechaNac, 103)   
		end as dFechaNacimiento,  
		floor(  
		(cast(convert(varchar(8),getdate(),112) as int)-  
		cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000  
		) as iEdad ,  
		ci.cCapacitacion as cHorarioDisp,  
		 case   
		 when CAST(getdate() as date)>DATEADD(DAY,200,CAST(cm.dFechaFin as date)) then cast(1 as bit)    
		 else cast(0 as bit) end  as bResult ,  
		(select count(icodcandidatoinforme) from fuerzalaboraldetalle fld   
		where fld.icodcandidatoinforme=ci.icodcandidatoinforme) as iCantFLD ,  
		'' as cBloquear   
FROM dbo.ConvocatoriaDetalle AS cd   
left JOIN  dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme   
left join TDubigeo as tu on ci.cUbigeo=tu.cUbigeo   
LEFt JOIN TDubigeo as tur ON ci.cUbigeoResidencia=tur.cUbigeo     
left JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria   
left join convocatoriamain as cm on cm.iCodConvocatoriaMain=cv.iCodConvocatoriaMain   
-- left JOIN  ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain   
 where cd.iCodConvocatoriaDetalle=@iCodConvocatoriaDetalle
GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_GetConvocatoriaMain]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_ROW_GetConvocatoriaMain]           
@iCodConvocatoriaMain int            
AS          
BEGIN         
      
  SELECT  iCodConvocatoriaMain,          
    iCodContratistaContrato,          
    iCodSubContrata,          
    dFechaSolicitud,          
    cObs,        
    CONVERT (varchar,dFechaIni, 105) AS dFechaIni,        
    CONVERT (varchar,dFechaFin, 105) AS dFechaFin,      
    cEstado,      
    iEstado,
	bAprobadoCED,
    bAprobadoCliente,  
    cSolicitante  
  FROM ConvocatoriaMain AS T1          
  WHERE  iCodConvocatoriaMain = @iCodConvocatoriaMain        
        
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_GetEvaluacionDesempeno]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ROW_GetEvaluacionDesempeno]    
@iCodEvaluacionDesempeno int                      
AS                    
BEGIN
	SELECT iCodEvaluacionDesempeno ,
		   iCodFuerzaLaboralDetalle ,
		   cTipoEvaluacion ,
		   CONVERT(VARCHAR,dFechaSolicitud, 105) AS dFechaSolicitud ,
		   CASE
			   WHEN CONVERT(VARCHAR,dFechaEvaluacion, 23) ='1900-01-01' THEN ''
			   ELSE CONVERT(VARCHAR,dFechaEvaluacion, 105)
		   END AS dFechaEvaluacion ,
		   bEsEvaluado ,
		   cPuestoPromovido ,
		   cNombreSupervisor ,
		   CASE
			   WHEN CONVERT(VARCHAR,dFechaContratacion, 23) ='1900-01-01' THEN ''
			   ELSE CONVERT(VARCHAR,dFechaContratacion, 105)
		   END AS dFechaContratacion ,
		   cComentarioEmpleado ,
		   cComentarioSupervisor
	FROM EvaluacionDesempeno
	WHERE iCodEvaluacionDesempeno = @iCodEvaluacionDesempeno
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_GetLogin]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ROW_GetLogin] @cNick varchar(40),@cClave varchar(40)   
AS  
BEGIN

	SELECT	u.iCodUsuario,  
			p.iCodPersona,   
			p.cApelP + ' ' + p.cApelM + ' ' + p.cNombres as cNomPersona,  
			u.cNick,  
			c.iCodContrata ,  
			c.cNomContrata ,  
			u.cTipo ,  
			c.cContacto2 as cUrlPGI  
	FROM  usuario u   
	INNER JOIN PersonaNatural p on u.iCodPersona=p.iCodPersona   
	INNER JOIN UsuarioContrata uc on u.iCodUsuario=uc.iCodUsuario   
	INNER JOIN Contrata c on uc.iCodContrata=c.iCodContrata   
	where dbo.fnLeeClave(u.cClave)=ltrim(rtrim(@cClave)) and u.cNick=@cNick and   
	 uc.bAcceder=1   
	 --and u.cNick='ADMIN'
 END
GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_OcupacionPorNombreOcupacion]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ROW_OcupacionPorNombreOcupacion]    
@cNomOcupacion varchar(max)                  
AS                
BEGIN               
            
 SELECT	cNomOcupacion,    
		cTipo,  
		cCategoriaRCC,
		iCodOcupacion
 FROM TDOcupacion                 
 WHERE  cNomOcupacion = @cNomOcupacion              
              
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_PersonaByDNI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ROW_PersonaByDNI] @cDNI varchar(15) AS
BEGIN

	SELECT p.iCodPersona,
		   u.iCodUsuario,
		   CASE
			   WHEN len(ltrim(rtrim(pn.cApelM)))>0 THEN pn.cApelP + ' ' + pn.cApelM
			   ELSE pn.cApelP
		   END AS cApellidos,
		   pn.cApelM,
		   pn.cApelP,
		   pn.cNombres,
		   pn.cSexo,
		   pn.cFono,
		   pn.cCorreo
	FROM usuario u
	INNER JOIN persona p ON u.iCodPersona=p.iCodPersona
	INNER JOIN personanatural pn ON p.iCodPersona=pn.iCodPersona
	WHERE p.cNroDoc=@cDNI

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_PersonaUCByDNI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO












 


CREATE PROCEDURE [dbo].[SP_ROW_PersonaUCByDNI] @cDNI varchar(15)  
AS
 SELECT uc.iCodUsuarioContrata,uc.iCodContrata,u.iCodUsuario,p.iCodPersona,
 case
 when len(ltrim(rtrim(pn.cApelM)))>0 then pn.cApelP + ' ' + pn.cApelM 
 else pn.cApelP end as cApellidos,
 pn.cNombres,
 pn.cSexo,
 pn.cFono,
 pn.cCorreo,
 uc.bAcceder 
FROM   UsuarioContrata AS uc 
inner join usuario u on uc.iCodUsuario=u.iCodUsuario
inner join persona p on u.iCodPersona=p.iCodPersona 
inner join personanatural pn on p.iCodPersona=pn.iCodPersona   
where  p.cNroDoc=@cDNI 
 












GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_PersonaUCByID]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ROW_PersonaUCByID] @iCodUsuarioContrata int AS
BEGIN
	SELECT uc.iCodUsuarioContrata,
		   uc.iCodContrata,
		   u.iCodUsuario,
		   p.iCodPersona,
		   CASE
			   WHEN len(ltrim(rtrim(pn.cApelM)))>0 THEN pn.cApelP + ' ' + pn.cApelM
			   ELSE pn.cApelP
		   END AS cApellidos,
		   pn.cNombres,
		   pn.cApelP,
		   pn.cApelM,
		   pn.cSexo,
		   pn.cFono,
		   pn.cCorreo,
		   uc.bAcceder,
		   p.cNroDoc,
		   u.cTipo
	FROM UsuarioContrata AS uc
	INNER JOIN usuario u ON uc.iCodUsuario=u.iCodUsuario
	INNER JOIN persona p ON u.iCodPersona=p.iCodPersona
	INNER JOIN personanatural pn ON p.iCodPersona=pn.iCodPersona
	WHERE uc.iCodUsuarioContrata=@iCodUsuarioContrata
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_PersonaUCByNick]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO












 


CREATE PROCEDURE [dbo].[SP_ROW_PersonaUCByNick] @cNick varchar(40)  
AS
 SELECT uc.iCodUsuarioContrata,uc.iCodContrata,u.iCodUsuario, 
  ltrim(rtrim(pn.cApelP + ' ' + pn.cApelM )) + ' ' +  pn.cNombres as cNomCompleto,
  pn.cCorreo,
 uc.bAcceder 
FROM   UsuarioContrata AS uc 
inner join usuario u on uc.iCodUsuario=u.iCodUsuario
inner join personanatural pn on u.iCodPersona=pn.iCodPersona   
where  u.cNick=@cNick 
 












GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_UltimaActualizacionDiasBloqueado]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_ROW_UltimaActualizacionDiasBloqueado]      
@iCodCandidatoInforme int       
AS    
BEGIN    

 --select  
     --HABILITADO SI
	--DESHABILITADO EL REGISTRO NO  esta para 7 dias , se resta uno por defecto 
	  select top 1 
	  CASE 
	 WHEN DATEDIFF( DAY,ISNULL(ca.dFechaRegistro,GETDATE()),GETDATE())>6  then 'NO'
	  --WHEN DATEDIFF( DAY,ISNULL(ca.dFechaRegistro,GETDATE()),GETDATE())>6 or (ca.iResultadoTramite=102 ) then 'NO|'
	  else 'SI' end + '|' + 
	  convert(varchar(16),DATEADD(day,7,ca.dFechaRegistro),103 ) + '|' + 
	  convert(varchar(16),ciad.dFechaFinObservado,103 ) 	  
	  as cBloqueado 
	  FROM CandidatoAdmision ca 
	  left join candidatoinformeadd ciad on ca.iCodCandidatoInforme=ciad.iCodCandidatoInforme 
	  WHERE ca.iCodCandidatoInforme=@iCodCandidatoInforme 
	  and ca.iCodCandidatoAdmisionTipo=3 
	  and ca.iResultadoTramite<>102  
	 -- and ca.bImprocedente=0 	  
	  ORDER BY ca.iCodCandidatoAdmision DESC
 

 


  --select  
	 -- CASE 
	 -- WHEN DATEDIFF( DAY,ISNULL(NULL,GETDATE()),GETDATE())>6 then 'NO'
	 -- else 'SI' end + '**' + 
	 -- convert(varchar(16),DATEADD(day,7,'2024-01-24'),103 ) 

	 -- select * from CandidatoInforme where cDNI='45488251'

	 -- 
 --EXEC dbo.SP_ROW_UltimaActualizacionDiasBloqueado 6868
	  
	 -- 84872 



END 
GO
/****** Object:  StoredProcedure [dbo].[SP_ROW_WebDatosPersonaInicio]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ROW_WebDatosPersonaInicio] @iCodCandidatoInforme int 
AS
 SELECT CONCAT(cNombres,', ',cApellidos) AS [cNombres],dbo.fnCapitalizarTexto(ci.cCondicion) as [cCondicion],
 case 
	when ci.bCargaBox =1 then 100
	else
		cast(cid.bConsentimiento as tinyint)*20 +
		cast(cid.bEvaluacionEnviada as tinyint)*20 +
		cast(ci.bVerificativa as tinyint)*20 +
		(case 
			when cid.iCodUsuarioAptitudLaboral > 0 then 20 
		else 0 end )
 end as iProgreso,
 cid.bEvaluacionEnviada,
 cid.bConsentimiento ,
 --case ci.bSustentoCV
	--when 1 then
	--	case ci.cCondicion 
	--		when 'LOCAL' then dbo.fnCapitalizarTexto('LOCAL')
	--		when 'RESIDENTE' then dbo.fnCapitalizarTexto('LOCAL')
	--		when 'COMUNIDAD' then dbo.fnCapitalizarTexto('LOCAL')
	--		when 'FORANEO' then dbo.fnCapitalizarTexto('FORANEO')
	--		else dbo.fnCapitalizarTexto('FORANEO')
	--	end
	--else 
	--	'FORANEO'
 --end as [cCondicion],
 case ci.bSustentoCV
	when 1 then
		case  
			when ci.cCondicion='LOCAL' or ci.cCondicion='RESIDENTE' or ci.cCondicion='COMUNIDAD' THEN
				CASE 
				WHEN ci.cCondicion='COMUNIDAD' THEN dbo.fnCapitalizarTexto('MARISCAL NIETO')
				WHEN ci.cUbigeoResidencia like '1701%' THEN dbo.fnCapitalizarTexto('MARISCAL NIETO')
				WHEN ci.cUbigeoResidencia like '1702%' THEN dbo.fnCapitalizarTexto('GRAL. SANCHEZ CERRO') 
				WHEN ci.cUbigeoResidencia like '1703%' THEN dbo.fnCapitalizarTexto('ILO')
				WHEN ci.cUbigeo like '1701%' THEN dbo.fnCapitalizarTexto('MARISCAL NIETO')
				WHEN ci.cubigeo like '1702%' THEN dbo.fnCapitalizarTexto('GRAL. SANCHEZ CERRO')
				WHEN ci.cubigeo like '1703%' THEN dbo.fnCapitalizarTexto('ILO')	
				ELSE dbo.fnCapitalizarTexto('MARISCAL NIETO')
				END
			ELSE dbo.fnCapitalizarTexto('OTRAS PROVINCIAS')
		END
	ELSE dbo.fnCapitalizarTexto('OTRAS PROVINCIAS')
 END AS [cProvincia],
 CONCAT('(+51) ',ci.cFono) as [cFono],LOWER(ci.cCorreo) as [cCorreo],
 CASE  
	WHEN isnull(ci.cLicenciaConducir,'') != '' THEN UPPER(ci.cLicenciaConducir)
	ELSE 'Sin Licencia'
 END as [cLicenciaConducir],ci.cSexo as [cSexo],
 case 
	when isnull(ca.dFechaSolicitud,'') != '' then dbo.fnFormatoFecha(ca.dFechaSolicitud)
	when isnull(ca.dFechaSolicitud,'') = '' then ''
 end as [dFechaSolicitud],ci.bCargaBox,ci.iTiempoExperiencia,
 dbo.fnTiempoExperiencia(ci.iTiempoExperiencia) AS [cTiempoExperiencia],ci.cLicenciaConducir,
 ci.cOcupacion,
 isnull((select top 1 cedu.cCarrera from CandidatoEstudios cedu 
inner join catalogo cat on cedu.iGradoInstruccion=cat.cValueMember and cat.cTabla='Estudios' and cat.cNombreGrupo='iGradoInstruccion' 
where cedu.iCodCandidatoInforme=ci.iCodCandidatoInforme 
and cedu.bActivo=1 order by cat.iOrden  desc),ci.cPuestoEspecialidad) 
as cPuestoEspecialidad 
 --isnull(CONVERT(varchar,cid.bEvaluacionEnviada,103),'')   
 FROM  candidatoinforme ci 
left join candidatoinformeadd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme  
left join CandidatoAdmision ca on ci.iCodCandidatoInforme=ca.iCodCandidatoinforme and ca.iCodCandidatoAdmisionTipo=1 
where  ci.iCodCandidatoInforme=@iCodCandidatoInforme   
GO
/****** Object:  StoredProcedure [dbo].[SP_RPT_AnexoAdmisionDetalle]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_RPT_AnexoAdmisionDetalle] @iCodContrata int ,
@dFechaIni date,
@dFechaFin date
AS 
SELECT   
 (FORMAT( aa.iCorrelativo  ,'0000') + '-' + cast(aa.iPeriodo as varchar(4))) AS Correlativo, 
 
coa.cNomContrata as  Contrata,
 
 
cto.cNroContrato as [Nro. Contrato],
--cto.cNomContrato as [Contrato] ,
cto.cFase as [Fase],   

isnull(adt.cDetalle,'') as  [Tipo PGI] , 
 ci.cDNI as DNI,
 --ci.cTipoDoc as [Tipo Doc.],
ci.cApellidos + ' ' + ci.cNombres as [Apellidos y Nombres],
 ci.cSexo as [Género],
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as  Condicion ,
ad.cCargo as [Cargo],
ad.cMOCMONC [Tipo MMOO], 
case 
when ad.bAnulado=1 then 'ANULADO' 
else 
	case ad.cProcesoEtapa 
	when 'P' then 'PROCESO' 
	when 'O' then 'OBSERVADO' 
	when 'R' then 'RECHAZADO' 
	when 'A' then 'APROBADO' 
	else 'ANULADO'
	end
end as  Estado ,

 CASE WHEN  aa.dFechaUsuarioContrataEnvia = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaUsuarioContrataEnvia as date) END AS [Registro] ,
  
 CASE WHEN convert(date,aa.dFechaAprobacion) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaAprobacion as date)  END AS [Aprueba OAEL], 

  CASE WHEN convert(date,aa.dFechaSolicitud) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaSolicitud as date)  END AS [Solicita Firma], 

   CASE WHEN convert(date,aa.dFechaNotifica) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaNotifica as date)  END AS [Notificado], 
 

CASE WHEN convert(date,aa.dFechaApruebaAreaAAQ) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaApruebaAreaAAQ as date)  END AS [Aprob. A. Usuaria], 

CASE WHEN convert(date,aa.dFechaAprobadoAAQ) = '1900-01-01' THEN NULL 
 ELSE Cast(aa.dFechaAprobadoAAQ as date)  END AS [Aprob. AAQ] 
 --,  
 --(
 --select count(fld.iCodFuerzaLaboralDetalle) from 
 --FuerzaLaboralDetalle fld -- on ad.iCodCandidatoInforme=fld.iCodCandidatoInforme 
 --left join FuerzaLaboral fl on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral 
  
 --where fld.iCodCandidatoInforme=ad.iCodCandidatoInforme  and fl.iCodContratistaContrato=aa.iCodContratistaContrato 
 --and fl.iPeriodo=2021 and fl.iMes>=month(aa.dFechaSolicitud) )  as [Cant Meses FFLL],
 --case 
 --when isnull(fld.iCodFuerzaLaboralDetalle,0)>0 then 'SI' 
 --else 'NO' 
 --end as [FFLL ACTUAL] 

from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join AnexoAdmision aa on ad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join contrata coa on aa.iCodContrata=coa.iCodContrata
 inner join ContratistaContrato cto on aa.iCodContratistaContrato=cto.iCodContratistaContrato 
left join AnexoAdmisionTipo adt on ad.iCodAnexoAdmisionTipo=adt.iCodAnexoAdmisionTipo 
 -- left join fuerzalaboraldetalle fld on ad.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 
 
where aa.dFechaSolicitud>=@dFechaIni and aa.dFechaSolicitud<=@dFechaFin 
  and (aa.iCodContrata=@iCodContrata or 0=@iCodContrata)   
order by coa.cNomContrata , aa.dFechaRegistro , ci.cApellidos 

-- 2077  42473495



 
GO
/****** Object:  StoredProcedure [dbo].[SP_RPT_ConvocatoriaCartaComunalGestor]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_RPT_ConvocatoriaCartaComunalGestor]   
	@iCodConvocatoriaComunidad nvarchar(1000)   
AS  
BEGIN

	DECLARE @IDs TABLE(id INT)  

	INSERT INTO @IDs(id)   
	SELECT ID FROM dbo.fnSplitString(@iCodConvocatoriaComunidad,',')  
  
	SELECT  CC.iCodConvocatoriaComunidad,
			C.iCodConvocatoria,
			CM.cNroConvocatoria,
			CONT.cNomContrata,
			CC.cComunidad,
			C.cPerfil,
			CC.iCantidad,
			C.cDesPerfil,
			C.cOtrosBeneficios,
		    ISNULL(STUFF((SELECT ', ' + CAST(pn.cNombres + ' ' + pn.cApelP + ' ' + pn.cApelM AS varchar)
            FROM PersonaGestorComunidad pgc
		    INNER JOIN PersonaNatural pn ON pn.iCodPersona = pgc.iCodPersona
            WHERE PGC.iCodComunidad = CC.iCodComunidad AND PGC.bHabilitar=1
            FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 
            1,2, ''),' ') as NombreGestor
	FROM DBO.Convocatoria AS C
	LEFT JOIN DBO.ConvocatoriaMain CM ON CM.iCodConvocatoriaMain=C.iCodConvocatoriaMain
	LEFT JOIN DBO.Contrata CONT ON CONT.iCodContrata = CM.iCodContrata
	LEFT JOIN DBO.ConvocatoriaComunidad CC ON C.iCodConvocatoria=CC.iCodConvocatoria
	WHERE CC.iCodConvocatoriaComunidad IN (SELECT id FROM @IDs)

END
GO
/****** Object:  StoredProcedure [dbo].[SP_RPT_DataLocal]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_RPT_DataLocal] @cOcupacion varchar(50)
AS 

SELECT  TOP 5  
ci.cNombres + ' ' + ci.cApellidos as [NOMBRES Y APELLIDOS],
ci.cDNI AS [DNI], 
 ci.cSexo as [GENERO],
    floor(
(cast(convert(varchar(8),getdate(),112) as int)-
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000
) as [EDAD] ,
ci.cFono AS [TELEFONO],ci.cCorreo AS [CORREO], 
ci.cCondicion AS [CONDICION],
case ci.bSustentoCV
when 1 then
	 case when  ci.cCondicion = 'COMUNIDAD' then  ci.cComunidad 
	else 
		case  ci.cUbigeo 
		WHEN '170102' THEN 'CARUMAS [DISTRITO]'
		WHEN '170103' THEN 'CUCHUMBAYA [DISTRITO]' 
		WHEN '170104' THEN 'SANCRISTOBAL [DISTRITO]' 
		WHEN '170105' THEN 'TORATA [DISTRITO]'
		else '' end
	end 		
else ''  end  as [COMUNIDAD],
case ci.bSustentoCV
when 1 then
	case  
	when ci.cCondicion='LOCAL' or ci.cCondicion='RESIDENTE' or ci.cCondicion='COMUNIDAD' THEN
		CASE 
		WHEN ci.cCondicion='COMUNIDAD' THEN 'MARISCAL NIETO' 
		
		WHEN ci.cUbigeo like '1701%' THEN 'MARISCAL NIETO' 
		WHEN ci.cubigeo like '1702%' THEN 'GRAL. SANCHEZ CERRO' 
		WHEN ci.cubigeo like '1703%' THEN 'ILO' 	

		WHEN ci.cUbigeoResidencia like '1701%' THEN 'MARISCAL NIETO' 
		WHEN ci.cUbigeoResidencia like '1702%' THEN 'GRAL. SANCHEZ CERRO' 
		WHEN ci.cUbigeoResidencia like '1703%' THEN 'ILO' 
		ELSE 'MARISCAL NIETO'
		END
	ELSE 'OTRAS PROVINCIAS' END
else 'OTRAS PROVINCIAS' end as [PROVINCIA],
case 
when ltrim(rtrim(ci.cEducaSecundaria))<>'' then 'SECUNDARIA' 
when ltrim(rtrim(ci.cEducatecnica))<>'' then 'TECNICO' 
when ltrim(rtrim(ci.ceducasuperior))<>'' then 'UNIVERSITARIO' 
else '---' end as [GRADO INSTRUCCIÓN],
 ci.cPuestoEspecialidad AS [PUESTO ESPECIALIDAD], 
 ci.cLicenciaConducir AS [LIC. CONDUCIR],

 case 
 when isnull(cid.iCodOcupacion,0)=0 then ci.cOcupacion 
 else 
	 CASE 
	 WHEN tdo1.cNomOcupacion='NO CATALOGADO' then ''
	 else tdo1.cNomOcupacion
	 END
 end as [OCUPACION 01],
  case when cid.iCodOcupacion=0 then ci.iTiempoExperiencia 
 else cid.iTiempoExperiencia 
 end as [TIEMPO EXP. 01],
   case when cid.iCodOcupacion=0 then (
					case 
					when year(ci.dFechaEvaluacionResultado)=1900 then '' 
					else cast(year(ci.dFechaEvaluacionResultado) as varchar(6)) end )
	else
		case 
		when  cid.iUltimaExperiencia=1900 then 0
		else cid.iUltimaExperiencia
		end 
 end as [ULTIMA EXP. 01],
  
cid.cRubroExperiencia AS [RUBRO EXP. 01],
cid.cSectorExperiencia AS [SECTOR EXP. 01],


  case 
  when isnull(cid.iCodOcupacion2,0)=0 then ci.cOcupacion2 
 else
	 CASE 
	 WHEN tdo2.cNomOcupacion='NO CATALOGADO' then '' 
	 else tdo2.cNomOcupacion 
	 END
 end as [OCUPACION 02], 
 cid.iTiempoExperiencia2 AS [TIEMPO EXP. 02],
cid.iUltimaExperiencia2 AS [ULTIMA EXP. 02], 
cid.cRubroExperiencia2 AS [RUBRO EXP. 02],
cid.cSectorExperiencia2 AS [SECTOR EXP. 02],
case (select count(fld.icodcandidatoinforme) from fuerzalaboraldetalle fld 
where fld.icodcandidatoinforme=ci.icodcandidatoinforme) 
when  0 then '' 
else 'SI' 
end as [LABORÓ EN AAQ]  
FROM CandidatoInforme ci 
inner join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme 
left join TDOcupacion tdo1 on cid.iCodOcupacion=tdo1.iCodOcupacion 
left join TDOcupacion tdo2 on cid.iCodOcupacion2=tdo2.iCodOcupacion   
where ci.cCondicion in ('LOCAL','RESIDENTE','COMUNIDAD')   and ci.bSustentoCV=1 and ci.bCargabox=1 
 
GO
/****** Object:  StoredProcedure [dbo].[SP_RPT_FFLLDashboardPBI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_RPT_FFLLDashboardPBI] @iPeriodo int,
										@iMes int,
										@cTipoFFLL varchar(5) 
AS

DELETE FROM [rpt].[DataFuerzaLaboralDetalle]  WHERE [PERIODO]=@iPeriodo and [MES NRO]=@iMes;

INSERT INTO [rpt].[DataFuerzaLaboralDetalle]  
           ([FECHA REPORTE]
           ,[NOMBRE REPORTE]
           ,[IDFL]
           ,[PERIODO]
           ,[MES NRO]
           ,[MES]
           ,[CONTRATISTA]
           ,[FASE]
           ,[NRO CONTRATO]
           ,[ZONA]
           ,[TIPO MMOO]
           ,[OCUPACION]
           ,[FECHA INGRESO]
           ,[TIPO PLANILLA]
           ,[TIPO CARGO]
           ,[EECC TIPO]
           ,[EECC NOMBRE]
           ,[FASE NUEVA]
           ,[ESTADO PERSONA]
           ,[ESTADO DETALLE]
           ,[ESTADO INICIAL]
           ,[ESTADO FINAL]
           ,[CID]
           ,[EXP. OAEL]
           ,[CONDICION]
           ,[CONDICION DETALLE]
           ,[UBIGEO]
           ,[TIPOAID]
           ,[COMUNIDAD]
           ,[PROVINCIA]
           ,[GENERO]
           ,[EDAD]
           ,[DPTO. NACIMIENTO]
           ,[DPTO. RESIDENCIA]
		   ,[FASE RRHH]
		   ,[FFLL LUGAR PERNOCTE])

select   
GETDATE() as [FECHA REPORTE],
'---' AS [NOMBRE REPORTE],
fld.iCodFuerzaLaboralDetalle AS [IDFL],
fl.iPeriodo as PERIODO, 
 fl.imes [MES NRO], 
   case  fl.imes 
 when 1 then 'ENERO' 
 when 2 then 'FEBRERO' 
 when 3 then 'MARZO' 
 when 4 then 'ABRIL' 
 when 5 then 'MAYO' 
 when 6 then 'JUNIO' 
 when 7 then 'JULIO' 
 when 8 then 'AGOSTO' 
 when 9 then 'SETIEMBRE' 
 when 10 then 'OCTUBRE' 
 when 11 then 'NOVIEMBRE' 
 when 12 then 'DICIEMBRE'  
 END AS MES,
co.cNomContrata AS [CONTRATISTA], 
 cto.cfase as [FASE],
cto.cNroContrato as [NRO. CONTRATO],
cto.cZona as [ZONA],  
 fld.cMOCMONC as [TIPO MMOO],
 fld.cOcupacion as [OCUPACION],
  fld.dFechaIni AS [FECHA INGRESO] ,
  fld.cRegimenLaboral as [TIPO PLANILLA],
  fld.cTipoCargo AS [TIPO CARGO],



   case when fl.iCodContrata<>fld.iCodSubContrata then 'EMPRESA SUB CONTRATISTA' 
else 'EMPRESA PRINCIPAL' end as [EECC TIPO],
  sc.cNomContrata   as [EECC NOMBRE]  ,

  case 
when cto.cfase='OP' then 'OP' 
when cto.cFase='TR' then 'OP'
when cto.cFase='CO' then 'CO' 
end 
as [FASE NUEVA] ,

  case fld.bCesado  
 when 1 then 'CESADO' 
 else  'ACTIVO' end
 as [ESTADO PERSONA] ,
    case fld.bCesado  
 when 1 then 'CESADO' 
 else  fld.cSituacionLaboral end
 as [ESTADO DETALLE] ,

  case 
 
when fld.cnivel='A' then 'REGISTRADO' 
when fld.cnivel ='N' then 'NUEVO ' end as [ESTADO INICIAL] ,

case 
when fld.bCesado=1 then 'CESADO'  
when fld.cnivel='A' then 'REGISTRADO' 
when fld.cnivel ='N' then 'NUEVO ' 
else 'SD' end as [ESTADO FINAL],
    ci.iCodCandidatoInforme AS [CID],

	case ci.bSustentoCV
when 1 then	
	case  
	when ci.cCondicion='LOCAL' or ci.cCondicion='RESIDENTE' or ci.cCondicion='COMUNIDAD' THEN 
		case
		when ci.bCargaBox=1 then 'SI' 
		else 'NO' end 
	else 'NO' end	
else 'NO' end AS [EXP. OAEL],

case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as [CONDICION] ,

case ci.bSustentoCV
when 1 then ci.cCondicion 
else 'FORANEO' end as [CONDICION DETALLE] ,

ci.cUbigeo as [UBIGEO] ,


 case ci.bSustentoCV
when 1 then
	 case when  ci.cCondicion = 'COMUNIDAD' then  'CONSTANCIA DE COMUNIDAD'  
	else 
		case  ci.cUbigeo  
		WHEN '170102' THEN 'ÁREA DE INFLUENCIA' --'CARUMAS [DISTRITO]'
		WHEN '170103' THEN 'ÁREA DE INFLUENCIA' --'CUCHUMBAYA [DISTRITO]' 
		WHEN '170104' THEN 'ÁREA DE INFLUENCIA' --'SANCRISTOBAL [DISTRITO]' 
		WHEN '170105' THEN 'ÁREA DE INFLUENCIA' --'TORATA [DISTRITO]'
		else '' end
	end 		
else ''  end  as [TIPOAID],

case ci.bSustentoCV
when 1 then
	 case when  ci.cCondicion = 'COMUNIDAD' then  ci.cComunidad 
	else 
		case  ci.cUbigeo 
		WHEN '170102' THEN 'CARUMAS [DISTRITO]'
		WHEN '170103' THEN 'CUCHUMBAYA [DISTRITO]' 
		WHEN '170104' THEN 'SANCRISTOBAL [DISTRITO]' 
		WHEN '170105' THEN 'TORATA [DISTRITO]'
		else '' end
	end 		
else ''  end  as [COMUNIDAD],

case ci.bSustentoCV
when 1 then
	case  
	when ci.cCondicion='LOCAL' or ci.cCondicion='RESIDENTE' or ci.cCondicion='COMUNIDAD' THEN
		CASE 
		WHEN ci.cCondicion='COMUNIDAD' THEN 'MARISCAL NIETO' 

		WHEN ci.cUbigeo like '1701%' THEN 'MARISCAL NIETO' 
		WHEN ci.cubigeo like '1702%' THEN 'GRAL. SANCHEZ CERRO' 
		WHEN ci.cubigeo like '1703%' THEN 'ILO' 	

		WHEN ci.cUbigeoResidencia like '1701%' THEN 'MARISCAL NIETO' 
		WHEN ci.cUbigeoResidencia like '1702%' THEN 'GRAL. SANCHEZ CERRO' 
		WHEN ci.cUbigeoResidencia like '1703%' THEN 'ILO' 

	
		ELSE 'MARISCAL NIETO'
		END
	ELSE 'OTRAS PROVINCIAS' END
else 'OTRAS PROVINCIAS' end as [PROVINCIA],

 ci.cSexo as [GENERO],

 case 

 when year(ci.dFechaNac)=1900 then 0 
 when year(ci.dFechaNac)>=year(GETDATE()) then 0 
 else 
   floor(
(cast(convert(varchar(8),getdate(),112) as int)-
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000
) 
end as [EDAD] ,


isnull(u.cDepartamento,'') as [DPTO. NACIMIENTO],
isnull(ur.cDepartamento,'') as [DPTO. RESIDENCIA],
 
 case 
when cto.cfase='OP' then 'OP' 
when cto.cFase='TR' then 'OP'
when cto.cFase='CO' then 'CO' 
end 
as [FASE RRHH] ,
fld.clugarpernocte as [FFLL LUGAR PERNOCTE]
--,ci.iCodCandidatoInforme 


  
 --ci.cFono,ci.cCorreo, 



from FuerzaLaboral fl 
inner join fuerzalaboraldetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral 
inner join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata 
inner join contrata co on fl.iCodContrata=co.iCodContrata 
left join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato 

left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
--where fl.iPeriodo=2022 
--and fl.iMes=3      
 -- and 
 where 
 fl.iPeriodo=@iPeriodo 
 and fl.iMes=@iMes   
 --fld.bCesado=0  
 and cto.cFase<>'NA'  
 --and fld.cnivel ='N' 
  order by co.cnomcontrata,cnrocontrato,sc.cNomContrata ,ci.cApellidos 

GO
/****** Object:  StoredProcedure [dbo].[SP_RPT_FichaConsultaRuc]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_RPT_FichaConsultaRuc]   
@iCodContrata int        
AS    
BEGIN    
 SELECT    
  C.cNomContrata,  
  C.cRUC,  
  C.cCondicionEmpresa + ' - ' + cCondicionEmpresaDetalle AS cCondicionEmpresa,  
  CASE C.cTipoEmpresa WHEN 'EECC' THEN 'EMPRESA CONTRATISTA' ELSE C.cTipoEmpresa END cTipoEmpresa,
  CONVERT(varchar, CSI.dFechaInicioActividades, 103) as dFechaInicioActividades,
  CONVERT(varchar, CSI.dFechaInscripcion, 103) as dFechaInscripcion,
  CSI.cEstadoContribuyente,  
  CSI.cCondicionContribuyente,  
  CSI.cUbigeoDomicilioFiscal + ' ' + CSI.cDomicilioFiscal AS DireccionFiscal,  
  CSI.cSistemaEmiteComprobante,  
  CSI.cActividadComercioExterior,  
  CSI.cActividadPrincipal,  
  CSI.cActividadSecundariaUno,  
  CSI.cActividadSecundariaDos,  
  CONVERT(varchar, CSI.dFechaCreacion, 103) as FechaRegistro,
  CSI.iCodUsuarioCreacion,
  P.cNombres + ' ' + P.cApelP + ' ' +  P.cApelM as NombreUsuarioRegistro,
  CI.cNombres + ' ' + CI.cApellidos AS RepresentanteNombre,  
  CI.cDNI,  
  CI.cCorreo,  
  CI.cFono,  
  CI.cCondicion as CondicionRepresentante,
  CI.cComunidad as ComunidadRepresentante
 FROM Contrata C  
 OUTER APPLY (  
  SELECT TOP 1 *  
  FROM ContrataSunatInfo CSI  
  WHERE CSI.iCodContrata = C.iCodContrata  
  ORDER BY CSI.dFechaCreacion DESC  
 ) CSI  
 LEFT JOIN ContrataRepresentante CREP ON CREP.iCodContrata = C.iCodContrata  
 LEFT JOIN CandidatoInforme CI ON CI.iCodCandidatoInforme = CREP.iCodCandidatoInforme
 LEFT JOIN Usuario U ON U.iCodUsuario=CSI.iCodUsuarioCreacion
 LEFT JOIN PersonaNatural P ON P.iCodPersona=U.iCodPersona
 WHERE C.iCodContrata = @iCodContrata  
END 
GO
/****** Object:  StoredProcedure [dbo].[SP_RPT_FichaPostulante]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_RPT_FichaPostulante] @iCodCandidatoInforme int    
AS
BEGIN
	SELECT   ci.iCodCandidatoInforme ,   
	ci.cNombres + ' ' + ci.cApellidos as cNomCompleto,  
	ci.cDNI,   
	case   
	when year(ci.dFechaNac)=1900 then ''   
	else cast(year(ci.dFechaNac) as varchar(6)) end as cAnioNacimiento,  
	ci.cFono,ci.cCorreo,   
	cid.cGUIDConsentimiento,  
	cid.dFechaConsentimiento ,  
	ci.cCondicion,  
--	case 
--WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'LOCAL' 
--WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'LOCAL' 
--when ltrim(rtrim(substring(u.cUbigeo,1,2)))='02' then 'LOCAL' 
--when ltrim(rtrim(u.cUbigeo))='140902' then 'LOCAL' 
--when ltrim(rtrim(u.cUbigeo))='090409' then 'LOCAL' 
--when ltrim(rtrim(u.cUbigeo))='090401' then 'LOCAL' 
--ELSE 
--	'FORANEO'	  
--END AS cCondicion,

	case   
	when ci.bRucMoq=1 then 'RUC'  
	 when ci.bTrabajoMoq=1 then 'TR'   
	  when ci.bEstudioMoq=1 then 'ES'  
	 when ci.bConviveMoq=1 then 'CONV'    
	when ci.bCasadoMoq=1 then 'MA'   
	  when ci.bHijosMoq=1 then 'HI'   
	 when ci.bDNIMoq=1 then 'RE'   
  
	 when ci.cCondicion='LOCAL' then 'DNI'      
	  when ci.cCondicion='COMUNIDAD' then 'CO'      
	 when ci.cCondicion='FORANEO' then 'DNI' end   
	 as cTipoSustento ,   
	 --cid.cGradoInstruccion,  
	--case   
	--when ltrim(rtrim(ci.cEducaSecundaria))<>'' then 'SECUNDARIA'   
	--when ltrim(rtrim(ci.cEducatecnica))<>'' then 'TECNICO'   
	--when ltrim(rtrim(ci.ceducasuperior))<>'' then 'UNIVERSITARIO'   
	--else '---' end as cGradoInstruccion,  
	 isnull(  
	 (select top 1 cat.cDisplayMember from CandidatoEstudios cedu   
	inner join catalogo cat on cedu.iGradoInstruccion=cat.cValueMember and cat.cTabla='Estudios' and cat.cNombreGrupo='iGradoInstruccion'   
	where cedu.iCodCandidatoInforme=ci.iCodCandidatoInforme   
	and cedu.bActivo=1  order by cat.iOrden  desc)  
	,  
	--parte de null  
	case   
	when ltrim(rtrim(ci.cEducaSecundaria))<>'' then 'SECUNDARIA'   
	when ltrim(rtrim(ci.cEducatecnica))<>'' then 'TECNICO'   
	when ltrim(rtrim(ci.ceducasuperior))<>'' then 'UNIVERSITARIO'   
	else '---' end   
	)   
	as cGradoInstruccion,  
  
	-- ci.cPuestoEspecialidad,   
	 isnull((select top 1 cedu.cCarrera from CandidatoEstudios cedu   
	inner join catalogo cat on cedu.iGradoInstruccion=cat.cValueMember and cat.cTabla='Estudios' and cat.cNombreGrupo='iGradoInstruccion'   
	where cedu.iCodCandidatoInforme=ci.iCodCandidatoInforme   
	and cedu.bActivo=1 order by cat.iOrden  desc),ci.cPuestoEspecialidad)   
	as cPuestoEspecialidad,  
	 ci.cLicenciaConducir,  
  
	 case   
	 when isnull(cid.iCodOcupacion,0)=0 then ci.cOcupacion   
	 else   
	  CASE   
	  WHEN tdo1.cNomOcupacion='NO CATALOGADO' then ''  
	  else tdo1.cNomOcupacion  
	  END  
	 end as cNomOcupacion,  
	  case when cid.iCodOcupacion=0 then ci.iTiempoExperiencia   
	 else cid.iTiempoExperiencia   
	 end as iTiempoExperiencia,  
	   case when cid.iCodOcupacion=0 then (  
		 case   
		 when year(ci.dFechaEvaluacionResultado)=1900 then ''   
		 else cast(year(ci.dFechaEvaluacionResultado) as varchar(6)) end )  
	 else  
	  case   
	  when  cid.iUltimaExperiencia=1900 then 0  
	  else cid.iUltimaExperiencia  
	  end   
	 end as iUltimaExperiencia,  
    
	cid.cRubroExperiencia,  
	cid.cSectorExperiencia,  
	--ci.iTiempoExperiencia,  
	--case   
	--when year(ci.dFechaEvaluacionResultado)=1900 then ''   
	--else cast(year(ci.dFechaEvaluacionResultado) as varchar(6)) end as cUltimaExperienciaAnio,   
	--cid.cRubroExperiencia,  
	--cid.cSectorExperiencia,  
  
	 --tdo2.cNomOcupacion as cNomOcupacion2,  
  
	  case   
	  when isnull(cid.iCodOcupacion2,0)=0 then ci.cOcupacion2   
	 else  
	  CASE   
	  WHEN tdo2.cNomOcupacion='NO CATALOGADO' then ''   
	  else tdo2.cNomOcupacion   
	  END  
	 end as cNomOcupacion2,   
	 cid.iTiempoExperiencia2,  
	cid.iUltimaExperiencia2,   
	cid.cRubroExperiencia2,  
	cid.cSectorExperiencia2,  
	case cid.bRetcc   
	when 1 then 'SI'   
	else 'NO' end as cRetcc,  
	case cid.bStakeholder   
	when 1 then 'SI'   
	else 'NO' end as cStakeholder,  
	case (select count(fld.icodcandidatoinforme) from fuerzalaboraldetalle fld   
	where fld.icodcandidatoinforme=ci.icodcandidatoinforme)   
	when  0 then ''   
	else 'SI'   
	end as cLaboroAAQ ,  
	cel.cEmpresa ,
cel.dFechaIni  ,
cel.dFechaFin ,
cel.cPuesto ,
cel.cRubroExperiencia as cRubroExperienciaExpLab,
cel.cSectorExperiencia as cSectorExperienciaExpLab ,
	ci.cAptitud ,  
	ci.iResultadoVerificativa ,  
	left(isnull(cid.cUsuarioTestPsicoValida,''),2) +'-'+left(isnull(cid.cUsuarioAptitudLaboral,'') ,2) as cUsuariosGestion   
	,  
	 isnull(ur.cDepartamento,'')  + ' - ' +   
	 isnull(ur.cProvincia,'') + ' - ' +   
	  isnull(ur.cDistrito,'') +  '  - ' + ci.cDireccion   
	   as cLugarResidencia   
  
	FROM CandidatoInforme ci   
	left join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme   
	left join TDOcupacion tdo1 on cid.iCodOcupacion=tdo1.iCodOcupacion   
	left join TDOcupacion tdo2 on cid.iCodOcupacion2=tdo2.iCodOcupacion     
	left join CandidatoExperienciaLaboral cel on ci.iCodCandidatoInforme=cel.iCodCandidatoInforme  and cel.bDocumentado=1    
	 left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo   
--  left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
--left join CandidatoInformeCondicion cond on ci.iCodCandidatoInforme=cond.iCodCandidatoInforme 
--left join Comunidad com on com.iCodComunidad=cond.iCodComunidad and com.iCodComunidad>1     

	--left join CandidatoEstudios ced on ced.iCodCandidatoInforme=ci.iCodCandidatoInforme    
	where ci.iCodCandidatoInforme=@iCodCandidatoInforme   
	--and cel.bDocumentado=1   
	order by cel.dfechafin desc

END 
GO
/****** Object:  StoredProcedure [dbo].[SP_RPT_FichaPostulanteConocimientos]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_RPT_FichaPostulanteConocimientos]    
	@iCodCandidatoInforme int 
	as 
select 
cat.cTipoConocimiento , 
cat.cDescripcion  
from 
Conocimiento co 
inner join CatalogoConocimiento cat on cat.iCodCatalogoConocimiento=co.iCodCatalogoConocimiento 
where co.iCodCandidatoInforme=@iCodCandidatoInforme


GO
/****** Object:  StoredProcedure [dbo].[SP_RPT_FichaPostulanteEstudios]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_RPT_FichaPostulanteEstudios]    
	@iCodCandidatoInforme int 
	as 
select 

isnull(cat2.cDisplayMember,
case 
	when ltrim(rtrim(ci.cEducaSecundaria))<>'' then 'SECUNDARIA' 
	when ltrim(rtrim(ci.cEducatecnica))<>'' then 'TECNICO' 
	when ltrim(rtrim(ci.ceducasuperior))<>'' then 'UNIVERSITARIO' 
	else '---' end 
) 
as cGradoInstruccion ,
cedu.cCentroEstudios ,
cedu.cCarrera ,
cedu.iPeriodoFinAno 
from candidatoinforme ci 
inner join CandidatoEstudios cedu on ci.iCodCandidatoInforme=cedu.iCodCandidatoInforme  
LEFT JOIN catalogo cat2 on cedu.iGradoInstruccion=cat2.cValueMember 
and cat2.cTabla='Estudios' and cat2.cNombreGrupo='iGradoInstruccion' 
where ci.iCodCandidatoInforme=@iCodCandidatoInforme  
GO
/****** Object:  StoredProcedure [dbo].[SP_RPT_FichaPostulantePlataforma]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_RPT_FichaPostulantePlataforma]   
@cDni varchar(max)      
AS
BEGIN
	SELECT ci.iCodCandidatoInforme,     
			ci.cNombres as cNombres,
			ci.cApellidos as cApellidos,    
			ci.cDNI,
			ci.cDireccion,
			case when year(ci.dFechaNac)=1900 then ''else cast(year(ci.dFechaNac) as varchar(6)) 
			end as cAnioNacimiento,    
			ci.cFono,
			ci.cCorreo,
			CASE ci.cSexo
			WHEN 'M' THEN 'MASCULINO' 
			WHEN 'F' THEN 'FEMENINO' 
			ELSE ''
			END AS cSexo,
			ci.cEstCivil,
			convert(varchar,ci.dFechaNac,103) as dFechaNac,
			ci.cUbigeo,
			ci.cCondicion,    
			case     
			when ci.bRucMoq=1 then 'RUC'    
			when ci.bTrabajoMoq=1 then 'TR'     
			when ci.bEstudioMoq=1 then 'ES'    
			when ci.bConviveMoq=1 then 'CONV'      
			when ci.bCasadoMoq=1 then 'MA'     
			when ci.bHijosMoq=1 then 'HI'     
			when ci.bDNIMoq=1 then 'RE'     
			when ci.cCondicion='LOCAL' then 'DNI'        
			when ci.cCondicion='COMUNIDAD' then 'CO'        
			when ci.cCondicion='FORANEO' then 'DNI' end     
			as cTipoSustento ,     
			cid.cGradoInstruccion,
			ci.cPuestoEspecialidad,     
			ci.cOcupacion,
			ci.cOcupacion2,    
			ci.cLicenciaConducir, 
			ci.cExpLaboral,
			ci.cEmprEx1,
			ci.cCargoEx1,
			ci.dFechaIniEx1,
			ci.dFechaFinEx1,
			ci.cEmprEx2,
			ci.cCargoEx2,
			ci.dFechaIniEx2,
			ci.dFechaFinEx2,
			ci.iTiempoExperiencia,    
	case     
	when year(ci.dFechaEvaluacionResultado)=1900 then ''     
	else cast(year(ci.dFechaEvaluacionResultado) as varchar(6)) 
	end as cUltimaExperienciaAnio,     
	cid.cRubroExperiencia,    
	cid.cSectorExperiencia,    
	case cid.bRetcc     
	when 1 then 'SI'     
	else 'NO' end as cRetcc,    
	case cid.bStakeholder     
	when 1 then 'SI'     
	else 'NO' end as cStakeholder,    
	case (select count(fld.icodcandidatoinforme) from fuerzalaboraldetalle fld     
	where fld.icodcandidatoinforme=ci.icodcandidatoinforme)     
	when  0 then ''     
	else 'SI'     
	end as cLaboroAAQ     
	FROM CandidatoInforme ci     
	inner join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme     
	where ci.cDNI=@cDni 
END
GO
/****** Object:  StoredProcedure [dbo].[SP_RPT_FichaPostulanteWeb]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_RPT_FichaPostulanteWeb]      
 @cDni varchar(10)          
AS    
BEGIN  
 SELECT ci.iCodCandidatoInforme ,   
 ci.cNombres + ' ' + ci.cApellidos as cNomCompleto,  
 ci.cNombres,  
 ci.cApellidos,  
 ci.cDNI, 
 CASE ci.cSexo WHEN 'M' THEN 'MASCULINO' WHEN 'F' THEN 'FEMENINO' ELSE '-' END AS cSexo,
 ci.cDireccion,
 ci.cEstCivil,
 case   
 when year(ci.dFechaNac)=1900 then ''   
 else cast(year(ci.dFechaNac) as varchar(6)) end as cAnioNacimiento,  
 convert(varchar,ci.dFechaNac,103) as dFechaNac,   
 ci.cFono,lower(ci.cCorreo) as cCorreo,   
 cid.cGUIDConsentimiento,  
 cid.dFechaConsentimiento ,  
 ci.cCondicion,  
 case   
 when ci.bRucMoq=1 then 'RUC'  
  when ci.bTrabajoMoq=1 then 'TR'   
   when ci.bEstudioMoq=1 then 'ES'  
  when ci.bConviveMoq=1 then 'CONV'    
 when ci.bCasadoMoq=1 then 'MA'   
   when ci.bHijosMoq=1 then 'HI'   
  when ci.bDNIMoq=1 then 'RE'   
  
  when ci.cCondicion='LOCAL' then 'DNI'      
   when ci.cCondicion='COMUNIDAD' then 'CO'      
  when ci.cCondicion='FORANEO' then 'DNI' end   
  as cTipoSustento ,   
  --cid.cGradoInstruccion,  
 --case   
 --when ltrim(rtrim(ci.cEducaSecundaria))<>'' then 'SECUNDARIA'   
 --when ltrim(rtrim(ci.cEducatecnica))<>'' then 'TECNICO'   
 --when ltrim(rtrim(ci.ceducasuperior))<>'' then 'UNIVERSITARIO'   
 --else '---' end as cGradoInstruccion,  
   isnull((select top 1 cat1.cDisplayMember from CandidatoEstudios cedu1   
inner join catalogo cat1 on cedu1.iGradoInstruccion=cat1.cValueMember and cat1.cTabla='Estudios' and cat1.cNombreGrupo='iGradoInstruccion'   
where cedu1.iCodCandidatoInforme=ci.iCodCandidatoInforme  order by cat1.iOrden  desc),  
case   
 when ltrim(rtrim(ci.cEducaSecundaria))<>'' then 'SECUNDARIA'   
 when ltrim(rtrim(ci.cEducatecnica))<>'' then 'TECNICO'   
 when ltrim(rtrim(ci.ceducasuperior))<>'' then 'UNIVERSITARIO'   
 else '---' end   
)   
as cGradoInstruccion,  
  
 --case   
 --when ltrim(rtrim(ci.cEducaSecundaria))<>'' then ci.cEducaSecundaria  
 --when ltrim(rtrim(ci.cEducatecnica))<>'' then ci.cEducaTecnica  
 --when ltrim(rtrim(ci.ceducasuperior))<>'' then ci.cEducaSuperior  
 --else '---' end as cCentroEstudio,   
  
  isnull((select top 1 cedu2.cCentroEstudios from CandidatoEstudios cedu2   
inner join catalogo cat2 on cedu2.iGradoInstruccion=cat2.cValueMember and cat2.cTabla='Estudios' and cat2.cNombreGrupo='iGradoInstruccion'   
where cedu2.iCodCandidatoInforme=ci.iCodCandidatoInforme  order by cat2.iOrden  desc),  
case   
 when ltrim(rtrim(ci.cEducaSecundaria))<>'' then ci.cEducaSecundaria  
 when ltrim(rtrim(ci.cEducatecnica))<>'' then ci.cEducaTecnica  
 when ltrim(rtrim(ci.ceducasuperior))<>'' then ci.cEducaSuperior  
 else '---' end  
)   
as cCentroEstudio,  
  
  --ci.cPuestoEspecialidad,   
   isnull((select top 1 cedu.cCarrera from CandidatoEstudios cedu   
inner join catalogo cat on cedu.iGradoInstruccion=cat.cValueMember and cat.cTabla='Estudios' and cat.cNombreGrupo='iGradoInstruccion'   
where cedu.iCodCandidatoInforme=ci.iCodCandidatoInforme  order by cat.iOrden  desc),ci.cPuestoEspecialidad)   
as cPuestoEspecialidad,  
  ci.cLicenciaConducir,   
  case   
  when isnull(cid.iCodOcupacion,0)=0 then ci.cOcupacion   
  else   
   CASE   
   WHEN tdo1.cNomOcupacion='NO CATALOGADO' then ''  
   else tdo1.cNomOcupacion  
   END  
  end as cNomOcupacion,  
   case when cid.iCodOcupacion=0 then ci.iTiempoExperiencia   
  else cid.iTiempoExperiencia   
  end as iTiempoExperiencia,  
    case when cid.iCodOcupacion=0 then (  
      case   
      when year(ci.dFechaEvaluacionResultado)=1900 then ''   
      else cast(year(ci.dFechaEvaluacionResultado) as varchar(6)) end )  
  else  
   case   
   when  cid.iUltimaExperiencia=1900 then 0  
   else cid.iUltimaExperiencia  
   end   
  end as iUltimaExperiencia,  
    
 cid.cRubroExperiencia,  
 cid.cSectorExperiencia,  
 --ci.iTiempoExperiencia,  
 --case   
 --when year(ci.dFechaEvaluacionResultado)=1900 then ''   
 --else cast(year(ci.dFechaEvaluacionResultado) as varchar(6)) end as cUltimaExperienciaAnio,   
 --cid.cRubroExperiencia,  
 --cid.cSectorExperiencia,  
  
  --tdo2.cNomOcupacion as cNomOcupacion2,  
  
   case   
   when isnull(cid.iCodOcupacion2,0)=0 then ci.cOcupacion2   
  else  
   CASE   
   WHEN tdo2.cNomOcupacion='NO CATALOGADO' then ''   
   else tdo2.cNomOcupacion   
   END  
  end as cNomOcupacion2,   
  cid.iTiempoExperiencia2,  
 cid.iUltimaExperiencia2,   
 cid.cRubroExperiencia2,  
 cid.cSectorExperiencia2,  
 case cid.bRetcc   
 when 1 then 'SI'   
 else 'NO' end as cRetcc,  
 case cid.bStakeholder   
 when 1 then 'SI'   
 else 'NO' end as cStakeholder,  
 case (select count(fld.icodcandidatoinforme) from fuerzalaboraldetalle fld   
 where fld.icodcandidatoinforme=ci.icodcandidatoinforme)   
 when  0 then ''   
 else 'SI'   
 end as cLaboroAAQ ,  
 cel.cEmpresa ,  
 convert(varchar,cel.dFechaIni,103) as dFechaIni,  
 convert(varchar,cel.dFechaFin,103) as dFechaFin,   
 cel.cPuesto ,  
 cel.cRubroExperiencia as cRubroExperienciaExpLab,  
 cel.cSectorExperiencia as cSectorExperienciaExpLab ,  
 ci.cAptitud ,  
 ci.iResultadoVerificativa ,  
 left(isnull(cid.cUsuarioTestPsicoValida,''),2) +'-'+left(isnull(cid.cUsuarioAptitudLaboral,'') ,2) as cUsuariosGestion   
  
 FROM CandidatoInforme ci   
 inner join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme   
 left join TDOcupacion tdo1 on cid.iCodOcupacion=tdo1.iCodOcupacion   
 left join TDOcupacion tdo2 on cid.iCodOcupacion2=tdo2.iCodOcupacion     
 left join CandidatoExperienciaLaboral cel on ci.iCodCandidatoInforme=cel.iCodCandidatoInforme    
 where ci.cDNI=@cDni    
 order by cel.dfechafin desc   
END  
GO
/****** Object:  StoredProcedure [dbo].[SP_RPT_GetConsentimiento]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











CREATE PROCEDURE [dbo].[SP_RPT_GetConsentimiento] @iCodCandidatoInforme int  
AS
SELECT  
ci.cNombres + ' ' + ci.cApellidos as cNomCompleto,
cid.cGUIDConsentimiento,cid.dFechaConsentimiento 
FROM CandidatoInforme ci 
inner join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme 
where ci.iCodCandidatoInforme=@iCodCandidatoInforme 










GO
/****** Object:  StoredProcedure [dbo].[SP_RPT_GetConvocatoriaResumen]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO










CREATE PROCEDURE [dbo].[SP_RPT_GetConvocatoriaResumen] @iCodConvocatoriaMain int  
AS
SELECT co.iCodConvocatoriaMain, 
co.iCodContrata,co.dFechaIni,co.dFechaFin,co.dFechaLimite,co.cSubContrata,
  ct.cNomContrata, co.cSubContrata, 
  c.cPerfil, c.iCantidad as iCantRequerida,
      sum( 
  case 
  when cd.iTipoPostulacion=1 then 1 
  else 0 end
  )  as iMintra,
      sum( 
  case 
  when cd.iTipoPostulacion=2 then 1 
  else 0 end
  )  as iRequerido,
    count(cd.iCodConvocatoriaDetalle) as iPostulantes,
	  sum( 
  case 
  when cd.dFechaCargaCV<>'1900-01-01' and (cd.iTipoPostulacion=1 or cd.iTipoPostulacion=2) then 1 
  else 0 end
  )  as iCVEnviado ,
  	  sum( 
  case 
  when cd.bCumplePerfil=0 and (cd.iTipoPostulacion=1 or cd.iTipoPostulacion=2) then 1 
  else 0 end
  )  as iNoCumplePerfil ,
    sum( 
  case 
  when cd.iTipoPostulacion=3 then 1 
  else 0 end
  )  as iExceptuados
FROM dbo.ConvocatoriaMain AS co 
INNER JOIN   dbo.Contrata AS ct ON co.iCodContrata = ct.iCodContrata  
INNER JOIN   dbo.Convocatoria AS c ON co.iCodConvocatoriaMain = c.iCodConvocatoriaMain 
INNER JOIN convocatoriadetalle cd on c.iCodConvocatoria=cd.iCodConvocatoria 
where co.iCodConvocatoriaMain=@iCodConvocatoriaMain
group by co.iCodConvocatoriaMain, co.iCodContrata,  ct.cNomContrata, co.cSubContrata, c.cPerfil, c.iCantidad, 
co.dFechaIni,co.dFechaFin,co.dFechaLimite,co.cSubContrata 
 order by c.cPerfil 











GO
/****** Object:  StoredProcedure [dbo].[SP_UPD_ConvocatoriaDetalleFeedback]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_UPD_ConvocatoriaDetalleFeedback] @iCodConvocatoriaMain int,
															@cTipoProcesoFeedback varchar(10) 
 
AS 
BEGIN
    SET NOCOUNT ON;  
	 
	 update cd SET cd.cSeleccionado='NO',
	 cd.cRptaContrata='NO CUMPLE EL PERFIL CURRICULAR' ,
dFechaContactoContrata1=GETDATE() ,
cd.cObs='DE ACUERDO CON LA INFORMACIÓN REGISTRADA EN SU CUESTIONARIO DE POSTULACIÓN, UD. NO CUMPLE CON LOS REQUISITOS PARA EL PUESTO.' 
 FROM ConvocatoriaDetalle cd 
inner join Convocatoria c on c.iCodConvocatoria=cd.iCodConvocatoria  
inner join ConvocatoriaMain cm on cm.iCodConvocatoriaMain=c.iCodConvocatoriaMain 
inner join CuestionarioConvocatoria cue on cue.iCodConvocatoria=c.iCodConvocatoria  
where 
 cd.iRanking<100 
and cd.dFechaCargaCV>='2000-01-01' 
and cd.cSeleccionado=''  
 and cm.iCodConvocatoriaMain=@iCodConvocatoriaMain   
 and cd.iTipoPostulacion=1  
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_VERIFICAR_USUARIO_APP]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_VERIFICAR_USUARIO_APP](
	@dni as varchar(20)
)
AS
BEGIN
	SELECT us.iCodUsuarioApp as idUsuario,ci.iCodCandidatoInforme AS idCandidato,ci.cDNI, concat(ci.cNombres,' ',ci.cApellidos) AS cNombre ,dbo.fnLeeClave(us.cClave) AS cClave,ci.cCorreo
	FROM CandidatoInforme AS ci
	INNER JOIN UsuarioApp AS us ON us.iCodCandidatoInforme = ci.iCodCandidatoInforme
	WHERE ci.cDNI = @dni	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_WS_GetPGIByDNI]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO













CREATE PROCEDURE [dbo].[SP_WS_GetPGIByDNI] 
				@cDNI varchar(15)  ,
				@cTipoDoc as varchar(8) ,
				@cRucContrata as varchar(11),
				@cRucSubContrata as varchar(11) 
AS

SET NOCOUNT ON

 INSERT INTO logvisita values('WEBCONTROL',@cDNI,0,0,GETDATE(),'');

 --**************************************************
 -- BUSQUEDA POR 
IF (@cRucContrata='0' and @cRucSubContrata='0' )
BEGIN
 
SELECT  ci.cDNI,ci.cTipoDoc,
ci.cApellidos,
ci.cNombres,
ci.cSexo as cGenero,
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as cCondicion ,
ci.cUbigeo,
isnull(u.cDepartamento,'') as cDptoNacimiento,
isnull(ur.cDepartamento,'') as cDptoResidencia,
aa.dFechaAprobacion,
ad.cCargo,
ad.cMOCMONC, 
case 
when ad.bAnulado=1 then 'N' 
else 
	case ad.cProcesoEtapa 
	when 'P' then 'P' 
	when 'O' then 'P' 
	when 'R' then 'R' 
	when 'A' then 'A' 
	else 'N'
	end
end as cEstado,
ad.iCodAnexoAdmisionDetalle as iCorrelativoDetalle,
aa.cNroAnexo as cNroPGI,
aa.iCodAnexoAdmision as iCodOAEL,
aa.cGrupo as cCategoriaPGI,
aa.dFechaSolicitud,
coa.cRUC as cRucContrata ,
coa.cNomCorto as cContrata,
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cRUC,'') end as cRucSubContrata, 
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cNomCorto,'') end as cSubContrata, 
cto.cNroContrato,
cto.cNomContrato  ,
aa.cPersonaSolicita,
aa.cPersonaSolicitaCargo ,
isnull(adt.cDetalle,'') as cTipoPGI  

from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join AnexoAdmision aa on ad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join contrata coa on aa.iCodContrata=coa.iCodContrata
left join contrata sco on ad.iCodSubContrata=sco.iCodContrata  
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
inner join ContratistaContrato cto on aa.iCodContratistaContrato=cto.iCodContratistaContrato 
left join AnexoAdmisionTipo adt on aa.iCodAnexoAdmisionTipo=adt.iCodAnexoAdmisionTipo 
where ci.cDNI=@cDNI and ci.cTipoDoc=@cTipoDoc 
END
-- CONSULTA POR CONTRATA
IF (@cRucContrata<>'0' and @cRucSubContrata='0' )
BEGIN
SELECT  ci.cDNI,ci.cTipoDoc,
ci.cApellidos,
ci.cNombres,
ci.cSexo as cGenero,
case 
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then 'LOCAL' 
else 'FORANEO' end as cCondicion,
ci.cUbigeo,
isnull(u.cDepartamento,'') as cDptoNacimiento,
isnull(ur.cDepartamento,'') as cDptoResidencia,
aa.dFechaAprobacion,
ad.cCargo,
ad.cMOCMONC, 
case 
when ad.bAnulado=1 then 'N' 
else 
	case ad.cProcesoEtapa 
	when 'P' then 'P' 
	when 'O' then 'P' 
	when 'R' then 'R' 
	when 'A' then 'A' 
	else 'N'
	end
end as cEstado,
ad.iCodAnexoAdmisionDetalle as iCorrelativoDetalle,
aa.cNroAnexo as cNroPGI,
aa.iCodAnexoAdmision as iCodOAEL,
aa.cGrupo as cCategoriaPGI,
aa.dFechaSolicitud,
coa.cRUC as cRucContrata ,
coa.cNomCorto as cContrata,
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cRUC,'') end as cRucSubContrata, 
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cNomCorto,'') end as cSubContrata, 
cto.cNroContrato,
cto.cNomContrato  ,
aa.cPersonaSolicita,
aa.cPersonaSolicitaCargo ,
isnull(adt.cDetalle,'') as cTipoPGI  
 
from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join AnexoAdmision aa on ad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join contrata coa on aa.iCodContrata=coa.iCodContrata
left join contrata sco on ad.iCodSubContrata=sco.iCodContrata  
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
inner join ContratistaContrato cto on aa.iCodContratistaContrato=cto.iCodContratistaContrato 
left join AnexoAdmisionTipo adt on aa.iCodAnexoAdmisionTipo=adt.iCodAnexoAdmisionTipo 
where ci.cDNI=@cDNI and ci.cTipoDoc=@cTipoDoc 
and coa.cRUC=@cRucContrata 
END
 
 -- CONSULTA POR SUB CONTRATA
IF (@cRucContrata='0' and @cRucSubContrata<>'0' )
BEGIN
SELECT  ci.cDNI,ci.cTipoDoc,
ci.cApellidos,
ci.cNombres,
ci.cSexo as cGenero,
case 
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then 'LOCAL' 
else 'FORANEO' end as cCondicion,
ci.cUbigeo,
isnull(u.cDepartamento,'') as cDptoNacimiento,
isnull(ur.cDepartamento,'') as cDptoResidencia,
aa.dFechaAprobacion,
ad.cCargo,
ad.cMOCMONC, 
case 
when ad.bAnulado=1 then 'N' 
else 
	case ad.cProcesoEtapa 
	when 'P' then 'P' 
	when 'O' then 'P' 
	when 'R' then 'R' 
	when 'A' then 'A' 
	else 'N'
	end
end as cEstado,
ad.iCodAnexoAdmisionDetalle as iCorrelativoDetalle,
aa.cNroAnexo as cNroPGI,
aa.iCodAnexoAdmision as iCodOAEL,
aa.cGrupo as cCategoriaPGI,
aa.dFechaSolicitud,
coa.cRUC as cRucContrata ,
coa.cNomCorto as cContrata,
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cRUC,'') end as cRucSubContrata, 
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cNomCorto,'') end as cSubContrata, 
cto.cNroContrato,
cto.cNomContrato  ,
aa.cPersonaSolicita,
aa.cPersonaSolicitaCargo ,
isnull(adt.cDetalle,'') as cTipoPGI  
 
from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join AnexoAdmision aa on ad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join contrata coa on aa.iCodContrata=coa.iCodContrata
left join contrata sco on ad.iCodSubContrata=sco.iCodContrata  
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
inner join ContratistaContrato cto on aa.iCodContratistaContrato=cto.iCodContratistaContrato 
left join AnexoAdmisionTipo adt on aa.iCodAnexoAdmisionTipo=adt.iCodAnexoAdmisionTipo  
where ci.cDNI=@cDNI and ci.cTipoDoc=@cTipoDoc 
and sco.cRUC=@cRucSubContrata  
END
 
 -- CONSULTA POR CONTRATA Y SUB CONTRATA
IF (@cRucContrata<>'0' and @cRucSubContrata<>'0' )
BEGIN
SELECT  ci.cDNI,ci.cTipoDoc,
ci.cApellidos,
ci.cNombres,
ci.cSexo as cGenero,
case 
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then 'LOCAL' 
else 'FORANEO' end as cCondicion,
ci.cUbigeo,
isnull(u.cDepartamento,'') as cDptoNacimiento,
isnull(ur.cDepartamento,'') as cDptoResidencia,
aa.dFechaAprobacion,
ad.cCargo,
ad.cMOCMONC, 
case 
when ad.bAnulado=1 then 'N' 
else 
	case ad.cProcesoEtapa 
	when 'P' then 'P' 
	when 'O' then 'P' 
	when 'R' then 'R' 
	when 'A' then 'A' 
	else 'N'
	end
end as cEstado,
ad.iCodAnexoAdmisionDetalle as iCorrelativoDetalle,
aa.cNroAnexo as cNroPGI,
aa.iCodAnexoAdmision as iCodOAEL,
aa.cGrupo as cCategoriaPGI,
aa.dFechaSolicitud,
coa.cRUC as cRucContrata ,
coa.cNomCorto as cContrata,
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cRUC,'') end as cRucSubContrata, 
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cNomCorto,'') end as cSubContrata, 
cto.cNroContrato,
cto.cNomContrato  ,
aa.cPersonaSolicita,
aa.cPersonaSolicitaCargo ,
isnull(adt.cDetalle,'') as cTipoPGI   
from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join AnexoAdmision aa on ad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join contrata coa on aa.iCodContrata=coa.iCodContrata
left join contrata sco on ad.iCodSubContrata=sco.iCodContrata  
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
inner join ContratistaContrato cto on aa.iCodContratistaContrato=cto.iCodContratistaContrato 
left join AnexoAdmisionTipo adt on aa.iCodAnexoAdmisionTipo=adt.iCodAnexoAdmisionTipo 
where ci.cDNI=@cDNI and ci.cTipoDoc=@cTipoDoc 
and coa.cRUC=@cRucContrata  
and sco.cRUC=@cRucSubContrata  
END














GO
/****** Object:  StoredProcedure [dbo].[SP_WS_GetPGIByDNIv2]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











CREATE PROCEDURE [dbo].[SP_WS_GetPGIByDNIv2] @cDNI varchar(15)  ,@cTipoDoc as varchar(8) ,@cRucContrata as varchar(11),@cRucSubContrata as varchar(11) 
AS

SET NOCOUNT ON
 --**************************************************
 -- BUSQUEDA POR 
IF (@cRucContrata='0' and @cRucSubContrata='0' )
BEGIN
 
SELECT  ci.cDNI,ci.cTipoDoc,
ci.cApellidos,
ci.cNombres,
ci.cSexo as cGenero,
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as cCondicion ,
ci.cUbigeo,
isnull(u.cDepartamento,'') as cDptoNacimiento,
isnull(ur.cDepartamento,'') as cDptoResidencia,
aa.dFechaSolicitud,
coa.cRUC as cRucContrata ,
coa.cNomCorto as cContrata,
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cRUC,'') end as cRucSubContrata, 
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cNomCorto,'') end as cSubContrata, 
cto.cNroContrato,
ad.cCargo,
ad.cMOCMONC, 
case ad.cProcesoEtapa 
when 'P' then 'PROCESO' 
when 'O' then 'PROCESO' 
when 'A' then 'APROBADO' 
when 'R' then 'RECHAZADO' 
else '-'
end as cEstado
 
from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join AnexoAdmision aa on ad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join contrata coa on aa.iCodContrata=coa.iCodContrata
left join contrata sco on ad.iCodSubContrata=sco.iCodContrata  
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
inner join ContratistaContrato cto on aa.iCodContratistaContrato=cto.iCodContratistaContrato 
where ci.cDNI=@cDNI and ci.cTipoDoc=@cTipoDoc 
END
-- CONSULTA POR CONTRATA
IF (@cRucContrata<>'0' and @cRucSubContrata='0' )
BEGIN
SELECT  ci.cDNI,ci.cTipoDoc,
ci.cApellidos,
ci.cNombres,
ci.cSexo as cGenero,
case 
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then 'LOCAL' 
else 'FORANEO' end as cCondicion,
ci.cUbigeo,
isnull(u.cDepartamento,'') as cDptoNacimiento,
isnull(ur.cDepartamento,'') as cDptoResidencia,
aa.dFechaSolicitud,
coa.cRUC as cRucContrata ,
coa.cNomCorto as cContrata,
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cRUC,'') end as cRucSubContrata, 
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cNomCorto,'') end as cSubContrata, 
cto.cNroContrato,
ad.cCargo,
ad.cMOCMONC, 
case ad.cProcesoEtapa 
when 'P' then 'PROCESO' 
when 'O' then 'PROCESO' 
when 'A' then 'APROBADO' 
when 'R' then 'RECHAZADO' 
else '-'
end as cEstado
 
from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join AnexoAdmision aa on ad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join contrata coa on aa.iCodContrata=coa.iCodContrata
left join contrata sco on ad.iCodSubContrata=sco.iCodContrata  
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
inner join ContratistaContrato cto on aa.iCodContratistaContrato=cto.iCodContratistaContrato 
where ci.cDNI=@cDNI and ci.cTipoDoc=@cTipoDoc 
and coa.cRUC=@cRucContrata 
END
 
 -- CONSULTA POR SUB CONTRATA
IF (@cRucContrata='0' and @cRucSubContrata<>'0' )
BEGIN
SELECT  ci.cDNI,ci.cTipoDoc,
ci.cApellidos,
ci.cNombres,
ci.cSexo as cGenero,
case 
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then 'LOCAL' 
else 'FORANEO' end as cCondicion,
ci.cUbigeo,
isnull(u.cDepartamento,'') as cDptoNacimiento,
isnull(ur.cDepartamento,'') as cDptoResidencia,
aa.dFechaSolicitud,
coa.cRUC as cRucContrata ,
coa.cNomCorto as cContrata,
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cRUC,'') end as cRucSubContrata, 
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cNomCorto,'') end as cSubContrata, 
cto.cNroContrato,
ad.cCargo,
ad.cMOCMONC, 
case ad.cProcesoEtapa 
when 'P' then 'PROCESO' 
when 'O' then 'PROCESO' 
when 'A' then 'APROBADO' 
when 'R' then 'RECHAZADO' 
else '-'
end as cEstado
 
from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join AnexoAdmision aa on ad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join contrata coa on aa.iCodContrata=coa.iCodContrata
left join contrata sco on ad.iCodSubContrata=sco.iCodContrata  
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
inner join ContratistaContrato cto on aa.iCodContratistaContrato=cto.iCodContratistaContrato 
where ci.cDNI=@cDNI and ci.cTipoDoc=@cTipoDoc 
and sco.cRUC=@cRucSubContrata  
END
 
 -- CONSULTA POR CONTRATA Y SUB CONTRATA
IF (@cRucContrata<>'0' and @cRucSubContrata<>'0' )
BEGIN
SELECT  ci.cDNI,ci.cTipoDoc,
ci.cApellidos,
ci.cNombres,
ci.cSexo as cGenero,
case 
when ci.cCondicion='LOCAL' OR ci.cCondicion='RESIDENTE' OR ci.cCondicion='COMUNIDAD' then 'LOCAL' 
else 'FORANEO' end as cCondicion,
ci.cUbigeo,
isnull(u.cDepartamento,'') as cDptoNacimiento,
isnull(ur.cDepartamento,'') as cDptoResidencia,
aa.dFechaSolicitud,
coa.cRUC as cRucContrata ,
coa.cNomCorto as cContrata,
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cRUC,'') end as cRucSubContrata, 
case
when aa.iCodContrata=ad.iCodSubContrata then '' 
else isnull(sco.cNomCorto,'') end as cSubContrata, 
cto.cNroContrato,
ad.cCargo,
ad.cMOCMONC, 
case ad.cProcesoEtapa 
when 'P' then 'PROCESO' 
when 'O' then 'PROCESO' 
when 'A' then 'APROBADO' 
when 'R' then 'RECHAZADO' 
else '-'
end as cEstado  
from AnexoAdmisionDetalle ad 
inner join CandidatoInforme ci on ad.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join AnexoAdmision aa on ad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
left join contrata coa on aa.iCodContrata=coa.iCodContrata 
left join contrata sco on ad.iCodSubContrata=sco.iCodContrata  
left join TDUbigeo u on ci.cUbigeo=u.cUbigeo 
left join TDUbigeo ur on ci.cUbigeoResidencia=ur.cUbigeo 
inner join ContratistaContrato cto on aa.iCodContratistaContrato=cto.iCodContratistaContrato 
where ci.cDNI=@cDNI and ci.cTipoDoc=@cTipoDoc 
and coa.cRUC=@cRucContrata  
and sco.cRUC=@cRucSubContrata  
END












GO
/****** Object:  StoredProcedure [dbo].[SSRMP.Convocatoria_Insertar]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[SSRMP.Convocatoria_Insertar]
(
 @iCodConvocatoriaMain int,
 @IDREQ float,
 @COD_DETALLE float,
 @cMOCMONC varchar(5),
@cPerfil varchar(120),
@cDesPerfil varchar(1200),
@iCantidad smallint,
@cObs varchar(250),
@cAreaPerfil varchar(15),
@iTiempoExpRequerida tinyint,
@iTiempoExpDeseable tinyint,
@cCategoriaRCC varchar(50),
@cOcupacionRCC varchar(50),
@cEspecialidadRCC varchar(50),
@cTipoPerfil varchar(15),
@cRegimenLaboral varchar(50),
@cConocimiento varchar(50),
@cEspecializacion varchar(80)
)

as
insert into Convocatoria  
values (@iCodConvocatoriaMain,
 @IDREQ,
 @COD_DETALLE,
 @cMOCMONC,
@cPerfil,
@cDesPerfil,
@iCantidad,
1,
0,
0,
0,
0,
'1900-01-01',
@cObs,
0,
@cAreaPerfil,
@iTiempoExpRequerida,
@iTiempoExpDeseable,
@cCategoriaRCC,
@cOcupacionRCC,
@cEspecialidadRCC,
@cTipoPerfil,
@cRegimenLaboral,
@cConocimiento,
@cEspecializacion,
 '0',
 GETDATE())




GO
/****** Object:  StoredProcedure [dbo].[SSRMP.ConvocatoriaMain_Insertar]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[SSRMP.ConvocatoriaMain_Insertar]
(
 @COD_CLIENTE float,
 @COD_CONVOCATORIA varchar(20),
 @IDREQ float,
 @iCodContrata int,
 @cRUCContrata varchar(13),
 @cSubContrata varchar(80),
 @cNroConvocatoria varchar(15),
 @dFechaSolicitud date,
 @dFechaAprobacion date,
 @dFechaIni date,
 @dFechaFin date,
 @dFechaLimite date,
 @iTipo tinyint,
 @cObs varchar(250),
 @iEstado tinyint,
 @iCodConvocatoriaMain int OUTPUT
)

as
BEGIN
SET NOCOUNT ON;

insert into ConvocatoriaMain  
values (@COD_CLIENTE,
 @COD_CONVOCATORIA,
 @IDREQ,
 @iCodContrata,
  @cRUCContrata ,
 @cSubContrata,
 @cNroConvocatoria,
 @dFechaSolicitud,
 @dFechaAprobacion,
 @dFechaIni,
 @dFechaFin,
 @dFechaLimite,
 @iTipo,
 @cObs,
 @iEstado,
 '0',
 GETDATE());

 SET @iCodConvocatoriaMain = SCOPE_IDENTITY();

END;
GO
/****** Object:  StoredProcedure [dbo].[SSRMP.PostulantesEnviadosAContrata_Listar]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[SSRMP.PostulantesEnviadosAContrata_Listar]
(
 @IDREQ float,  @COD_DETALLE float
)

as
SELECT  
cd.iCodConvocatoriaDetalle,  
c.cperfil,
case iTipoPostulacion 
when 1 then 'MINTRA' 
when 2 then 'REQUERIDO' 
when 3 then 'EXCEPTUADO' 
else 'NINGUNO' end as cTipoPostulacion,
 ci.cCondicion,
ci.cTipoDoc as cTipoDocumento,
 ci.cDNI as cNroDocumento, 
 ci.cApellidos,ci.cNombres, 
 ci.cUbigeo ,
 ci.cSexo ,
 ci.cLugarNac as cDepNacimiento,
 isnull(tu.cDepartamento,'') as cDepResidencia,
 ci.cDireccion,
 ci.cFono as cNrosTelefonicos,
 cd.iRanking ,
 ci.cCondicion, 
 cd.dFechaCargaCV  as dFechaEnvioCV
 FROM         dbo.ConvocatoriaDetalle AS cd INNER JOIN
 dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme  
 left join Convocatoria c on cd.icodconvocatoria=c.iCodConvocatoria 
 left join TDUbigeo tu on ci.cUbigeoResidencia=tu.cUbigeo 
  where IDREQ=@IDREQ and COD_DETALLE=@COD_DETALLE and cd.dFechaCargaCV<>'1900-01-01' 


GO
/****** Object:  StoredProcedure [dbo].[SSRMP.PostulantesEnviadosAContrataByCODDETALLE_Listar]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE Procedure [dbo].[SSRMP.PostulantesEnviadosAContrataByCODDETALLE_Listar]
(
   @COD_DETALLE float
)

as
SELECT  
cd.iCodConvocatoriaDetalle,  
c.cperfil,
case iTipoPostulacion 
when 1 then 'MINTRA' 
when 2 then 'REQUERIDO' 
when 3 then 'EXCEPTUADO' 
else 'NINGUNO' end as cTipoPostulacion,
 ci.cCondicion,
ci.cTipoDoc as cTipoDocumento,
 ci.cDNI as cNroDocumento, 
 ci.cApellidos,ci.cNombres, 
 ci.cUbigeo ,
 ci.cSexo ,
 ci.cLugarNac as cDepNacimiento,
 isnull(tu.cDepartamento,'') as cDepResidencia,
 ci.cDireccion,
 ci.cFono as cNrosTelefonicos,
 cd.iRanking ,
 ci.cCondicion, 
 cd.dFechaCargaCV  as dFechaEnvioCV
 FROM         dbo.ConvocatoriaDetalle AS cd INNER JOIN
 dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme  
 left join Convocatoria c on cd.icodconvocatoria=c.iCodConvocatoria 
 left join TDUbigeo tu on ci.cUbigeoResidencia=tu.cUbigeo 
  where  COD_DETALLE=@COD_DETALLE and cd.dFechaCargaCV<>'1900-01-01' 





GO
/****** Object:  StoredProcedure [dbo].[SSRMP.PostulantesEnviadosAContrataByIDREQ_Listar]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE Procedure [dbo].[SSRMP.PostulantesEnviadosAContrataByIDREQ_Listar]
(
 @IDREQ float
)

as
SELECT  
cd.iCodConvocatoriaDetalle,  
c.cperfil,
case iTipoPostulacion 
when 1 then 'MINTRA' 
when 2 then 'REQUERIDO' 
when 3 then 'EXCEPTUADO' 
else 'NINGUNO' end as cTipoPostulacion,
 ci.cCondicion,
ci.cTipoDoc as cTipoDocumento,
 case 
 when ci.cTipoDoc='DNI' then '01'  
  when ci.cTipoDoc='CE' then '04'  
   when ci.cTipoDoc='PAS' then '07'  
   else '' end as cDesCortaTipoDoc ,
 ci.cDNI as cNroDocumento, 
 ci.cApellidos,ci.cNombres, 
 ci.cUbigeo ,
 ci.cSexo ,
 ci.cLugarNac as cDepNacimiento,
 isnull(tu.cDepartamento,'') as cDepResidencia,
 ci.cDireccion,
 ci.cFono as cNrosTelefonicos,
 cd.iRanking ,
 ci.cCondicion, 
 cd.dFechaCargaCV  as dFechaEnvioCV,
 c.COD_DETALLE ,
 cm.COD_CLIENTE 

 FROM         dbo.ConvocatoriaDetalle AS cd INNER JOIN
 dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme  
 left join Convocatoria c on cd.icodconvocatoria=c.iCodConvocatoria 
 left join TDUbigeo tu on ci.cUbigeoResidencia=tu.cUbigeo  
 left join ConvocatoriaMain cm on c.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
  where c.IDREQ=@IDREQ and cd.dFechaCargaCV<>'1900-01-01' 





GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetAlertasByPersona]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








CREATE PROCEDURE [jobs].[SP_DT_GetAlertasByPersona] @iCodPersona int ,@iCodCandidatoInforme int 
AS
Select a.iCodAlerta,a.iCodEmpresaCliente,
a.iCodPersona,a.cTipo,

a.iCodProceso,
(
case
when a.bLeido=1 then '' 
else '[SIN LEER] ' end) + 
c.cPerfil  as cTitulo,
a.bRequiereConfirmacion,
a.bResultadoConfirmacion,a.bCerrado,convert(varchar(35), a.dFechaCreacion, 20) as dFechaCreacion  ,
case 
when a.bRespondido=1 and a.bResultadoConfirmacion =1 then 'C' 
when a.bRespondido=1 and a.bResultadoConfirmacion =0 then 'R' 
when a.bRespondido=0 and a.bLeido=0 then 'N' 
when a.bRespondido=0 and a.bLeido=1 then 'L' 
end cEstado ,
a.bLeido,a.iCodCandidatoInforme   
From jobs.Alerta a 
inner join convocatoriadetalle cd on a.iCodProceso=cd.iCodConvocatoriaDetalle 
inner join convocatoria c on c.iCodConvocatoria=cd.iCodConvocatoria 
where --a.iCodPersona=@iCodPersona  or 
a.iCodCandidatoInforme=@iCodCandidatoInforme  
--and a.cTipo='POS'
order by a.iCodAlerta desc 











GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetEMOConvocatoriaListaPersonas]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE PROCEDURE [jobs].[SP_DT_GetEMOConvocatoriaListaPersonas] @iCodEMOConvocatoria int 
AS


SELECT emd.iCodEMOConvocatoriaDetalle,
p.iCodPersona,p.cDni,
p.cApellidos + ' ' + p.cNombres as cNomCompleto ,
case 
when cast(emd.dFechaHoraEMO as date)='1900-01-01' then cast(0 as bit) 
else cast(1 as bit) end as bProgramado ,
emd.bConfirmaAsistencia,
emd.bAsistioEMO,
case emd.cAptitud 
when 'AS' then 'Apto' 
when 'AC' then 'Apto con Restr.'
when 'NA' then 'No Apt' 
else '' end cAptitud 

 
from EMOConvocatoriaDetalle emd 
inner join Persona p on emd.iCodPersona=p.iCodPersona 
  where emd.iCodEMOConvocatoria=@iCodEMOConvocatoria 
  












GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetEMOConvocatoriaListaPersonasProgramadas]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [jobs].[SP_DT_GetEMOConvocatoriaListaPersonasProgramadas] @iCodEMOConvocatoria int 
AS


SELECT emd.iCodEMOConvocatoriaDetalle,
p.iCodPersona,
empr.cNomComercial,
em.cDireccion,
em.cGPS,
CONVERT(varchar, emd.dFechaHoraEMO, 103) + ' '+CONVERT(varchar, emd.dFechaHoraEMO, 108) as cFechaHora,
case 
when cast(emd.dFechaHoraEMO as date)='1900-01-01' then 0
else 1 end as bProgramado 
 
from EMOConvocatoria em 
inner join EMOConvocatoriaDetalle emd on em.iCodEMOConvocatoria=emd.iCodEMOConvocatoria  
inner join Persona p on emd.iCodPersona=p.iCodPersona 
inner join Empresa empr on em.iCodClinica=empr.iCodEmpresa  
  where emd.iCodEMOConvocatoria=@iCodEMOConvocatoria 
  and cast(emd.dFechaHoraEMO as date)<>'1900-01-01' 
  











GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetEMOConvocatorias]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [jobs].[SP_DT_GetEMOConvocatorias] @iCodEmpresaCliente int 
AS
SELECT    e.iCodEMOConvocatoria, 
um.cNomUnidadMinera,
p.cNomProyecto,
isnull(em.cNomComercial,'NO GESTIONADA') as cNomClinica ,
count(emd.iCodEMOConvocatoriaDetalle) as iTotalPersonas 
 from EMOConvocatoria e 
 inner join UnidadMinera um on e.iCodUnidadMinera=um.iCodUnidadMinera 
 inner join Proyecto p on e.iCodProyecto=p.iCodProyecto 
 left join Empresa em on e.iCodClinica=em.iCodEmpresa   
 left join EMOConvocatoriaDetalle emd on e.iCodEMOConvocatoria=emd.iCodEMOConvocatoria   
  where e.iCodEmpresaCliente=@iCodEmpresaCliente 
  group by e.iCodEMOConvocatoria, 
um.cNomUnidadMinera,p.cNomProyecto,em.cNomComercial 
 order by e.iCodEMOConvocatoria  desc 





GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetInduccionGrupoDetalle]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO










CREATE PROCEDURE [jobs].[SP_DT_GetInduccionGrupoDetalle] @iCodInduccionGrupo int 
AS


SELECT igd.iCodInduccionGrupoDetalle,
p.iCodPersona,p.cDni,
p.cApellidos + ' ' + p.cNombres as cNomCompleto ,
igd.bConfirmaAsistencia,
case 
when igd.dFechaConfirmacion='1900-01-01' then ''
else
CONVERT(varchar, igd.dFechaConfirmacion, 103) end as dFechaConfirmacion ,
igd.bAsistioInduccion  ,
empr.cNomComercial,
ig.cDireccion,
ig.cGPS ,
CONVERT(varchar, ig.dFechaHora, 103) + ' '+CONVERT(varchar, ig.dFechaHora, 108) as cFechaHora ,
ri.cNomRequisito 
from jobs.InduccionGrupo ig 
inner join jobs.InduccionGrupoDetalle igd on ig.iCodInduccionGrupo=igd.iCodInduccionGrupo 
inner join jobs.Persona p on igd.iCodPersona=p.iCodPersona 
left join jobs.Empresa empr on ig.iCodEmpresaCapacitadora=empr.iCodEmpresa  
left join jobs.RequisitoIngreso ri on ig.iCodRequisitoIngreso=ri.iCodRequisitoIngreso 
  where igd.iCodInduccionGrupo=@iCodInduccionGrupo  
  

















GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetInduccionGrupos]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [jobs].[SP_DT_GetInduccionGrupos] @iCodEmpresaCliente int 
AS
SELECT  
ig.iCodInduccionGrupo,
um.cNomUnidadMinera,
p.cNomProyecto,
isnull(em.cNomComercial,'NO GESTIONADA') as cNomEmpresa ,
isnull(ri.cNomRequisito,'') as cNomRequisito ,
count(igd.iCodInduccionGrupoDetalle) as iTotalPersonas 
 from InduccionGrupo ig 
 inner join UnidadMinera um on ig.iCodUnidadMinera=um.iCodUnidadMinera 
 inner join Proyecto p on ig.iCodProyecto=p.iCodProyecto 
 left join Empresa em on ig.iCodEmpresaCapacitadora=em.iCodEmpresa   
 left join InduccionGrupoDetalle igd on ig.iCodInduccionGrupo=igd.iCodInduccionGrupo   
 left join RequisitoIngreso ri on ig.iCodRequisitoIngreso=ri.iCodRequisitoIngreso  
  where ig.iCodEmpresaCliente=@iCodEmpresaCliente 
  group by ig.iCodInduccionGrupo, 
um.cNomUnidadMinera,p.cNomProyecto,em.cNomComercial ,ri.cNomRequisito
 order by ig.iCodInduccionGrupo  desc 






GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetPersonasByPerfil]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








CREATE PROCEDURE [jobs].[SP_DT_GetPersonasByPerfil] @iCodEmpresaCliente int,@iCodPerfilPuesto int,@iCodUnidadMinera int  
AS
SELECT  p.iCodPersona,p.cDni,
p.cApellidos + ' ' + p.cNombres as cNomCompleto,
floor(
(cast(convert(varchar(8),getdate(),112) as int)-
cast(convert(varchar(8),p.dFechaNacimiento,112) as int) ) / 10000
) as iEdad,
pp.cNomPerfilPuesto,
p.iTiempoExperiencia ,
p.cPuestoEspecialidad,
isnull(ur.cDepartamento,'') as cDepartamento, 
p.bDiscapacitado, 
case 
when isnull(pra.bActivo,0)=1 then cast(1 as bit)
else cast ( 0 as bit) 
end bActivo,
case 
when pra.dFechaFinExamenMedico is not null then 
	CONVERT(varchar, pra.dFechaFinExamenMedico, 103)
else '' 
end as dFechaEmo , 
pp.iCodPerfilPuesto
from jobs.persona p 
inner join jobs.PerfilPuesto pp on p.iCodPerfilPuesto =pp.iCodPerfilPuesto 
left join jobs.Ubigeo ur on p.cUbigeoResidencia =ur.cUbigeo 
left join jobs.PersonaRequisitoAdmision pra on p.iCodPersona=pra.iCodPersona and pra.iCodUnidadMinera=@iCodUnidadMinera 
 where p.iCodPerfilPuesto=@iCodPerfilPuesto 
  order by p.iTiempoExperiencia desc 










GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetPersonasByPerfilNivel]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO










CREATE PROCEDURE [jobs].[SP_DT_GetPersonasByPerfilNivel] @iCodEmpresaCliente int,@iCodPerfilPuesto int,@iCodUnidadMinera int 
AS
SELECT  p.iCodPersona,p.cDni,
p.cApellidos + ' ' + p.cNombres as cNomCompleto,
floor(
(cast(convert(varchar(8),getdate(),112) as int)-
cast(convert(varchar(8),p.dFechaNacimiento,112) as int) ) / 10000
) as iEdad,
pp.cNomPerfilPuesto,
p.iTiempoExperiencia ,
p.cPuestoEspecialidad,
isnull(ur.cDepartamento,'') as cDepartamento, 
p.bDiscapacitado, 
pp.iCodPerfilPuesto,
-- INICIO SUMA DE PONDERADO DE REQUISITOS
ISNULL((Select sum(ri.nImpacto) from jobs.RequisitoIngreso ri 
inner join jobs.PerfilPuestoGrupoRequisitoIngreso ppgri on ri.iCodRequisitoIngreso=ppgri.iCodRequisitoIngreso 
inner join jobs.PerfilPuesto ppto on ppgri.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
where ppgri.bVigente=1 and ppto.iCodPerfilPuesto=p.iCodPerfilPuesto ),0) as nImpactoMeta,
ISNULL((Select sum(ri.nImpacto) from jobs.Persona per 
inner join jobs.PersonaRequisitoIngreso pri on pri.iCodPersona=per.iCodPersona 
inner join jobs.PerfilPuesto ppto on per.iCodPerfilPuesto=ppto.iCodPerfilPuesto 
inner join jobs.PerfilPuestoGrupo pptogrupo on ppto.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
inner join jobs.PerfilPuestoGrupoRequisitoIngreso ppgri on 
pptogrupo.iCodPerfilPuestoGrupo=ppgri.iCodPerfilPuestoGrupo and pri.iCodRequisitoIngreso=ppgri.iCodRequisitoIngreso  
and pptogrupo.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
inner join jobs.RequisitoIngreso ri on pri.iCodRequisitoIngreso=ri.iCodRequisitoIngreso 
 where ppgri.bVigente=1  and  pri.dFechaFin>GETDATE() and per.iCodPersona=p.iCodPersona ),0) as nImpactoActual ,
'R'+ convert(varchar(5),cast(ISNULL((Select sum(ri.nImpacto) from jobs.Persona per 
inner join jobs.PersonaRequisitoIngreso pri on pri.iCodPersona=per.iCodPersona 
inner join jobs.PerfilPuesto ppto on per.iCodPerfilPuesto=ppto.iCodPerfilPuesto 
inner join jobs.PerfilPuestoGrupo pptogrupo on ppto.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
inner join jobs.PerfilPuestoGrupoRequisitoIngreso ppgri on 
pptogrupo.iCodPerfilPuestoGrupo=ppgri.iCodPerfilPuestoGrupo and pri.iCodRequisitoIngreso=ppgri.iCodRequisitoIngreso  
and pptogrupo.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
inner join jobs.RequisitoIngreso ri on pri.iCodRequisitoIngreso=ri.iCodRequisitoIngreso 
 where ppgri.bVigente=1  and  pri.dFechaFin>GETDATE() and per.iCodPersona=p.iCodPersona ),0) as integer)) as cImpactoActualFiltro 


 
from jobs.persona p 
inner join jobs.PerfilPuesto pp on p.iCodPerfilPuesto =pp.iCodPerfilPuesto 
left join jobs.Ubigeo ur on p.cUbigeoResidencia =ur.cUbigeo 

 where p.iCodPerfilPuesto=@iCodPerfilPuesto 

  order by p.iTiempoExperiencia desc 











GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetPersonasByPerfilNivelLista]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [jobs].[SP_DT_GetPersonasByPerfilNivelLista] @iCodEmpresaCliente int,@iCodPerfilPuesto int,@iCodUnidadMinera int, @cBusqueda nvarchar(20) 
AS

;WITH DATOS(
iCodPersona,cDni,cNomCompleto,iEdad,cNomPerfilPuesto,iTiempoExperiencia,cPuestoEspecialidad,cDepartamento,bDiscapacitado,iCodPerfilPuesto,nImpactoMeta,nImpactoActual,cImpactoActualFiltro


)
AS
(
SELECT  p.iCodPersona,p.cDni,
p.cApellidos + ' ' + p.cNombres as cNomCompleto,
floor(
(cast(convert(varchar(8),getdate(),112) as int)-
cast(convert(varchar(8),p.dFechaNacimiento,112) as int) ) / 10000
) as iEdad,
pp.cNomPerfilPuesto,
p.iTiempoExperiencia ,
p.cPuestoEspecialidad,
isnull(ur.cDepartamento,'') as cDepartamento, 
p.bDiscapacitado, 
pp.iCodPerfilPuesto,
-- INICIO SUMA DE PONDERADO DE REQUISITOS
ISNULL((Select sum(ri.nImpacto) from jobs.RequisitoIngreso ri 
inner join jobs.PerfilPuestoGrupoRequisitoIngreso ppgri on ri.iCodRequisitoIngreso=ppgri.iCodRequisitoIngreso 
inner join jobs.PerfilPuesto ppto on ppgri.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
where ppgri.bVigente=1 and ppto.iCodPerfilPuesto=p.iCodPerfilPuesto ),0) as nImpactoMeta,
ISNULL((Select sum(ri.nImpacto) from jobs.Persona per 
inner join jobs.PersonaRequisitoIngreso pri on pri.iCodPersona=per.iCodPersona 
inner join jobs.PerfilPuesto ppto on per.iCodPerfilPuesto=ppto.iCodPerfilPuesto 
inner join jobs.PerfilPuestoGrupo pptogrupo on ppto.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
inner join jobs.PerfilPuestoGrupoRequisitoIngreso ppgri on 
pptogrupo.iCodPerfilPuestoGrupo=ppgri.iCodPerfilPuestoGrupo and pri.iCodRequisitoIngreso=ppgri.iCodRequisitoIngreso  
and pptogrupo.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
inner join jobs.RequisitoIngreso ri on pri.iCodRequisitoIngreso=ri.iCodRequisitoIngreso 
 where ppgri.bVigente=1  and  pri.dFechaFin>GETDATE() and per.iCodPersona=p.iCodPersona ),0) as nImpactoActual ,
'R'+ convert(varchar(5),cast(ISNULL((Select sum(ri.nImpacto) from jobs.Persona per 
inner join jobs.PersonaRequisitoIngreso pri on pri.iCodPersona=per.iCodPersona 
inner join jobs.PerfilPuesto ppto on per.iCodPerfilPuesto=ppto.iCodPerfilPuesto 
inner join jobs.PerfilPuestoGrupo pptogrupo on ppto.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
inner join jobs.PerfilPuestoGrupoRequisitoIngreso ppgri on 
pptogrupo.iCodPerfilPuestoGrupo=ppgri.iCodPerfilPuestoGrupo and pri.iCodRequisitoIngreso=ppgri.iCodRequisitoIngreso  
and pptogrupo.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
inner join jobs.RequisitoIngreso ri on pri.iCodRequisitoIngreso=ri.iCodRequisitoIngreso 
 where ppgri.bVigente=1  and  pri.dFechaFin>GETDATE() and per.iCodPersona=p.iCodPersona ),0) as integer)) as cImpactoActualFiltro 


 
from jobs.persona p 
inner join jobs.PerfilPuesto pp on p.iCodPerfilPuesto =pp.iCodPerfilPuesto 
left join jobs.Ubigeo ur on p.cUbigeoResidencia =ur.cUbigeo 

 where p.iCodPerfilPuesto=@iCodPerfilPuesto 
 
)
SELECT * FROM DATOS D
WHERE D.cImpactoActualFiltro=@cBusqueda
 order by D.iTiempoExperiencia desc 
GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetProyectoDetalleLista]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [jobs].[SP_DT_GetProyectoDetalleLista] @iCodProyecto int 
AS
SELECT    pd.iCodProyectoDetalle,
pp.cNomPerfilPuesto,
pd.iCantidad,
isnull(count(pdp.iCodProyectoDetallePersona),0) as iInvitados,
isnull(
sum(
case pdp.bConfirmaAsistencia 
when 0 then 0 
when 1 then 1
end
),0) as iConfirmados,
isnull(
sum(
case pdp.bConfirmaAsistencia 
when 0 then 1
when 1 then 0
end
),0)  as iNoConfirmados ,pd.iCodPerfilPuesto 
 from ProyectoDetalle pd 
 inner join  PerfilPuesto pp on pd.iCodPerfilPuesto=pp.iCodPerfilPuesto 
 left join ProyectoDetallePersona pdp on pd.iCodProyectoDetalle=pdp.iCodProyectoDetalle 
  where pd.iCodProyecto=@iCodProyecto  
 group by  pd.iCodProyectoDetalle,
pp.cNomPerfilPuesto,
pd.iCantidad ,pd.iCodPerfilPuesto 
 order by pp.cNomPerfilPuesto asc 






GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetProyectoDetallePersonaAllFases]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








CREATE PROCEDURE [jobs].[SP_DT_GetProyectoDetallePersonaAllFases] @iCodProyecto int 
AS
Select 
pra.iCodPersonaRequisitoAdmision,
p.iCodPersona,
pd.iCodProyecto,
pdp.iCodProyectoDetallePersona,
p.cDni,
p.cApellidos + ' ' + p.cNombres as cNomCompleto,
pf.cNomPerfilPuesto,
case pdp.bConfirmaAsistencia 
when 1 then 'SI' 
else 'NO' end as cConfirmaAsistencia,
case pdp.bSeleccionado 
when 1 then 'SI' 
else 'NO' end as cSeleccionado,
CASE 
WHEN pra.bExamenMedico=1 then 
	CASE 
	WHEN pra.dFechaFinExamenMedico<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinExamenMedico<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinExamenMedico) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cExamenMedico ,
-- INDUCCION GENERAL
CASE 
WHEN pra.bInduccionGral=1 then 
	CASE 
	WHEN pra.dFechaFinInduccionGral<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinInduccionGral<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinInduccionGral) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cInduccionGral ,
--REGLAS
CASE 
WHEN pra.bReglas=1 then 
	CASE 
	WHEN pra.dFechaFinReglas<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinReglas<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinReglas) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cReglas,
--ESPACIO CONFINADO
CASE 
WHEN pra.bEspacioConfinado=1 then 
	CASE 
	WHEN pra.dFechaFinEspacioConfinado<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinEspacioConfinado<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinEspacioConfinado) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cEspacioConfinado,
--TRABAJO ALTURA
CASE 
WHEN pra.bTrabajoAltura=1 then 
	CASE 
	WHEN pra.dFechaFinTrabajoAltura<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinTrabajoAltura<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinTrabajoAltura) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cTrabajoAltura,
-- LOTOTO
CASE 
WHEN pra.bLototo=1 then 
	CASE 
	WHEN pra.dFechaFinLototo<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinLototo<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinLototo) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cLototo,
-- MOLY
CASE 
WHEN pra.bMoly=1 then 
	CASE 
	WHEN pra.dFechaFinMoly<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinMoly<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinMoly) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cMoly, 
-- SEGURIDAD SALUD
CASE 
WHEN pra.bSeguridadSalud=1 then 
	CASE 
	WHEN pra.dFechaFinSeguridadSalud<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinSeguridadSalud<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinSeguridadSalud) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cSeguridadSalud,  
-- OPERACIONES
CASE 
WHEN pra.bOperaciones=1 then 
	CASE 
	WHEN pra.dFechaFinOperaciones<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinOperaciones<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinOperaciones) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cOperaciones, 
-- SCTR 
CASE 
WHEN pra.bSCTR=1 then 
	CASE 
	WHEN pra.dFechaFinSCTR<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinSCTR<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinSCTR) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cSCTR, 
-- Vida Ley 
CASE 
WHEN pra.bVidaLey=1 then 
	CASE 
	WHEN pra.dFechaFinVidaLey<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinVidaLey<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinVidaLey) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cVidaLey  ,
 case 
 when pra.dFechaFinExamenMedico='1900-01-01' then '' 
 else CONVERT(VARCHAR,pra.dFechaFinExamenMedico,103) 
 end as dFechaFinExamenMedico,
 case 
 when pra.dFechaFinInduccionGral='1900-01-01' then '' 
 else CONVERT(VARCHAR,pra.dFechaFinInduccionGral,103) 
 end as dFechaFinInduccionGral,
  case 
 when pra.dFechaFinReglas='1900-01-01' then '' 
 else CONVERT(VARCHAR,pra.dFechaFinReglas,103) 
 end as dFechaFinReglas,
  case 
 when pra.dFechaFinEspacioConfinado='1900-01-01' then '' 
 else CONVERT(VARCHAR,pra.dFechaFinEspacioConfinado,103) 
 end as dFechaFinEspacioConfinado,
  case 
 when pra.dFechaFinTrabajoAltura='1900-01-01' then '' 
 else CONVERT(VARCHAR,pra.dFechaFinTrabajoAltura,103) 
 end as dFechaFinTrabajoAltura,
  case 
 when pra.dFechaFinLototo='1900-01-01' then '' 
 else CONVERT(VARCHAR,pra.dFechaFinLototo,103) 
 end as dFechaFinLototo,
  case 
 when pra.dFechaFinMoly='1900-01-01' then '' 
 else CONVERT(VARCHAR,pra.dFechaFinMoly,103) 
 end as dFechaFinMoly,
  case 
 when pra.dFechaFinSeguridadSalud='1900-01-01' then '' 
 else CONVERT(VARCHAR,pra.dFechaFinSeguridadSalud,103) 
 end as dFechaFinSeguridadSalud,
  case 
 when pra.dFechaFinOperaciones='1900-01-01' then '' 
 else CONVERT(VARCHAR,pra.dFechaFinOperaciones,103) 
 end as dFechaFinOperaciones,
  case 
 when pra.dFechaFinSCTR='1900-01-01' then '' 
 else CONVERT(VARCHAR,pra.dFechaFinSCTR,103) 
 end as dFechaFinSCTR,
  case 
 when pra.dFechaFinVidaLey='1900-01-01' then '' 
 else CONVERT(VARCHAR,pra.dFechaFinVidaLey,103) 
 end as dFechaFinVidaLey,
  case 
 when pra.dFechaFinContrato='1900-01-01' then '' 
 else CONVERT(VARCHAR,pra.dFechaFinContrato,103) 
 end as dFechaFinContrato,
  case 
 when pra.dFechaFinFotocheck='1900-01-01' then '' 
 else CONVERT(VARCHAR,pra.dFechaFinFotocheck,103) 
 end as dFechaFinFotocheck 
FROM jobs.ProyectoDetallePersona pdp 
inner join jobs.persona p on pdp.iCodPersona=p.iCodPersona 
inner join jobs.PerfilPuesto pf on p.iCodPerfilPuesto=pf.iCodPerfilPuesto 
inner join jobs.ProyectoDetalle pd on pdp.iCodProyectoDetalle=pd.iCodProyectoDetalle 
inner join jobs.Proyecto py on pd.iCodProyecto=py.iCodProyecto 
left join jobs.PersonaRequisitoAdmision pra on pdp.iCodPersona=pra.iCodPersona and pra.iCodUnidadMinera=py.iCodUnidadMinera 
where pd.iCodProyecto=@iCodProyecto and pdp.bSeleccionado=1 









GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetProyectoDetallePersonaConfirman]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











CREATE PROCEDURE [jobs].[SP_DT_GetProyectoDetallePersonaConfirman] @iCodProyecto int
AS
SELECT  
pd.iCodProyectoDetalle,
pd.iCodPerfilPuesto ,
pd.iCantidad ,
pdp.iCodProyectoDetallePersona,
p.iTiempoExperiencia ,
-- INICIO SUMA DE PONDERADO DE REQUISITOS
ISNULL((Select sum(ri.nImpacto) from jobs.Persona per 
inner join jobs.PersonaRequisitoIngreso pri on pri.iCodPersona=per.iCodPersona 
inner join jobs.PerfilPuesto ppto on per.iCodPerfilPuesto=ppto.iCodPerfilPuesto 
inner join jobs.PerfilPuestoGrupo pptogrupo on ppto.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
inner join jobs.PerfilPuestoGrupoRequisitoIngreso ppgri on 
pptogrupo.iCodPerfilPuestoGrupo=ppgri.iCodPerfilPuestoGrupo and pri.iCodRequisitoIngreso=ppgri.iCodRequisitoIngreso  
and pptogrupo.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
inner join jobs.RequisitoIngreso ri on pri.iCodRequisitoIngreso=ri.iCodRequisitoIngreso 
 where ppgri.bVigente=1  and  pri.dFechaFin>GETDATE() and per.iCodPersona=p.iCodPersona ),0) as nImpactoActual 

 from 
jobs.ProyectoDetalle pd  
inner join jobs.ProyectoDetallePersona pdp  on pd.iCodProyectoDetalle=pdp.iCodProyectoDetalle 
INNER JOIN jobs.persona p ON pdp.iCodPersona=p.iCodPersona 
inner join jobs.PerfilPuesto pp on p.iCodPerfilPuesto =pp.iCodPerfilPuesto 
left join jobs.Ubigeo ur on p.cUbigeoResidencia =ur.cUbigeo 

 where 
-- p.iCodPerfilPuesto=@iCodPerfilPuesto 
 --and 
 pd.iCodProyecto=@iCodProyecto 
 and
 pdp.bConfirmaAsistencia=1 

  order by pd.iCodProyectoDetalle asc ,pd.iCodPerfilPuesto asc, nImpactoActual desc,p.iTiempoExperiencia desc ,
 pdp.dFechaConfirmacion asc 













GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetProyectoDetallePersonaLista]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






CREATE PROCEDURE [jobs].[SP_DT_GetProyectoDetallePersonaLista] @iCodProyectoDetalle int 
AS
SELECT  pdp.iCodProyectoDetallePersona,
p.iCodPersona,p.cDni,
p.cApellidos + ' ' + p.cNombres as cNomCompleto,
pdp.bConfirmaAsistencia,
case 
when pdp.dFechaConfirmacion='1900-01-01' then '' 
else CONVERT(varchar, pdp.dFechaConfirmacion, 103) 
end as dFechaConfirmacion 
from ProyectoDetallePersona pdp  
inner join Persona p on pdp.iCodPersona =p.iCodPersona  
 where pdp.iCodProyectoDetalle=@iCodProyectoDetalle 
 order by p.cApellidos asc 








GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetProyectoDetallePersonaSeleccionada]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO







CREATE PROCEDURE [jobs].[SP_DT_GetProyectoDetallePersonaSeleccionada] @iCodProyecto int 
AS
Select 
pra.iCodPersonaRequisitoAdmision,
p.iCodPersona,
pd.iCodProyecto,
pdp.iCodProyectoDetallePersona,
p.cDni,
p.cApellidos + ' ' + p.cNombres as cNomCompleto,
CASE 
WHEN pra.bExamenMedico=1 then 
	CASE 
	WHEN pra.dFechaFinExamenMedico<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinExamenMedico<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinExamenMedico) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cExamenMedico ,
-- INDUCCION GENERAL
CASE 
WHEN pra.bInduccionGral=1 then 
	CASE 
	WHEN pra.dFechaFinInduccionGral<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinInduccionGral<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinInduccionGral) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cInduccionGral ,
--REGLAS
CASE 
WHEN pra.bReglas=1 then 
	CASE 
	WHEN pra.dFechaFinReglas<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinReglas<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinReglas) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cReglas,
--ESPACIO CONFINADO
CASE 
WHEN pra.bEspacioConfinado=1 then 
	CASE 
	WHEN pra.dFechaFinEspacioConfinado<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinEspacioConfinado<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinEspacioConfinado) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cEspacioConfinado,
--TRABAJO ALTURA
CASE 
WHEN pra.bTrabajoAltura=1 then 
	CASE 
	WHEN pra.dFechaFinTrabajoAltura<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinTrabajoAltura<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinTrabajoAltura) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cTrabajoAltura,
-- LOTOTO
CASE 
WHEN pra.bLototo=1 then 
	CASE 
	WHEN pra.dFechaFinLototo<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinLototo<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinLototo) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cLototo,
-- MOLY
CASE 
WHEN pra.bMoly=1 then 
	CASE 
	WHEN pra.dFechaFinMoly<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinMoly<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinMoly) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cMoly, 
-- SEGURIDAD SALUD
CASE 
WHEN pra.bSeguridadSalud=1 then 
	CASE 
	WHEN pra.dFechaFinSeguridadSalud<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinSeguridadSalud<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinSeguridadSalud) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cSeguridadSalud,  
-- OPERACIONES
CASE 
WHEN pra.bOperaciones=1 then 
	CASE 
	WHEN pra.dFechaFinOperaciones<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinOperaciones<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinOperaciones) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cOperaciones, 
-- SCTR 
CASE 
WHEN pra.bSCTR=1 then 
	CASE 
	WHEN pra.dFechaFinSCTR<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinSCTR<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinSCTR) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cSCTR, 
-- Vida Ley 
CASE 
WHEN pra.bVidaLey=1 then 
	CASE 
	WHEN pra.dFechaFinVidaLey<>'1900-01-01' THEN 
		CASE 
		WHEN pra.dFechaFinVidaLey<CAST(GETDATE() AS DATE) THEN 'VE'
		ELSE
			CASE 
			WHEN CAST(DATEADD(day,-15, pra.dFechaFinVidaLey) AS DATE) < CAST(GETDATE() AS DATE)  THEN 'PV' 
			ELSE 'VI' 
			END
		END
	ELSE 'NC' 
	END
ELSE 'NA' 
END 
AS cVidaLey  
FROM jobs.ProyectoDetallePersona pdp 
inner join jobs.persona p on pdp.iCodPersona=p.iCodPersona 
inner join jobs.ProyectoDetalle pd on pdp.iCodProyectoDetalle=pd.iCodProyectoDetalle 
inner join jobs.Proyecto py on pd.iCodProyecto=py.iCodProyecto 
inner join jobs.PersonaRequisitoAdmision pra on pdp.iCodPersona=pra.iCodPersona and pra.iCodUnidadMinera=py.iCodUnidadMinera 
where pd.iCodProyecto=@iCodProyecto and pdp.bSeleccionado=1 








GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetProyectoDetallePersonaSeleccionadaReqIngr]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








CREATE PROCEDURE [jobs].[SP_DT_GetProyectoDetallePersonaSeleccionadaReqIngr] @iCodProyecto int 
AS
Select
pd.iCodProyecto,
pd.iCodProyectoDetalle,
pdp.iCodProyectoDetallePersona,
 per.iCodPersona,
ri.iCodRequisitoIngreso,
ri.cTipo,
ri.iCodEmpresaCliente,
ri.iCodUnidadMinera,
case 
when  pri.dFechaFin<GETDATE() then cast(1 as bit)
else cast(0 as bit) end as bRequisitoVigente  
 from jobs.ProyectoDetalle pd 
 left join jobs.ProyectoDetallePersona pdp on pd.iCodProyectoDetalle=pdp.iCodProyectoDetalle 
 left join jobs.Persona per on pdp.iCodPersona=per.iCodPersona 
left join jobs.PerfilPuesto ppto on per.iCodPerfilPuesto=ppto.iCodPerfilPuesto 
left join jobs.PerfilPuestoGrupo pptogrupo on ppto.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
left join jobs.PerfilPuestoGrupoRequisitoIngreso ppgri on 
pptogrupo.iCodPerfilPuestoGrupo=ppgri.iCodPerfilPuestoGrupo 
--and pri.iCodRequisitoIngreso=ppgri.iCodRequisitoIngreso  
and pptogrupo.iCodPerfilPuestoGrupo=ppto.iCodPerfilPuestoGrupo 
left join jobs.RequisitoIngreso ri on ppgri.iCodRequisitoIngreso=ri.iCodRequisitoIngreso 
left join jobs.personarequisitoingreso pri on ri.iCodRequisitoIngreso=pri.iCodRequisitoIngreso 
 where 
ppgri.bVigente=1 and pdp.bSeleccionado=1 
and pd.iCodProyecto=@iCodProyecto 









GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetProyectoPersonaListaEMO]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE PROCEDURE [jobs].[SP_DT_GetProyectoPersonaListaEMO] @iCodProyecto int,@iCodUnidadMinera int 
AS


SELECT py.iCodProyecto, 
pd.iCodProyectoDetalle,
pd.iCodPerfilPuesto ,
pd.iCantidad ,
pdp.iCodProyectoDetallePersona,
p.iCodPersona,p.cDni,
p.cApellidos + ' ' + p.cNombres as cNomCompleto,
pdp.bConfirmaAsistencia as bConfirmaAsistenciaPy,
pdp.dFechaConfirmacion as dFechaConfirmacionPy ,
isnull(emd.iCodEMOConvocatoriaDetalle,0) as  iCodEMOConvocatoriaDetalle,
isnull(pemo.iCodPersonaEMO,0) as  iCodPersonaEMO ,
--case 
--when CAST(pemo.dFechaFin AS DATE)<cast(GETDATE() as date) then 1
--else 0 
--end as bEMOVigente ,
case 
when pemo.dFechaFin is not null then 
	case 
	when CAST(pemo.dFechaFin AS DATE)>cast(GETDATE() as date) then 1
	else 0 end
else 0 
end as bEMOVigente ,
pdp.bSeleccionado ,
isnull(pra.iCodPersonaRequisitoAdmision,0) as iCodPersonaRequisitoAdmision ,
py.iCodUnidadMinera ,
pf.iCodPerfilPuestoGrupo 


from jobs.proyecto py 
inner join jobs.ProyectoDetalle pd on py.iCodProyecto=pd.iCodProyecto 
inner join jobs.ProyectoDetallePersona pdp  on pd.iCodProyectoDetalle=pdp.iCodProyectoDetalle 
left join jobs.EMOConvocatoria em on py.iCodProyecto=em.iCodProyecto 
left join jobs.EMOConvocatoriaDetalle emd on em.iCodEMOConvocatoria=emd.iCodEMOConvocatoria 
left join jobs.Persona p on pdp.iCodPersona=p.iCodPersona 
left join jobs.PerfilPuesto pf on p.iCodPerfilPuesto=pf.iCodPerfilPuesto 
left join jobs.PersonaEMO pemo on p.iCodPersona=pemo.iCodPersona and pemo.iCodUnidadMinera=@iCodUnidadMinera  
left join jobs.PersonaRequisitoAdmision pra on p.iCodPersona=pra.iCodPersona and pra.iCodUnidadMinera=@iCodUnidadMinera  

  where py.iCodProyecto=@iCodProyecto 
 and pdp.bConfirmaAsistencia=1 
 order by  pd.iCodProyectoDetalle asc ,pd.iCodPerfilPuesto asc,
 pdp.dFechaConfirmacion asc




 /*

from jobs.proyecto py 
inner join jobs.ProyectoDetalle pd on py.iCodProyecto=pd.iCodProyecto 
inner join jobs.ProyectoDetallePersona pdp  on pd.iCodProyectoDetalle=pdp.iCodProyectoDetalle 
left join jobs.EMOConvocatoria em on py.iCodProyecto=em.iCodProyecto 
left join jobs.EMOConvocatoriaDetalle emd on em.iCodEMOConvocatoria=emd.iCodEMOConvocatoria 
left join jobs.Persona p on pdp.iCodPersona=p.iCodPersona 
left join jobs.PersonaEMO pemo on p.iCodPersona=pemo.iCodPersona and pemo.iCodUnidadMinera=@iCodUnidadMinera  
  where py.iCodProyecto=@iCodProyecto 
 and pdp.bConfirmaAsistencia=1 
 order by  pd.iCodProyectoDetalle asc ,pd.iCodPerfilPuesto asc,
 pdp.dFechaConfirmacion asc

 */










GO
/****** Object:  StoredProcedure [jobs].[SP_DT_GetProyectos]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [jobs].[SP_DT_GetProyectos] @iCodEmpresaCliente int 
AS
SELECT    p.iCodProyecto,p.iCodEmpresaCliente,
um.cNomUnidadMinera,
p.cNomProyecto,
p.dFechaIni,
p.dFechaFin ,
case 
when GETDATE()>p.dFechaFin then 'C' 
else 'A' end as cEstado 
 from Proyecto p 
 inner join UnidadMinera um on p.iCodUnidadMinera=um.iCodUnidadMinera 
 where p.iCodEmpresaCliente=@iCodEmpresaCliente 
 order by p.iCodProyecto desc 




GO
/****** Object:  StoredProcedure [jobs].[SP_DT_InduccionGrupoActivo]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [jobs].[SP_DT_InduccionGrupoActivo] @iCodEmpresaCliente int ,@iCodUnidadMinera int ,@iTopeGrupo tinyint 
AS
SELECT    ig.iCodInduccionGrupo,
count(igd.iCodInduccionGrupoDetalle) 
 from jobs.InduccionGrupo ig  
 left join jobs.InduccionGrupoDetalle igd on ig.iCodInduccionGrupo=igd.iCodInduccionGrupo  
 where ig.iCodEmpresaCliente=@iCodEmpresaCliente and ig.iCodUnidadMinera=@iCodUnidadMinera 
 and cast(ig.dFechaHora as date)>cast(GETDATE() as date)  
 group by  ig.iCodInduccionGrupo





GO
/****** Object:  StoredProcedure [jobs].[SP_ROW_GetEMODetallePersona]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









CREATE PROCEDURE [jobs].[SP_ROW_GetEMODetallePersona] @iCodEMOConvocatoriaDetalle int  
AS
SELECT ecd.iCodEMOConvocatoriaDetalle ,
ecd.iCodEMOConvocatoria,
p.iCodPersona,
p.cApellidos + ' ' + p.cNombres as cNomCompleto  ,
--ecd.dFechaHoraEMO ,
convert(varchar, ecd.dFechaHoraEMO, 120) as dFechaHoraEMO,
convert(varchar, ecd.dFechaHoraEMO, 103) as dFechaProgramada,
convert(varchar, ecd.dFechaHoraEMO, 8) as tHoraProgramada,
ecd.cAptitud ,
ecd.cObs ,
ecd.cURLDoc ,
ecd.bAsistioEMO,
convert(varchar, ecd.dFechaResultado, 103) as dFechaResultado 
from jobs.EMOConvocatoriaDetalle ecd 
 inner join jobs.persona p on ecd.iCodPersona=p.iCodPersona  
where ecd.iCodEMOConvocatoriaDetalle=@iCodEMOConvocatoriaDetalle










GO
/****** Object:  StoredProcedure [jobs].[SP_ROW_GetPersonaByDoc]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








CREATE PROCEDURE [jobs].[SP_ROW_GetPersonaByDoc] @cDni varchar(20),@cTipoDoc varchar(8)  
AS
SELECT p.iCodPersona,p.cDni,
p.cApellidos + ' ' + p.cNombres as cNomCompleto  
from  persona p  
where cDni=@cDni and cTipoDoc=@cTipoDoc 










GO
/****** Object:  StoredProcedure [jobs].[SP_ROW_GetUsuarioPersona]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









CREATE PROCEDURE [jobs].[SP_ROW_GetUsuarioPersona] @cNick varchar(50),@cClave varchar(50)  
AS
SELECT u.iCodUsuario,u.iCodPersona,p.cDni,
p.cApellidos + ' ' + p.cNombres as cNomCompleto ,
p.cCorreo,
p.cTelefono,
'OK' as cResult 
from jobs.usuario u 
inner join jobs.persona p on  u.iCodPersona=p.iCodPersona  
where u.cNick=@cNick and dbo.fnLeeClave(u.cClave)=@cClave 











GO
/****** Object:  StoredProcedure [lib].[SP_COND_ExisteComoContraseniaAntigua]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [lib].[SP_COND_ExisteComoContraseniaAntigua]
@iCodUsuario int, 
@cClave varchar(800)
AS
BEGIN

	BEGIN TRY
			BEGIN TRAN COND_ExisteContraseniaAntigua

			IF EXISTS ( SELECT * 
						FROM dbo.SeguridadClaveHistorial
						WHERE iCodUsuario = @iCodUsuario )
			BEGIN

				IF EXISTS (
							SELECT *
							FROM dbo.SeguridadClaveHistorial
							--SELECT TOP 5 lib.fnLeeClave(cClave) AS CLAVE
							--FROM lib.SeguridadClaveHistorial
							--WHERE iCodUsuario = @iCodUsuario 
							--ORDER BY dFechaCreacion DESC) A
							--WHERE A.CLAVE = @cClave
						  )
				BEGIN
				  SELECT 1
				END
				ELSE
				BEGIN
				  SELECT 0
				END

			END
			ELSE
			BEGIN
			 SELECT 0
			END
			COMMIT TRAN COND_ExisteContraseniaAntigua
	END TRY
	BEGIN CATCH
			SELECT -1
			ROLLBACK TRAN COND_ExisteContraseniaAntigua
	END CATCH
		
END


GO
/****** Object:  StoredProcedure [lib].[SP_DT_CantDocumentacionPorCategoria]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [lib].[SP_DT_CantDocumentacionPorCategoria]   
AS
BEGIN

	SELECT  t1.iCodCategoria,
			t1.cNombreCategoria,
			COUNT(t2.cDescripcionDocumento) as iCantDocumentosPorCategoria
	FROM lib.Categoria t1
	RIGHT JOIN lib.Documento t2 on t1.iCodCategoria = t2.iCodCategoria
	GROUP BY t1.iCodCategoria,t1.cNombreCategoria

END

GO
/****** Object:  StoredProcedure [lib].[SP_DT_DocumentoConFiltros]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [lib].[SP_DT_DocumentoConFiltros] 
@cTituloDocumento varchar(max),
@cDescripcionDocumento varchar(max),
@cNombreDocumento varchar(max),
@cExtensionDocumento varchar(max),
@iNivelImportancia int,
@iPeriodo int,
@iMes int,
@iPagina int,
@iPaginaTamano int
AS
BEGIN

		DECLARE @TOTAL INT = ( SELECT COUNT(iCodDocumento)
							   FROM lib.Documento t1
							   LEFT JOIN lib.Categoria t2 on t1.iCodCategoria=t2.iCodCategoria
							   LEFT JOIN lib.Catalogo t3 on t3.cNombreGrupo = 'iNivelImportancia' AND t3.cValueMember=t1.iNivelImportancia
							   LEFT JOIN lib.Catalogo t4 on t4.cNombreGrupo = 'iMes' AND t4.cValueMember=t1.iMes
							   WHERE ((@cTituloDocumento IS NOT NULL AND (t1.cTituloDocumento LIKE ('%' + @cTituloDocumento + '%'))) OR (@cTituloDocumento IS NULL))
							   AND ((@cExtensionDocumento IS NOT NULL AND (t1.cExtensionDocumento IN('' + @cExtensionDocumento + ''))) OR (@cExtensionDocumento='0'))
							   AND (@iNivelImportancia = 0 OR t1.iNivelImportancia = @iNivelImportancia)
							   AND (@iPeriodo = 0 OR t1.iPeriodo = @iPeriodo)
							   AND (@iMes = 0 OR t1.iMes = @iMes)
							 )

		SELECT     iCodDocumento
				  ,iCodCliente
				  ,iCodCategoria
				  ,cNombreCategoria
				  ,cTituloDocumento
				  ,cDescripcionDocumento
				  ,cNombreDocumento
				  ,cExtensionDocumento
				  ,iNivelImportancia
				  ,cDisplayMember as cDescripcionNivelImportancia
				  ,iPeriodo
				  ,iMes
				  ,cDescripcionMes
				  ,dFechaRegistro
				  ,@TOTAL TotalFilas
		FROM(
	
			SELECT iCodDocumento
				  ,iCodCliente
				  ,t1.iCodCategoria
				  ,t2.cNombreCategoria
				  ,cTituloDocumento
				  ,cDescripcionDocumento
				  ,cNombreDocumento
				  ,cExtensionDocumento
				  ,iNivelImportancia
				  ,t3.cDisplayMember
				  ,iPeriodo
				  ,iMes
				  ,t4.cDisplayMember as cDescripcionMes
				  ,CONVERT(date, dFechaRegistro, 103) as dFechaRegistro
				  ,ROW_NUMBER() OVER(ORDER BY t1.iCodDocumento DESC) Row
			 FROM lib.Documento t1
			 LEFT JOIN lib.Categoria t2 on t1.iCodCategoria=t2.iCodCategoria
			 LEFT JOIN lib.Catalogo t3 on t3.cNombreGrupo = 'iNivelImportancia' AND t3.cValueMember=t1.iNivelImportancia
			 LEFT JOIN lib.Catalogo t4 on t4.cNombreGrupo = 'iMes' AND t4.cValueMember=t1.iMes
			 WHERE ((@cTituloDocumento IS NOT NULL AND (t1.cTituloDocumento LIKE ('%' + @cTituloDocumento + '%'))) OR (@cTituloDocumento IS NULL))
			 AND ((@cExtensionDocumento IS NOT NULL AND (t1.cExtensionDocumento IN('' + @cExtensionDocumento + ''))) OR (@cExtensionDocumento='0'))
			 AND (@iNivelImportancia = 0 OR t1.iNivelImportancia = @iNivelImportancia)
			 AND (@iPeriodo = 0 OR t1.iPeriodo = @iPeriodo)
			 AND (@iMes = 0 OR t1.iMes = @iMes)
		) Tabla
		WHERE Row > (@iPagina - 1) * @iPaginaTamano and Row <= (@iPagina - 1) * @iPaginaTamano + @iPaginaTamano
		ORDER BY iCodDocumento DESC

END

GO
/****** Object:  StoredProcedure [lib].[SP_DT_DocumentoPorCategoria]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [lib].[SP_DT_DocumentoPorCategoria] 
@iCodCategoria int,
@iPagina int,
@iPaginaTamano int
AS
BEGIN
	
		DECLARE @TOTAL INT = ( SELECT COUNT(iCodDocumento)
							   FROM lib.Documento t1
							   LEFT JOIN lib.Categoria t2 on t1.iCodCategoria=t2.iCodCategoria
							   LEFT JOIN lib.Catalogo t3 on t3.cNombreGrupo = 'iNivelImportancia' AND t3.cValueMember=t1.iNivelImportancia
							   LEFT JOIN lib.Catalogo t4 on t4.cNombreGrupo = 'iMes' AND t4.cValueMember=t1.iMes
							   WHERE (@iCodCategoria = 0 OR t1.iCodCategoria = @iCodCategoria)
							 )

		SELECT     iCodDocumento
				  ,iCodCliente
				  ,iCodCategoria
				  ,cNombreCategoria
				  ,cTituloDocumento
				  ,cDescripcionDocumento
				  ,cNombreDocumento
				  ,cExtensionDocumento
				  ,iNivelImportancia
				  ,cDisplayMember as cDescripcionNivelImportancia
				  ,iPeriodo
				  ,iMes
				  ,cDescripcionMes
				  ,dFechaRegistro
				  ,@TOTAL TotalFilas
		FROM(
	
			SELECT iCodDocumento
				  ,iCodCliente
				  ,t1.iCodCategoria
				  ,t2.cNombreCategoria
				  ,cTituloDocumento
				  ,cDescripcionDocumento
				  ,cNombreDocumento
				  ,cExtensionDocumento
				  ,iNivelImportancia
				  ,t3.cDisplayMember
				  ,iPeriodo
				  ,iMes
				  ,t4.cDisplayMember as cDescripcionMes
				  ,CONVERT(date, dFechaRegistro, 103) as dFechaRegistro
				  ,ROW_NUMBER() OVER(ORDER BY t1.iCodDocumento DESC) Row
			 FROM lib.Documento t1
			 LEFT JOIN lib.Categoria t2 on t1.iCodCategoria=t2.iCodCategoria
			 LEFT JOIN lib.Catalogo t3 on t3.cNombreGrupo = 'iNivelImportancia' AND t3.cValueMember=t1.iNivelImportancia
			 LEFT JOIN lib.Catalogo t4 on t4.cNombreGrupo = 'iMes' AND t4.cValueMember=t1.iMes
			 WHERE (@iCodCategoria = 0 OR t1.iCodCategoria = @iCodCategoria)
		) Tabla
		WHERE Row > (@iPagina - 1) * @iPaginaTamano and Row <= (@iPagina - 1) * @iPaginaTamano + @iPaginaTamano
		ORDER BY iCodDocumento DESC

END

GO
/****** Object:  StoredProcedure [lib].[SP_DT_DocumentoPorTagDetalle]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [lib].[SP_DT_DocumentoPorTagDetalle] 
@iCodTagDetalle int,
@iPagina int,
@iPaginaTamano int
AS
BEGIN
	
		DECLARE @TOTAL INT = ( SELECT COUNT(t5.iCodTagDetalle)
							   FROM lib.Documento t1
							   LEFT JOIN lib.DocumentoDetalle t5 ON t1.iCodDocumento = t5.iCodDocumento
							   LEFT JOIN lib.Categoria t2 on t1.iCodCategoria=t2.iCodCategoria
							   LEFT JOIN lib.Catalogo t3 on t3.cNombreGrupo = 'iNivelImportancia' AND t3.cValueMember=t1.iNivelImportancia
							   LEFT JOIN lib.Catalogo t4 on t4.cNombreGrupo = 'iMes' AND t4.cValueMember=t1.iMes
							   WHERE (@iCodTagDetalle = 0 OR t5.iCodTagDetalle = @iCodTagDetalle)
							 )

		SELECT     iCodDocumento
				  ,iCodCliente
				  ,iCodCategoria
				  ,cNombreCategoria
				  ,cTituloDocumento
				  ,cDescripcionDocumento
				  ,cNombreDocumento
				  ,cExtensionDocumento
				  ,iNivelImportancia
				  ,cDisplayMember as cDescripcionNivelImportancia
				  ,iPeriodo
				  ,iMes
				  ,cDescripcionMes
				  ,dFechaRegistro
				  ,@TOTAL TotalFilas
		FROM(
	
			SELECT t1.iCodDocumento
				  ,iCodCliente
				  ,t1.iCodCategoria
				  ,t2.cNombreCategoria
				  ,cTituloDocumento
				  ,cDescripcionDocumento
				  ,cNombreDocumento
				  ,cExtensionDocumento
				  ,iNivelImportancia
				  ,t3.cDisplayMember
				  ,iPeriodo
				  ,iMes
				  ,t4.cDisplayMember as cDescripcionMes
				  ,CONVERT(date, dFechaRegistro, 103) as dFechaRegistro
				  ,ROW_NUMBER() OVER(ORDER BY t1.iCodDocumento DESC) Row
			  FROM lib.Documento t1
			  LEFT JOIN lib.DocumentoDetalle t5 ON t1.iCodDocumento = t5.iCodDocumento
			  LEFT JOIN lib.Categoria t2 on t1.iCodCategoria=t2.iCodCategoria
			  LEFT JOIN lib.Catalogo t3 on t3.cNombreGrupo = 'iNivelImportancia' AND t3.cValueMember=t1.iNivelImportancia
			  LEFT JOIN lib.Catalogo t4 on t4.cNombreGrupo = 'iMes' AND t4.cValueMember=t1.iMes
			  WHERE (@iCodTagDetalle = 0 OR t5.iCodTagDetalle = @iCodTagDetalle)
		) Tabla
		WHERE Row > (@iPagina - 1) * @iPaginaTamano and Row <= (@iPagina - 1) * @iPaginaTamano + @iPaginaTamano
		ORDER BY iCodDocumento DESC

END

GO
/****** Object:  StoredProcedure [lib].[SP_DT_Tag_TagDetalle]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [lib].[SP_DT_Tag_TagDetalle]   
AS
BEGIN

	SELECT  t2.iCodTagDetalle,
	        t1.iCodTag,
			t1.cNombreTag,
			t2.cNombreTagDetalle
	FROM lib.Tag t1
	RIGHT JOIN lib.TagDetalle t2 on t1.iCodTag = t2.iCodTag
END


GO
/****** Object:  StoredProcedure [lib].[SP_ROW_DocumentoPorId]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [lib].[SP_ROW_DocumentoPorId] 
@iCodDocumento int
AS
BEGIN

    --DECLARE @iCodDocumento int=1

	SELECT t1.iCodDocumento
		  ,cTituloDocumento
		  ,cDescripcionDocumento
		  ,(cNombreDocumento + '.' + LOWER(cExtensionDocumento)) as cNombreDocumento
		  ,cUrlDocumento
		  ,t3.cDisplayMember as cNivelImportancia
		  ,iPeriodo
		  ,t4.cDisplayMember as cMes
		  ,CONVERT(varchar, dFechaRegistro,5) AS  dFechaRegistro
		  ,(SELECT STUFF ((SELECT TOP 4 ', ' + CAST(t3.cNombreTag AS nvarchar(max)) + ' - ' + CAST(t2.cNombreTagDetalle AS nvarchar(max))
			FROM lib.DocumentoDetalle t1
			LEFT JOIN lib.TagDetalle t2 ON t2.iCodTagDetalle = t1.iCodTagDetalle
			LEFT JOIN lib.Tag t3 ON t3.iCodTag = t2.iCodTag
			WHERE t1.iCodDocumento=@iCodDocumento
			ORDER BY t3.iCodTag
			FOR XML PATH('')),1,1,'')) as DescripcionTagDetalle

	FROM lib.Documento t1
	LEFT JOIN lib.Categoria t2 on t1.iCodCategoria=t2.iCodCategoria
	LEFT JOIN lib.Catalogo t3 on t3.cNombreGrupo = 'iNivelImportancia' AND t3.cValueMember=t1.iNivelImportancia
	LEFT JOIN lib.Catalogo t4 on t4.cNombreGrupo = 'iMes' AND t4.cValueMember=t1.iMes
	WHERE t1.iCodDocumento=@iCodDocumento

END

GO
/****** Object:  StoredProcedure [lib].[SP_ROW_LoginPersonaSeguridadMFA]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [lib].[SP_ROW_LoginPersonaSeguridadMFA] 
@iCodPersona int,
@cToken varchar(30)   
AS
BEGIN
 select isnull(iCodPersona,0) as iCodPersona 
 from SeguridadMFA where 
 iCodPersona=@iCodPersona 
 and cToken=@cToken 
 and dFechaHoraFin>=GETDATE() 
END

GO
/****** Object:  StoredProcedure [lib].[SP_ROW_LoginUsuarioSeguridadMFA]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [lib].[SP_ROW_LoginUsuarioSeguridadMFA] 
@iCodUsuario varchar(30) ,
@cToken varchar(30)   
AS
BEGIN
 SELECT t2.iCodUsuario 
 FROM dbo.SeguridadMFA  t1
 LEFT JOIN dbo.Usuario t2 ON t1.iCodUsuario=t2.iCodUsuario  
 WHERE t2.iCodUsuario=@iCodUsuario 
 and cToken=@cToken 
 and dFechaHoraFin>=GETDATE() 
END

GO
/****** Object:  StoredProcedure [prov].[SP_DSH_EvaluacionIMEPorContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Object:  StoredProcedure [prov].[SP_DT_EjeCriterioValores]    Script Date: 13/12/2024 17:21:47 ******/
--SET ANSI_NULLS ON
--GO

--SET QUOTED_IDENTIFIER ON
--GO
CREATE PROCEDURE [prov].[SP_DSH_EvaluacionIMEPorContrata] @iCodContrata int 
AS
SET NOCOUNT ON;

 DECLARE @cAnio as smallint;
 DECLARE @cMes as tinyint;
 SET @cAnio=YEAR(GETDATE());
 SET @cMes=MONTH(GETDATE()); 
 SELECT 
ed.iCodEvaluacionIMEDetalle,
ev.iPeriodo + ev.iMes as iPeriodoMes,
ev.iMes,
case ev.iMes 
WHEN 1 then 'ENERO' 
WHEN 2 then 'FEBRERO'
ELSE ''
end AS cNombreMes,
ej.cNomEje , 
ed.cNomCriterio ,
ed.cEstadoRevisado ,
ed.cDetalleValor,
 ed.nPuntuacion 

 FROM prov.EvaluacionIME ev 
 inner join prov.EvaluacionImeDetalle ed on ev.iCodEvaluacionIME=ed.iCodEvaluacionIME 
 inner join prov.EjeCriterio ejc on ed.iCodEjeCriterio=ejc.iCodEjeCriterio 
 inner join prov.Eje ej on ejc.iCodEje=ej.iCodEje 
 where (ev.iperiodo=(@cAnio-1) and ev.imes >@cMes ) or (ev.iperiodo=@cAnio and ev.imes<=@cMes) 
 and ev.iCodContrata=@iCodContrata 


 
GO
/****** Object:  StoredProcedure [prov].[SP_DT_CatalogoBienesServicios]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [prov].[SP_DT_CatalogoBienesServicios]  
AS
 SELECT 
  bs.iCodCatalogoBienesServicios,
 cbs.cCategoriaBienesServicios ,
 bs.cDetalleBienesServicios,
 bs.iCodTipoMedida 

  FROM prov.CatalogoBienesServicios bs 
  left join prov.CategoriaBienesServicios cbs on bs.iCodCategoriaBienesServicios=cbs.iCodCategoriaBienesServicios 
  --left join prov.RubroBienesServicios rbs on cbs.iCodRubroBienesServicios=rbs.iCodRubroBienesServicios 

GO
/****** Object:  StoredProcedure [prov].[SP_DT_CatalogoBienesServiciosCompleto]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [prov].[SP_DT_CatalogoBienesServiciosCompleto]  
AS
 SELECT 
  bs.iCodCatalogoBienesServicios,
  bs.cTipo,
 cbs.cCategoriaBienesServicios ,
 bs.cDetalleBienesServicios,
 tm.cNomCorto as cMedida 

  FROM prov.CatalogoBienesServicios bs 
  left join prov.CategoriaBienesServicios cbs on bs.iCodCategoriaBienesServicios=cbs.iCodCategoriaBienesServicios 
 left join prov.TipoMedida tm on bs.iCodTipoMedida=tm.iCodTipoMedida 
 --left join prov.RubroBienesServicios rbs on cbs.iCodRubroBienesServicios=rbs.iCodRubroBienesServicios 

GO
/****** Object:  StoredProcedure [prov].[SP_DT_CategoriasBienesServicios]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [prov].[SP_DT_CategoriasBienesServicios]  
AS
 SELECT 
  cbs.iCodCategoriaBienesServicios,
  cbs.iCodRubroBienesServicios,
 rbs.cRubroBienesServicios ,
 cbs.cCategoriaBienesServicios 

  FROM  prov.CategoriaBienesServicios cbs 
  left join prov.RubroBienesServicios rbs on cbs.iCodRubroBienesServicios=rbs.iCodRubroBienesServicios 

GO
/****** Object:  StoredProcedure [prov].[SP_DT_EjeCriterioActivoPorCodigo]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [prov].[SP_DT_EjeCriterioActivoPorCodigo] 
@iCodEjeCriterio int 
AS
 SELECT 
 ecv.iCodEjeCriterio,
 ecv.cNomCriterio 
  FROM prov.EjeCriterio ecv 
 WHERE ecv.iCodEjeCriterio=@iCodEjeCriterio  
 and ecv.bdeshabilitado=0  
 order by ecv.iCodEjeCriterio 
GO
/****** Object:  StoredProcedure [prov].[SP_DT_EjeCriterios]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [prov].[SP_DT_EjeCriterios]  
AS
 SELECT 
  ec.iCodEjeCriterio,
  e.cNomEje,
  ec.cNomCriterio,
    count(ecv.iCodEjeCriterioValor) as iCantValores ,
  ec.cTiempoRevision,
  ec.cFormaRevision ,
  ec.bDeshabilitado  
 FROM prov.EjeCriterio ec 
 inner join prov.Eje e on ec.iCodEje=e.iCodEje 
 left join prov.EjeCriterioValor ecv on ec.iCodEjeCriterio=ecv.iCodEjeCriterio 
 group by  ec.iCodEjeCriterio,
  e.cNomEje,
  ec.cNomCriterio,
  ec.cTiempoRevision,
  ec.cFormaRevision ,
  ec.bDeshabilitado 
   order by e.cNomEje,ec.cNomCriterio 

GO
/****** Object:  StoredProcedure [prov].[SP_DT_EjeCriteriosActivos]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [prov].[SP_DT_EjeCriteriosActivos] 
AS
 SELECT 
 ecv.iCodEjeCriterio,
 ecv.cNomCriterio 
  FROM prov.EjeCriterio ecv 
  --inner join prov.EjeCriterioValor ev on ecv.iCodEjeCriterio=ev.iCodEjeCriterio 
 WHERE ecv.bdeshabilitado=0  
 order by ecv.iCodEjeCriterio 
GO
/****** Object:  StoredProcedure [prov].[SP_DT_EjeCriterioValores]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [prov].[SP_DT_EjeCriterioValores] @iCodEjeCriterio int 
AS
 SELECT 
 ecv.iCodEjeCriterioValor,
 ecv.iCalificaDescalifica as iCalificaDescalificaIcon,
 ecv.cDetalleValor,
 ecv.nPuntuacion,
 ecv.iCalificaDescalifica ,
 ecv.bAnulado ,
 ecv.iCodEjeCriterio , 
 ecv.iOrden 
 FROM prov.EjeCriterioValor ecv 
 WHERE ecv.iCodEjeCriterio=@iCodEjeCriterio 
 order by ecv.iOrden ASC 
GO
/****** Object:  StoredProcedure [prov].[SP_DT_EjeCriterioValorPorCriterio]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [prov].[SP_DT_EjeCriterioValorPorCriterio] @iCodEjeCriterio int 
AS
 SELECT 
 ecv.iCodEjeCriterioValor,
  ecv.iCalificaDescalifica ,
 ecv.cDetalleValor ,
 ecv.nPuntuacion 
  FROM prov.EjeCriterioValor ecv 
  --inner join prov.EjeCriterioValor ev on ecv.iCodEjeCriterio=ev.iCodEjeCriterio 
 WHERE ecv.iCodEjeCriterio=@iCodEjeCriterio and  ecv.bAnulado =0  
 order by ecv.iCodEjeCriterio 
GO
/****** Object:  StoredProcedure [prov].[SP_DT_EmpresasLocalesPorRubro]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [prov].[SP_DT_EmpresasLocalesPorRubro]   @iCodRubroEmpresarial int 
AS
 SELECT 
 co.iCodContrata ,
 co.cRUC,
 co.cNomContrata ,
 re.cRubroEmpresarial 
 FROM dbo.Contrata co 
 inner join prov.RubroEmpresarial re on co.iCodRubroEmpresarial=re.iCodRubroEmpresarial 
 WHERE co.cTipoEmpresa in('EMPRESA LOCAL','PROVEEDOR LOCAL') 
 and 0=@iCodRubroEmpresarial or co.iCodRubroEmpresarial=@iCodRubroEmpresarial  
GO
/****** Object:  StoredProcedure [prov].[SP_DT_EvaluacionImeDetalleEmpresa]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [prov].[SP_DT_EjeCriterioValores]    Script Date: 13/12/2024 17:21:47 ******/
--SET ANSI_NULLS ON
--GO

--SET QUOTED_IDENTIFIER ON
--GO


CREATE PROCEDURE [prov].[SP_DT_EvaluacionImeDetalleEmpresa] @iCodEvaluacionIme int 
AS
 SELECT 
ed.iCodEvaluacionIMEDetalle,
ej.cNomEje , 
ed.cNomCriterio ,
ed.cEstadoRevisado ,
ed.iCodEjeCriterio ,
ed.nPuntuacion,
isnull((ed.nPuntuacion/NullIf(ejc.nValorSuperior,0))*ejc.nPonderacion,0)  as nTotalIMECriterio,
case 
when cast(ed.dFechaUsuarioRevisado  as date)='1900-01-01' then NULL
else cast(ed.dFechaUsuarioRevisado  as date)
end as dFechaUsuarioRevisado ,
ej.iCodEje , 
ej.nPonderacion 


 FROM prov.EvaluacionIME ev 
 inner join prov.EvaluacionImeDetalle ed on ev.iCodEvaluacionIME=ed.iCodEvaluacionIME 
 inner join prov.EjeCriterio ejc on ed.iCodEjeCriterio=ejc.iCodEjeCriterio 
 inner join prov.Eje ej on ejc.iCodEje=ej.iCodEje 
 WHERE ev.iCodEvaluacionIME=@iCodEvaluacionIme



 --select * from  prov.EjeCriterio

 --dedelete from prov.evaluacionimedetalle where iCodEvaluacionIme in(3,11,12,13)
GO
/****** Object:  StoredProcedure [prov].[SP_DT_EvaluacionIMEPeriodo]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO















 


CREATE PROCEDURE [prov].[SP_DT_EvaluacionIMEPeriodo]  @iPeriodo int ,
														@iMes int 
AS
 

select 
isnull(ev.iCodEvaluacionIME,-1) as iCodEvaluacionIME ,
isnull(ev.cEstado ,'P') as cEstado, 
co.iCodContrata,co.cNomContrata,
co.cNomCorto,
co.cCondicionEmpresa,co.cCondicionEmpresaDetalle,
co.cTipoEmpresa  
from contrata co   
left join prov.EvaluacionIME ev on co.iCodContrata=ev.iCodContrata and 
  ev.iPeriodo=@iPeriodo and ev.iMes=@iMes 




GO
/****** Object:  StoredProcedure [prov].[SP_DT_EvaluacionIMEPeriodoEmpresasLocales]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

















 


CREATE PROCEDURE [prov].[SP_DT_EvaluacionIMEPeriodoEmpresasLocales]  @iPeriodo int ,
														@iMes int 
AS
 

select 
isnull(ev.iCodEvaluacionIME,-1) as iCodEvaluacionIME ,
isnull(ev.cEstado ,'P') as cEstado, 
co.iCodContrata,co.cNomContrata,
co.cNomCorto,
co.cCondicionEmpresa,co.cCondicionEmpresaDetalle,
co.cTipoEmpresa  
from contrata co   
left join prov.EvaluacionIME ev on co.iCodContrata=ev.iCodContrata and 
  ev.iPeriodo=@iPeriodo and ev.iMes=@iMes 
    WHERE co.ctipoEmpresa='EMPRESA LOCAL'



GO
/****** Object:  StoredProcedure [prov].[SP_DT_RequerimientoCotizacionAdjudica]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [prov].[SP_DT_RequerimientoCotizacionAdjudica]   @iCodRequerimiento int          
 AS          
         
  select 
rc.iCodRequerimientoCotizacion ,
rc.bAdjudicado,
rc.cNotasAdjudica ,
rc.cFeedbackContrata,
rc.cFeedbackContrataDetalle,
case
when rc.iCodUsuarioPresentaPropuesta>0 then cast(1 as bit)
else cast(0 as bit) 
end AS bPropuestaPresenta ,
rc.cEstado,
 CASE rc.iTipoPostulacion 
 WHEN 1 THEN 'PROCESO' 
 WHEN 2 THEN 'SISTEMA' 
 WHEN 3 THEN 'EXCEPTUADO' 
  WHEN 4 THEN 'PREFERENCIAL' 
   WHEN 5 THEN 'SOLICITADO' 
        WHEN 6 THEN 'VIRTUAL APP' 
 WHEN 7 THEN 'STAKEHOLDER' 
    END AS cTipoPostulacion ,
co.cNomContrata,
co.cCondicionEmpresaDetalle,
rc.iDiasValidezOferta ,
rc.iTiempoEntrega ,
rc.cCondicionesPropuesta  ,
rc.nSubTotal ,
rc.nIGV ,
rc.nTotal  
from prov.RequerimientoCotizacion rc 
inner join Contrata co on rc.iCodContrataLocal=co.iCodContrata 
WHERE rc.iCodRequerimiento=@iCodRequerimiento 
GO
/****** Object:  StoredProcedure [prov].[SP_DT_RequerimientoCotizacionDetallePostor]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [prov].[SP_DT_RequerimientoCotizacionDetallePostor]   @iCodRequerimientoCotizacion int          
AS          
         
  select 
rcd.iCodRequerimientoCotizacionDetalle ,
rcd.iCodRequerimientoDetalle ,
rcd.bAdjudicado ,

  cbs.cCategoriaBienesServicios ,
 bs.cDetalleBienesServicios ,
 rd.cDescripcionBienServicio,
 rcd.nCantidad,
 tm.cNomCorto as cNomCortoMedida,
 rcd.nPrecioUnit ,
 rcd.nSubTotal ,
 rcd.cCondicionesPropuesta 


from prov.RequerimientoCotizacionDetalle rcd 
inner join prov.RequerimientoDetalle rd on rcd.iCodRequerimientoDetalle=rd.iCodRequerimientoDetalle 
 inner join prov.CatalogoBienesServicios bs on rd.iCodCatalogoBienesServicios=bs.iCodCatalogoBienesServicios
   left join prov.CategoriaBienesServicios cbs on bs.iCodCategoriaBienesServicios=cbs.iCodCategoriaBienesServicios 
   left join prov.TipoMedida tm on bs.iCodTipoMedida=tm.iCodTipoMedida 
WHERE rcd.iCodRequerimientoCotizacion=@iCodRequerimientoCotizacion  
GO
/****** Object:  StoredProcedure [prov].[SP_DT_RequerimientoCotizacionPostor]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [prov].[SP_DT_RequerimientoCotizacionPostor]   @iCodRequerimiento int          
AS          
         
  select 
rc.iCodRequerimientoCotizacion ,
case
when rc.iCodUsuarioPresentaPropuesta>0 then cast(1 as bit)
else cast(0 as bit) 
end AS bPropuestaPresenta ,
rc.cEstado,
 CASE rc.iTipoPostulacion 
 WHEN 1 THEN 'PROCESO' 
 WHEN 2 THEN 'SISTEMA' 
 WHEN 3 THEN 'EXCEPTUADO' 
  WHEN 4 THEN 'PREFERENCIAL' 
   WHEN 5 THEN 'SOLICITADO' 
        WHEN 6 THEN 'VIRTUAL APP' 
 WHEN 7 THEN 'STAKEHOLDER' 
    END AS cTipoPostulacion ,
co.cNomContrata,
co.cCondicionEmpresaDetalle,
rc.iDiasValidezOferta ,
rc.iTiempoEntrega ,
rc.cCondicionesPropuesta  


from prov.RequerimientoCotizacion rc 
inner join Contrata co on rc.iCodContrataLocal=co.iCodContrata 
WHERE rc.iCodRequerimiento=@iCodRequerimiento 
GO
/****** Object:  StoredProcedure [prov].[SP_DT_RequerimientoDetallePorCodigo]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [prov].[SP_DT_RequerimientoDetallePorCodigo]  @iCodRequerimiento int 
AS
 SELECT 
 rd.iCodRequerimientoDetalle ,
 rd.cEstado , 
 cbs.cCategoriaBienesServicios ,
 bs.cDetalleBienesServicios ,
 rd.cDescripcionBienServicio,
 rd.nCantidad,
 tm.cNomCorto as cNomCortoMedida,
 rd.nPrecioUnit ,
 rd.nSubTotal 
  FROM 
  prov.RequerimientoDetalle rd
  left join prov.CatalogoBienesServicios bs on rd.iCodCatalogoBienesServicios=bs.iCodCatalogoBienesServicios
   left join prov.CategoriaBienesServicios cbs on bs.iCodCategoriaBienesServicios=cbs.iCodCategoriaBienesServicios 
   left join prov.TipoMedida tm on rd.iCodTipoMedida=tm.iCodTipoMedida 
  --left join prov.RubroBienesServicios rbs on cbs.iCodRubroBienesServicios=rbs.iCodRubroBienesServicios 
  WHERE rd.iCodRequerimiento=@iCodRequerimiento 
GO
/****** Object:  StoredProcedure [prov].[SP_DT_RequerimientosLista]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [prov].[SP_DT_RequerimientosLista] 
@dFechaIni date,
@dFechaFin date
AS 
BEGIN
	SELECT r.iCodRequerimiento,
		   r.iCodContrata,
		   r.iCodTipoEstadoRequerimiento,
		   isnull(tr.cTipoRequerimiento, '') AS cTipoRequerimiento,
		   r.cNroRequerimiento,
		   cto.cNroContrato,
		   ct.cNomContrata,
		   CASE
			   WHEN r.iCodContrata<>r.iCodSubContrata THEN isnull(sct.cNomContrata, '')
			   ELSE ''
		   END AS cSubContrata,
		   r.dFechaConvocatoriaIni,
		   r.dFechaConvocatoriaFin,
		   COUNT(rd.iCodRequerimientoDetalle) AS iItems,
		   count(rc.iCodRequerimientoCotizacion) AS iPostores,
		   r.cUrlCarpeta,
		   r.bLiberado
	FROM prov.requerimiento AS r
	LEFT JOIN dbo.Contrata AS ct ON r.iCodContrata = ct.iCodContrata
	LEFT JOIN prov.RequerimientoDetalle AS rd ON r.iCodRequerimiento = rd.iCodRequerimiento
	LEFT JOIN prov.RequerimientoCotizacion AS rc ON r.iCodRequerimiento=rc.iCodRequerimiento
	LEFT JOIN dbo.Contrata sct ON sct.iCodContrata=r.iCodSubContrata
	LEFT JOIN ContratistaContrato cto ON r.iCodContratistaContrato=cto.iCodContratistaContrato
	LEFT JOIN prov.TipoRequerimiento tr ON r.iCodTipoRequerimiento=tr.iCodTipoRequerimiento
	WHERE cast(r.dFechaSolicitud AS date)>=@dFechaIni
	  AND cast(r.dFechaSolicitud AS date)<=@dFechaFin
	GROUP BY r.iCodRequerimiento,
			 r.iCodTipoEstadoRequerimiento,
			 r.iCodContrata,
			 tr.cTipoRequerimiento,
			 r.cNroRequerimiento,
			 cto.cNroContrato,
			 ct.cNomContrata,
			 r.iCodContrata,
			 r.iCodSubContrata ,
			 sct.cNomContrata,
			 r.dFechaConvocatoriaIni,
			 r.dFechaConvocatoriaFin,
			 r.cUrlCarpeta,
			 r.bLiberado 
END
GO
/****** Object:  StoredProcedure [prov].[SP_DTW_RequerimientoCotizacionDetallePorPostor]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [prov].[SP_DTW_RequerimientoCotizacionDetallePorPostor]   @iCodRequerimientoCotizacion int          
AS          
         
  select 
rcd.iCodRequerimientoCotizacionDetalle ,
rcd.iCodRequerimientoDetalle ,
rcd.bAdjudicado ,
 cbs.cCategoriaBienesServicios ,
 bs.cDetalleBienesServicios ,
 rd.cDescripcionBienServicio,
 rcd.nCantidad,
 tm.cNomCorto as cNomCortoMedida,
 rcd.nPrecioUnit ,
 rcd.nSubTotal ,
 rcd.cCondicionesPropuesta 


from prov.RequerimientoCotizacionDetalle rcd 
left join prov.RequerimientoDetalle rd on rcd.iCodRequerimientoDetalle=rd.iCodRequerimientoDetalle 
 left join prov.CatalogoBienesServicios bs on rd.iCodCatalogoBienesServicios=bs.iCodCatalogoBienesServicios
   left join prov.CategoriaBienesServicios cbs on bs.iCodCategoriaBienesServicios=cbs.iCodCategoriaBienesServicios 
   left join prov.TipoMedida tm on bs.iCodTipoMedida=tm.iCodTipoMedida 
WHERE rcd.iCodRequerimientoCotizacion=@iCodRequerimientoCotizacion  
GO
/****** Object:  StoredProcedure [prov].[SP_DTW_RequerimientoCotizacionPostores]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [prov].[SP_DTW_RequerimientoCotizacionPostores]     
@iCodRequerimiento int              
AS  
BEGIN  
 SELECT rc.iCodRequerimientoCotizacion,  
     CASE  
      WHEN rc.iCodUsuarioPresentaPropuesta>0 THEN cast(1 AS bit)  
      ELSE cast(0 AS bit)  
     END AS bPropuestaPresenta,  
     rc.cEstado,  
     CASE rc.iTipoPostulacion  
      WHEN 1 THEN 'PROCESO'  
      WHEN 2 THEN 'SISTEMA'  
      WHEN 3 THEN 'EXCEPTUADO'  
      WHEN 4 THEN 'PREFERENCIAL'  
      WHEN 5 THEN 'SOLICITADO'  
      WHEN 6 THEN 'VIRTUAL APP'  
      WHEN 7 THEN 'STAKEHOLDER'  
     END AS cTipoPostulacion,  
     co.cNomContrata,  
     co.cCondicionEmpresaDetalle,  
     rc.iDiasValidezOferta,  
     rc.iTiempoEntrega,  
     rc.cCondicionesPropuesta,  
     rc.cFeedbackContrata,  
     rc.cFeedbackContrataDetalle,  
     rc.cNotasAdjudica,
	 rc.nTotal
 FROM prov.RequerimientoCotizacion rc  
 INNER JOIN Contrata co ON rc.iCodContrataLocal=co.iCodContrata  
 WHERE rc.iCodRequerimiento=@iCodRequerimiento  
END
GO
/****** Object:  StoredProcedure [prov].[SP_DTW_RequerimientoDetallePorCodRequerimiento]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [prov].[SP_DTW_RequerimientoDetallePorCodRequerimiento]  
@iCodRequerimiento int   
AS
BEGIN

 SELECT   
		rd.iCodRequerimientoDetalle ,  
		rd.cEstado ,   
		isnull(cbs.cCategoriaBienesServicios,'') as cCategoriaBienesServicios ,  
		isnull(bs.cDetalleBienesServicios,'') as cDetalleBienesServicios ,  
		rd.cDescripcionBienServicio,  
		rd.nCantidad,  
		tm.cNomCorto as cNomCortoMedida,  
		rd.nPrecioUnit,  
		rd.nSubTotal   
 FROM prov.RequerimientoDetalle rd  
 left join prov.CatalogoBienesServicios bs on rd.iCodCatalogoBienesServicios=bs.iCodCatalogoBienesServicios  
 left join prov.CategoriaBienesServicios cbs on bs.iCodCategoriaBienesServicios=cbs.iCodCategoriaBienesServicios   
 left join prov.TipoMedida tm on rd.iCodTipoMedida=tm.iCodTipoMedida   
 --left join prov.RubroBienesServicios rbs on cbs.iCodRubroBienesServicios=rbs.iCodRubroBienesServicios   
 WHERE rd.iCodRequerimiento=@iCodRequerimiento

END
GO
/****** Object:  StoredProcedure [prov].[SP_DTW_RequerimientosPorContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [prov].[SP_DTW_RequerimientosPorContrata]   
@iCodContrata int   
AS BEGIN  
 SELECT r.iCodRequerimiento,  
     r.iCodTipoEstadoRequerimiento,  
     tr.cTipoRequerimiento,  
     r.cNroRequerimiento,  
     cto.cNroContrato,  
     cast(r.dFechaSolicitud AS date) AS dFechaSolicitud,  
     cast(r.dFechaConvocatoriaIni AS date) AS dFechaConvocatoriaIni,  
     cast(r.dFechaConvocatoriaFin AS date) AS dFechaConvocatoriaFin,  
     cast(r.dFechaTiempoServicioIni AS date) AS dFechaTiempoServicioIni,  
     cast(r.dFechaTiempoServicioFin AS date) AS dFechaTiempoServicioFin,  
     COUNT(rd.iCodRequerimientoDetalle) AS iItems,  
     count(rc.iCodRequerimientoCotizacion) AS iPostores,  
     r.cUrlCarpeta,  
     r.bLiberado,  
     r.cUrlDocumentos,
	 (
		SELECT 
			 CASE 
				WHEN r.bLiberado = 1 THEN 'LIBERADO'
				WHEN EXISTS (
					SELECT 1 
					FROM prov.RequerimientoCotizacion rc2 
					WHERE rc2.iCodRequerimiento = r.iCodRequerimiento
					  AND rc2.cEstado = 'A'
				) THEN 'ADJUDICADO'
				ELSE 'PENDIENTE'
			 END
	) AS 'cSituacion'
 FROM prov.requerimiento AS r  
 LEFT JOIN prov.RequerimientoDetalle AS rd ON r.iCodRequerimiento = rd.iCodRequerimiento  
 LEFT JOIN prov.RequerimientoCotizacion AS rc ON r.iCodRequerimiento=rc.iCodRequerimiento  
 LEFT JOIN ContratistaContrato cto ON r.iCodContratistaContrato=cto.iCodContratistaContrato  
 LEFT JOIN prov.TipoRequerimiento tr ON r.iCodTipoRequerimiento=tr.iCodTipoRequerimiento  
 WHERE r.iCodContrata=@iCodContrata  
 GROUP BY r.iCodRequerimiento,  
    r.iCodTipoEstadoRequerimiento,  
    r.iCodContrata,  
    tr.cTipoRequerimiento,  
    r.cNroRequerimiento,  
    cto.cNroContrato,  
    r.dFechaSolicitud,  
    r.dFechaConvocatoriaIni,  
    r.dFechaConvocatoriaFin,  
    r.dFechaTiempoServicioIni,  
    r.dFechaTiempoServicioFin,  
    r.cUrlCarpeta,  
    r.bLiberado,  
    r.cUrlDocumentos  
END
GO
/****** Object:  StoredProcedure [prov].[SP_ROW_GetRequerimiento]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [prov].[SP_ROW_GetRequerimiento]             
@iCodRequerimiento int              
AS            
BEGIN           
  SELECT  
			r.iCodRequerimiento,            
			r.iCodContratistaContrato,            
			r.iCodSubContrata,            
			r.iCodTipoEstadoRequerimiento ,  
			r.cNroRequerimiento,  
			CONVERT (varchar,r.dFechaConvocatoriaIni, 105) AS dFechaConvocatoriaIni,          
			CONVERT (varchar,r.dFechaConvocatoriaFin, 105) AS dFechaConvocatoriaFin,        
			CONVERT (varchar,r.dFechaTiempoServicioIni, 105) AS dFechaTiempoServicioIni,        
			CONVERT (varchar,r.dFechaTiempoServicioFin, 105) AS dFechaTiempoServicioFin,        
			r.cSolicitante,  
			r.cObs,  
			r.cAlcanceRequerimiento,  
			r.cTerminosPago ,  
			r.iCodTipoMoneda   
  FROM prov.Requerimiento r        
  WHERE  r.iCodRequerimiento =@iCodRequerimiento
END   
GO
/****** Object:  StoredProcedure [prov].[SP_ROW_RequerimientoDetalle]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [prov].[SP_ROW_RequerimientoDetalle]  
@iCodRequerimientoDetalle int   
AS
BEGIN

	SELECT   
			rd.cDescripcionBienServicio,  
			rd.cDetalleRequerimiento,  
			rd.nCantidad,  
			rd.iCodTipoMedida,  
			rd.nPrecioUnit,  
			rd.nSubTotal,  
			rd.nTiempoDuracion,  
			rd.cOtrosRequisitos
	FROM prov.RequerimientoDetalle rd  
	WHERE rd.iCodRequerimientoDetalle=@iCodRequerimientoDetalle

END
GO
/****** Object:  StoredProcedure [prov].[SP_RPT_DBEvaluacionIMEPorContrata]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [prov].[SP_DT_EjeCriterioValores]    Script Date: 13/12/2024 17:21:47 ******/
--SET ANSI_NULLS ON
--GO

--SET QUOTED_IDENTIFIER ON
--GO
CREATE PROCEDURE [prov].[SP_RPT_DBEvaluacionIMEPorContrata] @iCodContrata int 
AS
SET NOCOUNT ON;

 DECLARE @cAnio as smallint;
 DECLARE @cMes as tinyint;
 SET @cAnio=YEAR(GETDATE());
 SET @cMes=MONTH(GETDATE()); 
 SELECT 
ed.iCodEvaluacionIMEDetalle,
ev.iPeriodo + ev.iMes as iPeriodoMes,
ev.iMes,
case ev.iMes 
WHEN 1 then 'ENERO' 
WHEN 2 then 'FEBRERO'
WHEN 3 then 'MARZO'
WHEN 4 then 'ABRIL'
ELSE ''
end AS cNombreMes,
ej.cNomEje , 
ed.cNomCriterio ,
ed.cEstadoRevisado ,
ed.cDetalleValor,
 ed.nPuntuacion 

 FROM prov.EvaluacionIME ev 
 inner join prov.EvaluacionImeDetalle ed on ev.iCodEvaluacionIME=ed.iCodEvaluacionIME 
 inner join prov.EjeCriterio ejc on ed.iCodEjeCriterio=ejc.iCodEjeCriterio 
 inner join prov.Eje ej on ejc.iCodEje=ej.iCodEje 
 where (ev.iperiodo=(@cAnio-1) and ev.imes >@cMes ) or (ev.iperiodo=@cAnio and ev.imes<=@cMes) 
 and ev.iCodContrata=@iCodContrata 


 
GO
/****** Object:  StoredProcedure [prov].[SP_UPD_AdjudicarRequerimientoAPostor]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [prov].[SP_UPD_AdjudicarRequerimientoAPostor] 
@iCodRequerimientoCotizacion int, 
@iCodRequerimiento int, @dFechaAdjudica Datetime,
@iCodUsuarioAdjudica int , @cNotasAdjudica varchar(MAX) 
AS BEGIN
SET NOCOUNT ON; 
BEGIN TRY BEGIN TRAN UPD_RequerimientoAdjudicar 

	IF EXISTS (SELECT *
			   FROM prov.RequerimientoCotizacion
			   WHERE iCodRequerimiento=@iCodRequerimiento AND cEstado='A') 
			   BEGIN
					SELECT 2 --'EXISTE ADJUDICADO
			   END 
	ELSE IF EXISTS (SELECT *
		       FROM prov.Requerimiento
		       WHERE iCodRequerimiento=@iCodRequerimiento AND bLiberado=1) 
			   BEGIN
				SELECT 3 --'EXISTE REQ LIBERADO
			   END 
	ELSE
	BEGIN 

	--UPDATE LA CONTRATA ADJUDICADA
	UPDATE prov.RequerimientoCotizacion
	SET bAdjudicado=1,
			iCodUsuarioAdjudica=@iCodUsuarioAdjudica,
			dFechaAdjudica=@dFechaAdjudica,
			cNotasAdjudica=@cNotasAdjudica,
			cEstado='A',
			cFeedbackContrata='ADJUDICADO'
	WHERE iCodRequerimientoCotizacion=@iCodRequerimientoCotizacion; 

    --UPDATE LAS DEMAS CONTRATAS NO SELECCIONADO
	UPDATE prov.RequerimientoCotizacion 
	SET bAdjudicado=0,
		  iCodUsuarioAdjudica=@iCodUsuarioAdjudica,
		  dFechaAdjudica=@dFechaAdjudica,
		  cNotasAdjudica='',
		  cEstado='N',
		  cFeedbackContrata='NO SELECCIONADO' 
	WHERE iCodRequerimiento=@iCodRequerimiento
	AND iCodRequerimientoCotizacion<>@iCodRequerimientoCotizacion;

	  SELECT 1
	END
	COMMIT TRAN UPD_RequerimientoAdjudicar 
END TRY BEGIN CATCH
SELECT -1
	ROLLBACK TRAN UPD_RequerimientoAdjudicar 
END CATCH END
GO
/****** Object:  StoredProcedure [prov].[SP_UPD_AnularRequerimiento]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [prov].[SP_UPD_AnularRequerimiento] @iCodRequerimiento int,
							@dFechaEstado Datetime,
							@iCodUsuarioEstado int 
AS
UPDATE  prov.Requerimiento 
SET iCodTipoEstadoRequerimiento=4,cEstado='ANULADO',
dFechaEstado=@dFechaEstado,
iCodUsuarioEstado=@iCodUsuarioEstado 
WHERE iCodRequerimiento=@iCodRequerimiento 
AND iCodTipoEstadoRequerimiento<4 
GO
/****** Object:  StoredProcedure [prov].[SP_UPD_EnviarRequerimientoARevisar]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ENVIA REQUERIMIENTO PARA REVISION DEL OPERADOR
CREATE PROCEDURE [prov].[SP_UPD_EnviarRequerimientoARevisar]    
@iCodRequerimiento INT,    
@iCodUsuarioEstado INT    
AS    
BEGIN    
    
 BEGIN TRY    
   BEGIN TRAN SP_UPD_EnviarARevision    
     
   IF NOT EXISTS(SELECT * FROM prov.RequerimientoDetalle    
             WHERE iCodRequerimiento=@iCodRequerimiento)    
   BEGIN    
         SELECT 0    
   END    
   ELSE    
   BEGIN    
		UPDATE  prov.Requerimiento SET 
		iCodTipoEstadoRequerimiento=2,
		cEstado='REVISIÓN',
		dFechaEstado=GETDATE(),
		iCodUsuarioEstado=@iCodUsuarioEstado,
		dFechaEnvio=GETDATE(),
		iCodUsuarioEnvio=@iCodUsuarioEstado  
		WHERE iCodRequerimiento=@iCodRequerimiento 
    
		SELECT 1    
   END    
   COMMIT TRAN SP_UPD_EnviarARevision    
       
 END TRY    
 BEGIN CATCH    
   SELECT -1    
   ROLLBACK TRAN SP_UPD_EnviarARevision    
 END CATCH    
      
END    
GO
/****** Object:  StoredProcedure [prov].[SP_UPD_EvaluacionIMEDetalleCopiaPeriodoAnterior]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [prov].[SP_UPD_EvaluacionIMEDetalleCopiaPeriodoAnterior]      
@iCodContrata INT      ,
@iPeriodo int,
@iMes int ,
@iCodUsuario int ,
@cNick varchar(50) 
AS      
BEGIN      

 DECLARE @iPeriodoAnt INT;
 DECLARE @iMesAnt INT;

 if @iMes=1 
 BEGIN
	SET @iMesAnt=12
	SET @iPeriodoAnt=@iPeriodo-1  
 END
 ELSE
 BEGIN 
	SET @iMesAnt=@iMes-1
	SET @iPeriodoAnt=@iPeriodo  
 END

  
UPDATE evd
SET evd.iCodEjeCriterioValor = evdold.iCodEjeCriterioValor,
	evd.cDetalleValor=evdold.cDetalleValor ,
	evd.iCalificaDescalifica=evdold.iCalificaDescalifica,
	evd.nPuntuacion=evdold.nPuntuacion ,
	evd.cEstadoRevisadoAnterior=evdold.cEstadoRevisado, 
    evd.cEstadoRevisado =(CASE
						when evdold.cEstadoRevisado='REVISADO' then 'HEREDADO'
						when evdold.cEstadoRevisado='HEREDADO' then 'HEREDADO'
						else evd.cEstadoRevisado end ), --evdold.cEstadoRevisado
	evd.iCodUsuarioRevisado=evdold.iCodUsuarioRevisado,
	evd.dFechaUsuarioRevisado=evdold.dFechaUsuarioRevisado,
	evd.iCodUsuarioModificacion=@iCodUsuario,--colocar usuario que realiza el proceso
	evd.dFechaModificacion=GETDATE(),
	evd.cObs=evdold.cObs, 
	evd.cLogEvaluacion=evd.cLogEvaluacion + char(13) + @cNick + ' [' + CONVERT(VARCHAR, GETDATE(), 120)  + '] : CRITERIO EVALUADO MIGRADO.'+char(13)
FROM prov.EvaluacionIMEDetalle evd 
inner join prov.EvaluacionIME ev on evd.iCodEvaluacionIME=ev.iCodEvaluacionIme  
JOIN prov.EvaluacionIMEDetalle evdold ON evd.iCodEjeCriterio = evdold.iCodEjeCriterio 
and evdold.iPeriodo=@iPeriodoAnt and evdold.iMes=@iMesAnt  
inner join prov.EvaluacionIme evold on evdold.iCodEvaluacionIME=evold.iCodEvaluacionIME 
and evold.iCodContrata=@iCodContrata   
WHERE ev.iCodContrata=@iCodContrata 
and ev.iPeriodo=@iPeriodo and ev.iMes=@iMes 
        
END 
GO
/****** Object:  StoredProcedure [prov].[SP_UPD_FeedbackRequerimientoAPostor]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [prov].[SP_UPD_FeedbackRequerimientoAPostor] 
@iCodRequerimientoCotizacion int,  
@iCodUsuarioFeedbackContrata int, 
@dFechaFeedbackContrata Datetime,
@cFeedbackContrata varchar(max),
@cFeedbackContrataDetalle varchar(max)   
AS  
BEGIN        
 SET NOCOUNT ON;  
       
 BEGIN TRY        
   BEGIN TRAN  UPD_RequerimientoFeedback        

   UPDATE  prov.RequerimientoCotizacion 
   SET iCodUsuarioFeedbackContrata=@iCodUsuarioFeedbackContrata,
   dFechaFeedbackContrata=@dFechaFeedbackContrata,
   cFeedbackContrata=@cFeedbackContrata,
   cFeedbackContrataDetalle=@cFeedbackContrataDetalle 
   WHERE iCodRequerimientoCotizacion=@iCodRequerimientoCotizacion

   SELECT 1

   COMMIT TRAN UPD_RequerimientoFeedback      

 END TRY        
 BEGIN CATCH        
   SELECT -1        
   ROLLBACK TRAN  UPD_RequerimientoFeedback        
 END CATCH        
          
END   
GO
/****** Object:  StoredProcedure [prov].[SP_UPD_LiberarRequerimiento]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [prov].[SP_UPD_LiberarRequerimiento]   
@iCodRequerimiento int,  
@bLiberado bit,  
@iCodUsuarioLiberado int,  
@dFechaLiberado datetime,  
@cMotivoLiberado as varchar(50),  
@cNotasLiberado as varchar(max)  
AS  BEGIN
BEGIN TRY 
BEGIN TRAN UPD_RequerimientoLiberar

	IF EXISTS (SELECT *
			   FROM prov.RequerimientoCotizacion
			   WHERE iCodRequerimiento=@iCodRequerimiento AND cEstado='A') 
			   BEGIN
					SELECT 2 --'EXISTE ADJUDICADO
			   END 
	ELSE IF EXISTS (SELECT *
		       FROM prov.Requerimiento
		       WHERE iCodRequerimiento=@iCodRequerimiento AND bLiberado=1) 
			   BEGIN
				SELECT 3 --'EXISTE REQ LIBERADO
			   END 
	ELSE
	BEGIN 
		 UPDATE  prov.Requerimiento   
		 SET bLiberado=@bLiberado,  
		 iCodUsuarioLiberado=@iCodUsuarioLiberado,dFechaLiberado=@dFechaLiberado,  
		 cMotivoLiberado=@cMotivoLiberado,cNotasLiberado=@cNotasLiberado   
		 WHERE iCodRequerimiento=@iCodRequerimiento  
  
		 SELECT 1  
	END
	COMMIT TRAN UPD_RequerimientoLiberar 
END TRY BEGIN CATCH
SELECT -1
	ROLLBACK TRAN UPD_RequerimientoLiberar 
END CATCH END
GO
/****** Object:  StoredProcedure [prov].[SP_UPD_RequerimientoAnulacion]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [prov].[SP_UPD_RequerimientoAnulacion]      
@iCodRequerimiento INT      ,
@dFechaEstado Datetime,
@iCodUsuarioEstado int 
AS      
BEGIN      
      
 BEGIN TRY      
   BEGIN TRAN  ACTU_RequerimientoAnulacion      
       
   DECLARE @iCodTipoEstadoRequerimiento int;    
       
   SELECT @iCodTipoEstadoRequerimiento=iCodTipoEstadoRequerimiento FROM prov.Requerimiento      
   WHERE iCodRequerimiento=@iCodRequerimiento    
    
   IF(@iCodTipoEstadoRequerimiento = 1)    
   BEGIN      
		UPDATE prov.Requerimiento    
		SET   
		iCodTipoEstadoRequerimiento=4,
		cEstado='ANULADO',
		dFechaEstado=@dFechaEstado,
		iCodUsuarioEstado=@iCodUsuarioEstado 
		WHERE iCodRequerimiento=@iCodRequerimiento  ;
		-------------------------------
		UPDATE  prov.RequerimientoDetalle 
		SET cEstado='ANULADO',
		dFechaModificacion=GETDATE(),
		iCodUsuarioModificacion=@iCodUsuarioEstado  
		WHERE iCodRequerimiento=@iCodRequerimiento ; 
		SELECT 1      
   END      
   ELSE  IF(@iCodTipoEstadoRequerimiento = 4)  --Ya se encuentra anulado
   BEGIN      
		SELECT 2    
   END  
   ELSE
   BEGIN      
		SELECT 0     
   END     
         
   COMMIT TRAN  ACTU_RequerimientoAnulacion      
         
 END TRY      
 BEGIN CATCH      
   SELECT -1      
   ROLLBACK TRAN  ACTU_RequerimientoAnulacion      
 END CATCH      
        
END 
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_AreaAD_ReporteLlamadas]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_AreaAD_ReporteLlamadas]             
            
 @dFechaIni Date,            
 @dFechaFin date             
            
AS              
BEGIN        
        
  SELECT        
   ci.cDNI AS DNI,        
   ci.cNombres + ' '+ ci.cApellidos AS Nombres,  
   CONVERT(DATE, cc.dFechaContacto, 120) AS FechaHora,        
   cccm.cDesMotivo AS Motivo,        
   cccr.cDesMotivo AS Respuesta,    
   cc.cObs AS Observacion,    
   u.cNick As Usuario,      
   pn.cNombres + ' ' + pn.cApelP + ' ' + pn.cApelM as 'Persona Registra',
   ci.cFono
  FROM dbo.CandidatoInforme AS ci        
  INNER JOIN dbo.CandidatoContacto AS cc ON cc.iCodCandidatoInforme = ci.iCodCandidatoInforme        
  INNER JOIN dbo.Usuario AS u ON cc.iCodUsuario = u.iCodUsuario        
  INNER JOIN dbo.CandidatoContactoCatalogo AS cccm ON cccm.iCodCandidatoContactoCatalogo = cc.iCodCandidatoContactoMotivo        
  INNER JOIN dbo.CandidatoContactoCatalogo AS cccr ON cccr.iCodCandidatoContactoCatalogo = cc.iCodCandidatoContactoRespuesta        
  INNER JOIN dbo.PersonaNatural pn  ON pn.iCodPersona = u.iCodPersona        
  WHERE cc.dFechaContacto>=@dFechaIni        
    AND cc.dFechaContacto<=@dFechaFin        
  ORDER BY cc.dFechaContacto        
        
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_AreaCA_ReporteCandidatoCursos]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_AreaCA_ReporteCandidatoCursos]           
@dFechaIni Date,@dFechaFin date  
AS BEGIN          
 SELECT ci.cApellidos + ' ' + ci.cNombres AS [APELLIDOS Y NOMBRES],          
     ci.cDNI AS [DNI],          
     floor((cast(convert(varchar(8), getdate(), 112) AS int)- cast(convert(varchar(8), ci.dFechaNac, 112) AS int)) / 10000) AS [EDAD],          
     ci.cSexo AS [GENERO],          
     ci.cFono AS [CELULAR],    
 isnull(u.cDepartamento, '') AS [Departamento Nacimiento],      
 isnull(u.cProvincia, '') AS [Provincia Nacimiento],      
 isnull(u.cDistrito, '') AS [Distrito Nacimiento],      
     CASE          
      WHEN ISNULL(com.cTipoAreaInfluencia, '')='AID' THEN 'LOCAL'          
      WHEN ISNULL(com.cTipoAreaInfluencia, '')='AIO' THEN 'LOCAL'          
      WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'LOCAL'          
      WHEN ltrim(rtrim(u.cUbigeo))='140902' THEN 'LOCAL'          
      WHEN ltrim(rtrim(u.cUbigeo))='090409' THEN 'LOCAL'          
      WHEN ltrim(rtrim(u.cUbigeo))='090401' THEN 'LOCAL'          
      ELSE 'FORANEO'          
     END AS [CONDICION],          
     CASE          
      WHEN ISNULL(com.cTipoAreaInfluencia, '')='AID' THEN 'AID'          
      WHEN ISNULL(com.cTipoAreaInfluencia, '')='AIO' THEN 'AIO'          
      WHEN LTRIM(RTRIM(u.cUbigeo))='020805'          
     OR LTRIM(RTRIM(u.cUbigeo))='020813'          
     OR LTRIM(RTRIM(u.cUbigeo))='021901'          
     OR LTRIM(RTRIM(u.cUbigeo))='020814' THEN 'AID'          
      WHEN LTRIM(RTRIM(u.cUbigeo))='021901'          
     OR LTRIM(RTRIM(u.cUbigeo))='020301'          
     OR LTRIM(RTRIM(u.cUbigeo))='020304'          
     OR LTRIM(RTRIM(u.cUbigeo))='020305'          
     OR LTRIM(RTRIM(u.cUbigeo))='020310'          
     OR LTRIM(RTRIM(u.cUbigeo))='020321'          
     OR LTRIM(RTRIM(u.cUbigeo))='020323'          
     OR LTRIM(RTRIM(u.cUbigeo))='020325'          
     OR LTRIM(RTRIM(u.cUbigeo))='020803'          
     OR LTRIM(RTRIM(u.cUbigeo))='021204'          
     OR LTRIM(RTRIM(u.cUbigeo))='021205'          
     OR LTRIM(RTRIM(u.cUbigeo))='021206'          
     OR LTRIM(RTRIM(u.cUbigeo))='021209'          
     OR LTRIM(RTRIM(u.cUbigeo))='021210'          
     OR LTRIM(RTRIM(u.cUbigeo))='090401'          
     OR LTRIM(RTRIM(u.cUbigeo))='090409'          
     OR LTRIM(RTRIM(u.cUbigeo))='140902' THEN 'AIO'          
      WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN --REGIONAL          
  'REGIONAL'          
      ELSE 'FORANEO'          
     END AS [CONDICION DETALLE],          
     isnull(com.cComunidad, '') AS [COMUNIDAD],    
  com.cUbicacionZona AS 'UGT',    
     CASE          
      WHEN ci.bCargaBox=1 THEN 'SI'          
      ELSE 'NO'          
     END AS [TIENE EXPEDIENTE], --ci.cPuestoEspecialidad as [ESPECIALIDAD],          
  isnull(          
     (SELECT top 1 cat1.cDisplayMember          
      FROM CandidatoEstudios cedu1          
      INNER JOIN catalogo cat1 ON cedu1.iGradoInstruccion=cat1.cValueMember          
      AND cat1.cTabla='Estudios'          
      AND cat1.cNombreGrupo='iGradoInstruccion'          
      WHERE cedu1.iCodCandidatoInforme=ci.iCodCandidatoInforme          
      ORDER BY cat1.iOrden DESC), CASE          
              WHEN ltrim(rtrim(ci.cEducaSecundaria))<>'' THEN 'SECUNDARIA'          
              WHEN ltrim(rtrim(ci.cEducatecnica))<>'' THEN 'TECNICO'          
              WHEN ltrim(rtrim(ci.ceducasuperior))<>'' THEN 'UNIVERSITARIO'          
              ELSE '---'          
             END) AS [GRADO INSTRUCCION],          
  CASE          
   WHEN isnull(cmat.iEstadoProceso, 0) = 1 THEN 'ES BENEFICIARIO DE UN CURSO DE LA FASE I'          
   WHEN          
    (SELECT COUNT(cmatpz.iCodCandidatoInforme)          
     FROM CapacitacionMatricula cmatpz          
     WHERE cmatpz.iCodCandidatoInforme = ci.iCodCandidatoInforme          
       AND (cmatpz.iEstadoProceso = 4          
      OR cmatpz.iEstadoProceso = 4)) >= 1 THEN 'USTED ESTA DESCALIFICADO POR ABANDONO DE UN CURSO ( 2019 - 2020 )'          
   ELSE CASE          
      WHEN ci.bsustentoCV = 1          
        AND (ci.cCondicion = 'LOCAL'      
       OR ci.ccondicion = 'RESIDENTE'          
       OR ci.cCondicion = 'COMUNIDAD') THEN CASE          
                  WHEN cpc.iGradoAcademico > ca.iGradoAcademico THEN 'NO ACREDITA NIVEL DE ESTUDIOS REQUERIDO'          
                  WHEN cpc.iTiempoExperiencia > ca.iTiempoExperiencia THEN 'NO ACREDITA TIEMPO DE EXPERIENCIA REQUERIDO'       
                  WHEN cpc.iLicenciaConducirValor > ca.iLicenciaConducirValor THEN 'NO ACREDITA EL TIPO DE LICENCIA DE CONDUCIR REQUERIDO'          
      WHEN cpc.iRecordConductor > ca.iRecordConductor THEN 'NO ACREDITA RECORD DE CONDUCTOR REQUERIDO'          
                  WHEN cpc.iLicenciaConducirTiempo > ca.iLicenciaConducirTiempo THEN 'NO ACREDITA TIEMPO DE EXPERIENCIA REQUERIDO EN LICENCIA DE CONDUCIR'          
                  WHEN cpc.iCursoEspecialValor > ca.iCursoEspecialValor THEN 'NO ACREDITA LOS CURSOS O CERTIFICACIONES REQUERIDOS'          
                  WHEN ci.cCondicion = 'FORANEO'          
                    OR ci.cCondicion = '' THEN 'NO ACREDITA SUSTENTOS DE LOCAL'          
                  WHEN ca.iEstado = 2 THEN ca.cObs          
                  ELSE CASE ca.bApto          
                     WHEN 1 THEN ''          
                    END          
                 END          
      ELSE CASE          
         WHEN isnull(cad.iCodCandidatoAdmision, 0) > 0 THEN 'NO COMPLETÓ EL PROCESO DE REGISTRO OAEL'          
         ELSE 'NO ACREDITA SUSTENTO DE LOCAL'          
        END          
     END          
  END AS cObs,          
  CAST (cp.iPeriodo AS VARCHAR(10)) + ' - ' + cp.cNombrePrograma as [PROGRAMA],          
  ccm.cNomCursoModulo as [MODULO],          
  cc.cNombreCurso AS [CURSO],  
  LEFT(cc.cNombreCurso,CHARINDEX(':',cc.cNombreCurso)-1) as [TIPO CARRERA],  
  c.cNomContrata AS [ENTIDAD CAPACITA],          
  isnull(          
     (SELECT top 1 fld2.cOcupacion          
      FROM fuerzalaboral fl2          
      INNER JOIN fuerzalaboraldetalle fld2 ON fl2.iCodFuerzaLaboral=fld2.iCodFuerzaLaboral          
      INNER JOIN ContratistaContrato cto2 ON fl2.iCodContratistaContrato=cto2.iCodContratistaContrato          
      AND cto2.cFase<>'NA'          
      WHERE fld2.icodcandidatoinforme=ci.icodcandidatoinforme          
      ORDER BY fld2.iCodFuerzaLaboralDetalle DESC) ,'') AS [ULTIMO PUESTO FFLL],    
   isnull(          
     (SELECT top 1 fld5.cMOCMONC          
      FROM fuerzalaboral fl5          
      INNER JOIN fuerzalaboraldetalle fld5 ON fl5.iCodFuerzaLaboral=fld5.iCodFuerzaLaboral          
      INNER JOIN ContratistaContrato cto5 ON fl5.iCodContratistaContrato=cto5.iCodContratistaContrato          
      AND cto5.cFase<>'NA'          
      WHERE fld5.icodcandidatoinforme=ci.icodcandidatoinforme          
      ORDER BY fld5.iCodFuerzaLaboralDetalle DESC) ,'') AS [TIPO DE MMOO DE ULTIMO PUESTO FFLL],    
isnull(          
     (SELECT top 1 (fld6.iPeriodo + ' - ' + fld6.iMes)          
      FROM fuerzalaboral fl6         
      INNER JOIN fuerzalaboraldetalle fld6 ON fl6.iCodFuerzaLaboral=fld6.iCodFuerzaLaboral          
      INNER JOIN ContratistaContrato cto6 ON fl6.iCodContratistaContrato=cto6.iCodContratistaContrato          
      AND cto6.cFase<>'NA'          
      WHERE fld6.icodcandidatoinforme=ci.icodcandidatoinforme          
      ORDER BY fld6.iCodFuerzaLaboralDetalle DESC) ,'') AS [PERIODO DE ULTIMO PUESTO FFLL],     
  isnull(          
     (SELECT top 1 co3.cNomContrata          
      FROM fuerzalaboral fl3          
      INNER JOIN fuerzalaboraldetalle fld3 ON fl3.iCodFuerzaLaboral=fld3.iCodFuerzaLaboral          
      INNER JOIN ContratistaContrato cto3 ON fl3.iCodContratistaContrato=cto3.iCodContratistaContrato          
      AND cto3.cFase<>'NA'          
      INNER JOIN Contrata co3 ON cto3.iCodContrata=co3.iCodContrata          
      WHERE fld3.icodcandidatoinforme=ci.icodcandidatoinforme          
      ORDER BY fld3.iCodFuerzaLaboralDetalle DESC) ,'') AS [ÚLTIMA EMPRESA FFLL],          
  CASE (isnull(          
     (SELECT count(fld4.iCodFuerzaLaboralDetalle)          
      FROM fuerzalaboral fl4          
      INNER JOIN fuerzalaboraldetalle fld4 ON fl4.iCodFuerzaLaboral=fld4.iCodFuerzaLaboral          
INNER JOIN ContratistaContrato cto4 ON fl4.iCodContratistaContrato=cto4.iCodContratistaContrato          
      AND cto4.cFase<>'NA'          
      WHERE fld4.icodcandidatoinforme=ci.icodcandidatoinforme          
        AND fld4.bCesado=0          
        AND fl4.iPeriodo=year(@dFechaIni)          
        AND fl4.imes=month(@dFechaIni)) ,0))          
   WHEN 0 THEN 'NO'          
   ELSE 'SI'          
  END AS [ACTUALMENTE EN FFLL],      
  ca.dFechaSis as [FECHA REGISTRO],
   CASE    
   WHEN isnull(cid.iCodOcupacion, 0)=0 THEN ci.cOcupacion    
   ELSE CASE    
      WHEN tdo1.cNomOcupacion='NO CATALOGADO' THEN ''    
      ELSE tdo1.cNomOcupacion    
     END    
  END AS [OCUPACION 1],    
  CASE    
   WHEN cid.iCodOcupacion=0 THEN ci.iTiempoExperiencia    
   ELSE cid.iTiempoExperiencia    
  END AS [TIEMPO EXP. 1],    
  CASE    
   WHEN cid.iCodOcupacion=0 THEN (CASE    
           WHEN year(ci.dFechaEvaluacionResultado)=1900 THEN ''    
           ELSE cast(year(ci.dFechaEvaluacionResultado) AS varchar(6))    
          END)    
   ELSE CASE    
      WHEN cid.iUltimaExperiencia=1900 THEN 0    
      ELSE cid.iUltimaExperiencia    
     END    
  END AS [AÑO ULT. EXP. 1],    
  cid.cRubroExperiencia AS [RUBRO EXP. 1],    
  cid.cSectorExperiencia AS [SECTOR EXP. 1],    
  CASE    
   WHEN isnull(cid.iCodOcupacion2, 0)=0 THEN ci.cOcupacion2    
   ELSE CASE    
      WHEN tdo2.cNomOcupacion='NO CATALOGADO' THEN ''    
      ELSE tdo2.cNomOcupacion    
     END    
  END AS [OCUPACION 2],    
  isnull(cid.iTiempoExperiencia2, '') AS [TIEMPO EXP. 2],    
  isnull(cid.iUltimaExperiencia2, '') AS [AÑO ULT. EXP. 2],    
  isnull(cid.cRubroExperiencia2, '') AS [RUBRO EXP. 2],    
  isnull(cid.cSectorExperiencia2, '') AS [SECTOR EXP. 2] 
 FROM dbo.CapacitacionCurso cc          
 INNER JOIN dbo.CapacitacionProgramaCurso AS cpc ON cc.iCodCapacitacionCurso = cpc.iCodCapacitacionCurso          
 LEFT JOIN dbo.CapacitacionPrograma cp ON cp.iCodCapacitacionPrograma = cpc.iCodCapacitacionPrograma          
 INNER JOIN dbo.CapacitacionAdmision ca ON cpc.iCodCapacitacionProgramaCurso = ca.iCodCapacitacionProgramaCurso          
 INNER JOIN dbo.CandidatoInforme AS ci ON ca.iCodCandidatoInforme = ci.iCodCandidatoInforme
  LEFT JOIN CandidatoInformeAdd cid ON ci.iCodCandidatoInforme=cid.iCodCandidatoInforme    
 LEFT JOIN TDOcupacion tdo1 ON cid.iCodOcupacion=tdo1.iCodOcupacion    
 LEFT JOIN TDOcupacion tdo2 ON cid.iCodOcupacion2=tdo2.iCodOcupacion    
 INNER JOIN dbo.CapacitacionCursoModulo ccm ON cc.iCodCapacitacionCursoModulo = ccm.iCodCapacitacionCursoModulo          
 LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo          
 LEFT JOIN dbo.Contrata c ON c.iCodContrata=cpc.iCodContrataCapacita          
 LEFT OUTER JOIN dbo.CandidatoAdmision AS cad ON ci.iCodCandidatoInforme = cad.iCodCandidatoInforme          
 AND cad.iCodCandidatoAdmisionTipo = 1          
 AND cad.bImprocedente = 0          
 LEFT OUTER JOIN dbo.CapacitacionMatricula AS cmat ON cmat.iCodCandidatoInforme = ci.iCodCandidatoInforme          
 AND cmat.iCodCapacitacionProgramaCurso >= 48          
 AND cmat.iCodCapacitacionProgramaCurso <= 58          
 LEFT JOIN CandidatoInformeCondicion cond ON ci.iCodCandidatoInforme=cond.iCodCandidatoInforme      
 LEFT JOIN Usuario usua ON usua.iCodUsuario=ca.iCodUsuario      
 LEFT JOIN PersonaNatural per ON per.iCodPersona=usua.iCodPersona      
 LEFT JOIN Comunidad com ON com.iCodComunidad=cond.iCodComunidad          
 AND com.iCodComunidad>1          
 WHERE cond.iCodCandidatoInformeCondicion=          
  (SELECT MAX(cond9.iCodCandidatoInformeCondicion)          
   FROM CandidatoInformeCondicion cond9          
   WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme)          
      
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_AreaGC_EECC_NoCerraronFFLLPorFecha]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ===============================================================
-- NRO:2: Reporte de empresas contratistas que 
--       no cerraron la FFLL, con sus respectivos correos
-- ===============================================================
CREATE PROCEDURE [rpt].[SP_RPT_AreaGC_EECC_NoCerraronFFLLPorFecha] 
@dFechaIni Date, @dFechaFin date 
AS 
BEGIN 
DECLARE @iMes AS INT = CAST(MONTH(@dFechaIni) AS INT) 
DECLARE @iAnio AS INT= CAST(YEAR(@dFechaIni) AS INT) 

;WITH LISTA_CONTRATOS_FFLL_POR_MES(RUC, ID_CONTRATA, CONTRATISTA, NRO_CONTRATO, 
CONTRATO, TIPO_CONTRATO, TERMINO_CONTRATO, AREA_USUARIA, AÑO_FFLL, MES_FFLL, 
ESTADO_FFLL, FECHA_CIERRE_FFLL, USUARIO_CIERRE_FFLL) 
AS
  (	SELECT	  T1.cRUC,
			  T1.iCodContrata,
			  T1.cNomContrata,
			  T2.cNroContrato,
			  T2.cNomContrato,
			  T2.cTipoContrato,
			  t2.dFechaTermino,
			  T2.cAreaUsuaria,
			  T7.iPeriodo,
			  dbo.fnNombreDelMesPorNroMes(T7.iMes) AS 'MES_FFLL',
			  CASE T7.iCodEstado
				  WHEN 1 THEN 'FFLL ABIERTO'
				  WHEN 2 THEN 'FFLL CERRADO'
				  ELSE 'NO TIENE FFLL'
			  END AS 'FFLL_ESTADO',
			  isnull(
					   (SELECT top 1 isnull(dFechaCierre, '')
						FROM FuerzaLaboralDetalle fld3
						INNER JOIN FuerzaLaboral fl3 ON fld3.iCodFuerzaLaboral=fl3.iCodFuerzaLaboral
						WHERE fld3.iCodFuerzaLaboral=T7.iCodFuerzaLaboral
						ORDER BY fld3.iCodFuerzaLaboralDetalle ASC),'') AS 'FECHA_CIERRE_FFLL',
			  isnull(
					   (SELECT top 1 isnull(iCodUsuarioCierra, '')
						FROM FuerzaLaboralDetalle fld3
						INNER JOIN FuerzaLaboral fl3 ON fld3.iCodFuerzaLaboral=fl3.iCodFuerzaLaboral
						WHERE fld3.iCodFuerzaLaboral=T7.iCodFuerzaLaboral
						ORDER BY fld3.iCodFuerzaLaboralDetalle ASC),'') AS 'USUARIO_CIERRE_FFLL'
   FROM Contrata T1
   LEFT JOIN ContratistaContrato T2 ON T2.iCodContrata=T1.iCodContrata
   LEFT JOIN FuerzaLaboral T7 ON T2.iCodContratistaContrato = T7.iCodContratistaContrato
   WHERE T2.bCerrado=0 --Contratos abiertos
   AND T7.iMes = @iMes
   AND T7.iPeriodo = @iAnio
   )

	SELECT RUC,
		   CONTRATISTA,
		   NRO_CONTRATO,
		   CONTRATO,
		   ESTADO_FFLL,
		   ISNULL(T3.cNombres + ' ' + T3.cApelP + ' ' + T3.cApelM, '') AS UsuarioRegistrado,
		   T3.cCorreo AS CORREO,
		   T3.cFono AS TELEFONO,
		   T1.TERMINO_CONTRATO AS [FECHA TERMINO DE CONTRATO],
		   T1.AREA_USUARIA AS GERENCIA
	FROM LISTA_CONTRATOS_FFLL_POR_MES T1
	LEFT JOIN UsuarioContrata T5 ON T5.iCodContrata = T1.ID_CONTRATA
	LEFT JOIN Usuario T2 ON T5.iCodUsuario=T2.iCodUsuario
	LEFT JOIN PersonaNatural T3 ON T3.iCodPersona = T2.iCodPersona
	WHERE T5.bAcceder=1
	ORDER BY T1.CONTRATISTA,
	T1.NRO_CONTRATO ASC 

END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_AreaGC_ReporteFFLL]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_AreaGC_ReporteFFLL]       
@dFechaIni Date,       
@dFechaFin date       
AS       
BEGIN      
SELECT ci.cTipoDoc AS 'TIPO DOCUMENTO',      
       ci.cDNI AS 'DNI',      
       fl.iPeriodo AS 'AÑO REPORTE FFLL',      
       UPPER(dbo.fnNombreDelMesPorNroMes(fl.iMes)) AS 'MES REPORTE FFLL',      
       ct.cNomContrata AS 'EMPRESA CONTRATISTA',      
       ct.cRUC AS 'RUC',      
       cto.cNroContrato AS 'NRO CONTRATO',      
       cto.cNomContrato AS 'NOMBRE CONTRATO',      
       CASE      
           WHEN cto.dFechaTermino = '1900-01-01'      
                OR cto.dFechaTermino IS NULL THEN ''      
           ELSE CONVERT(VARCHAR, cto.dFechaTermino, 103)      
       END AS 'FECHA TERMINO CONTRATO',      
       ci.cTipoDoc AS 'TIPO DOCUMENTO 2',      
       ci.cDNI AS 'DNI 2',      
       ci.cApellidos AS 'APELLIDOS',      
       ci.cNombres AS 'NOMBRES',      
       CASE      
           WHEN ci.cSexo ='F' THEN 'M'      
           WHEN ci.cSexo ='M' THEN 'H'      
           WHEN ci.cSexo IS NULL THEN ''      
       END AS 'GENERO',      
       ci.cCorreo AS 'CORREO',      
       ci.cFono AS 'TELÉFONO',      
       ci.cUbigeo AS 'UBIGEO SEGUN DNI',      
       isnull(u.cDepartamento, '') AS 'DPTO. NACIMIENTO',      
       isnull(u.cProvincia, '') AS 'PROV. NACIMIENTO',      
       isnull(u.cDistrito, '') AS 'DISTR. NACIMIENTO',
	         ISNULL(      
                (SELECT TOP 1 cat1.cDisplayMember      
                 FROM CandidatoEstudios cedu1      
                 INNER JOIN catalogo cat1 ON cedu1.iGradoInstruccion=cat1.cValueMember      
                 AND cat1.cTabla='Estudios'      
                 AND cat1.cNombreGrupo='iGradoInstruccion'      
                 WHERE cedu1.iCodCandidatoInforme=ci.iCodCandidatoInforme      
                 ORDER BY cat1.iOrden DESC), CASE      
                                                 WHEN ltrim(rtrim(ci.cEducaSecundaria))<>'' THEN 'SECUNDARIA'      
                                                 WHEN ltrim(rtrim(ci.cEducatecnica))<>'' THEN 'TECNICO'      
                                                 WHEN ltrim(rtrim(ci.ceducasuperior))<>'' THEN 'UNIVERSITARIO'      
                                                 ELSE '---'      
                                             END) AS 'GRADO INSTRUCCION',     
	   --ci.cOcupacion as 'OCUPACION1_DE_APTITUD',
	   --ci.cOcupacion2 as 'OCUPACION2_DE_APTITUD',
	   --ci.cPuestoEspecialidad as 'ESPECIALIDAD',

       fld.cAreaTrabajo AS [AREA DE TRABAJO],      
       fld.cOcupacion AS [CARGO Ó PUESTO],      
       ocu.cNomOcupacion AS [CARGO Ó PUESTO CATALOGO],      
       fld.cMOCMONC AS 'TIPO DE MMOO POR PUESTO',      
       ocu.cTipo AS 'TIPO DE MMOO POR PUESTO POR CATALOGO',    
       cto.cAreaUsuaria AS 'GERENCIA USUARIA',      
       CASE      
           WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AID' THEN 'LOCAL'      
           WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AIO' THEN 'LOCAL'      
           WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'LOCAL'      
           WHEN ltrim(rtrim(u.cUbigeo))='140902' THEN 'LOCAL'      
           WHEN ltrim(rtrim(u.cUbigeo))='090409' THEN 'LOCAL'      
           WHEN ltrim(rtrim(u.cUbigeo))='090401' THEN 'LOCAL'      
           ELSE 'FORANEO'      
       END AS [CONDICION],      
       CASE      
           WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AID' THEN 'AID'      
           WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AIO' THEN 'AIO'      
           WHEN LTRIM(RTRIM(u.cUbigeo))='020805'      
                OR LTRIM(RTRIM(u.cUbigeo))='020813'      
                OR LTRIM(RTRIM(u.cUbigeo))='021901'      
                OR LTRIM(RTRIM(u.cUbigeo))='020814' THEN 'AID'      
           WHEN LTRIM(RTRIM(u.cUbigeo))='021901'      
                OR LTRIM(RTRIM(u.cUbigeo))='020301'      
                OR LTRIM(RTRIM(u.cUbigeo))='020304'      
                OR LTRIM(RTRIM(u.cUbigeo))='020305'      
                OR LTRIM(RTRIM(u.cUbigeo))='020310'      
                OR LTRIM(RTRIM(u.cUbigeo))='020321'      
                OR LTRIM(RTRIM(u.cUbigeo))='020323'      
                OR LTRIM(RTRIM(u.cUbigeo))='020325'      
                OR LTRIM(RTRIM(u.cUbigeo))='020803'      
                OR LTRIM(RTRIM(u.cUbigeo))='021204'      
OR LTRIM(RTRIM(u.cUbigeo))='021205'      
                OR LTRIM(RTRIM(u.cUbigeo))='021206'      
                OR LTRIM(RTRIM(u.cUbigeo))='021209'      
 OR LTRIM(RTRIM(u.cUbigeo))='021210'      
                OR LTRIM(RTRIM(u.cUbigeo))='090401'      
                OR LTRIM(RTRIM(u.cUbigeo))='090409'      
                OR LTRIM(RTRIM(u.cUbigeo))='140902' THEN 'AIO'      
           WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'REGIONAL'      
           ELSE 'FORANEO'      
       END AS 'CONDICION DETALLE',      
       comu.cUbicacionZona AS 'UGT',    
    cto.cZona as 'ZONA EN EL SITE'    ,
	fld.dFechaIni as [INICIO DE CONTRATO COLABORADOR] 
FROM Fuerzalaboraldetalle fld      
LEFT JOIN Fuerzalaboral fl ON fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral      
LEFT JOIN ContratistaContrato cto ON cto.iCodContratistaContrato=fl.iCodContratistaContrato      
LEFT JOIN Contrata ct ON ct.iCodContrata=cto.iCodContrata      
LEFT JOIN dbo.CandidatoInforme AS ci ON ci.iCodCandidatoInforme = fld.iCodCandidatoInforme      
LEFT JOIN Comunidad comu ON comu.cComunidad=ci.cComunidad      
LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo      
LEFT JOIN TDOcupacion ocu ON ocu.iCodOcupacion=fld.iCodOcupacion      
WHERE FLD.BCESADO=0   
AND fld.iPeriodo=YEAR(@dFechaIni) AND FLD.IMES=MONTH(@dFechaIni)  
ORDER BY fl.iPeriodo,      
         fl.iMes,      
         ci.cDni ASC       
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_AreaGC_ReporteFFLLCesado]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_AreaGC_ReporteFFLLCesado]         
@dFechaIni Date,         
@dFechaFin date         
AS         
BEGIN        
SELECT       
       fl.iPeriodo AS 'AÑO REPORTE FFLL',        
       UPPER(dbo.fnNombreDelMesPorNroMes(fl.iMes)) AS 'MES REPORTE FFLL',        
       ct.cNomContrata AS 'EMPRESA CONTRATISTA',        
       ct.cRUC AS 'RUC',        
       cto.cNroContrato AS 'NRO CONTRATO',        
       cto.cNomContrato AS 'NOMBRE CONTRATO',        
       CASE        
           WHEN cto.dFechaTermino = '1900-01-01'        
                OR cto.dFechaTermino IS NULL THEN ''        
           ELSE CONVERT(VARCHAR, cto.dFechaTermino, 103)        
       END AS 'FECHA TERMINO CONTRATO',        
       ci.cTipoDoc AS 'TIPO DOCUMENTO',
       ci.cDNI AS 'DNI',     
       ci.cApellidos AS 'APELLIDOS',        
       ci.cNombres AS 'NOMBRES',        
       CASE        
           WHEN ci.cSexo ='F' THEN 'M'        
           WHEN ci.cSexo ='M' THEN 'H'        
           WHEN ci.cSexo IS NULL THEN ''        
       END AS 'GENERO',
	   CASE 
			WHEN fld.dFechaIni = '1900-01-01' THEN ''
			ELSE CONVERT(VARCHAR, fld.dFechaIni, 105)
	   END AS 'FECHA INICIO CONTRATO DE TRABAJO',
	   CASE 
			WHEN fld.dFechaTerminoContrato = '1900-01-01' THEN ''
			ELSE CONVERT(VARCHAR, fld.dFechaTerminoContrato, 105)
	   END AS 'FECHA TERMINO CONTRATO DE TRABAJO',
	   fld.cTipoContrato as 'TIPO CONTRATO',
	    CASE 
			WHEN fld.dFechaCese = '1900-01-01' THEN ''
			ELSE CONVERT(VARCHAR, fld.dFechaCese, 105)
	   END AS 'FECHA CESE',
	   fld.cMotivoCese AS 'MOTIVO CESE',
       ci.cUbigeo AS 'UBIGEO SEGUN DNI',        
       isnull(u.cDepartamento, '') AS 'DPTO. NACIMIENTO',        
       isnull(u.cProvincia, '') AS 'PROV. NACIMIENTO',        
       isnull(u.cDistrito, '') AS 'DISTR. NACIMIENTO',      
       ocu.cNomOcupacion AS [CARGO Ó PUESTO CATALOGO],        
       fld.cMOCMONC AS 'TIPO DE MMOO POR PUESTO',        
       ocu.cTipo AS 'TIPO DE MMOO POR PUESTO POR CATALOGO',      
       cto.cAreaUsuaria AS 'GERENCIA USUARIA',        
       CASE        
           WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AID' THEN 'LOCAL'        
           WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AIO' THEN 'LOCAL'        
           WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'LOCAL'        
           WHEN ltrim(rtrim(u.cUbigeo))='140902' THEN 'LOCAL'        
           WHEN ltrim(rtrim(u.cUbigeo))='090409' THEN 'LOCAL'        
           WHEN ltrim(rtrim(u.cUbigeo))='090401' THEN 'LOCAL'        
           ELSE 'FORANEO'        
       END AS [CONDICION],        
       CASE        
           WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AID' THEN 'AID'        
           WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AIO' THEN 'AIO'        
           WHEN LTRIM(RTRIM(u.cUbigeo))='020805'        
                OR LTRIM(RTRIM(u.cUbigeo))='020813'        
                OR LTRIM(RTRIM(u.cUbigeo))='021901'        
                OR LTRIM(RTRIM(u.cUbigeo))='020814' THEN 'AID'        
           WHEN LTRIM(RTRIM(u.cUbigeo))='021901'        
                OR LTRIM(RTRIM(u.cUbigeo))='020301'        
                OR LTRIM(RTRIM(u.cUbigeo))='020304'        
                OR LTRIM(RTRIM(u.cUbigeo))='020305'        
                OR LTRIM(RTRIM(u.cUbigeo))='020310'        
                OR LTRIM(RTRIM(u.cUbigeo))='020321'        
                OR LTRIM(RTRIM(u.cUbigeo))='020323'        
                OR LTRIM(RTRIM(u.cUbigeo))='020325'        
                OR LTRIM(RTRIM(u.cUbigeo))='020803'        
                OR LTRIM(RTRIM(u.cUbigeo))='021204'        
OR LTRIM(RTRIM(u.cUbigeo))='021205'        
                OR LTRIM(RTRIM(u.cUbigeo))='021206'        
                OR LTRIM(RTRIM(u.cUbigeo))='021209'        
 OR LTRIM(RTRIM(u.cUbigeo))='021210'        
                OR LTRIM(RTRIM(u.cUbigeo))='090401'        
                OR LTRIM(RTRIM(u.cUbigeo))='090409'        
                OR LTRIM(RTRIM(u.cUbigeo))='140902' THEN 'AIO'        
           WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'REGIONAL'        
           ELSE 'FORANEO'        
       END AS 'CONDICION DETALLE',
	   comu.cComunidad as 'COMUNIDAD',
       comu.cUbicacionZona AS 'UGT'        
FROM Fuerzalaboraldetalle fld        
LEFT JOIN Fuerzalaboral fl ON fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral        
LEFT JOIN ContratistaContrato cto ON cto.iCodContratistaContrato=fl.iCodContratistaContrato        
LEFT JOIN Contrata ct ON ct.iCodContrata=cto.iCodContrata        
LEFT JOIN dbo.CandidatoInforme AS ci ON ci.iCodCandidatoInforme = fld.iCodCandidatoInforme        
LEFT JOIN Comunidad comu ON comu.cComunidad=ci.cComunidad        
LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo        
LEFT JOIN TDOcupacion ocu ON ocu.iCodOcupacion=fld.iCodOcupacion        
WHERE FLD.BCESADO=1     
AND fld.iPeriodo=YEAR(@dFechaIni) AND FLD.IMES=MONTH(@dFechaIni) 
ORDER BY fl.iPeriodo,        
         fl.iMes,        
         ci.cDni ASC         
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_AreaGC_ReporteNuevosIngresosPersonalFFLL]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_AreaGC_ReporteNuevosIngresosPersonalFFLL]           
@dFechaIni Date,           
@dFechaFin date           
AS           
BEGIN          
 SELECT    
     fl.iPeriodo AS 'AÑO REPORTE FFLL',          
     UPPER(dbo.fnNombreDelMesPorNroMes(fl.iMes)) AS 'MES REPORTE FFLL',          
     ct.cNomContrata AS 'EMPRESA CONTRATISTA',          
     ct.cRUC AS 'RUC',  
     cto.cNroContrato AS 'NRO CONTRATO',          
     cto.cNomContrato AS 'NOMBRE CONTRATO',   
     CASE          
      WHEN cto.dFechaTermino = '1900-01-01'          
     OR cto.dFechaTermino IS NULL THEN ''          
      ELSE CONVERT(VARCHAR, cto.dFechaTermino, 103)          
     END AS 'FECHA VENCIMIENTO CONTRATO',  
     cto.cAreaUsuaria as 'GERENCIA USUARIA',  
     fld.dFechaIni as 'FECHA INICIO CONTRATACION',  
     fld.dFechaSis as 'FECHA REGISTRO FUERZA LABORAL',  
     ci.cTipoDoc AS 'TIPO DOCUMENTO',          
     ci.cDNI AS 'DNI',          
     ci.cApellidos AS 'APELLIDOS',          
     ci.cNombres AS 'NOMBRES',          
     CASE          
      WHEN ci.cSexo ='F' THEN 'M'          
      WHEN ci.cSexo ='M' THEN 'H'          
      WHEN ci.cSexo IS NULL THEN ''          
     END AS 'GENERO',                 
     CASE          
      WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AID' THEN 'LOCAL'          
      WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AIO' THEN 'LOCAL'          
      WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'LOCAL'          
      WHEN ltrim(rtrim(u.cUbigeo))='140902' THEN 'LOCAL'          
      WHEN ltrim(rtrim(u.cUbigeo))='090409' THEN 'LOCAL'          
      WHEN ltrim(rtrim(u.cUbigeo))='090401' THEN 'LOCAL'          
      ELSE 'FORANEO'          
     END AS [CONDICION],          
     CASE          
      WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AID' THEN 'AID'          
      WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AIO' THEN 'AIO'          
      WHEN LTRIM(RTRIM(u.cUbigeo))='020805'          
     OR LTRIM(RTRIM(u.cUbigeo))='020813'          
     OR LTRIM(RTRIM(u.cUbigeo))='021901'          
     OR LTRIM(RTRIM(u.cUbigeo))='020814' THEN 'AID'          
      WHEN LTRIM(RTRIM(u.cUbigeo))='021901'          
     OR LTRIM(RTRIM(u.cUbigeo))='020301'          
     OR LTRIM(RTRIM(u.cUbigeo))='020304'          
     OR LTRIM(RTRIM(u.cUbigeo))='020305'          
     OR LTRIM(RTRIM(u.cUbigeo))='020310'          
     OR LTRIM(RTRIM(u.cUbigeo))='020321'          
     OR LTRIM(RTRIM(u.cUbigeo))='020323'          
     OR LTRIM(RTRIM(u.cUbigeo))='020325'          
     OR LTRIM(RTRIM(u.cUbigeo))='020803'          
     OR LTRIM(RTRIM(u.cUbigeo))='021204'          
     OR LTRIM(RTRIM(u.cUbigeo))='021205'          
     OR LTRIM(RTRIM(u.cUbigeo))='021206'          
     OR LTRIM(RTRIM(u.cUbigeo))='021209'          
     OR LTRIM(RTRIM(u.cUbigeo))='021210'          
     OR LTRIM(RTRIM(u.cUbigeo))='090401'          
     OR LTRIM(RTRIM(u.cUbigeo))='090409'          
     OR LTRIM(RTRIM(u.cUbigeo))='140902' THEN 'AIO'          
      WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'REGIONAL'          
      ELSE 'FORANEO'          
     END AS 'CONDICION DETALLE',  
     ci.cComunidad as 'COMUNIDAD',  
     ocu.cTipo AS 'TIPO DE MMOO',  
     ocu.cNomOcupacion AS [CARGO Ó PUESTO CATALOGO],  
     ci.cUbigeo AS 'UBIGEO DE NACIMIENTO SEGUN DNI',   
     isnull(u.cDepartamento, '') AS 'DPTO. NACIMIENTO',          
     isnull(u.cProvincia, '') AS 'PROV. NACIMIENTO',          
     isnull(u.cDistrito, '') AS 'DISTR. NACIMIENTO',    
     comu.cUbicacionZona AS 'UGT',
	 CASE fld.cNivel WHEN 'N' THEN 'NUEVO' ELSE 'ANTERIOR' END AS [Estado] 
 FROM Fuerzalaboraldetalle fld          
 LEFT JOIN Fuerzalaboral fl ON fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral          
 LEFT JOIN ContratistaContrato cto ON cto.iCodContratistaContrato=fl.iCodContratistaContrato          
 LEFT JOIN Contrata ct ON ct.iCodContrata=cto.iCodContrata          
 LEFT JOIN dbo.CandidatoInforme AS ci ON ci.iCodCandidatoInforme = fld.iCodCandidatoInforme          
 LEFT JOIN Comunidad comu ON comu.cComunidad=ci.cComunidad          
 LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo          
 LEFT JOIN TDOcupacion ocu ON ocu.iCodOcupacion=fld.iCodOcupacion          
 WHERE FLD.BCESADO=0       
 AND fld.iPeriodo=YEAR(@dFechaIni) AND FLD.IMES=MONTH(@dFechaIni)
 AND cNivel='N'
 ORDER BY fl.iPeriodo,          
    fl.iMes,          
    ci.cDni ASC           
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_AreaSE_Convocatorias]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_AreaSE_Convocatorias]     
    
 @dFechaIni Date,    
 @dFechaFin date     
    
AS      
BEGIN      
  SELECT cm.cNroConvocatoria AS NRO_CONVOCATORIA,
         ISNULL(COMU.cUbicacionZona,'') as 'UGT',
      ltrim(rtrim(ct.cNomContrata)) AS CONTRATISTA,    
      CASE CONVERT(VARCHAR,cm.dFechaSolicitud,105)      
     WHEN '01-01-1900' THEN ''      
     ELSE CONVERT(VARCHAR,cm.dFechaSolicitud,105)      
      END AS FECHA_SOLICITUD,      
      
      CASE CONVERT(VARCHAR,cm.dFechaIni,105)       
       WHEN '01-01-1900' THEN ''      
      ELSE CONVERT(VARCHAR,cm.dFechaIni,105)       
      END AS FECHA_INICIO,      
      
      CASE CONVERT(VARCHAR,cm.dFechaFin,105)       
     WHEN '01-01-1900' THEN ''      
     ELSE CONVERT(VARCHAR,cm.dFechaFin,105)      
      END AS FECHA_FIN,    
          
      --CASE cm.iEstado      
      -- WHEN 1 THEN 'CREADO POR CONTRATISTA'      
      -- WHEN 2 THEN 'ENVIADO AL CED POR CONTRATISTA'      
      -- WHEN 3 THEN 'OBSERVADO'      
      -- WHEN 4 THEN 'ANULADO'      
      -- WHEN 5 THEN 'APROBADO POR CLIENTE'      
      -- WHEN 6 THEN 'ENVIADO AL CLIENTE'      
      --END AS ESTADO_CONVOCATORIA,    
          
      CASE CONVERT(VARCHAR,cm.dFechaLimite,105)       
       WHEN '01-01-1900' THEN ''      
     ELSE CONVERT(VARCHAR,cm.dFechaLimite,105)      
      END AS FECHA_LIMITE,      
      c.cMOCMONC AS MOCMONC_PERFIL,      
      c.cPerfil AS PERFIL,    
      CASE cm.iTipo                           
     WHEN 1 THEN 'REGULAR'                           
     WHEN 2 THEN 'REQ. EXCEPTUADO'                           
     WHEN 3 THEN 'ADICIONAL'                           
     WHEN 4 THEN 'DISPENSADO'                           
     WHEN 5 THEN 'MARATON'                           
     WHEN 6 THEN 'PGI'                           
     WHEN 7 THEN 'STAKEHOLDER'                           
     WHEN 8 THEN 'CED'                           
     WHEN 9 THEN 'OTROS'                           
     WHEN 10 THEN 'REGULAR DUPLICADO'                           
    END AS TIPO_CONVOCATORIA,    
        
      c.cDesPerfil AS DECRIPCION_PERFIL,      
      c.iCantidad AS CANTIDAD_VACANTES,      
      --c.iTotal AS TOTAL,      
      --CASE c.iEstado      
      --WHEN 0 THEN 'CREADO POR CONTRATISTA'      
      --WHEN 1 THEN 'ENVIADO AL CED POR CONTRATISTA'      
      --WHEN 2 THEN 'APROBADO POR CED'      
      --WHEN 3 THEN 'RECHAZADO POR CED'      
      --WHEN 4 THEN 'OBSERVADO POR CED'      
      --END AS ESTADO_POR_PERFIL,      
         
      CASE CAST(c.iLiberado AS varchar)      
      WHEN '0' THEN ''      
      ELSE CAST(c.iLiberado AS varchar) END AS CANT_LIBERADO,    
      CAST((c.iCantidad - c.iLiberado) AS varchar) AS CANTIDAD_ACTIVA,    
      CASE CONVERT(VARCHAR,c.dFechaLiberaExceptua,105)       
      WHEN '01-01-1900' THEN ''      
      ELSE CONVERT(VARCHAR,c.dFechaLiberaExceptua,105)       
      END AS FECHA_LIBERADO,    
	  c.cObs AS OBSERVACIONES    
      --case cm.cRutaComprobante when '' THEN 'ABIERTO' else 'CERRADO' END     

  FROM ConvocatoriaMain cm      
  LEFT JOIN Convocatoria c ON c.iCodConvocatoriaMain=cm.iCodConvocatoriaMain      
  LEFT JOIN Contrata ct ON ct.iCodContrata=cm.iCodContrata
  LEFT JOIN ConvocatoriaDetalle cd ON cd.iCodConvocatoria = c.iCodConvocatoria
  LEFT JOIN dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme
  LEFT JOIN Comunidad comu ON COMU.cComunidad=CI.cComunidad
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_AreaSE_PostulacionesConFeedBack]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_AreaSE_PostulacionesConFeedBack]  
 @dFechaIni Date,  
 @dFechaFin date   
AS                       
BEGIN                      
   SELECT         
    --cd.iCodConvocatoriaDetalle,                       
    --cd.iCodConvocatoria,  
    ISNULL(COM.cUbicacionZona,'') as 'UGT',  
    CONVERT(VARCHAR(MAX),MONTH(cm.dFechaFin)) + ' - ' + CONVERT(VARCHAR(MAX),YEAR(cm.dFechaFin)) AS MES_ANIO_CONVOCATORIA,  
    cm.cNroConvocatoria AS NRO_CONVOCATORIA,  
    ltrim(rtrim(co.cNomContrata)) AS CONTRATISTA,   
    cv.cPerfil AS PERFIL,  
    cv.cMOCMONC as MOCMONCPerfil,  
    ci.cMOCMONC AS MOCMONCPostulante,                                     
    CASE cm.iTipo                         
    WHEN 1 THEN 'REGULAR'                         
    WHEN 2 THEN 'REQ. EXCEPTUADO'                         
    WHEN 3 THEN 'ADICIONAL'                         
    WHEN 4 THEN 'DISPENSADO'                         
    WHEN 5 THEN 'MARATON'                         
    WHEN 6 THEN 'PGI'                         
    WHEN 7 THEN 'STAKEHOLDER'                         
    WHEN 8 THEN 'CED'                         
    WHEN 9 THEN 'OTROS'                         
    WHEN 10 THEN 'REGULAR DUPLICADO'                         
    END AS TIPO_CONVOCATORIA,                                               
    convert(varchar(15), cm.dFechaIni, 6) + ' al '+convert(varchar(15), cm.dFechaFin, 6) as FECHA_CONVOCATORIA,                      
    cv.iCantidad AS CANTIDAD_SOLICITADA,  
    cv.iTotal AS TOTAL_SOLICITADA,  
    --CASE cd.iTipoPostulacion                         
    --WHEN 1 THEN 'WEB'                         
    --WHEN 2 THEN 'SISTEMA-CED'                         
    --WHEN 3 THEN 'EXCEPTUADO'                         
    --WHEN 4 THEN 'PREFERENCIAL'                         
    --WHEN 5 THEN 'SOLICITADO'                         
    --WHEN 6 THEN 'VIRTUAL APP ANDROID'                         
    --WHEN 7 THEN 'STAKEHOLDER'                         
    --END AS TipoPostulacion,                          
    ROW_NUMBER() OVER(PARTITION BY cNomContrata,                        
    cSubContrata,dfechafin,cPerfil ORDER BY ci.cApellidos ASC) as NRO_POSTULACIONES,                        
    ci.cDNI AS DNI,   
    ci.cApellidos + ' ' + ci.cNombres AS NOMBRES_APELLIDOS,                  
    ci.cSexo AS SEXO,                                      
    CASE                       
       WHEN ltrim(rtrim(ci.cEducaSuperior))<>'' THEN 'UNIVERSITARIO'                      
       ELSE CASE                      
      WHEN ltrim(rtrim(ci.cEducaTecnica))<>'' THEN 'TECNICO'                      
       ELSE CASE                      
      WHEN ltrim(rtrim(ci.cEducaSecundaria))<>'' THEN 'SECUNDARIA'                      
      ELSE 'SIN DATOS'                      
     END                      
     END                      
    END AS GRADO_DE_INSTRUCCION,                        
    ci.cFono AS TELEFONO,                      
    ci.cLicenciaConducir AS LICENCIA_CONDUCIR,                      
    isnull(tu.cDepartamento,'---') AS DEPARTAMENTO_NACIMIENTO,
    isnull(tu.cProvincia,'---') AS PROVINCIA_NACIMIENTO,
	isnull(tu.cDistrito,'---') AS DISTRITO_NACIMIENTO,       
	 case 
	WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'LOCAL' 
	WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'LOCAL' 
	when ltrim(rtrim(substring(tu.cUbigeo,1,2)))='02' then 'LOCAL' 
	when ltrim(rtrim(tu.cUbigeo))='140902' then 'LOCAL' 
	when ltrim(rtrim(tu.cUbigeo))='090409' then 'LOCAL' 
	when ltrim(rtrim(tu.cUbigeo))='090401' then 'LOCAL' 
	ELSE 
		'FORANEO'	  
	END AS [CONDICION],
    case 
	WHEN ISNULL(com.cTipoAreaInfluencia,'')='AID' then 'AID' 
	WHEN ISNULL(com.cTipoAreaInfluencia,'')='AIO' then 'AIO' 
	WHEN LTRIM(RTRIM(tu.cUbigeo))='020805'  OR
	LTRIM(RTRIM(tu.cUbigeo))='020813'  OR
	LTRIM(RTRIM(tu.cUbigeo))='021901'  OR
	LTRIM(RTRIM(tu.cUbigeo))='020814'  THEN 'AID'  
	WHEN LTRIM(RTRIM(tu.cUbigeo))='021901'  OR
	LTRIM(RTRIM(tu.cUbigeo))='020301'  OR
	LTRIM(RTRIM(tu.cUbigeo))='020304'  OR
	LTRIM(RTRIM(tu.cUbigeo))='020305'  OR
	LTRIM(RTRIM(tu.cUbigeo))='020310'  OR
	LTRIM(RTRIM(tu.cUbigeo))='020321'  OR
	LTRIM(RTRIM(tu.cUbigeo))='020323'  OR
	LTRIM(RTRIM(tu.cUbigeo))='020325'  OR
	LTRIM(RTRIM(tu.cUbigeo))='020803'  OR
	LTRIM(RTRIM(tu.cUbigeo))='021204'  OR
	LTRIM(RTRIM(tu.cUbigeo))='021205'  OR
	LTRIM(RTRIM(tu.cUbigeo))='021206'  OR
	LTRIM(RTRIM(tu.cUbigeo))='021209'  OR
	LTRIM(RTRIM(tu.cUbigeo))='021210'  OR
	LTRIM(RTRIM(tu.cUbigeo))='090401'  OR
	LTRIM(RTRIM(tu.cUbigeo))='090409'  OR
	LTRIM(RTRIM(tu.cUbigeo))='140902'  THEN 'AIO' 
	when ltrim(rtrim(substring(tu.cUbigeo,1,2)))='02' then  --REGIONAL
		  'REGIONAL'
	 
	else     'FORANEO'
	END as [CONDICION DETALLE],                      
    ci.cComunidad AS COMUNIDAD_O_PROCEDENCIA,
	
	ISNULL(STUFF((SELECT ', ' + CAST(pn.cNombres + ' ' + pn.cApelP + ' ' + pn.cApelM AS varchar)
           FROM PersonaGestorComunidad pgc
		   INNER JOIN PersonaNatural pn ON pn.iCodPersona = pgc.iCodPersona
           WHERE pgc.bHabilitar = 1 
           AND pgc.iCodComunidad = cond.iCodComunidad
           FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 
           1,2, ''),' ') AS GESTORES_DE_COMUNIDAD,
    com.cTipoAreaInfluencia AS TIPO_AREA_INFLUENCIA,                     
    --ci.cEmprEx1 AS ULTIMA_EXPERIENCIA_EMPRESA,                  
    --ci.cCargoEx1 as ULTIMO_EXPERIENCIA_CARGO,                                                           
    cd.cEstado AS ESTADO,                      
    cd.cSeleccionado AS SELECCIONADO,                      
    CASE cd.cEstado WHEN 'N' THEN 'NO DISPONIBLE' ELSE cd.cRptaContrata END AS RESPUESTA_FEEDBACK,                                      
    CONVERT(VARCHAR,cd.dFechaMintra,103) as FECHA_POSTULACION,  
    CASE                         
     WHEN cd.dFechaContactoContrata1 = '1900-01-01' THEN ''                          
     ELSE convert(varchar(15),cd.dFechaContactoContrata1,103) END                         
    AS FECHA_RESPUESTA_FEEDBACK,  
    cd.cObs AS OBSERVACIONES   
    FROM dbo.ConvocatoriaDetalle AS cd                       
    LEFT JOIN dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme     
    LEFT JOIN TDubigeo as tu on ci.cUbigeo=tu.cUbigeo                         
    LEFT JOIN TDubigeo as tur ON ci.cUbigeoResidencia=tur.cUbigeo    
    LEFT JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria  
    LEFT JOIN ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain  
    LEFT JOIN Contrata AS co ON cm.iCodContrata = co.iCodContrata
	left join CandidatoInformeCondicion cond on ci.iCodCandidatoInforme=cond.iCodCandidatoInforme 
    left join Comunidad com on com.iCodComunidad=cond.iCodComunidad and com.iCodComunidad>1
	where cond.iCodCandidatoInformeCondicion=(
		select MAX(cond9.iCodCandidatoInformeCondicion) 
		FROM CandidatoInformeCondicion cond9 
		WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme  
	)                               
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_CandidatosComunidadFFLLAcumulada]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_CandidatosComunidadFFLLAcumulada] @dFechaIni Date,@dFechaFin date
AS

SELECT 
ci.cDNI as [DNI], 
ci.cNombres + ' ' + ci.cApellidos AS [NOMBRES Y APELLIDOS],
--ci.cFono AS [FONO],
--ci.cCorreo AS [CORREO], 
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as [CONDICION] ,
ci.cCondicion as [CONDICION DETALLE],
--  case ci.bSustentoCV
--when 1 then
--	 case when  ci.cCondicion = 'COMUNIDAD' then  'CONSTANCIA DE COMUNIDAD'  
--	else 
--		case  ci.cUbigeo  
--		WHEN '170102' THEN 'ÁREA DE INFLUENCIA' --'CARUMAS [DISTRITO]'
--		WHEN '170103' THEN 'ÁREA DE INFLUENCIA' --'CUCHUMBAYA [DISTRITO]' 
--		WHEN '170104' THEN 'ÁREA DE INFLUENCIA' --'SANCRISTOBAL [DISTRITO]' 
--		WHEN '170105' THEN 'ÁREA DE INFLUENCIA' --'TORATA [DISTRITO]'
--		else '' end
--	end 		
--else ''  end  as [TIPOAID],
case ci.bSustentoCV
when 1 then
	 case when  ci.cCondicion = 'COMUNIDAD' then  ci.cComunidad 
	else 
		case  ci.cUbigeo 
		WHEN '170102' THEN 'CARUMAS [DISTRITO]'
		WHEN '170103' THEN 'CUCHUMBAYA [DISTRITO]' 
		WHEN '170104' THEN 'SANCRISTOBAL [DISTRITO]' 
		WHEN '170105' THEN 'TORATA [DISTRITO]'
		else '' end
	end 		
else ''  end  as [COMUNIDAD],
--case 
--when ltrim(rtrim(ci.cEducaSecundaria))<>'' then 'SECUNDARIA' 
--when ltrim(rtrim(ci.cEducatecnica))<>'' then 'TECNICO' 
--when ltrim(rtrim(ci.ceducasuperior))<>'' then 'UNIVERSITARIO' 
--else '---' end as [GRADO INSTRUCCIÓN],
 --ci.cPuestoEspecialidad as [ESPECIALIDAD], 
 --ci.cLicenciaConducir AS [LIC. CONDUCIR],

--isnull(co.cNomContrata,'')  as [EECC FFLL ACTUAL] ,
--isnull(fld.cOcupacion ,'')  as [OCUPACION FFLL ACTUAL] ,
case (select count(fld1.icodcandidatoinforme) from fuerzalaboraldetalle fld1 
inner join FuerzaLaboral fl1 on fl1.iCodFuerzaLaboral=fld1.iCodFuerzaLaboral 
inner join ContratistaContrato cto1 on cto1.iCodContratistaContrato=fl1.iCodContratistaContrato  
where fld1.icodcandidatoinforme=ci.icodcandidatoinforme and cto1.cFase<>'NA' ) 
when  0 then 'NO' 
else 'SI' 
end as [LABORÓ EN AAQ] ,
isnull((select top 1 fld2.cOcupacion from   fuerzalaboral fl2 
inner join fuerzalaboraldetalle fld2 on fl2.iCodFuerzaLaboral=fld2.iCodFuerzaLaboral  
inner join ContratistaContrato cto2 on fl2.iCodContratistaContrato=cto2.iCodContratistaContrato and cto2.cFase<>'NA'  
where fld2.icodcandidatoinforme=ci.icodcandidatoinforme order by fld2.iCodFuerzaLaboralDetalle desc ) ,'') 
as [ÚLTIMO PUESTO FFLL] ,
isnull((select top 1 co3.cNomContrata   from fuerzalaboral fl3 
inner join fuerzalaboraldetalle fld3 on fl3.iCodFuerzaLaboral=fld3.iCodFuerzaLaboral  
inner join ContratistaContrato cto3 on fl3.iCodContratistaContrato=cto3.iCodContratistaContrato and cto3.cFase<>'NA'  
inner join Contrata co3 on cto3.iCodContrata=co3.iCodContrata  
where fld3.icodcandidatoinforme=ci.icodcandidatoinforme order by fld3.iCodFuerzaLaboralDetalle desc ) ,'') 
as [ÚLTIMA EMPRESA FFLL] ,
 --   case isnull(fld.iCodFuerzaLaboralDetalle,0)
 --when 0 then 'NO'
 --else 'SI' 
 --end as   [ACTUALMENTE EN FFLL] ,
 case (
 isnull(
 (select count(fld4.iCodFuerzaLaboralDetalle) from   fuerzalaboral fl4 
inner join fuerzalaboraldetalle fld4 on fl4.iCodFuerzaLaboral=fld4.iCodFuerzaLaboral  
inner join ContratistaContrato cto4 on fl4.iCodContratistaContrato=cto4.iCodContratistaContrato and cto4.cFase<>'NA'  
where fld4.icodcandidatoinforme=ci.icodcandidatoinforme and fld4.bCesado=0 
and fl4.iPeriodo=year(getdate()) and fl4.imes=month(getdate())  
  )
,0) 
)
when 0 then 'NO'
else 'SI' 
end 
as  [ACTUALMENTE EN FFLL] 

--case (select count(fld1.icodcandidatoinforme) from fuerzalaboraldetalle fld1 
--inner join FuerzaLaboral fl1 on fl1.iCodFuerzaLaboral=fld1.iCodFuerzaLaboral 
--inner join ContratistaContrato cto1 on cto1.iCodContratistaContrato=fl1.iCodContratistaContrato  
--where fld1.icodcandidatoinforme=ci.icodcandidatoinforme and cto1.cFase<>'NA' ) 
--when  0 then 'NO' 
--else 'SI' 
--end as [LABORÓ EN AAQ] ,
 --ci.cdireccion 
FROM CandidatoInforme ci 
left join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme 
left join TDOcupacion tdo1 on cid.iCodOcupacion=tdo1.iCodOcupacion 
left join TDOcupacion tdo2 on cid.iCodOcupacion2=tdo2.iCodOcupacion   

--  left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 
-- left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
--left join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato and cto.cFase<>'NA'  
 
 where --ci.iCodCandidatoInforme=6868
 --and  
-- ci.cCondicion in ('LOCAL','COMUNIDAD','RESIDENTE')  
  ci.cCondicion ='COMUNIDAD'

 --and ci.cSexo='F'  
   and ci.bSustentoCV=1 
 --  and ci.cComunidad<>''  
   order by ci.cComunidad 


GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_CandidatosLocales]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_CandidatosLocales] @dFechaIni Date,@dFechaFin date  
AS  
BEGIN
	SELECT 
	ci.dFechaCargaBox,   
	ci.cDNI as [DNI],   
	ci.cNombres + ' ' + ci.cApellidos AS [NOMBRES Y APELLIDOS],  
	case   
	when year(ci.dFechaNac)=1900 then ''   
	else cast(year(ci.dFechaNac) as varchar(6)) end as [AÑO NACIMIENTO],  
	ci.cFono AS [FONO],  
	ci.cCorreo AS [CORREO],   
	 CASE    
			   WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AID' THEN 'LOCAL'    
			   WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AIO' THEN 'LOCAL'    
			   WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'LOCAL'    
			   WHEN ltrim(rtrim(u.cUbigeo))='140902' THEN 'LOCAL'    
			   WHEN ltrim(rtrim(u.cUbigeo))='090409' THEN 'LOCAL'    
			   WHEN ltrim(rtrim(u.cUbigeo))='090401' THEN 'LOCAL'    
			   ELSE 'FORANEO'    
		   END AS [CONDICION],    
		   CASE    
			   WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AID' THEN 'AID'    
			   WHEN ISNULL(comu.cTipoAreaInfluencia, '')='AIO' THEN 'AIO'    
			   WHEN LTRIM(RTRIM(u.cUbigeo))='020805'    
					OR LTRIM(RTRIM(u.cUbigeo))='020813'    
					OR LTRIM(RTRIM(u.cUbigeo))='021901'    
					OR LTRIM(RTRIM(u.cUbigeo))='020814' THEN 'AID'    
			   WHEN LTRIM(RTRIM(u.cUbigeo))='021901'    
					OR LTRIM(RTRIM(u.cUbigeo))='020301'    
					OR LTRIM(RTRIM(u.cUbigeo))='020304'    
					OR LTRIM(RTRIM(u.cUbigeo))='020305'    
					OR LTRIM(RTRIM(u.cUbigeo))='020310'    
					OR LTRIM(RTRIM(u.cUbigeo))='020321'    
					OR LTRIM(RTRIM(u.cUbigeo))='020323'    
					OR LTRIM(RTRIM(u.cUbigeo))='020325'    
					OR LTRIM(RTRIM(u.cUbigeo))='020803'    
					OR LTRIM(RTRIM(u.cUbigeo))='021204'    
	OR LTRIM(RTRIM(u.cUbigeo))='021205'    
					OR LTRIM(RTRIM(u.cUbigeo))='021206'    
					OR LTRIM(RTRIM(u.cUbigeo))='021209'    
	 OR LTRIM(RTRIM(u.cUbigeo))='021210'    
					OR LTRIM(RTRIM(u.cUbigeo))='090401'    
					OR LTRIM(RTRIM(u.cUbigeo))='090409'    
					OR LTRIM(RTRIM(u.cUbigeo))='140902' THEN 'AIO'    
			   WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'REGIONAL'    
			   ELSE 'FORANEO'    
		   END AS 'CONDICION DETALLE',      
	  case ci.bSustentoCV  
	when 1 then  
	  case when  ci.cCondicion = 'COMUNIDAD' then  'CONSTANCIA DE COMUNIDAD'    
	 else   
	  case  ci.cUbigeo    
	  WHEN '170102' THEN 'ÁREA DE INFLUENCIA' --'CARUMAS [DISTRITO]'  
	  WHEN '170103' THEN 'ÁREA DE INFLUENCIA' --'CUCHUMBAYA [DISTRITO]'   
	  WHEN '170104' THEN 'ÁREA DE INFLUENCIA' --'SANCRISTOBAL [DISTRITO]'   
	  WHEN '170105' THEN 'ÁREA DE INFLUENCIA' --'TORATA [DISTRITO]'  
	  else '' end  
	 end     
	else ''  end  as [TIPOAID],  
	case ci.bSustentoCV  
	when 1 then  
	  case when  ci.cCondicion = 'COMUNIDAD' then  ci.cComunidad   
	 else   
	  case  ci.cUbigeo   
	  WHEN '170102' THEN 'CARUMAS [DISTRITO]'  
	  WHEN '170103' THEN 'CUCHUMBAYA [DISTRITO]'   
	  WHEN '170104' THEN 'SANCRISTOBAL [DISTRITO]'   
	  WHEN '170105' THEN 'TORATA [DISTRITO]'  
	  else '' end  
	 end     
	else ''  end  as [COMUNIDAD],  
	case  
	when ci.bCargaBox=1 then 'SI'   
	else 'NO' end as [TIENE EXPEDIENTE],   
	 ci.cPuestoEspecialidad as [ESPECIALIDAD],   
	 ci.cLicenciaConducir AS [LIC. CONDUCIR],  
	(select top 1   
	 cel.cPuesto    
	from   CandidatoExperienciaLaboral cel   
	Where cel.iCodCandidatoInforme=ci.iCodCandidatoInforme   
	order by cel.dfechafin desc    
	) as [PUESTO ÚLTIMA EXP. LABORAL] ,  
	 case   
	 when isnull(cid.iCodOcupacion,0)=0 then ci.cOcupacion   
	 else   
	  CASE   
	  WHEN tdo1.cNomOcupacion='NO CATALOGADO' then ''  
	  else tdo1.cNomOcupacion  
	  END  
	 end   
	 as [OCUPACION 1],  
	  case when cid.iCodOcupacion=0 then ci.iTiempoExperiencia   
	 else cid.iTiempoExperiencia   
	 end   
	 as [TIEMPO EXP. 1],  
	   case when cid.iCodOcupacion=0 then (  
		 case   
		 when year(ci.dFechaEvaluacionResultado)=1900 then ''   
		 else cast(year(ci.dFechaEvaluacionResultado) as varchar(6)) end )  
	 else  
	  case   
	  when  cid.iUltimaExperiencia=1900 then 0  
	  else cid.iUltimaExperiencia  
	  end   
	 end   
	 as [AÑO ULT. EXP. 1],  
	cid.cRubroExperiencia as [RUBRO EXP. 1],  
	cid.cSectorExperiencia as [SECTOR EXP. 1],  
	case   
	 when isnull(cid.iCodOcupacion2,0)=0 then ci.cOcupacion2   
	 else  
	  CASE   
	  WHEN tdo2.cNomOcupacion='NO CATALOGADO' then ''   
	  else tdo2.cNomOcupacion   
	  END  
	 end as [OCUPACION 2],   
	 isnull(cid.iTiempoExperiencia2,'') as [TIEMPO EXP. 2] ,  
	isnull(cid.iUltimaExperiencia2,'') as [AÑO ULT. EXP. 2],   
	isnull(cid.cRubroExperiencia2,'') as [RUBRO EXP. 2],  
	isnull(cid.cSectorExperiencia2,'') as [SECTOR EXP. 2],  
   
  
  
  
	--isnull(co.cNomContrata,'')  as [EECC FFLL ACTUAL] ,  
	--isnull(fld.cOcupacion ,'')  as [OCUPACION FFLL ACTUAL] ,  
	case (select count(fld1.icodcandidatoinforme) from fuerzalaboraldetalle fld1   
	inner join FuerzaLaboral fl1 on fl1.iCodFuerzaLaboral=fld1.iCodFuerzaLaboral   
	inner join ContratistaContrato cto1 on cto1.iCodContratistaContrato=fl1.iCodContratistaContrato    
	where fld1.icodcandidatoinforme=ci.icodcandidatoinforme and cto1.cFase<>'NA' )   
	when  0 then 'NO'   
	else 'SI'   
	end as [LABORÓ EN AAQ] ,  
	isnull((select top 1 fld2.cOcupacion from   fuerzalaboral fl2   
	inner join fuerzalaboraldetalle fld2 on fl2.iCodFuerzaLaboral=fld2.iCodFuerzaLaboral    
	inner join ContratistaContrato cto2 on fl2.iCodContratistaContrato=cto2.iCodContratistaContrato and cto2.cFase<>'NA'    
	where fld2.icodcandidatoinforme=ci.icodcandidatoinforme order by fld2.iCodFuerzaLaboralDetalle desc ) ,'')   
	as [ÚLTIMO PUESTO FFLL] ,  
	isnull((select top 1 co3.cNomContrata   from fuerzalaboral fl3   
	inner join fuerzalaboraldetalle fld3 on fl3.iCodFuerzaLaboral=fld3.iCodFuerzaLaboral    
	inner join ContratistaContrato cto3 on fl3.iCodContratistaContrato=cto3.iCodContratistaContrato and cto3.cFase<>'NA'    
	inner join Contrata co3 on cto3.iCodContrata=co3.iCodContrata    
	where fld3.icodcandidatoinforme=ci.icodcandidatoinforme order by fld3.iCodFuerzaLaboralDetalle desc ) ,'')   
	as [ÚLTIMA EMPRESA FFLL] ,  
	 --   case isnull(fld.iCodFuerzaLaboralDetalle,0)  
	 --when 0 then 'NO'  
	 --else 'SI'   
	 --end as   [ACTUALMENTE EN FFLL] ,  
	 case (  
	 isnull(  
	 (select count(fld4.iCodFuerzaLaboralDetalle) from   fuerzalaboral fl4   
	inner join fuerzalaboraldetalle fld4 on fl4.iCodFuerzaLaboral=fld4.iCodFuerzaLaboral    
	inner join ContratistaContrato cto4 on fl4.iCodContratistaContrato=cto4.iCodContratistaContrato and cto4.cFase<>'NA'    
	where fld4.icodcandidatoinforme=ci.icodcandidatoinforme and fld4.bCesado=0   
	and fl4.iPeriodo=year(getdate()) and fl4.imes=month(getdate())    
	  )  
	,0)   
	)  
	when 0 then 'NO'  
	else 'SI'   
	end   
	as  [ACTUALMENTE EN FFLL] ,  
	--case (select count(fld1.icodcandidatoinforme) from fuerzalaboraldetalle fld1   
	--inner join FuerzaLaboral fl1 on fl1.iCodFuerzaLaboral=fld1.iCodFuerzaLaboral   
	--inner join ContratistaContrato cto1 on cto1.iCodContratistaContrato=fl1.iCodContratistaContrato    
	--where fld1.icodcandidatoinforme=ci.icodcandidatoinforme and cto1.cFase<>'NA' )   
	--when  0 then 'NO'   
	--else 'SI'   
	--end as [LABORÓ EN AAQ] ,  
	 ci.cdireccion ,  
	 case ci.bSustentoCV  
	when 1 then  
	 case    
	 when ci.cCondicion='LOCAL' or ci.cCondicion='RESIDENTE' or ci.cCondicion='COMUNIDAD' THEN  
	  CASE   
	  WHEN ci.cCondicion='COMUNIDAD' THEN 'MARISCAL NIETO'   
  
	  WHEN ci.cUbigeo like '1701%' THEN 'MARISCAL NIETO'   
	  WHEN ci.cubigeo like '1702%' THEN 'GRAL. SANCHEZ CERRO'   
	  WHEN ci.cubigeo like '1703%' THEN 'ILO'    
  
	  WHEN ci.cUbigeoResidencia like '1701%' THEN 'MARISCAL NIETO'   
	  WHEN ci.cUbigeoResidencia like '1702%' THEN 'GRAL. SANCHEZ CERRO'   
	  WHEN ci.cUbigeoResidencia like '1703%' THEN 'ILO'   
  
   
	  ELSE 'MARISCAL NIETO'  
	  END  
	 ELSE 'OTRAS PROVINCIAS' END  
	else 'OTRAS PROVINCIAS' end as [PROVINCIA]   
	FROM CandidatoInforme ci   
	left join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme   
	left join TDOcupacion tdo1 on cid.iCodOcupacion=tdo1.iCodOcupacion   
	left join TDOcupacion tdo2 on cid.iCodOcupacion2=tdo2.iCodOcupacion     
	LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo
	LEFT JOIN Comunidad comu ON comu.cComunidad=ci.cComunidad  
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_CandidatosTodo]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [rpt].[SP_RPT_CandidatosTodo]       
@dFechaIni Date,@dFechaFin date AS       
BEGIN      
      
 SELECT ci.cDNI AS [DNI],      
     ci.iCodCandidatoInforme AS CID,      
     ci.dFechaCargaBox,      
     ci.cNombres + ' ' + ci.cApellidos AS [NOMBRES Y APELLIDOS],      
     ci.dFechaNac AS [FECHA NAC],      
     CASE      
      WHEN year(ci.dFechaNac)=1900 THEN ''      
      ELSE cast(year(ci.dFechaNac) AS varchar(6))      
     END AS [AÑO NACIMIENTO],      
     floor((cast(convert(varchar(8), getdate(), 112) AS int)- cast(convert(varchar(8), ci.dFechaNac, 112) AS int)) / 10000) AS [EDAD],      
     ci.cFono AS [FONO],      
     ci.cCorreo AS [CORREO],      
     ci.cSexo AS [GENERO],      
  CASE      
   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AID' THEN 'LOCAL'      
   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AIO' THEN 'LOCAL'      
   WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'LOCAL'      
   WHEN ltrim(rtrim(u.cUbigeo))='140902' THEN 'LOCAL'      
   WHEN ltrim(rtrim(u.cUbigeo))='090409' THEN 'LOCAL'      
   WHEN ltrim(rtrim(u.cUbigeo))='090401' THEN 'LOCAL'      
   ELSE 'FORANEO'      
  END AS [CONDICION],      
  dbo.fnObtenerCondicionDetalle(com.cTipoAreaInfluencia, u.cUbigeo) AS [CONDICION DETALLE],      
  isnull(com.cComunidad, '') AS [COMUNIDAD],      
  CASE      
   WHEN ci.bCargaBox=1 THEN 'SI'      
   ELSE 'NO'      
  END AS [TIENE EXPEDIENTE], --ci.cPuestoEspecialidad as [ESPECIALIDAD],      
  isnull(      
     (SELECT top 1 cat1.cDisplayMember      
      FROM CandidatoEstudios cedu1      
      INNER JOIN catalogo cat1 ON cedu1.iGradoInstruccion=cat1.cValueMember      
      AND cat1.cTabla='Estudios'      
      AND cat1.cNombreGrupo='iGradoInstruccion'      
      WHERE cedu1.iCodCandidatoInforme=ci.iCodCandidatoInforme      
      ORDER BY cat1.iOrden DESC), CASE      
              WHEN ltrim(rtrim(ci.cEducaSecundaria))<>'' THEN 'SECUNDARIA'      
              WHEN ltrim(rtrim(ci.cEducatecnica))<>'' THEN 'TECNICO'      
              WHEN ltrim(rtrim(ci.ceducasuperior))<>'' THEN 'UNIVERSITARIO'      
              ELSE 'SECUNDARIA COMPLETA'      
             END) AS [GRADO INSTRUCCION],      
  isnull(      
     (SELECT top 1 cedu.cCarrera      
      FROM CandidatoEstudios cedu      
      INNER JOIN catalogo cat ON cedu.iGradoInstruccion=cat.cValueMember      
      AND cat.cTabla='Estudios'      
      AND cat.cNombreGrupo='iGradoInstruccion'      
      WHERE cedu.iCodCandidatoInforme=ci.iCodCandidatoInforme --and cedu.bActivo=1      
      
      ORDER BY cat.iOrden DESC),ci.cPuestoEspecialidad) AS [ESPECIALIDAD],      
  ci.cLicenciaConducir AS [LIC. CONDUCIR],      
      
   (SELECT top 1 cel.cPuesto      
    FROM CandidatoExperienciaLaboral cel      
    WHERE cel.iCodCandidatoInforme=ci.iCodCandidatoInforme      
    ORDER BY cel.dfechafin DESC) AS [PUESTO ÚLTIMA EXP. LABORAL],      
  ci.cMOCMONC AS [TIPO MMOO],      
  CASE      
   WHEN isnull(cid.iCodOcupacion, 0)=0 THEN ci.cOcupacion      
   ELSE CASE      
      WHEN tdo1.cNomOcupacion='NO CATALOGADO' THEN ''      
      ELSE tdo1.cNomOcupacion      
     END      
  END AS [OCUPACION 1],      
  CASE      
   WHEN cid.iCodOcupacion=0 THEN ci.iTiempoExperiencia      
   ELSE cid.iTiempoExperiencia      
  END AS [TIEMPO EXP. 1],      
  CASE      
   WHEN cid.iCodOcupacion=0 THEN (CASE      
           WHEN year(ci.dFechaEvaluacionResultado)=1900 THEN ''      
           ELSE cast(year(ci.dFechaEvaluacionResultado) AS varchar(6))      
          END)      
   ELSE CASE      
      WHEN cid.iUltimaExperiencia=1900 THEN 0      
      ELSE cid.iUltimaExperiencia      
     END      
  END AS [AÑO ULT. EXP. 1],      
  cid.cRubroExperiencia AS [RUBRO EXP. 1],      
  cid.cSectorExperiencia AS [SECTOR EXP. 1],      
  CASE      
   WHEN isnull(cid.iCodOcupacion2, 0)=0 THEN ci.cOcupacion2      
   ELSE CASE      
      WHEN tdo2.cNomOcupacion='NO CATALOGADO' THEN ''      
      ELSE tdo2.cNomOcupacion      
     END      
  END AS [OCUPACION 2],      
  isnull(cid.iTiempoExperiencia2, '') AS [TIEMPO EXP. 2],      
  isnull(cid.iUltimaExperiencia2, '') AS [AÑO ULT. EXP. 2],      
  isnull(cid.cRubroExperiencia2, '') AS [RUBRO EXP. 2],      
  isnull(cid.cSectorExperiencia2, '') AS [SECTOR EXP. 2], --isnull(co.cNomContrata,'')  as [EECC FFLL ACTUAL] ,      
  --isnull(fld.cOcupacion ,'')  as [OCUPACION FFLL ACTUAL] ,      
  CASE      
    (SELECT count(fld1.icodcandidatoinforme)      
     FROM fuerzalaboraldetalle fld1      
     INNER JOIN FuerzaLaboral fl1 ON fl1.iCodFuerzaLaboral=fld1.iCodFuerzaLaboral      
     INNER JOIN ContratistaContrato cto1 ON cto1.iCodContratistaContrato=fl1.iCodContratistaContrato      
     WHERE fld1.icodcandidatoinforme=ci.icodcandidatoinforme      
       AND cto1.cFase<>'NA')      
   WHEN 0 THEN 'NO'      
   ELSE 'SI'      
  END AS [LABORÓ EN AAQ],      
  isnull(      
     (SELECT top 1 fld2.cOcupacion      
      FROM fuerzalaboral fl2      
      INNER JOIN fuerzalaboraldetalle fld2 ON fl2.iCodFuerzaLaboral=fld2.iCodFuerzaLaboral      
      INNER JOIN ContratistaContrato cto2 ON fl2.iCodContratistaContrato=cto2.iCodContratistaContrato      
      AND cto2.cFase<>'NA'      
      WHERE fld2.icodcandidatoinforme=ci.icodcandidatoinforme      
      ORDER BY fld2.iCodFuerzaLaboralDetalle DESC) ,'') AS [ÚLTIMO PUESTO FFLL],      
  isnull(      
     (SELECT top 1 co3.cNomContrata      
      FROM fuerzalaboral fl3      
      INNER JOIN fuerzalaboraldetalle fld3 ON fl3.iCodFuerzaLaboral=fld3.iCodFuerzaLaboral      
      INNER JOIN ContratistaContrato cto3 ON fl3.iCodContratistaContrato=cto3.iCodContratistaContrato      
      AND cto3.cFase<>'NA'      
      INNER JOIN Contrata co3 ON cto3.iCodContrata=co3.iCodContrata      
      WHERE fld3.icodcandidatoinforme=ci.icodcandidatoinforme      
      ORDER BY fld3.iCodFuerzaLaboralDetalle DESC) ,'') AS [ÚLTIMA EMPRESA FFLL],      
  CASE (isnull(      
     (SELECT count(fld4.iCodFuerzaLaboralDetalle)      
      FROM fuerzalaboral fl4      
      INNER JOIN fuerzalaboraldetalle fld4 ON fl4.iCodFuerzaLaboral=fld4.iCodFuerzaLaboral      
      INNER JOIN ContratistaContrato cto4 ON fl4.iCodContratistaContrato=cto4.iCodContratistaContrato      
      AND cto4.cFase<>'NA'      
      WHERE fld4.icodcandidatoinforme=ci.icodcandidatoinforme      
        AND fld4.bCesado=0      
        AND fl4.iPeriodo=year(getdate())      
        AND fl4.imes=month(getdate())) ,0))      
   WHEN 0 THEN 'NO'      
   ELSE 'SI'      
  END AS [ACTUALMENTE EN FFLL],      
  isnull(u.cDepartamento, '') AS cDepartamentoNac,      
  isnull(u.cProvincia, '') AS cProvinciaNac,      
  isnull(u.cDistrito, '') AS cDistritoNac,      
  isnull(ur.cDepartamento, '') AS cDepartamentoRes,      
  isnull(ur.cProvincia, '') AS cProvinciaRes,      
  isnull(ur.cDistrito, '') AS cDistritoRes,      
  CASE      
   WHEN ci.bSustentoCV=1 THEN 'SI'      
   ELSE 'NO'      
  END AS [VALIDADO TIENE SUSTENTO],      
  isnull(com.cComunidad,'') AS [LOCALIDAD COMUNIDAD],    
  isnull(com.cUbicacionZona,'') AS 'UGT',      
  cond.cCondicionSustento AS SUSTENTO,      
  cond.cNotas AS NOTAS      
 FROM CandidatoInforme ci      
 LEFT JOIN CandidatoInformeAdd cid ON ci.iCodCandidatoInforme=cid.iCodCandidatoInforme      
 LEFT JOIN TDOcupacion tdo1 ON cid.iCodOcupacion=tdo1.iCodOcupacion      
 LEFT JOIN TDOcupacion tdo2 ON cid.iCodOcupacion2=tdo2.iCodOcupacion      
 LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo      
 LEFT JOIN TDUbigeo ur ON ci.cUbigeoResidencia=ur.cUbigeo      
 LEFT JOIN CandidatoInformeCondicion cond ON ci.iCodCandidatoInforme=cond.iCodCandidatoInforme      
 LEFT JOIN TDCondicionSustento tdco ON cond.iCodTDCondicionSustentoNueva=tdco.iCodTDCondicionSustento      
 AND tdco.iCodUsuario=1      
 LEFT JOIN Comunidad com ON com.iCodComunidad=cond.iCodComunidad      
 AND com.iCodComunidad>1      
 WHERE cond.iCodCandidatoInformeCondicion=      
  (SELECT MAX(cond9.iCodCandidatoInformeCondicion)      
   FROM CandidatoInformeCondicion cond9      
   WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme)      
 ORDER BY CI.cDNI    
    
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_CandidatosTodoAuditoria]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_CandidatosTodoAuditoria]   
@dFechaIni Date,
@dFechaFin date 
AS   
BEGIN  

		SELECT ci.cDNI AS [DNI],
			   ci.iCodCandidatoInforme AS CID,
			   ci.dFechaCargaBox,
			   ci.cNombres + ' ' + ci.cApellidos AS [NOMBRES Y APELLIDOS],
			   ci.dFechaNac AS [FECHA NAC],
			   CASE
				   WHEN year(ci.dFechaNac)=1900 THEN ''
				   ELSE cast(year(ci.dFechaNac) AS varchar(6))
			   END AS [AÑO NACIMIENTO],
			   floor((cast(convert(varchar(8), getdate(), 112) AS int)- cast(convert(varchar(8), ci.dFechaNac, 112) AS int)) / 10000) AS [EDAD],
			   ci.cFono AS [FONO],
			   ci.cCorreo AS [CORREO],
			   ci.cSexo AS [GENERO],
			   CASE
				   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AID' THEN 'LOCAL'
				   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AIO' THEN 'LOCAL'
				   WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'LOCAL'
				   WHEN ltrim(rtrim(u.cUbigeo))='140902' THEN 'LOCAL'
				   WHEN ltrim(rtrim(u.cUbigeo))='090409' THEN 'LOCAL'
				   WHEN ltrim(rtrim(u.cUbigeo))='090401' THEN 'LOCAL'
				   ELSE 'FORANEO'
			   END AS [CONDICION],
			   CASE
				   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AID' THEN 'AID'
				   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AIO' THEN 'AIO'
				   WHEN LTRIM(RTRIM(u.cUbigeo))='020805'
						OR LTRIM(RTRIM(u.cUbigeo))='020813'
						OR LTRIM(RTRIM(u.cUbigeo))='021901'
						OR LTRIM(RTRIM(u.cUbigeo))='020814' THEN 'AID'
				   WHEN LTRIM(RTRIM(u.cUbigeo))='021901'
						OR LTRIM(RTRIM(u.cUbigeo))='020301'
						OR LTRIM(RTRIM(u.cUbigeo))='020304'
						OR LTRIM(RTRIM(u.cUbigeo))='020305'
						OR LTRIM(RTRIM(u.cUbigeo))='020310'
						OR LTRIM(RTRIM(u.cUbigeo))='020321'
						OR LTRIM(RTRIM(u.cUbigeo))='020323'
						OR LTRIM(RTRIM(u.cUbigeo))='020325'
						OR LTRIM(RTRIM(u.cUbigeo))='020803'
						OR LTRIM(RTRIM(u.cUbigeo))='021204'
						OR LTRIM(RTRIM(u.cUbigeo))='021205'
						OR LTRIM(RTRIM(u.cUbigeo))='021206'
						OR LTRIM(RTRIM(u.cUbigeo))='021209'
						OR LTRIM(RTRIM(u.cUbigeo))='021210'
						OR LTRIM(RTRIM(u.cUbigeo))='090401'
						OR LTRIM(RTRIM(u.cUbigeo))='090409'
						OR LTRIM(RTRIM(u.cUbigeo))='140902' THEN 'AIO'
				   WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN --REGIONAL
		 'REGIONAL'
				   ELSE 'FORANEO'
			   END AS [CONDICION DETALLE],
			   isnull(com.cComunidad, '') AS [COMUNIDAD],
			   CASE
				   WHEN ci.bCargaBox=1 THEN 'SI'
				   ELSE 'NO'
			   END AS [TIENE EXPEDIENTE], --ci.cPuestoEspecialidad as [ESPECIALIDAD],
		 isnull(
				  (SELECT top 1 cat1.cDisplayMember
				   FROM CandidatoEstudios cedu1
				   INNER JOIN catalogo cat1 ON cedu1.iGradoInstruccion=cat1.cValueMember
				   AND cat1.cTabla='Estudios'
				   AND cat1.cNombreGrupo='iGradoInstruccion'
				   WHERE cedu1.iCodCandidatoInforme=ci.iCodCandidatoInforme
				   ORDER BY cat1.iOrden DESC), CASE
												   WHEN ltrim(rtrim(ci.cEducaSecundaria))<>'' THEN 'SECUNDARIA'
												   WHEN ltrim(rtrim(ci.cEducatecnica))<>'' THEN 'TECNICO'
												   WHEN ltrim(rtrim(ci.ceducasuperior))<>'' THEN 'UNIVERSITARIO'
												   ELSE '---'
											   END) AS [GRADO INSTRUCCION],
		 isnull(
				  (SELECT top 1 cedu.cCarrera
				   FROM CandidatoEstudios cedu
				   INNER JOIN catalogo cat ON cedu.iGradoInstruccion=cat.cValueMember
				   AND cat.cTabla='Estudios'
				   AND cat.cNombreGrupo='iGradoInstruccion'
				   WHERE cedu.iCodCandidatoInforme=ci.iCodCandidatoInforme --and cedu.bActivo=1

				   ORDER BY cat.iOrden DESC),ci.cPuestoEspecialidad) AS [ESPECIALIDAD],
		 ci.cLicenciaConducir AS [LIC. CONDUCIR],

		  (SELECT top 1 cel.cPuesto
		   FROM CandidatoExperienciaLaboral cel
		   WHERE cel.iCodCandidatoInforme=ci.iCodCandidatoInforme
		   ORDER BY cel.dfechafin DESC) AS [PUESTO ÚLTIMA EXP. LABORAL],
		 ci.cMOCMONC AS [TIPO MMOO],
		 CASE
			 WHEN isnull(cid.iCodOcupacion, 0)=0 THEN ci.cOcupacion
			 ELSE CASE
					  WHEN tdo1.cNomOcupacion='NO CATALOGADO' THEN ''
					  ELSE tdo1.cNomOcupacion
				  END
		 END AS [OCUPACION 1],
		 CASE
			 WHEN cid.iCodOcupacion=0 THEN ci.iTiempoExperiencia
			 ELSE cid.iTiempoExperiencia
		 END AS [TIEMPO EXP. 1],
		 CASE
			 WHEN cid.iCodOcupacion=0 THEN (CASE
												WHEN year(ci.dFechaEvaluacionResultado)=1900 THEN ''
												ELSE cast(year(ci.dFechaEvaluacionResultado) AS varchar(6))
											END)
			 ELSE CASE
					  WHEN cid.iUltimaExperiencia=1900 THEN 0
					  ELSE cid.iUltimaExperiencia
				  END
		 END AS [AÑO ULT. EXP. 1],
		 cid.cRubroExperiencia AS [RUBRO EXP. 1],
		 cid.cSectorExperiencia AS [SECTOR EXP. 1],
		 CASE
			 WHEN isnull(cid.iCodOcupacion2, 0)=0 THEN ci.cOcupacion2
			 ELSE CASE
					  WHEN tdo2.cNomOcupacion='NO CATALOGADO' THEN ''
					  ELSE tdo2.cNomOcupacion
				  END
		 END AS [OCUPACION 2],
		 isnull(cid.iTiempoExperiencia2, '') AS [TIEMPO EXP. 2],
		 isnull(cid.iUltimaExperiencia2, '') AS [AÑO ULT. EXP. 2],
		 isnull(cid.cRubroExperiencia2, '') AS [RUBRO EXP. 2],
		 isnull(cid.cSectorExperiencia2, '') AS [SECTOR EXP. 2], --isnull(co.cNomContrata,'')  as [EECC FFLL ACTUAL] ,
		 --isnull(fld.cOcupacion ,'')  as [OCUPACION FFLL ACTUAL] ,
		 CASE
					(SELECT count(fld1.icodcandidatoinforme)
					 FROM fuerzalaboraldetalle fld1
					 INNER JOIN FuerzaLaboral fl1 ON fl1.iCodFuerzaLaboral=fld1.iCodFuerzaLaboral
					 INNER JOIN ContratistaContrato cto1 ON cto1.iCodContratistaContrato=fl1.iCodContratistaContrato
					 WHERE fld1.icodcandidatoinforme=ci.icodcandidatoinforme
					   AND cto1.cFase<>'NA')
			 WHEN 0 THEN 'NO'
			 ELSE 'SI'
		 END AS [LABORÓ EN AAQ],
		 isnull(
				  (SELECT top 1 fld2.cOcupacion
				   FROM fuerzalaboral fl2
				   INNER JOIN fuerzalaboraldetalle fld2 ON fl2.iCodFuerzaLaboral=fld2.iCodFuerzaLaboral
				   INNER JOIN ContratistaContrato cto2 ON fl2.iCodContratistaContrato=cto2.iCodContratistaContrato
				   AND cto2.cFase<>'NA'
				   WHERE fld2.icodcandidatoinforme=ci.icodcandidatoinforme
				   ORDER BY fld2.iCodFuerzaLaboralDetalle DESC) ,'') AS [ÚLTIMO PUESTO FFLL],
		 isnull(
				  (SELECT top 1 co3.cNomContrata
				   FROM fuerzalaboral fl3
				   INNER JOIN fuerzalaboraldetalle fld3 ON fl3.iCodFuerzaLaboral=fld3.iCodFuerzaLaboral
				   INNER JOIN ContratistaContrato cto3 ON fl3.iCodContratistaContrato=cto3.iCodContratistaContrato
				   AND cto3.cFase<>'NA'
				   INNER JOIN Contrata co3 ON cto3.iCodContrata=co3.iCodContrata
				   WHERE fld3.icodcandidatoinforme=ci.icodcandidatoinforme
				   ORDER BY fld3.iCodFuerzaLaboralDetalle DESC) ,'') AS [ÚLTIMA EMPRESA FFLL],
		 CASE (isnull(
						(SELECT count(fld4.iCodFuerzaLaboralDetalle)
						 FROM fuerzalaboral fl4
						 INNER JOIN fuerzalaboraldetalle fld4 ON fl4.iCodFuerzaLaboral=fld4.iCodFuerzaLaboral
						 INNER JOIN ContratistaContrato cto4 ON fl4.iCodContratistaContrato=cto4.iCodContratistaContrato
						 AND cto4.cFase<>'NA'
						 WHERE fld4.icodcandidatoinforme=ci.icodcandidatoinforme
						   AND fld4.bCesado=0
						   AND fl4.iPeriodo=year(getdate())
						   AND fl4.imes=month(getdate())) ,0))
			 WHEN 0 THEN 'NO'
			 ELSE 'SI'
		 END AS [ACTUALMENTE EN FFLL],
		 isnull(u.cDepartamento, '') AS cDepartamentoNac,
		 isnull(u.cProvincia, '') AS cProvinciaNac,
		 isnull(u.cDistrito, '') AS cDistritoNac,
		 isnull(ur.cDepartamento, '') AS cDepartamentoRes,
		 isnull(ur.cProvincia, '') AS cProvinciaRes,
		 isnull(ur.cDistrito, '') AS cDistritoRes,
		 CASE
			 WHEN ci.bSustentoCV=1 THEN 'SI'
			 ELSE 'NO'
		 END AS [VALIDADO TIENE SUSTENTO],
		 com.cComunidad AS [LOCALIDAD COMUNIDAD],
		 cond.cCondicionSustento AS SUSTENTO,
		 cond.cNotas AS NOTAS,
		 per.cNombres + ' ' + per.cApelP + ' ' + per.cApelM as [PERSONA REGISTRA],
		 CONVERT(VARCHAR(11), ci.dFechasis, 103) AS [FECHA REGISTRO]
		FROM CandidatoInforme ci
		LEFT JOIN CandidatoInformeAdd cid ON ci.iCodCandidatoInforme=cid.iCodCandidatoInforme
		LEFT JOIN TDOcupacion tdo1 ON cid.iCodOcupacion=tdo1.iCodOcupacion
		LEFT JOIN TDOcupacion tdo2 ON cid.iCodOcupacion2=tdo2.iCodOcupacion
		LEFT JOIN TDUbigeo u ON ci.cUbigeo=u.cUbigeo
		LEFT JOIN TDUbigeo ur ON ci.cUbigeoResidencia=ur.cUbigeo
		LEFT JOIN Usuario usua ON usua.iCodUsuario = ci.iCodUsuario
		LEFT JOIN PersonaNatural per On per.iCodPersona = usua.iCodPersona
		LEFT JOIN CandidatoInformeCondicion cond ON ci.iCodCandidatoInforme=cond.iCodCandidatoInforme
		LEFT JOIN TDCondicionSustento tdco ON cond.iCodTDCondicionSustentoNueva=tdco.iCodTDCondicionSustento
		AND tdco.iCodUsuario=1
		LEFT JOIN Comunidad com ON com.iCodComunidad=cond.iCodComunidad
		AND com.iCodComunidad>1
		WHERE cond.iCodCandidatoInformeCondicion=
			(SELECT MAX(cond9.iCodCandidatoInformeCondicion)
			 FROM CandidatoInformeCondicion cond9
			 WHERE cond9.iCodCandidatoInforme=ci.iCodCandidatoInforme)
	   ORDER BY ci.dFechaSis 
  
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_ConvocatoriaAtencionStatus]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO










CREATE PROCEDURE [rpt].[SP_RPT_ConvocatoriaAtencionStatus] @dFechaIni Date,@dFechaFin date
AS

select 
cm.cNroConvocatoria as [Nro], 
CASE cm.iTipo 
WHEN 1 THEN 'REGULAR'
WHEN 2 THEN 'EXCEPTUADO'
WHEN 3 THEN 'ADICIONAL'
WHEN 4 THEN 'DISPENSADO'
WHEN 5 THEN 'INTERMITENTE'
WHEN 6 THEN 'PGI'
WHEN 7 THEN 'STAKEHOLDER'
WHEN 8 THEN 'AAQ'
WHEN 9 THEN 'OTROS' 
WHEN 10 THEN 'REGULAR BBDD'
when 11 then 'INDIRECTO'
WHEN 12 THEN 'EXTERNO' 
ELSE '' END   as [Tipo],
co.cnomcontrata as [Contratista],
case 
		when cm.iCodContrata<>cm.iCodSubContrata   then
		sco.cNomContrata
		else ''
		end as [Sub Contrata],
cto.cNroContrato as [Nro. Contrato], 
c.cperfil as [Perfil],
cm.dFechaIni as [Inicio],
cm.dFechaFin as [Término] , 
c.icantidad as Solicitado,
c.iExceptuado as Exceptuado,
--c.iTotal as Total ,
c.iCantidad-c.iExceptuado as [Total Atención],
 c.iLiberado 
   as Liberados ,
--c.cDesPerfil,
count(cd.iCodCandidatoInforme) as [Propuesto/Postulación], 
sum(
case 
when cd.dFechaCargaCV is null then 0 
when cd.dFechaCargaCV='1900-01-01' then 0 
else 1 
end) as Enviados,

sum(case 
when cd.dFechaCargaCV<>'1900-01-01' then 
	 
		case 
		when isnull(cd.cRptaContrata,'')='' then
			 case 
			 when dateadd(day,7,cast(cm.dFechaFin as date))>cast(getdate() as date) then 1 
			 else 0 
			 END
		else
			0 
		end 
	 
else 0
end) as [En Evaluacion],
sum(case 
when cd.dFechaCargaCV<>'1900-01-01' then 
	case 
	when isnull(cd.cRptaContrata,'')=''  then 0 
	else 1
	end
else 0 
end 
 ) as Respondido,
 sum(case 
when cd.dFechaCargaCV<>'1900-01-01' then 
	case 
	when isnull(cd.cRptaContrata,'')=''  then 1
	else 0
	end
else 0 
end 
 ) as [Sin respuesta]

from convocatoriamain cm 
 inner join convocatoria c on cm.icodconvocatoriamain=c.icodconvocatoriaMain 
 left join convocatoriadetalle cd on c.icodconvocatoria=cd.icodconvocatoria 
 left join contrata co on cm.icodcontrata=co.icodcontrata  
 left JOIN  dbo.CandidatoInforme AS ci ON cd.iCodCandidatoInforme = ci.iCodCandidatoInforme 
 left join fuerzalaboraldetalle fld on ci.iCodCandidatoInforme=fld.iCodCandidatoInforme and fld.bCesado=0 and fld.iEstado<>0 
 left join fuerzalaboral fl on fld.iCodFuerzaLaboral=fl.iCodFuerzaLaboral 
left join contrata cont on fl.iCodContrata=cont.iCodContrata 
left join contratistacontrato cto on cm.iCodContratistaContrato=cto.icodContratistaContrato 
left join Usuario uc on cd.iCodUsuario=uc.iCodUsuario   
left join Contrata sco on cm.iCodSubContrata=sco.iCodContrata  
 where cm.dFechaIni>=@dFechaIni  and cm.dFechaIni<=@dFechaFin   
  and cm.iCodContrata<>127 --diferente a AAQ  
 and cto.cFase<>'NA'  
 and cm.iEstado=5  
  --and cm.iTipo in(1,3,4) 
 group by  cm.icodconvocatoriamain, cm.cNroConvocatoria,
c.cDesPerfil,
co.cnomcontrata,c.cperfil,c.icantidad,
cm.dFechaFin ,
cm.dFechaIni,cm.iTipo ,
c.iLiberado,
c.iExceptuado,c.iTotal ,
cto.cNroContrato ,cm.iCodContrata,cm.iCodSubContrata  ,sco.cNomContrata 

 order by cm.dfechaini,cm.icodconvocatoriamain
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_EmpresasContratistasLocales]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_EmpresasContratistasLocales] 
	@dFechaIni Date,
	@dFechaFin date
AS
BEGIN

	SELECT 
		cont.cNomContrata AS EMPRESA,
		cont.cRUC AS RUC,
		CASE cont.cTipoEmpresa WHEN 'EECC' THEN 'EMPRESA CONTRATISTA' ELSE cont.cTipoEmpresa END as TIPO_EMPRESA,
		cont.cCondicionEmpresa as CONDICION_CONTRATISTA,
		cont.cCondicionEmpresaDetalle as SITUACION,
		re.cRubroEmpresarial as RUBRO_EMPRESARIAL
		
	FROM dbo.Contrata cont
	LEFT JOIN prov.RubroEmpresarial re ON cont.iCodRubroEmpresarial= re.iCodRubroEmpresarial
	WHERE cont.cTipoEmpresa='EMPRESA LOCAL'
	
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_FFLL_LOCALES_COMU_ACTIVO_MESES_LANORA]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_FFLL_LOCALES_COMU_ACTIVO_MESES_LANORA] 
@dFechaIni Date,@dFechaFin date  
AS  
BEGIN
		select ci.cDNI as [DNI], 
		ci.cNombres AS [NOMREBS], ci.cApellidos AS [APELLIDOS],cCondicion AS [CONDICION], count(fld.iCodCandidatoInforme) AS [CANT LABORA MESES] from CandidatoInforme ci
		LEFT JOIN FuerzaLaboralDetalle fld ON ci.iCodCandidatoInforme=fld.iCodCandidatoInforme
		WHERE cCondicion in('COMUNIDAD','LOCAL') AND FLD.bCesado=0
		GROUP BY ci.cDNI, ci.cNombres, ci.cApellidos,cCondicion
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_FFLLDesmovilizado]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_FFLLDesmovilizado] @dFechaIni Date,@dFechaFin date
AS
select --fld.iCodFuerzaLaboralDetalle,
cast(fl.iPeriodo as varchar(6)) + ' ' + 
 (case  fl.imes 
 when 1 then 'ENERO' 
 when 2 then 'FEBRERO' 
 when 3 then 'MARZO' 
 when 4 then 'ABRIL' 
 when 5 then 'MAYO' 
 when 6 then 'JUNIO' 
 when 7 then 'JULIO' 
 when 8 then 'AGOSTO' 
 when 9 then 'SETIEMBRE' 
 when 10 then 'OCTUBRE' 
 when 11 then 'NOVIEMBRE' 
 when 12 then 'DICIEMBRE'  
 END) AS [MES CESE],
ci.cDNI as [DNI], 
ci.cNombres + ' ' + ci.cApellidos AS [NOMBRES Y APELLIDOS],
ci.cFono AS [FONO],
ci.cCorreo AS [CORREO], 
case ci.bSustentoCV
when 1 then
	case ci.cCondicion 
		when 'LOCAL' then 'LOCAL' 
		when 'RESIDENTE' then 'LOCAL' 
		when 'COMUNIDAD' then 'LOCAL' 
		when 'FORANEO' then 'FORANEO' 
		else 'FORANEO' 
	end
else 
	'FORANEO'
end as [CONDICION] ,
case ci.bSustentoCV
when 1 then
	 case when  ci.cCondicion = 'COMUNIDAD' then  ci.cComunidad 
	else 
		case  ci.cUbigeo 
		WHEN '170102' THEN 'CARUMAS [DISTRITO]'
		WHEN '170103' THEN 'CUCHUMBAYA [DISTRITO]' 
		WHEN '170104' THEN 'SANCRISTOBAL [DISTRITO]' 
		WHEN '170105' THEN 'TORATA [DISTRITO]'
		else '' end
	end 		
else ''  end  as [COMUNIDAD],
 case 
 when isnull(cid.iCodOcupacion,0)=0 then ci.cOcupacion 
 else 
	 CASE 
	 WHEN tdo1.cNomOcupacion='NO CATALOGADO' then ''
	 else tdo1.cNomOcupacion
	 END
 end 
 as [OCUPACION 1],
 case 
 when isnull(cid.iCodOcupacion2,0)=0 then ci.cOcupacion2 
 else
	 CASE 
	 WHEN tdo2.cNomOcupacion='NO CATALOGADO' then '' 
	 else tdo2.cNomOcupacion 
	 END
 end as [OCUPACION 2], 
--ci.iCodCandidatoInforme AS [ID],
co.cNomContrata AS [CONTRATISTA CESADO], 
 fld.cOcupacion as [OCUPACION FFLL CESADO],

 
  

 
--case fld.bcesado
--when 1 then 'CESADO' 
--when 0 then 'ACTIVO' 
--end as [STAT] ,
 
--  case 
 
--when fld.cnivel='A' then 'REGISTRADO' 
--when fld.cnivel ='N' then 'NUEVO ' end as [TIPO INICIAL]  ,
case 
 when isnull((select top 1 fld0.iCodFuerzaLaboralDetalle 
from FuerzaLaboralDetalle fld0 
where fld0.iCodCandidatoInforme=ci.iCodCandidatoInforme and fld0.bCesado=0 
and fld0.iPeriodo=year(getdate()) and fld0.iMes=MONTH(getdate())),0)>0 then 'SI'
else 'NO'
end as [FFLL ACTUAL] 
 
from FuerzaLaboral fl 
inner join fuerzalaboraldetalle fld on fl.iCodFuerzaLaboral=fld.iCodFuerzaLaboral 
inner join candidatoinforme ci on fld.iCodCandidatoInforme=ci.iCodCandidatoInforme 
inner join contrata sc on fld.iCodSubContrata=sc.iCodContrata 
inner join contrata co on fl.iCodContrata=co.iCodContrata 
left join ContratistaContrato cto on fl.iCodContratistaContrato=cto.iCodContratistaContrato 
 left join CandidatoInformeAdd cid on ci.iCodCandidatoInforme=cid.iCodCandidatoInforme 
left join TDOcupacion tdo1 on cid.iCodOcupacion=tdo1.iCodOcupacion 
left join TDOcupacion tdo2 on cid.iCodOcupacion2=tdo2.iCodOcupacion   
where fl.iPeriodo in(2023)  and fl.iMes in(7,8,9,10,11,12)  
 and fld.bCesado = 1 
 
  and cto.cFase<>'NA'  
 
 order by fl.iPeriodo,fl.imes,co.cnomcontrata,cnrocontrato,sc.cNomContrata  
 
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_PostulacionesOtraComunidad]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [rpt].[SP_RPT_PostulacionesOtraComunidad] @dFechaIni Date,@dFechaFin date
 AS


SELECT 
ci.cDNI as [DNI], 
ci.cNombres + ' ' + ci.cApellidos AS [NOMBRES Y APELLIDOS],
--case ci.bSustentoCV
--when 1 then
--	case ci.cCondicion 
--		when 'LOCAL' then 'LOCAL' 
--		when 'RESIDENTE' then 'LOCAL' 
--		when 'COMUNIDAD' then 'LOCAL' 
--		when 'FORANEO' then 'FORANEO' 
--		else 'FORANEO' 
--	end
--else 
--	'FORANEO'
--end as [CONDICION] ,
case ci.bSustentoCV
when 1 then
	 case when  ci.cCondicion = 'COMUNIDAD' then  ci.cComunidad 
	else 
		case  ci.cUbigeo 
		WHEN '170102' THEN 'CARUMAS [DISTRITO]'
		WHEN '170103' THEN 'CUCHUMBAYA [DISTRITO]' 
		WHEN '170104' THEN 'SANCRISTOBAL [DISTRITO]' 
		WHEN '170105' THEN 'TORATA [DISTRITO]'
		else '' end
	end 		
else ''  end  as [COMUNIDAD],
case
when ci.bCargaBox=1 then 'SI' 
else 'NO' end as [TIENE EXPEDIENTE], 
  floor(
(cast(convert(varchar(8),getdate(),112) as int)-
cast(convert(varchar(8),ci.dFechaNac,112) as int) ) / 10000
) as [EDAD],
ltrim(rtrim(co.cNomContrata)) as [EMPRESA AL QUE POSTULA], 
 case cm.iTipo 
when 1 then 'REGULAR'
WHEN 2 THEN 'EXCEPTUADO'
WHEN 3 THEN 'ADICIONAL'
WHEN 4 THEN 'DISPENSADO'
WHEN 5 THEN 'P. PLANTA'
WHEN 6 THEN 'PGI'
WHEN 7 THEN 'STAKEHOLDER'
WHEN 8 THEN 'AAQ'
WHEN 9 THEN 'OTROS' 
WHEN 10 THEN 'REGULAR BBDD' 
WHEN 11 THEN 'INDIRECTA' 
WHEN 12 THEN 'EXTERNA' 

ELSE '' END AS [TIPO CONV.],
cm.dFechaIni AS [FECHA CONV.], 
cv.cPerfil AS [PUESTO AL QUE POSTULA],
 CASE cd.iTipoPostulacion 
 WHEN 1 THEN 'OAEL-WEB' 
 WHEN 2 THEN 'SISTEMA' 
 WHEN 3 THEN 'EXCEPTUADO' 
  WHEN 4 THEN 'PREFERENCIAL' 
   WHEN 5 THEN 'SOLICITADO' 
        WHEN 6 THEN 'VIRTUAL APP' 
 WHEN 7 THEN 'STAKEHOLDER' 
    END AS [TIPO POSTULACIÓN],  
case
when cd.cEstado='D' then 'DISPONIBLE' 
when cd.cEstado='E' then 'EN ESPERA' 
when cd.cEstado='N' then 'NO DISPONIBLE' 
else '' end as [ESTADO],
   
 case 
 when cd.dFechaCargaCV<>'1900-01-01' then 'SI' 
 else 'NO' 
 end as [CV CARGADO], 
 case
 when cd.dFechaCargaCV<>'1900-01-01' then 
 convert(varchar(15),cd.dFechaCargaCV ,103) 
 else '' end as [FECHA CARGA CV] ,
  case 
 when cd.dFechaCargaCV<>'1900-01-01' then cd.cRptaContrata 
 else '' 
 end as [RESPUESTA EECC], 
  case
 when cd.dFechaContactoContrata1<>'1900-01-01' then 
 convert(varchar(15),cd.dFechaContactoContrata1 ,103) 
 else '' end as [FECHA RPTA EECC] ,
 case (select count(fld1.icodcandidatoinforme) from fuerzalaboraldetalle fld1 
inner join FuerzaLaboral fl1 on fl1.iCodFuerzaLaboral=fld1.iCodFuerzaLaboral 
inner join ContratistaContrato cto1 on cto1.iCodContratistaContrato=fl1.iCodContratistaContrato  
where fld1.icodcandidatoinforme=ci.icodcandidatoinforme and cto1.cFase<>'NA' ) 
when  0 then 'NO' 
else 'SI' 
end as [LABORÓ EN AAQ] ,
isnull((select top 1 fld2.cOcupacion from   fuerzalaboral fl2 
inner join fuerzalaboraldetalle fld2 on fl2.iCodFuerzaLaboral=fld2.iCodFuerzaLaboral  
inner join ContratistaContrato cto2 on fl2.iCodContratistaContrato=cto2.iCodContratistaContrato and cto2.cFase<>'NA'  
where fld2.icodcandidatoinforme=ci.icodcandidatoinforme order by fld2.iCodFuerzaLaboralDetalle desc ) ,'') 
as [ÚLTIMO PUESTO FFLL] ,
isnull((select top 1 co3.cNomContrata   from fuerzalaboral fl3 
inner join fuerzalaboraldetalle fld3 on fl3.iCodFuerzaLaboral=fld3.iCodFuerzaLaboral  
inner join ContratistaContrato cto3 on fl3.iCodContratistaContrato=cto3.iCodContratistaContrato and cto3.cFase<>'NA'  
inner join Contrata co3 on cto3.iCodContrata=co3.iCodContrata  
where fld3.icodcandidatoinforme=ci.icodcandidatoinforme order by fld3.iCodFuerzaLaboralDetalle desc ) ,'') 
as [ÚLTIMA EMPRESA FFLL] ,
 --   case isnull(fld.iCodFuerzaLaboralDetalle,0)
 --when 0 then 'NO'
 --else 'SI' 
 --end as   [ACTUALMENTE EN FFLL] ,
 case (
 isnull(
 (select count(fld4.iCodFuerzaLaboralDetalle) from   fuerzalaboral fl4 
inner join fuerzalaboraldetalle fld4 on fl4.iCodFuerzaLaboral=fld4.iCodFuerzaLaboral  
inner join ContratistaContrato cto4 on fl4.iCodContratistaContrato=cto4.iCodContratistaContrato and cto4.cFase<>'NA'  
where fld4.icodcandidatoinforme=ci.icodcandidatoinforme and fld4.bCesado=0 
and fl4.iPeriodo=year(getdate()) and fl4.imes=month(getdate())  
  )
,0) 
)
when 0 then 'NO'
else 'SI' 
end 
as  [ACTUALMENTE EN FFLL] 
 
FROM dbo.ConvocatoriaDetalle AS cd 
 
 left JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria 
 left JOIN  ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
 left join  Contrata AS co ON cm.iCodContrata = co.iCodContrata  
 left join contratistacontrato cto on cm.iCodContratistaContrato=cto.icodContratistaContrato 
 left join CandidatoInforme ci on cd.iCodCandidatoInforme=ci.iCodCandidatoInforme  
-- left join anexoadmisiondetalle aad on ci.iCodCandidatoInforme=a4ad.iCodCandidatoInforme and aad.bAnulado=0  
--- left join anexoadmision aa on aad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
--left join contrata conta on aa.iCodContrata=conta.iCodContrata and  cm.iCodContrata=aa.iCodContrata
 where cm.dFechaIni>=@dFechaIni  and cm.dFechaIni<=@dFechaFin 
     and cm.iCodContrata<>127 --diferente a AAQ  
 and cto.cFase<>'NA'  
 and cm.iEstado=5  
 --and ci.cComunidad in('TITIRE','ARUNTAYA','CAMBRUNE')
 and ci.bSustentoCV=1 
 and ci.cCondicion='COMUNIDAD' 
 --antes era ini
--order by cd.icodconvocatoriadetalle desc,cm.cNroConvocatoria, cNomContrata,cSubContrata,dfechafin,cPerfil  
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_PostulacionesTPCT]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_PostulacionesTPCT] @dFechaIni Date,@dFechaFin date
AS


SELECT 
ci.cDNI as [DNI], 
ci.cNombres + ' ' + ci.cApellidos AS [NOMBRES Y APELLIDOS],
 case cm.iTipo 
when 1 then 'REGULAR'
WHEN 2 THEN 'EXCEPTUADO'
WHEN 3 THEN 'ADICIONAL'
WHEN 4 THEN 'DISPENSADO'
WHEN 5 THEN 'P. PLANTA'
WHEN 6 THEN 'PGI'
WHEN 7 THEN 'STAKEHOLDER'
WHEN 8 THEN 'AAQ'
WHEN 9 THEN 'OTROS' 
WHEN 10 THEN 'REGULAR BBDD' 
WHEN 11 THEN 'INDIRECTA' 
WHEN 12 THEN 'EXTERNA' 

ELSE '' END AS [TIPO CONV.],
ltrim(rtrim(co.cNomContrata)) as [EMPRESA], 
cm.dFechaIni AS [FECHA REQ.], 
cv.cPerfil AS [PERFIL],
 CASE cd.iTipoPostulacion 
 WHEN 1 THEN 'OAEL-WEB' 
 WHEN 2 THEN 'SISTEMA' 
 WHEN 3 THEN 'EXCEPTUADO' 
  WHEN 4 THEN 'PREFERENCIAL' 
   WHEN 5 THEN 'SOLICITADO' 
        WHEN 6 THEN 'VIRTUAL APP' 
 WHEN 7 THEN 'STAKEHOLDER' 
    END AS [TIPO POSTULACIÓN],  
case
when cd.cEstado='D' then 'DISPONIBLE' 
when cd.cEstado='E' then 'EN ESPERA' 
when cd.cEstado='N' then 'NO DISPONIBLE' 
else '' end as [ESTADO],
   
 case 
 when cd.dFechaCargaCV<>'1900-01-01' then 'SI' 
 else 'NO' 
 end as [CV CARGADO], 
 case
 when cd.dFechaCargaCV<>'1900-01-01' then 
 convert(varchar(15),cd.dFechaCargaCV ,103) 
 else '' end as [FECHA CARGA CV] 
 
FROM dbo.ConvocatoriaDetalle AS cd 
 
 left JOIN dbo.Convocatoria AS cv ON cd.iCodConvocatoria = cv.iCodConvocatoria 
 left JOIN  ConvocatoriaMain cm on cv.iCodConvocatoriaMain=cm.iCodConvocatoriaMain 
 left join  Contrata AS co ON cm.iCodContrata = co.iCodContrata  
 left join contratistacontrato cto on cm.iCodContratistaContrato=cto.icodContratistaContrato 
 left join CandidatoInforme ci on cd.iCodCandidatoInforme=ci.iCodCandidatoInforme  
-- left join anexoadmisiondetalle aad on ci.iCodCandidatoInforme=a4ad.iCodCandidatoInforme and aad.bAnulado=0  
--- left join anexoadmision aa on aad.iCodAnexoAdmision=aa.iCodAnexoAdmision 
--left join contrata conta on aa.iCodContrata=conta.iCodContrata and  cm.iCodContrata=aa.iCodContrata
 where cm.dFechaIni>=@dFechaIni  and cm.dFechaIni<=@dFechaFin 
     and cm.iCodContrata<>127 --diferente a AAQ  
 and cto.cFase<>'NA'  
 and cm.iEstado=5  
 and ci.cComunidad='CCTPCT' 
 and ci.bSustentoCV=1 
 and ci.cCondicion='COMUNIDAD' 
 --antes era ini
--order by cd.icodconvocatoriadetalle desc,cm.cNroConvocatoria, cNomContrata,cSubContrata,dfechafin,cPerfil  
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_ProveeCatalogoBienesServicios]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [rpt].[SP_RPT_ProveeCatalogoBienesServicios] @dFechaIni Date,@dFechaFin date
AS
 SELECT 
   CASE 
   WHEN bs.cTipo='B' then 'BIENES' 
   WHEN bs.cTipo='S' then 'SERVICIO'
   end 
   AS TIPO,
 rbs.cRubroBienesServicios as [RUBRO], 
 cbs.cCategoriaBienesServicios as CATEGORIA ,
 bs.cDetalleBienesServicios [DETALLE DEL BIEN O SERVICIO],
 tm.cNomMedida as [UNID. MED.]  

  FROM prov.CatalogoBienesServicios bs 
  left join prov.CategoriaBienesServicios cbs on bs.iCodCategoriaBienesServicios=cbs.iCodCategoriaBienesServicios 
 left join prov.TipoMedida tm on bs.iCodTipoMedida=tm.iCodTipoMedida 
 left join prov.RubroBienesServicios rbs on cbs.iCodRubroBienesServicios=rbs.iCodRubroBienesServicios 

GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_ProveeEmpresasLocales]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [rpt].[SP_RPT_ProveeEmpresasLocales] @dFechaIni Date,@dFechaFin date
AS
 SELECT 
 co.cRUC as RUC,
 co.cNomContrata as [RAZÓN SOCIAL] ,
 CASE
 WHEN re.iCodRubroEmpresarial=1 then 'SIN DATOS' 
 else re.cRubroEmpresarial 
 END as [RUBRO EMPRESARIAL SISTEMA],
 co.cCondicionEmpresa as [CONDICIÓN],
 co.cCondicionEmpresaDetalle AS [PROCEDENCIA] ,
 co.cResponsable AS [RESPONSABLE],
 co.cFono AS [TELÉFONO],
 co.cCorreo  AS [CORREO]  ,
 ISNULL(CONVERT(VARCHAR(20),su.dFechaInicioActividades,103),'') as [FECHA INICIO SUNAT],
 ISNULL(su.cEstadoContribuyente,'')  as [ESTADO SUNAT],
 ISNULL(su.cCondicionContribuyente,'')  AS [CONDICION SUNAT],
 ISNULL(ru1.cRubroEmpresarial,'')  as [RUBRO EMPRESARIAL PRINCIPAL] ,
 ISNULL( ru2.cRubroEmpresarial,'')  as [RUBRO EMPRESARIAL SECUNDARIO 01],
 ISNULL( ub.cDepartamento,'')  as [DEPARTAMENTO DOM. FISCAL] ,
  ISNULL(ub.cProvincia,'')  as [PROVINCIA DOM. FISCAL] ,
  ISNULL(ub.cDistrito,'')  as [DISTRITO DOM. FISCAL] 


 FROM dbo.Contrata co 
 LEFT join prov.RubroEmpresarial re on co.iCodRubroEmpresarial=re.iCodRubroEmpresarial 
 left join dbo.ContrataSunatInfo su on co.iCodContrata=su.iCodContrata 
 left join prov.RubroEmpresarial ru1 on su.iCodRubroEmpresarialPrincipal=ru1.iCodRubroEmpresarial 
  left join prov.RubroEmpresarial ru2 on su.iCodRubroEmpresarialPrincipal=ru2.iCodRubroEmpresarial 
  left join dbo.TDUbigeo ub on su.cUbigeoDomicilioFiscal=ub.cUbigeo 

 WHERE co.cTipoEmpresa in('EMPRESA LOCAL') 
  and (su.iCodContrataSunatInfo=(
select MAX(sunat.iCodContrataSunatInfo) 
FROM dbo.ContrataSunatInfo sunat 
WHERE sunat.iCodContrata=co.iCodContrata  
)  or su.iCodContrataSunatInfo IS NULL) 
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_ProveeEvaluacionImeDetalleEmpresas]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_ProveeEvaluacionImeDetalleEmpresas] 
@dFechaIni Date,@dFechaFin date 
AS
BEGIN
	SELECT -- ev.iPeriodo + ev.iMes as [PERIODO-MES],
	 ev.iPeriodo AS [PERIODO],
	 ev.iMes AS [NRO. MES],
	 CASE ev.iMes
		 WHEN 1 THEN 'ENERO'
		 WHEN 2 THEN 'FEBRERO'
		 WHEN 3 THEN 'MARZO'
		 WHEN 4 THEN 'ABRIL'
		 WHEN 5 THEN 'MAYO'
		 WHEN 6 THEN 'JUNIO'
		 WHEN 7 THEN 'JULIO'
		 WHEN 8 THEN 'AGOSTO'
		 WHEN 9 THEN 'SETIEMBRE'
		 WHEN 10 THEN 'OCTUBRE'
		 WHEN 2 THEN 'NOVIEMBRE'
		 WHEN 2 THEN 'DICIEMBRE'
		 ELSE ''
	 END AS [MES],
	 co.cRUC AS [RUC],
	 co.cNomContrata AS [RAZÓN SOCIAL],
	 comu.cTipoCompromiso AS [COMUNIDAD EMPRESA],
	 co.cCondicionEmpresaDetalle as [TIPO AREA INFLUENCIA EMPRESA],
	 co.cResponsable AS [RESPONSABLE EMPRESA],  
	 co.cFono AS [TELÉFONO EMPRESA],  
	 co.cCorreo  AS [CORREO EMPRESA],  
	 ISNULL(su.dFechaInicioActividades, NULL) AS [FECHA INICIO SUNAT],
	 ISNULL(su.cEstadoContribuyente, '') AS [ESTADO SUNAT],
	 ISNULL(su.cCondicionContribuyente, '') AS [CONDICION SUNAT],
	 ISNULL(su.cActividadPrincipal, '') AS [SUNAT ACTIVIDAD PRINCIPAL],
	 ISNULL(ru1.cRubroEmpresarial, '') AS [RUBRO EMPRESARIAL PRINCIPAL],
	 ISNULL(su.cActividadSecundariaUno, '') AS [SUNAT ACTIVIDAD SECUNDARIA 01],
	 ISNULL(ru2.cRubroEmpresarial, '') AS [RUBRO EMPRESARIAL SECUNDARIO 01],
	 ISNULL(su.cActividadSecundariaDos, '') AS [SUNAT ACTIVIDAD SECUNDARIA 02],
	 ISNULL(ub.cDepartamento, '') AS [DEPARTAMENTO DOM. FISCAL],
	 ISNULL(ub.cProvincia, '') AS [PROVINCIA DOM. FISCAL],
	 ISNULL(ub.cDistrito, '') AS [DISTRITO DOM. FISCAL],
	 ej.cNomEje AS [EJE],
	 ej.nPonderacion AS [PONDERACIÓN EJE],
	 ed.cNomCriterio AS [CRITERIO],
	 ejc.nPonderacion AS [PONDERACIÓN CRITERIO],
	 ed.cEstadoRevisado AS [ESTADO REVISIÓN],
	 ed.cDetalleValor AS [VALOR EVALUADO],
	 (ed.nPuntuacion/NullIf(ejc.nValorSuperior, 0)*ejc.nPonderacion) AS [PUNTAJE DEL CRITERIO],
	 CASE
		 WHEN cast(ed.dFechaUsuarioRevisado AS date)='1900-01-01' THEN NULL
		 ELSE cast(ed.dFechaUsuarioRevisado AS date)
	 END AS [FECHA REVISIÓN]
	FROM prov.EvaluacionIME ev
	INNER JOIN dbo.Contrata co ON ev.iCodContrata=co.iCodContrata
	INNER JOIN prov.EvaluacionImeDetalle ed ON ev.iCodEvaluacionIME=ed.iCodEvaluacionIME
	INNER JOIN prov.EjeCriterio ejc ON ed.iCodEjeCriterio=ejc.iCodEjeCriterio
	INNER JOIN prov.Eje ej ON ejc.iCodEje=ej.iCodEje
	LEFT JOIN dbo.ContrataSunatInfo su ON co.iCodContrata=su.iCodContrata
	LEFT JOIN prov.RubroEmpresarial ru1 ON su.iCodRubroEmpresarialPrincipal=ru1.iCodRubroEmpresarial
	LEFT JOIN prov.RubroEmpresarial ru2 ON su.iCodRubroEmpresarialPrincipal=ru2.iCodRubroEmpresarial
	LEFT JOIN dbo.TDUbigeo ub ON su.cUbigeoDomicilioFiscal=ub.cUbigeo --left join prov.EjeCriterioValor ecv on ed.iCodEjeCriterioValor=ecv.iCodEjeCriterioValor
	LEFT JOIN dbo.Comunidad comu ON comu.iCodComunidad = co.iCodComunidadEmpresa 
	WHERE (su.iCodContrataSunatInfo=
			 (SELECT MAX(sunat.iCodContrataSunatInfo)
			  FROM dbo.ContrataSunatInfo sunat
			  WHERE sunat.iCodContrata=co.iCodContrata)
		   OR su.iCodContrataSunatInfo IS NULL)
	ORDER BY ev.iMes,
			 ev.iCodContrata
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_ProveeEvaluacionImeGeneral]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_ProveeEvaluacionImeGeneral]     
@dFechaIni DATE, @dFechaFin DATE AS     
BEGIN WITH DATOS AS    
  (SELECT ev.iPeriodo AS [PERIODO],    
          dbo.fnNombreDelMesPorNroMes(ev.iMes) AS [NRO. MES],    
          co.cRUC AS [RUC],    
          co.cNomContrata AS [RAZÓN SOCIAL],
		  comu.cTipoCompromiso AS [COMUNIDAD EMPRESA],
          co.cResponsable AS [RESPONSABLE EMPRESA],    
          co.cFono AS [TELÉFONO EMPRESA],    
          co.cCorreo AS [CORREO EMPRESA],  
          co.cCondicionEmpresaDetalle as [TIPO AREA INFLUENCIA EMPRESA],    
          ISNULL(su.dFechaInicioActividades, NULL) AS [FECHA INICIO SUNAT],    
          ISNULL(su.cEstadoContribuyente, '') AS [ESTADO SUNAT],    
          ISNULL(su.cCondicionContribuyente, '') AS [CONDICION SUNAT],    
          ISNULL(su.cActividadPrincipal, '') AS [SUNAT ACTIVIDAD PRINCIPAL],    
          ISNULL(ru1.cRubroEmpresarial, '') AS [RUBRO EMPRESARIAL PRINCIPAL],    
          ISNULL(su.cActividadSecundariaUno, '') AS [SUNAT ACTIVIDAD SECUNDARIA 01],    
          ISNULL(ru2.cRubroEmpresarial, '') AS [RUBRO EMPRESARIAL SECUNDARIO 01],    
          ISNULL(su.cActividadSecundariaDos, '') AS [SUNAT ACTIVIDAD SECUNDARIA 02],    
          ISNULL(ub.cDepartamento, '') AS [DEPARTAMENTO DOM. FISCAL],    
          ISNULL(ub.cProvincia, '') AS [PROVINCIA DOM. FISCAL],    
          ISNULL(ub.cDistrito, '') AS [DISTRITO DOM. FISCAL],    
          ej.cNomEje AS [EJE],    
          SUM(ed. nPuntuacion / NULLIF(ejc.nValorSuperior, 0) * ejc.nPonderacion) AS [SUMA PUNTAJE]    
   FROM prov.EvaluacionIME ev    
   INNER JOIN dbo.Contrata co ON ev.iCodContrata = co.iCodContrata    
   INNER JOIN prov.EvaluacionImeDetalle ed ON ev.iCodEvaluacionIME = ed.iCodEvaluacionIME    
   INNER JOIN prov.EjeCriterio ejc ON ed.iCodEjeCriterio = ejc.iCodEjeCriterio    
   INNER JOIN prov.Eje ej ON ejc.iCodEje = ej.iCodEje    
   LEFT JOIN dbo.ContrataSunatInfo su ON co.iCodContrata = su.iCodContrata    
   LEFT JOIN prov.RubroEmpresarial ru1 ON su.iCodRubroEmpresarialPrincipal = ru1.iCodRubroEmpresarial    
   LEFT JOIN prov.RubroEmpresarial ru2 ON su.iCodRubroEmpresarialPrincipal = ru2.iCodRubroEmpresarial    
   LEFT JOIN dbo.TDUbigeo ub ON su.cUbigeoDomicilioFiscal = ub.cUbigeo    
   LEFT JOIN dbo.Comunidad comu ON comu.iCodComunidad = co.iCodComunidadEmpresa    
   WHERE (su.iCodContrataSunatInfo =    
            (SELECT MAX(sunat.iCodContrataSunatInfo)    
             FROM dbo.ContrataSunatInfo sunat    
             WHERE sunat.iCodContrata = co.iCodContrata)    
          OR su.iCodContrataSunatInfo IS NULL)    
     AND ev.iPeriodo = YEAR(@dFechaIni)    
     AND ev.iMes = MONTH(@dFechaIni)    
   GROUP BY ev.iPeriodo,    
            ev.iMes,    
            co.cRUC,    
            co.cNomContrata,
			comu.cTipoCompromiso,
            co.cResponsable,    
            co.cFono,    
            co.cCorreo,  
            co.cCondicionEmpresaDetalle,  
            su.dFechaInicioActividades,    
            su.cEstadoContribuyente,    
            su.cCondicionContribuyente,    
            su.cActividadPrincipal,    
            ru1.cRubroEmpresarial,    
            su.cActividadSecundariaUno,    
            ru2.cRubroEmpresarial,    
            su.cActividadSecundariaDos,    
            ub.cDepartamento,    
            ub.cProvincia,    
            ub.cDistrito,    
            ej.cNomEje)    
SELECT [PERIODO],    
       [NRO. MES],    
       [RUC],    
       [RAZÓN SOCIAL],
	   [COMUNIDAD EMPRESA],
       [RESPONSABLE EMPRESA],    
       [TELÉFONO EMPRESA],    
       [CORREO EMPRESA],  
    [TIPO AREA INFLUENCIA EMPRESA],  
       [FECHA INICIO SUNAT],    
       [ESTADO SUNAT],    
       [CONDICION SUNAT],    
       [SUNAT ACTIVIDAD PRINCIPAL],    
       [RUBRO EMPRESARIAL PRINCIPAL],    
       [SUNAT ACTIVIDAD SECUNDARIA 01],    
       [RUBRO EMPRESARIAL SECUNDARIO 01],    
       [SUNAT ACTIVIDAD SECUNDARIA 02],    
       [DEPARTAMENTO DOM. FISCAL],    
       [PROVINCIA DOM. FISCAL],    
       [DISTRITO DOM. FISCAL],    
       CAST(CAST([FINANCIERO] * 100 AS INT) AS VARCHAR(10)) + '%' AS [FINANCIERO],    
    CAST(CAST([INFRAESTRUCTURA] * 100 AS INT) AS VARCHAR(10)) + '%' AS [INFRAESTRUCTURA],    
       CAST(CAST([LEGAL] * 100 AS INT) AS VARCHAR(10)) + '%' AS [LEGAL],    
       CAST(CAST([OPERACIONES] * 100 AS INT) AS VARCHAR(10)) + '%' AS [OPERACIONES],    
       CAST(CAST([REPUTACIONAL] * 100 AS INT) AS VARCHAR(10)) + '%' AS [REPUTACIONAL],    
       CAST(CAST([SOCIAL] * 100 AS INT) AS VARCHAR(10)) + '%' AS [SOCIAL],    
       CAST([VALOR_IME] AS VARCHAR(10)) + '%' AS [TOTAL_EJE],    
       CASE    
           WHEN [VALOR_IME] BETWEEN 0 AND 29 THEN 'IME 5'    
           WHEN [VALOR_IME] BETWEEN 30 AND 39 THEN 'IME 4'    
           WHEN [VALOR_IME] BETWEEN 40 AND 49 THEN 'IME 3'    
           WHEN [VALOR_IME] BETWEEN 50 AND 64 THEN 'IME 2'    
           WHEN [VALOR_IME] >= 65 THEN 'IME 1'    
       END AS [IME]    
FROM    
  (SELECT *,    
          CAST((([FINANCIERO] * 0.3) + ([INFRAESTRUCTURA] * 0.15) + ([LEGAL] * 0.1) + ([OPERACIONES] * 0.25) + ([REPUTACIONAL] * 0.1) + ([SOCIAL] * 0.1)) * 100 AS INT) AS [VALOR_IME]    
   FROM    
     (SELECT [PERIODO],    
             [NRO. MES],    
             [RUC],    
             [RAZÓN SOCIAL],
			 [COMUNIDAD EMPRESA],
             [RESPONSABLE EMPRESA],    
             [TELÉFONO EMPRESA],    
             [CORREO EMPRESA],  
    [TIPO AREA INFLUENCIA EMPRESA],  
             [FECHA INICIO SUNAT],    
             [ESTADO SUNAT],    
             [CONDICION SUNAT],    
             [SUNAT ACTIVIDAD PRINCIPAL],    
             [RUBRO EMPRESARIAL PRINCIPAL],    
             [SUNAT ACTIVIDAD SECUNDARIA 01],    
             [RUBRO EMPRESARIAL SECUNDARIO 01],    
             [SUNAT ACTIVIDAD SECUNDARIA 02],    
             [DEPARTAMENTO DOM. FISCAL],    
             [PROVINCIA DOM. FISCAL],    
             [DISTRITO DOM. FISCAL],    
             [EJE],    
             [SUMA PUNTAJE]    
      FROM DATOS) AS SourceData PIVOT (SUM([SUMA PUNTAJE])    
                                       FOR [EJE] IN ([FINANCIERO],    
                                                     [INFRAESTRUCTURA],    
                                                     [LEGAL],    
                                                     [OPERACIONES],    
                                                     [REPUTACIONAL],    
                                                     [SOCIAL])) AS PivotTable) AS FinalData     
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_ProveeRepresentanteEmpresasLocales]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [rpt].[SP_RPT_ProveeRepresentanteEmpresasLocales]     
@dFechaIni Date,@dFechaFin date     
AS    
BEGIN    

		SELECT C.cRUC AS 'RUC',
			   C.cNomContrata AS 'CONTRATISTA',
			   C.cTipoEmpresa AS 'TIPO_EMPRESA',
			   CI.cDNI AS 'DNI_REPRESENTANTE',
			   CI.cApellidos + ' ' + ci.cNombres AS 'NOMBRE_COMPLETO_REPRESENTANTE',
			   CI.cFono AS 'FONO_REPRESENTATE',
			   CI.cCorreo AS 'CORREO_REPRESENTANTE',
			   CASE
				   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AID' THEN 'AID'
				   WHEN ISNULL(com.cTipoAreaInfluencia, '')='AIO' THEN 'AIO'
				   WHEN LTRIM(RTRIM(u.cUbigeo))='020805'
						OR LTRIM(RTRIM(u.cUbigeo))='020813'
						OR LTRIM(RTRIM(u.cUbigeo))='021901'
						OR LTRIM(RTRIM(u.cUbigeo))='020814' THEN 'AID'
				   WHEN LTRIM(RTRIM(u.cUbigeo))='021901'
						OR LTRIM(RTRIM(u.cUbigeo))='020301'
						OR LTRIM(RTRIM(u.cUbigeo))='020304'
						OR LTRIM(RTRIM(u.cUbigeo))='020305'
						OR LTRIM(RTRIM(u.cUbigeo))='020310'
						OR LTRIM(RTRIM(u.cUbigeo))='020321'
						OR LTRIM(RTRIM(u.cUbigeo))='020323'
						OR LTRIM(RTRIM(u.cUbigeo))='020325'
						OR LTRIM(RTRIM(u.cUbigeo))='020803'
						OR LTRIM(RTRIM(u.cUbigeo))='021204'
						OR LTRIM(RTRIM(u.cUbigeo))='021205'
						OR LTRIM(RTRIM(u.cUbigeo))='021206'
						OR LTRIM(RTRIM(u.cUbigeo))='021209'
						OR LTRIM(RTRIM(u.cUbigeo))='021210'
						OR LTRIM(RTRIM(u.cUbigeo))='090401'
						OR LTRIM(RTRIM(u.cUbigeo))='090409'
						OR LTRIM(RTRIM(u.cUbigeo))='140902' THEN 'AIO'
				   WHEN ltrim(rtrim(substring(u.cUbigeo, 1, 2)))='02' THEN 'REGIONAL'
				   ELSE 'FORANEO'
			   END AS [PROCEDENCIA_REPRESENTATE],
			   CI.cComunidad AS [COMUNIDAD_REPRESENTANTE],
			   ISNULL(COM.cUbicacionZona,'') AS [UGT],
			   isnull(u.cDepartamento, '') AS [DEPARTAMENTO NACI REPRESENTANTE],
			   isnull(u.cProvincia, '') AS [PROVINCIA NACI REPRESENTANTE],
			   isnull(u.cDistrito, '') AS [DISTRITO NACI REPRESENTANTE]
		FROM CONTRATAREPRESENTANTE CR
		INNER JOIN CANDIDATOINFORME CI ON CR.ICODCANDIDATOINFORME= CI.ICODCANDIDATOINFORME
		LEFT JOIN CONTRATA C ON C.ICODCONTRATA = CR.ICODCONTRATA
		LEFT JOIN TDUbigeo U ON CI.cUbigeo=U.cUbigeo
		LEFT JOIN Comunidad com ON com.cComunidad=CI.cComunidad AND com.iCodComunidad>1
		WHERE C.CTIPOEMPRESA='EMPRESA LOCAL'  
    
END
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_ProveeRequerimientosLista]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


create PROCEDURE [rpt].[SP_RPT_ProveeRequerimientosLista]   @dFechaIni date,@dFechaFin date           
AS          
BEGIN        
  SELECT   
	r.cNroRequerimiento AS [NRO REQUERIMIENTO],
ter.cEstadoRequerimiento  AS [ESTADO], 
isnull(tr.cTipoRequerimiento,'') as [TIPO REQUERIMIENTO], 
 r.dFechaConvocatoriaIni as [F. INI],
 r.dFechaConvocatoriaFin AS [F. FIN],
cto.cNroContrato  AS [NRO CONTRATO], 
 ct.cNomContrata AS [EMPRESA SOLICITANTE], 
 case 
 when r.iCodContrata<>r.iCodSubContrata then  isnull(sct.cNomContrata,'') 
 else '' end  
  AS [SUB CONTRATA], 
   case 
 when  r.bLiberado = 1 then 'SI' 
 else 'NO' 
 end as 
 [LIBERADO] 
FROM         prov.requerimiento AS r left JOIN
  dbo.Contrata AS ct ON r.iCodContrata = ct.iCodContrata 
   left join dbo.Contrata sct on sct.iCodContrata=r.iCodSubContrata   
 left join ContratistaContrato cto on r.iCodContratistaContrato=cto.iCodContratistaContrato  
 left join prov.TipoRequerimiento tr on r.iCodTipoRequerimiento=tr.iCodTipoRequerimiento 
 left join prov.TipoEstadoRequerimiento ter on r.iCodTipoEstadoRequerimiento=ter.iCodTipoEstadoRequerimiento 



 WHERE cast(r.dFechaSolicitud as date)>=@dFechaIni and cast(r.dFechaSolicitud as date)<=@dFechaFin 

END 
GO
/****** Object:  StoredProcedure [rpt].[SP_RPT_ProveeRequerimientosListaDetalle]    Script Date: 30/08/2025 13:43:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [rpt].[SP_RPT_ProveeRequerimientosListaDetalle]   @dFechaIni date,@dFechaFin date           
AS          
BEGIN        
   SELECT   
	r.cNroRequerimiento AS [NRO REQUERIMIENTO],
ter.cEstadoRequerimiento  AS [ESTADO], 
isnull(tr.cTipoRequerimiento,'') as [TIPO REQUERIMIENTO], 
 r.dFechaConvocatoriaIni as [F. INI],
 r.dFechaConvocatoriaFin AS [F. FIN],
cto.cNroContrato  AS [NRO CONTRATO], 
 ct.cNomContrata AS [EMPRESA SOLICITANTE], 
 case 
 when r.iCodContrata<>r.iCodSubContrata then  isnull(sct.cNomContrata,'') 
 else '' end  
  AS [SUB CONTRATA], 
   case 
 when  r.bLiberado = 1 then 'SI' 
 else 'NO' 
 end as 
 [LIBERADO] ,
 cbs.cCategoriaBienesServicios as [CATEGORIA ByS] ,
 bs.cDetalleBienesServicios  AS [DETALLE CATALOGO ByS],
 rd.cDescripcionBienServicio AS [DESCRIPCIÓN DEL ByS REQUERIDO] ,
 rd.nCantidad AS [CANTIDAD],
 tm.cNomCorto as [U. MED.],
 rd.nPrecioUnit AS [PRECIO UNIT.] ,
 rd.nSubTotal AS [SUB TOTAL]  
FROM         prov.requerimiento AS r left JOIN
  dbo.Contrata AS ct ON r.iCodContrata = ct.iCodContrata 
 LEFT JOIN prov.RequerimientoDetalle AS rd ON r.iCodRequerimiento = rd.iCodRequerimiento
  left join dbo.Contrata sct on sct.iCodContrata=r.iCodSubContrata   
 left join ContratistaContrato cto on r.iCodContratistaContrato=cto.iCodContratistaContrato  
 left join prov.TipoRequerimiento tr on r.iCodTipoRequerimiento=tr.iCodTipoRequerimiento 
 left join prov.TipoEstadoRequerimiento ter on r.iCodTipoEstadoRequerimiento=ter.iCodTipoEstadoRequerimiento 
 left join prov.CatalogoBienesServicios bs on rd.iCodCatalogoBienesServicios=bs.iCodCatalogoBienesServicios
   left join prov.CategoriaBienesServicios cbs on bs.iCodCategoriaBienesServicios=cbs.iCodCategoriaBienesServicios 
   left join prov.TipoMedida tm on rd.iCodTipoMedida=tm.iCodTipoMedida 

 WHERE cast(r.dFechaSolicitud as date)>=@dFechaIni and cast(r.dFechaSolicitud as date)<=@dFechaFin 

END 
